(function (e) {
    var t = {};

    function n(a) {
        if (t[a])return t[a].exports;
        var i = t[a] = {exports: {}, id: a, loaded: false};
        e[a].call(i.exports, i, i.exports, n);
        i.loaded = true;
        return i.exports
    }

    n.m = e;
    n.c = t;
    n.p = "";
    return n(0)
})([function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        n(25);
        var i = n(26), o = {search: n(31)}, r = sessionStorage.getItem("jumpFrom"), s = false;
        var l = {};
        i.forEach(function (e) {
            var t = false, n, a;
            a = e.module;
            if (e.handler) {
                n = a[e.handler]
            } else {
                n = a
            }
            if (!n && !$.isFunction(n)) {
                t = true;
                alert("遇到网络异常问题, 请尝试刷新页面!");
                throw"controller.js: missing module or handler - " + e.id
            }
            if (!t) {
                var i = e.id.replace(/\-/g, "").slice(1);
                l[i] = function (t) {
                    if (t !== true) {
                        history.pushState({id: e.id}, e.id, "")
                    }
                    if (e.tpl) {
                        _sdsGlobal.tplTransition(e.tpl, e.id, n)
                    } else {
                        n()
                    }
                };
                $(e.id).click(l[i]);
                if (r == e.id) {
                    s = true;
                    if (r == "#user-search-link") {
                        var h = sessionStorage.getItem("jumpValue");
                        o.search({c: decodeURIComponent(h)})
                    } else {
                        $(e.id).trigger("click")
                    }
                }
            }
        });
        sessionStorage.removeItem("jumpFrom");
        sessionStorage.removeItem("jumpValue");
        if (!s) {
            $("#user-dashboard-link").trigger("click")
        }
        window.addEventListener("popstate", function () {
            var e = history.state;
            if (e.module) {
                switch (e.module) {
                    case"search":
                        var t = e.param;
                        if (t) {
                            t.isHistory = true;
                            o.search(e.param)
                        }
                        break;
                    default:
                }
            } else if (e.id) {
                var n = e.id.replace(/\-/g, "").slice(1);
                l[n](true)
            }
        });
        n(99)
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function () {
        $("body").on("click.backToTop", "#back-to-top", function () {
            $("html, body").animate({scrollTop: 0}, "fast")
        });
        e();
        $(window).scroll(function () {
            e()
        });
        function e() {
            var e = $("#back-to-top");
            if (e.length > 0) {
                $(window).width() > 768 && $(window).scrollTop() > 100 ? e.show("fast") : e.hide("fast")
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-search-error">\n    ');
            if (hint !== "unload") {
                __append('\n    <nav class="tpl-sub-menu">\n        <ul class="list-unstyled">\n            <li class="active">');
                __append(escape(hint));
                __append("</li>\n        </ul>\n    </nav>\n    ")
            }
            __append('\n    <div class="error-message">\n        <i class="fa fa-exclamation-triangle"></i>\n        <p>');
            __append(escape(errorMsg));
            __append("</p>\n    </div>\n</div>")
        }
        return __output.join("")
    }
}, function (e, t) {
    !function (e) {
        var t, n;
        !function () {
            function e(e, t) {
                if (!t)return e;
                if (0 === e.indexOf(".")) {
                    var n = t.split("/"), a = e.split("/"), i = n.length - 1, o = a.length, r = 0, s = 0;
                    e:for (var l = 0; o > l; l++)switch (a[l]) {
                        case"..":
                            if (!(i > r))break e;
                            r++, s++;
                            break;
                        case".":
                            s++;
                            break;
                        default:
                            break e
                    }
                    return n.length = i - r, a = a.slice(s), n.concat(a).join("/")
                }
                return e
            }

            function a(t) {
                function n(n, r) {
                    if ("string" == typeof n) {
                        var s = a[n];
                        return s || (s = o(e(n, t)), a[n] = s), s
                    }
                    n instanceof Array && (r = r || function () {
                    }, r.apply(this, i(n, r, t)))
                }

                var a = {};
                return n
            }

            function i(n, a, i) {
                for (var s = [], l = r[i], h = 0, d = Math.min(n.length, a.length); d > h; h++) {
                    var c, p = e(n[h], i);
                    switch (p) {
                        case"require":
                            c = l && l.require || t;
                            break;
                        case"exports":
                            c = l.exports;
                            break;
                        case"module":
                            c = l;
                            break;
                        default:
                            c = o(p)
                    }
                    s.push(c)
                }
                return s
            }

            function o(e) {
                var t = r[e];
                if (!t)throw new Error("No " + e);
                if (!t.defined) {
                    var n = t.factory, a = n.apply(this, i(t.deps || [], n, e));
                    "undefined" != typeof a && (t.exports = a), t.defined = 1
                }
                return t.exports
            }

            var r = {};
            n = function (e, t, n) {
                r[e] = {id: e, deps: t, factory: n, defined: 0, exports: {}, require: a(e)}
            }, t = a("")
        }(), n("echarts", ["echarts/echarts"], function (e) {
            return e
        }), n("echarts/echarts", ["require", "./config", "zrender/tool/util", "zrender/tool/event", "zrender/tool/env", "zrender", "zrender/config", "./chart/island", "./component/toolbox", "./component", "./component/title", "./component/tooltip", "./component/legend", "./util/ecData", "./chart", "zrender/tool/color", "./component/timeline", "zrender/shape/Image", "zrender/loadingEffect/Bar", "zrender/loadingEffect/Bubble", "zrender/loadingEffect/DynamicLine", "zrender/loadingEffect/Ring", "zrender/loadingEffect/Spin", "zrender/loadingEffect/Whirling", "./theme/macarons", "./theme/infographic"], function (e) {
            function t() {
                r.Dispatcher.call(this)
            }

            function n(e) {
                e.innerHTML = "", this._themeConfig = {}, this.dom = e, this._connected = !1, this._status = {
                    dragIn: !1,
                    dragOut: !1,
                    needRefresh: !1
                }, this._curEventType = !1, this._chartList = [], this._messageCenter = new t, this._messageCenterOutSide = new t, this.resize = this.resize(), this._init()
            }

            function a(e, t, n, a, i) {
                for (var o = e._chartList, r = o.length; r--;) {
                    var s = o[r];
                    "function" == typeof s[t] && s[t](n, a, i)
                }
            }

            var i = e("./config"), o = e("zrender/tool/util"), r = e("zrender/tool/event"), s = {}, l = e("zrender/tool/env").canvasSupported, h = new Date - 0, d = {}, c = "_echarts_instance_";
            s.version = "2.2.7", s.dependencies = {zrender: "2.1.1"}, s.init = function (t, a) {
                var i = e("zrender");
                i.version.replace(".", "") - 0 < s.dependencies.zrender.replace(".", "") - 0 && console.error("ZRender " + i.version + " is too old for ECharts " + s.version + ". Current version need ZRender " + s.dependencies.zrender + "+"), t = t instanceof Array ? t[0] : t;
                var o = t.getAttribute(c);
                return o || (o = h++, t.setAttribute(c, o)), d[o] && d[o].dispose(), d[o] = new n(t), d[o].id = o, d[o].canvasSupported = l, d[o].setTheme(a), d[o]
            }, s.getInstanceById = function (e) {
                return d[e]
            }, o.merge(t.prototype, r.Dispatcher.prototype, !0);
            var p = e("zrender/config").EVENT, m = ["CLICK", "DBLCLICK", "MOUSEOVER", "MOUSEOUT", "DRAGSTART", "DRAGEND", "DRAGENTER", "DRAGOVER", "DRAGLEAVE", "DROP"];
            return n.prototype = {
                _init: function () {
                    var t = this, n = e("zrender").init(this.dom);
                    this._zr = n, this._messageCenter.dispatch = function (e, n, a, i) {
                        a = a || {}, a.type = e, a.event = n, t._messageCenter.dispatchWithContext(e, a, i), t._messageCenterOutSide.dispatchWithContext(e, a, i)
                    }, this._onevent = function (e) {
                        return t.__onevent(e)
                    };
                    for (var a in i.EVENT)"CLICK" != a && "DBLCLICK" != a && "HOVER" != a && "MOUSEOUT" != a && "MAP_ROAM" != a && this._messageCenter.bind(i.EVENT[a], this._onevent, this);
                    var o = {};
                    this._onzrevent = function (e) {
                        return t[o[e.type]](e)
                    };
                    for (var r = 0, s = m.length; s > r; r++) {
                        var l = m[r], h = p[l];
                        o[h] = "_on" + l.toLowerCase(), n.on(h, this._onzrevent)
                    }
                    this.chart = {}, this.component = {};
                    var d = e("./chart/island");
                    this._island = new d(this._themeConfig, this._messageCenter, n, {}, this), this.chart.island = this._island;
                    var c = e("./component/toolbox");
                    this._toolbox = new c(this._themeConfig, this._messageCenter, n, {}, this), this.component.toolbox = this._toolbox;
                    var u = e("./component");
                    u.define("title", e("./component/title")), u.define("tooltip", e("./component/tooltip")), u.define("legend", e("./component/legend")), (0 === n.getWidth() || 0 === n.getHeight()) && console.error("Dom’s width & height should be ready before init.")
                }, __onevent: function (e) {
                    e.__echartsId = e.__echartsId || this.id;
                    var t = e.__echartsId === this.id;
                    switch (this._curEventType || (this._curEventType = e.type), e.type) {
                        case i.EVENT.LEGEND_SELECTED:
                            this._onlegendSelected(e);
                            break;
                        case i.EVENT.DATA_ZOOM:
                            if (!t) {
                                var n = this.component.dataZoom;
                                n && (n.silence(!0), n.absoluteZoom(e.zoom), n.silence(!1))
                            }
                            this._ondataZoom(e);
                            break;
                        case i.EVENT.DATA_RANGE:
                            t && this._ondataRange(e);
                            break;
                        case i.EVENT.MAGIC_TYPE_CHANGED:
                            if (!t) {
                                var a = this.component.toolbox;
                                a && (a.silence(!0), a.setMagicType(e.magicType), a.silence(!1))
                            }
                            this._onmagicTypeChanged(e);
                            break;
                        case i.EVENT.DATA_VIEW_CHANGED:
                            t && this._ondataViewChanged(e);
                            break;
                        case i.EVENT.TOOLTIP_HOVER:
                            t && this._tooltipHover(e);
                            break;
                        case i.EVENT.RESTORE:
                            this._onrestore();
                            break;
                        case i.EVENT.REFRESH:
                            t && this._onrefresh(e);
                            break;
                        case i.EVENT.TOOLTIP_IN_GRID:
                        case i.EVENT.TOOLTIP_OUT_GRID:
                            if (t) {
                                if (this._connected) {
                                    var o = this.component.grid;
                                    o && (e.x = (e.event.zrenderX - o.getX()) / o.getWidth(), e.y = (e.event.zrenderY - o.getY()) / o.getHeight())
                                }
                            } else {
                                var o = this.component.grid;
                                o && this._zr.trigger("mousemove", {
                                    connectTrigger: !0,
                                    zrenderX: o.getX() + e.x * o.getWidth(),
                                    zrenderY: o.getY() + e.y * o.getHeight()
                                })
                            }
                    }
                    if (this._connected && t && this._curEventType === e.type) {
                        for (var r in this._connected)this._connected[r].connectedEventHandler(e);
                        this._curEventType = null
                    }
                    (!t || !this._connected && t) && (this._curEventType = null)
                }, _onclick: function (e) {
                    if (a(this, "onclick", e), e.target) {
                        var t = this._eventPackage(e.target);
                        t && null != t.seriesIndex && this._messageCenter.dispatch(i.EVENT.CLICK, e.event, t, this)
                    }
                }, _ondblclick: function (e) {
                    if (a(this, "ondblclick", e), e.target) {
                        var t = this._eventPackage(e.target);
                        t && null != t.seriesIndex && this._messageCenter.dispatch(i.EVENT.DBLCLICK, e.event, t, this)
                    }
                }, _onmouseover: function (e) {
                    if (e.target) {
                        var t = this._eventPackage(e.target);
                        t && null != t.seriesIndex && this._messageCenter.dispatch(i.EVENT.HOVER, e.event, t, this)
                    }
                }, _onmouseout: function (e) {
                    if (e.target) {
                        var t = this._eventPackage(e.target);
                        t && null != t.seriesIndex && this._messageCenter.dispatch(i.EVENT.MOUSEOUT, e.event, t, this)
                    }
                }, _ondragstart: function (e) {
                    this._status = {dragIn: !1, dragOut: !1, needRefresh: !1}, a(this, "ondragstart", e)
                }, _ondragenter: function (e) {
                    a(this, "ondragenter", e)
                }, _ondragover: function (e) {
                    a(this, "ondragover", e)
                }, _ondragleave: function (e) {
                    a(this, "ondragleave", e)
                }, _ondrop: function (e) {
                    a(this, "ondrop", e, this._status), this._island.ondrop(e, this._status)
                }, _ondragend: function (e) {
                    if (a(this, "ondragend", e, this._status), this._timeline && this._timeline.ondragend(e, this._status), this._island.ondragend(e, this._status), this._status.needRefresh) {
                        this._syncBackupData(this._option);
                        var t = this._messageCenter;
                        t.dispatch(i.EVENT.DATA_CHANGED, e.event, this._eventPackage(e.target), this), t.dispatch(i.EVENT.REFRESH, null, null, this)
                    }
                }, _onlegendSelected: function (e) {
                    this._status.needRefresh = !1, a(this, "onlegendSelected", e, this._status), this._status.needRefresh && this._messageCenter.dispatch(i.EVENT.REFRESH, null, null, this)
                }, _ondataZoom: function (e) {
                    this._status.needRefresh = !1, a(this, "ondataZoom", e, this._status), this._status.needRefresh && this._messageCenter.dispatch(i.EVENT.REFRESH, null, null, this)
                }, _ondataRange: function (e) {
                    this._clearEffect(), this._status.needRefresh = !1, a(this, "ondataRange", e, this._status), this._status.needRefresh && this._zr.refreshNextFrame()
                }, _onmagicTypeChanged: function () {
                    this._clearEffect(), this._render(this._toolbox.getMagicOption())
                }, _ondataViewChanged: function (e) {
                    this._syncBackupData(e.option), this._messageCenter.dispatch(i.EVENT.DATA_CHANGED, null, e, this), this._messageCenter.dispatch(i.EVENT.REFRESH, null, null, this)
                }, _tooltipHover: function (e) {
                    var t = [];
                    a(this, "ontooltipHover", e, t)
                }, _onrestore: function () {
                    this.restore()
                }, _onrefresh: function (e) {
                    this._refreshInside = !0, this.refresh(e), this._refreshInside = !1
                }, _syncBackupData: function (e) {
                    this.component.dataZoom && this.component.dataZoom.syncBackupData(e)
                }, _eventPackage: function (t) {
                    if (t) {
                        var n = e("./util/ecData"), a = n.get(t, "seriesIndex"), i = n.get(t, "dataIndex");
                        return i = -1 != a && this.component.dataZoom ? this.component.dataZoom.getRealDataIndex(a, i) : i, {
                            seriesIndex: a,
                            seriesName: (n.get(t, "series") || {}).name,
                            dataIndex: i,
                            data: n.get(t, "data"),
                            name: n.get(t, "name"),
                            value: n.get(t, "value"),
                            special: n.get(t, "special")
                        }
                    }
                }, _noDataCheck: function (e) {
                    for (var t = e.series, n = 0, a = t.length; a > n; n++)if (t[n].type == i.CHART_TYPE_MAP || t[n].data && t[n].data.length > 0 || t[n].markPoint && t[n].markPoint.data && t[n].markPoint.data.length > 0 || t[n].markLine && t[n].markLine.data && t[n].markLine.data.length > 0 || t[n].nodes && t[n].nodes.length > 0 || t[n].links && t[n].links.length > 0 || t[n].matrix && t[n].matrix.length > 0 || t[n].eventList && t[n].eventList.length > 0)return !1;
                    var o = this._option && this._option.noDataLoadingOption || this._themeConfig.noDataLoadingOption || i.noDataLoadingOption || {
                            text: this._option && this._option.noDataText || this._themeConfig.noDataText || i.noDataText,
                            effect: this._option && this._option.noDataEffect || this._themeConfig.noDataEffect || i.noDataEffect
                        };
                    return this.clear(), this.showLoading(o), !0
                }, _render: function (t) {
                    if (this._mergeGlobalConifg(t), !this._noDataCheck(t)) {
                        var n = t.backgroundColor;
                        if (n)if (l || -1 == n.indexOf("rgba"))this.dom.style.backgroundColor = n; else {
                            var a = n.split(",");
                            this.dom.style.filter = "alpha(opacity=" + 100 * a[3].substring(0, a[3].lastIndexOf(")")) + ")", a.length = 3, a[0] = a[0].replace("a", ""), this.dom.style.backgroundColor = a.join(",") + ")"
                        }
                        this._zr.clearAnimation(), this._chartList = [];
                        var o = e("./chart"), r = e("./component");
                        (t.xAxis || t.yAxis) && (t.grid = t.grid || {}, t.dataZoom = t.dataZoom || {});
                        for (var s, h, d, c = ["title", "legend", "tooltip", "dataRange", "roamController", "grid", "dataZoom", "xAxis", "yAxis", "polar"], p = 0, m = c.length; m > p; p++)h = c[p], d = this.component[h], t[h] ? (d ? d.refresh && d.refresh(t) : (s = r.get(/^[xy]Axis$/.test(h) ? "axis" : h), d = new s(this._themeConfig, this._messageCenter, this._zr, t, this, h), this.component[h] = d), this._chartList.push(d)) : d && (d.dispose(), this.component[h] = null, delete this.component[h]);
                        for (var u, V, U, f = {}, p = 0, m = t.series.length; m > p; p++)V = t.series[p].type, V ? f[V] || (f[V] = !0, u = o.get(V), u ? (this.chart[V] ? (U = this.chart[V], U.refresh(t)) : U = new u(this._themeConfig, this._messageCenter, this._zr, t, this), this._chartList.push(U), this.chart[V] = U) : console.error(V + " has not been required.")) : console.error("series[" + p + "] chart type has not been defined.");
                        for (V in this.chart)V == i.CHART_TYPE_ISLAND || f[V] || (this.chart[V].dispose(), this.chart[V] = null, delete this.chart[V]);
                        this.component.grid && this.component.grid.refixAxisShape(this.component), this._island.refresh(t), this._toolbox.refresh(t), t.animation && !t.renderAsImage ? this._zr.refresh() : this._zr.render();
                        var _ = "IMG" + this.id, g = document.getElementById(_);
                        t.renderAsImage && l ? (g ? g.src = this.getDataURL(t.renderAsImage) : (g = this.getImage(t.renderAsImage), g.id = _, g.style.position = "absolute", g.style.left = 0, g.style.top = 0, this.dom.firstChild.appendChild(g)), this.un(), this._zr.un(), this._disposeChartList(), this._zr.clear()) : g && g.parentNode.removeChild(g), g = null, this._option = t
                    }
                }, restore: function () {
                    this._clearEffect(), this._option = o.clone(this._optionRestore), this._disposeChartList(), this._island.clear(), this._toolbox.reset(this._option, !0), this._render(this._option)
                }, refresh: function (e) {
                    this._clearEffect(), e = e || {};
                    var t = e.option;
                    !this._refreshInside && t && (t = this.getOption(), o.merge(t, e.option, !0), o.merge(this._optionRestore, e.option, !0), this._toolbox.reset(t)), this._island.refresh(t), this._toolbox.refresh(t), this._zr.clearAnimation();
                    for (var n = 0, a = this._chartList.length; a > n; n++)this._chartList[n].refresh && this._chartList[n].refresh(t);
                    this.component.grid && this.component.grid.refixAxisShape(this.component), this._zr.refresh()
                }, _disposeChartList: function () {
                    this._clearEffect(), this._zr.clearAnimation();
                    for (var e = this._chartList.length; e--;) {
                        var t = this._chartList[e];
                        if (t) {
                            var n = t.type;
                            this.chart[n] && delete this.chart[n], this.component[n] && delete this.component[n], t.dispose && t.dispose()
                        }
                    }
                    this._chartList = []
                }, _mergeGlobalConifg: function (t) {
                    for (var n = ["backgroundColor", "calculable", "calculableColor", "calculableHolderColor", "nameConnector", "valueConnector", "animation", "animationThreshold", "animationDuration", "animationDurationUpdate", "animationEasing", "addDataAnimation", "symbolList", "DRAG_ENABLE_TIME"], a = n.length; a--;) {
                        var o = n[a];
                        null == t[o] && (t[o] = null != this._themeConfig[o] ? this._themeConfig[o] : i[o])
                    }
                    var r = t.color;
                    r && r.length || (r = this._themeConfig.color || i.color), this._zr.getColor = function (t) {
                        var n = e("zrender/tool/color");
                        return n.getColor(t, r)
                    }, l || (t.animation = !1, t.addDataAnimation = !1)
                }, setOption: function (e, t) {
                    return e.timeline ? this._setTimelineOption(e) : this._setOption(e, t)
                }, _setOption: function (e, t, n) {
                    return !t && this._option ? this._option = o.merge(this.getOption(), o.clone(e), !0) : (this._option = o.clone(e), !n && this._timeline && this._timeline.dispose()), this._optionRestore = o.clone(this._option), this._option.series && 0 !== this._option.series.length ? (this.component.dataZoom && (this._option.dataZoom || this._option.toolbox && this._option.toolbox.feature && this._option.toolbox.feature.dataZoom && this._option.toolbox.feature.dataZoom.show) && this.component.dataZoom.syncOption(this._option), this._toolbox.reset(this._option), this._render(this._option), this) : void this._zr.clear()
                }, getOption: function () {
                    function e(e) {
                        var a = n._optionRestore[e];
                        if (a)if (a instanceof Array)for (var i = a.length; i--;)t[e][i].data = o.clone(a[i].data); else t[e].data = o.clone(a.data)
                    }

                    var t = o.clone(this._option), n = this;
                    return e("xAxis"), e("yAxis"), e("series"), t
                }, setSeries: function (e, t) {
                    return t ? (this._option.series = e, this.setOption(this._option, t)) : this.setOption({series: e}), this
                }, getSeries: function () {
                    return this.getOption().series
                }, _setTimelineOption: function (t) {
                    this._timeline && this._timeline.dispose();
                    var n = e("./component/timeline"), a = new n(this._themeConfig, this._messageCenter, this._zr, t, this);
                    return this._timeline = a, this.component.timeline = this._timeline, this
                }, addData: function (e, t, n, a, r) {
                    function s() {
                        if (c._zr) {
                            c._zr.clearAnimation();
                            for (var e = 0, t = w.length; t > e; e++)w[e].motionlessOnce = h.addDataAnimation && w[e].addDataAnimation;
                            c._messageCenter.dispatch(i.EVENT.REFRESH, null, {option: h}, c)
                        }
                    }

                    for (var l = e instanceof Array ? e : [[e, t, n, a, r]], h = this.getOption(), d = this._optionRestore, c = this, p = 0, m = l.length; m > p; p++) {
                        e = l[p][0], t = l[p][1], n = l[p][2], a = l[p][3], r = l[p][4];
                        var u = d.series[e], V = n ? "unshift" : "push", U = n ? "pop" : "shift";
                        if (u) {
                            var f = u.data, _ = h.series[e].data;
                            if (f[V](t), _[V](t), a || (f[U](), t = _[U]()), null != r) {
                                var g, y;
                                if (u.type === i.CHART_TYPE_PIE && (g = d.legend) && (y = g.data)) {
                                    var b = h.legend.data;
                                    if (y[V](r), b[V](r), !a) {
                                        var k = o.indexOf(y, t.name);
                                        -1 != k && y.splice(k, 1), k = o.indexOf(b, t.name), -1 != k && b.splice(k, 1)
                                    }
                                } else if (null != d.xAxis && null != d.yAxis) {
                                    var x, v, L = u.xAxisIndex || 0;
                                    (null == d.xAxis[L].type || "category" === d.xAxis[L].type) && (x = d.xAxis[L].data, v = h.xAxis[L].data, x[V](r), v[V](r), a || (x[U](), v[U]())), L = u.yAxisIndex || 0, "category" === d.yAxis[L].type && (x = d.yAxis[L].data, v = h.yAxis[L].data, x[V](r), v[V](r), a || (x[U](), v[U]()))
                                }
                            }
                            this._option.series[e].data = h.series[e].data
                        }
                    }
                    this._zr.clearAnimation();
                    for (var w = this._chartList, W = 0, X = function () {
                        W--, 0 === W && s()
                    }, p = 0, m = w.length; m > p; p++)h.addDataAnimation && w[p].addDataAnimation && (W++, w[p].addDataAnimation(l, X));
                    return this.component.dataZoom && this.component.dataZoom.syncOption(h), this._option = h, h.addDataAnimation || setTimeout(s, 0), this
                }, addMarkPoint: function (e, t) {
                    return this._addMark(e, t, "markPoint")
                }, addMarkLine: function (e, t) {
                    return this._addMark(e, t, "markLine")
                }, _addMark: function (e, t, n) {
                    var a, i = this._option.series;
                    if (i && (a = i[e])) {
                        var r = this._optionRestore.series, s = r[e], l = a[n], h = s[n];
                        l = a[n] = l || {data: []}, h = s[n] = h || {data: []};
                        for (var d in t)"data" === d ? (l.data = l.data.concat(t.data), h.data = h.data.concat(t.data)) : "object" != typeof t[d] || null == l[d] ? l[d] = h[d] = t[d] : (o.merge(l[d], t[d], !0), o.merge(h[d], t[d], !0));
                        var c = this.chart[a.type];
                        c && c.addMark(e, t, n)
                    }
                    return this
                }, delMarkPoint: function (e, t) {
                    return this._delMark(e, t, "markPoint")
                }, delMarkLine: function (e, t) {
                    return this._delMark(e, t, "markLine")
                }, _delMark: function (e, t, n) {
                    var a, i, o, r = this._option.series;
                    if (!(r && (a = r[e]) && (i = a[n]) && (o = i.data)))return this;
                    t = t.split(" > ");
                    for (var s = -1, l = 0, h = o.length; h > l; l++) {
                        var d = o[l];
                        if (d instanceof Array) {
                            if (d[0].name === t[0] && d[1].name === t[1]) {
                                s = l;
                                break
                            }
                        } else if (d.name === t[0]) {
                            s = l;
                            break
                        }
                    }
                    if (s > -1) {
                        o.splice(s, 1), this._optionRestore.series[e][n].data.splice(s, 1);
                        var c = this.chart[a.type];
                        c && c.delMark(e, t.join(" > "), n)
                    }
                    return this
                }, getDom: function () {
                    return this.dom
                }, getZrender: function () {
                    return this._zr
                }, getDataURL: function (e) {
                    if (!l)return "";
                    if (0 === this._chartList.length) {
                        var t = "IMG" + this.id, n = document.getElementById(t);
                        if (n)return n.src
                    }
                    var a = this.component.tooltip;
                    switch (a && a.hideTip(), e) {
                        case"jpeg":
                            break;
                        default:
                            e = "png"
                    }
                    var i = this._option.backgroundColor;
                    return i && "rgba(0,0,0,0)" === i.replace(" ", "") && (i = "#fff"), this._zr.toDataURL("image/" + e, i)
                }, getImage: function (e) {
                    var t = this._optionRestore.title, n = document.createElement("img");
                    return n.src = this.getDataURL(e), n.title = t && t.text || "ECharts", n
                }, getConnectedDataURL: function (t) {
                    if (!this.isConnected())return this.getDataURL(t);
                    var n = this.dom, a = {
                        self: {
                            img: this.getDataURL(t),
                            left: n.offsetLeft,
                            top: n.offsetTop,
                            right: n.offsetLeft + n.offsetWidth,
                            bottom: n.offsetTop + n.offsetHeight
                        }
                    }, i = a.self.left, o = a.self.top, r = a.self.right, s = a.self.bottom;
                    for (var l in this._connected)n = this._connected[l].getDom(), a[l] = {
                        img: this._connected[l].getDataURL(t),
                        left: n.offsetLeft,
                        top: n.offsetTop,
                        right: n.offsetLeft + n.offsetWidth,
                        bottom: n.offsetTop + n.offsetHeight
                    }, i = Math.min(i, a[l].left), o = Math.min(o, a[l].top), r = Math.max(r, a[l].right), s = Math.max(s, a[l].bottom);
                    var h = document.createElement("div");
                    h.style.position = "absolute", h.style.left = "-4000px", h.style.width = r - i + "px", h.style.height = s - o + "px", document.body.appendChild(h);
                    var d = e("zrender").init(h), c = e("zrender/shape/Image");
                    for (var l in a)d.addShape(new c({style: {x: a[l].left - i, y: a[l].top - o, image: a[l].img}}));
                    d.render();
                    var p = this._option.backgroundColor;
                    p && "rgba(0,0,0,0)" === p.replace(/ /g, "") && (p = "#fff");
                    var m = d.toDataURL("image/png", p);
                    return setTimeout(function () {
                        d.dispose(), h.parentNode.removeChild(h), h = null
                    }, 100), m
                }, getConnectedImage: function (e) {
                    var t = this._optionRestore.title, n = document.createElement("img");
                    return n.src = this.getConnectedDataURL(e), n.title = t && t.text || "ECharts", n
                }, on: function (e, t) {
                    return this._messageCenterOutSide.bind(e, t, this), this
                }, un: function (e, t) {
                    return this._messageCenterOutSide.unbind(e, t), this
                }, connect: function (e) {
                    if (!e)return this;
                    if (this._connected || (this._connected = {}), e instanceof Array)for (var t = 0, n = e.length; n > t; t++)this._connected[e[t].id] = e[t]; else this._connected[e.id] = e;
                    return this
                }, disConnect: function (e) {
                    if (!e || !this._connected)return this;
                    if (e instanceof Array)for (var t = 0, n = e.length; n > t; t++)delete this._connected[e[t].id]; else delete this._connected[e.id];
                    for (var a in this._connected)return this;
                    return this._connected = !1, this
                }, connectedEventHandler: function (e) {
                    e.__echartsId != this.id && this._onevent(e)
                }, isConnected: function () {
                    return !!this._connected
                }, showLoading: function (t) {
                    var n = {
                        bar: e("zrender/loadingEffect/Bar"),
                        bubble: e("zrender/loadingEffect/Bubble"),
                        dynamicLine: e("zrender/loadingEffect/DynamicLine"),
                        ring: e("zrender/loadingEffect/Ring"),
                        spin: e("zrender/loadingEffect/Spin"),
                        whirling: e("zrender/loadingEffect/Whirling")
                    };
                    this._toolbox.hideDataView(), t = t || {};
                    var a = t.textStyle || {};
                    t.textStyle = a;
                    var r = o.merge(o.merge(o.clone(a), this._themeConfig.textStyle), i.textStyle);
                    a.textFont = r.fontStyle + " " + r.fontWeight + " " + r.fontSize + "px " + r.fontFamily, a.text = t.text || this._option && this._option.loadingText || this._themeConfig.loadingText || i.loadingText, null != t.x && (a.x = t.x), null != t.y && (a.y = t.y), t.effectOption = t.effectOption || {}, t.effectOption.textStyle = a;
                    var s = t.effect;
                    return ("string" == typeof s || null == s) && (s = n[t.effect || this._option && this._option.loadingEffect || this._themeConfig.loadingEffect || i.loadingEffect] || n.spin), this._zr.showLoading(new s(t.effectOption)), this
                }, hideLoading: function () {
                    return this._zr.hideLoading(), this
                }, setTheme: function (t) {
                    if (t) {
                        if ("string" == typeof t)switch (t) {
                            case"macarons":
                                t = e("./theme/macarons");
                                break;
                            case"infographic":
                                t = e("./theme/infographic");
                                break;
                            default:
                                t = {}
                        } else t = t || {};
                        this._themeConfig = t
                    }
                    if (!l) {
                        var n = this._themeConfig.textStyle;
                        n && n.fontFamily && n.fontFamily2 && (n.fontFamily = n.fontFamily2), n = i.textStyle, n.fontFamily = n.fontFamily2
                    }
                    this._timeline && this._timeline.setTheme(!0), this._optionRestore && this.restore()
                }, resize: function () {
                    var e = this;
                    return function () {
                        if (e._clearEffect(), e._zr.resize(), e._option && e._option.renderAsImage && l)return e._render(e._option), e;
                        e._zr.clearAnimation(), e._island.resize(), e._toolbox.resize(), e._timeline && e._timeline.resize();
                        for (var t = 0, n = e._chartList.length; n > t; t++)e._chartList[t].resize && e._chartList[t].resize();
                        return e.component.grid && e.component.grid.refixAxisShape(e.component), e._zr.refresh(), e._messageCenter.dispatch(i.EVENT.RESIZE, null, null, e), e
                    }
                }, _clearEffect: function () {
                    this._zr.modLayer(i.EFFECT_ZLEVEL, {motionBlur: !1}), this._zr.painter.clearLayer(i.EFFECT_ZLEVEL)
                }, clear: function () {
                    return this._disposeChartList(), this._zr.clear(), this._option = {}, this._optionRestore = {}, this.dom.style.backgroundColor = null, this
                }, dispose: function () {
                    var e = this.dom.getAttribute(c);
                    e && delete d[e], this._island.dispose(), this._toolbox.dispose(), this._timeline && this._timeline.dispose(), this._messageCenter.unbind(), this.clear(), this._zr.dispose(), this._zr = null
                }
            }, s
        }), n("echarts/config", [], function () {
            var e = {
                CHART_TYPE_LINE: "line",
                CHART_TYPE_BAR: "bar",
                CHART_TYPE_SCATTER: "scatter",
                CHART_TYPE_PIE: "pie",
                CHART_TYPE_RADAR: "radar",
                CHART_TYPE_VENN: "venn",
                CHART_TYPE_TREEMAP: "treemap",
                CHART_TYPE_TREE: "tree",
                CHART_TYPE_MAP: "map",
                CHART_TYPE_K: "k",
                CHART_TYPE_ISLAND: "island",
                CHART_TYPE_FORCE: "force",
                CHART_TYPE_CHORD: "chord",
                CHART_TYPE_GAUGE: "gauge",
                CHART_TYPE_FUNNEL: "funnel",
                CHART_TYPE_EVENTRIVER: "eventRiver",
                CHART_TYPE_WORDCLOUD: "wordCloud",
                CHART_TYPE_HEATMAP: "heatmap",
                COMPONENT_TYPE_TITLE: "title",
                COMPONENT_TYPE_LEGEND: "legend",
                COMPONENT_TYPE_DATARANGE: "dataRange",
                COMPONENT_TYPE_DATAVIEW: "dataView",
                COMPONENT_TYPE_DATAZOOM: "dataZoom",
                COMPONENT_TYPE_TOOLBOX: "toolbox",
                COMPONENT_TYPE_TOOLTIP: "tooltip",
                COMPONENT_TYPE_GRID: "grid",
                COMPONENT_TYPE_AXIS: "axis",
                COMPONENT_TYPE_POLAR: "polar",
                COMPONENT_TYPE_X_AXIS: "xAxis",
                COMPONENT_TYPE_Y_AXIS: "yAxis",
                COMPONENT_TYPE_AXIS_CATEGORY: "categoryAxis",
                COMPONENT_TYPE_AXIS_VALUE: "valueAxis",
                COMPONENT_TYPE_TIMELINE: "timeline",
                COMPONENT_TYPE_ROAMCONTROLLER: "roamController",
                backgroundColor: "rgba(0,0,0,0)",
                color: ["#ff7f50", "#87cefa", "#da70d6", "#32cd32", "#6495ed", "#ff69b4", "#ba55d3", "#cd5c5c", "#ffa500", "#40e0d0", "#1e90ff", "#ff6347", "#7b68ee", "#00fa9a", "#ffd700", "#6699FF", "#ff6666", "#3cb371", "#b8860b", "#30e0e0"],
                markPoint: {
                    clickable: !0,
                    symbol: "pin",
                    symbolSize: 10,
                    large: !1,
                    effect: {show: !1, loop: !0, period: 15, type: "scale", scaleSize: 2, bounceDistance: 10},
                    itemStyle: {
                        normal: {borderWidth: 2, label: {show: !0, position: "inside"}},
                        emphasis: {label: {show: !0}}
                    }
                },
                markLine: {
                    clickable: !0,
                    symbol: ["circle", "arrow"],
                    symbolSize: [2, 4],
                    smoothness: .2,
                    precision: 2,
                    effect: {show: !1, loop: !0, period: 15, scaleSize: 2},
                    bundling: {enable: !1, maxTurningAngle: 45},
                    itemStyle: {
                        normal: {
                            borderWidth: 1.5,
                            label: {show: !0, position: "end"},
                            lineStyle: {type: "dashed"}
                        }, emphasis: {label: {show: !1}, lineStyle: {}}
                    }
                },
                textStyle: {
                    decoration: "none",
                    fontFamily: "Arial, Verdana, sans-serif",
                    fontFamily2: "微软雅黑",
                    fontSize: 12,
                    fontStyle: "normal",
                    fontWeight: "normal"
                },
                EVENT: {
                    REFRESH: "refresh",
                    RESTORE: "restore",
                    RESIZE: "resize",
                    CLICK: "click",
                    DBLCLICK: "dblclick",
                    HOVER: "hover",
                    MOUSEOUT: "mouseout",
                    DATA_CHANGED: "dataChanged",
                    DATA_ZOOM: "dataZoom",
                    DATA_RANGE: "dataRange",
                    DATA_RANGE_SELECTED: "dataRangeSelected",
                    DATA_RANGE_HOVERLINK: "dataRangeHoverLink",
                    LEGEND_SELECTED: "legendSelected",
                    LEGEND_HOVERLINK: "legendHoverLink",
                    MAP_SELECTED: "mapSelected",
                    PIE_SELECTED: "pieSelected",
                    MAGIC_TYPE_CHANGED: "magicTypeChanged",
                    DATA_VIEW_CHANGED: "dataViewChanged",
                    TIMELINE_CHANGED: "timelineChanged",
                    MAP_ROAM: "mapRoam",
                    FORCE_LAYOUT_END: "forceLayoutEnd",
                    TOOLTIP_HOVER: "tooltipHover",
                    TOOLTIP_IN_GRID: "tooltipInGrid",
                    TOOLTIP_OUT_GRID: "tooltipOutGrid",
                    ROAMCONTROLLER: "roamController"
                },
                DRAG_ENABLE_TIME: 120,
                EFFECT_ZLEVEL: 10,
                effectBlendAlpha: .95,
                symbolList: ["circle", "rectangle", "triangle", "diamond", "emptyCircle", "emptyRectangle", "emptyTriangle", "emptyDiamond"],
                loadingEffect: "spin",
                loadingText: "数据读取中...",
                noDataEffect: "bubble",
                noDataText: "暂无数据",
                calculable: !1,
                calculableColor: "rgba(255,165,0,0.6)",
                calculableHolderColor: "#ccc",
                nameConnector: " & ",
                valueConnector: ": ",
                animation: !0,
                addDataAnimation: !0,
                animationThreshold: 2e3,
                animationDuration: 2e3,
                animationDurationUpdate: 500,
                animationEasing: "ExponentialOut"
            };
            return e
        }), n("zrender/tool/util", ["require", "../dep/excanvas"], function (e) {
            function t(e) {
                return e && 1 === e.nodeType && "string" == typeof e.nodeName
            }

            function n(e) {
                if ("object" == typeof e && null !== e) {
                    var a = e;
                    if (e instanceof Array) {
                        a = [];
                        for (var i = 0, o = e.length; o > i; i++)a[i] = n(e[i])
                    } else if (!f[_.call(e)] && !t(e)) {
                        a = {};
                        for (var r in e)e.hasOwnProperty(r) && (a[r] = n(e[r]))
                    }
                    return a
                }
                return e
            }

            function a(e, n, a, o) {
                if (n.hasOwnProperty(a)) {
                    var r = e[a];
                    "object" != typeof r || f[_.call(r)] || t(r) ? !o && a in e || (e[a] = n[a]) : i(e[a], n[a], o)
                }
            }

            function i(e, t, n) {
                for (var i in t)a(e, t, i, n);
                return e
            }

            function o() {
                if (!p)if (e("../dep/excanvas"), window.G_vmlCanvasManager) {
                    var t = document.createElement("div");
                    t.style.position = "absolute", t.style.top = "-1000px", document.body.appendChild(t), p = G_vmlCanvasManager.initElement(t).getContext("2d")
                } else p = document.createElement("canvas").getContext("2d");
                return p
            }

            function r(e, t) {
                if (e.indexOf)return e.indexOf(t);
                for (var n = 0, a = e.length; a > n; n++)if (e[n] === t)return n;
                return -1
            }

            function s(e, t) {
                function n() {
                }

                var a = e.prototype;
                n.prototype = t.prototype, e.prototype = new n;
                for (var i in a)e.prototype[i] = a[i];
                e.constructor = e
            }

            function l(e, t, n) {
                if (e && t)if (e.forEach && e.forEach === u)e.forEach(t, n); else if (e.length === +e.length)for (var a = 0, i = e.length; i > a; a++)t.call(n, e[a], a, e); else for (var o in e)e.hasOwnProperty(o) && t.call(n, e[o], o, e)
            }

            function h(e, t, n) {
                if (e && t) {
                    if (e.map && e.map === V)return e.map(t, n);
                    for (var a = [], i = 0, o = e.length; o > i; i++)a.push(t.call(n, e[i], i, e));
                    return a
                }
            }

            function d(e, t, n) {
                if (e && t) {
                    if (e.filter && e.filter === U)return e.filter(t, n);
                    for (var a = [], i = 0, o = e.length; o > i; i++)t.call(n, e[i], i, e) && a.push(e[i]);
                    return a
                }
            }

            function c(e, t) {
                return function () {
                    e.apply(t, arguments)
                }
            }

            var p, m = Array.prototype, u = m.forEach, V = m.map, U = m.filter, f = {
                "[object Function]": 1,
                "[object RegExp]": 1,
                "[object Date]": 1,
                "[object Error]": 1,
                "[object CanvasGradient]": 1
            }, _ = Object.prototype.toString;
            return {inherits: s, clone: n, merge: i, getContext: o, indexOf: r, each: l, map: h, filter: d, bind: c}
        }), n("zrender/tool/event", ["require", "../mixin/Eventful"], function (e) {
            "use strict";
            function t(e) {
                return "undefined" != typeof e.zrenderX && e.zrenderX || "undefined" != typeof e.offsetX && e.offsetX || "undefined" != typeof e.layerX && e.layerX || "undefined" != typeof e.clientX && e.clientX
            }

            function n(e) {
                return "undefined" != typeof e.zrenderY && e.zrenderY || "undefined" != typeof e.offsetY && e.offsetY || "undefined" != typeof e.layerY && e.layerY || "undefined" != typeof e.clientY && e.clientY
            }

            function a(e) {
                return "undefined" != typeof e.zrenderDelta && e.zrenderDelta || "undefined" != typeof e.wheelDelta && e.wheelDelta || "undefined" != typeof e.detail && -e.detail
            }

            var i = e("../mixin/Eventful"), o = "function" == typeof window.addEventListener ? function (e) {
                e.preventDefault(), e.stopPropagation(), e.cancelBubble = !0
            } : function (e) {
                e.returnValue = !1, e.cancelBubble = !0
            };
            return {getX: t, getY: n, getDelta: a, stop: o, Dispatcher: i}
        }), n("zrender/tool/env", [], function () {
            function e(e) {
                var t = this.os = {}, n = this.browser = {}, a = e.match(/Web[kK]it[\/]{0,1}([\d.]+)/), i = e.match(/(Android);?[\s\/]+([\d.]+)?/), o = e.match(/(iPad).*OS\s([\d_]+)/), r = e.match(/(iPod)(.*OS\s([\d_]+))?/), s = !o && e.match(/(iPhone\sOS)\s([\d_]+)/), l = e.match(/(webOS|hpwOS)[\s\/]([\d.]+)/), h = l && e.match(/TouchPad/), d = e.match(/Kindle\/([\d.]+)/), c = e.match(/Silk\/([\d._]+)/), p = e.match(/(BlackBerry).*Version\/([\d.]+)/), m = e.match(/(BB10).*Version\/([\d.]+)/), u = e.match(/(RIM\sTablet\sOS)\s([\d.]+)/), V = e.match(/PlayBook/), U = e.match(/Chrome\/([\d.]+)/) || e.match(/CriOS\/([\d.]+)/), f = e.match(/Firefox\/([\d.]+)/), _ = e.match(/MSIE ([\d.]+)/), g = a && e.match(/Mobile\//) && !U, y = e.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !U, _ = e.match(/MSIE\s([\d.]+)/);
                return (n.webkit = !!a) && (n.version = a[1]), i && (t.android = !0, t.version = i[2]), s && !r && (t.ios = t.iphone = !0, t.version = s[2].replace(/_/g, ".")), o && (t.ios = t.ipad = !0, t.version = o[2].replace(/_/g, ".")), r && (t.ios = t.ipod = !0, t.version = r[3] ? r[3].replace(/_/g, ".") : null), l && (t.webos = !0, t.version = l[2]), h && (t.touchpad = !0), p && (t.blackberry = !0, t.version = p[2]), m && (t.bb10 = !0, t.version = m[2]), u && (t.rimtabletos = !0, t.version = u[2]), V && (n.playbook = !0), d && (t.kindle = !0, t.version = d[1]), c && (n.silk = !0, n.version = c[1]), !c && t.android && e.match(/Kindle Fire/) && (n.silk = !0), U && (n.chrome = !0, n.version = U[1]), f && (n.firefox = !0, n.version = f[1]), _ && (n.ie = !0, n.version = _[1]), g && (e.match(/Safari/) || t.ios) && (n.safari = !0), y && (n.webview = !0), _ && (n.ie = !0, n.version = _[1]), t.tablet = !!(o || V || i && !e.match(/Mobile/) || f && e.match(/Tablet/) || _ && !e.match(/Phone/) && e.match(/Touch/)), t.phone = !(t.tablet || t.ipod || !(i || s || l || p || m || U && e.match(/Android/) || U && e.match(/CriOS\/([\d.]+)/) || f && e.match(/Mobile/) || _ && e.match(/Touch/))), {
                    browser: n,
                    os: t,
                    canvasSupported: document.createElement("canvas").getContext ? !0 : !1
                }
            }

            return e(navigator.userAgent)
        }), n("zrender", ["zrender/zrender"], function (e) {
            return e
        }), n("zrender/zrender", ["require", "./dep/excanvas", "./tool/util", "./tool/log", "./tool/guid", "./Handler", "./Painter", "./Storage", "./animation/Animation", "./tool/env"], function (e) {
            function t(e) {
                return function () {
                    e._needsRefreshNextFrame && e.refresh()
                }
            }

            e("./dep/excanvas");
            var n = e("./tool/util"), a = e("./tool/log"), i = e("./tool/guid"), o = e("./Handler"), r = e("./Painter"), s = e("./Storage"), l = e("./animation/Animation"), h = {}, d = {};
            d.version = "2.1.1", d.init = function (e) {
                var t = new c(i(), e);
                return h[t.id] = t, t
            }, d.dispose = function (e) {
                if (e)e.dispose(); else {
                    for (var t in h)h[t].dispose();
                    h = {}
                }
                return d
            }, d.getInstance = function (e) {
                return h[e]
            }, d.delInstance = function (e) {
                return delete h[e], d
            };
            var c = function (n, a) {
                this.id = n, this.env = e("./tool/env"), this.storage = new s, this.painter = new r(a, this.storage), this.handler = new o(a, this.storage, this.painter), this.animation = new l({stage: {update: t(this)}}), this.animation.start();
                var i = this;
                this.painter.refreshNextFrame = function () {
                    i.refreshNextFrame()
                }, this._needsRefreshNextFrame = !1;
                var i = this, h = this.storage, d = h.delFromMap;
                h.delFromMap = function (e) {
                    var t = h.get(e);
                    i.stopAnimation(t), d.call(h, e)
                }
            };
            return c.prototype.getId = function () {
                return this.id
            }, c.prototype.addShape = function (e) {
                return this.addElement(e), this
            }, c.prototype.addGroup = function (e) {
                return this.addElement(e), this
            }, c.prototype.delShape = function (e) {
                return this.delElement(e), this
            }, c.prototype.delGroup = function (e) {
                return this.delElement(e), this
            }, c.prototype.modShape = function (e, t) {
                return this.modElement(e, t), this
            }, c.prototype.modGroup = function (e, t) {
                return this.modElement(e, t), this
            }, c.prototype.addElement = function (e) {
                return this.storage.addRoot(e), this._needsRefreshNextFrame = !0, this
            }, c.prototype.delElement = function (e) {
                return this.storage.delRoot(e), this._needsRefreshNextFrame = !0, this
            }, c.prototype.modElement = function (e, t) {
                return this.storage.mod(e, t), this._needsRefreshNextFrame = !0, this
            }, c.prototype.modLayer = function (e, t) {
                return this.painter.modLayer(e, t), this._needsRefreshNextFrame = !0, this
            }, c.prototype.addHoverShape = function (e) {
                return this.storage.addHover(e), this
            }, c.prototype.render = function (e) {
                return this.painter.render(e), this._needsRefreshNextFrame = !1, this
            }, c.prototype.refresh = function (e) {
                return this.painter.refresh(e), this._needsRefreshNextFrame = !1, this
            }, c.prototype.refreshNextFrame = function () {
                return this._needsRefreshNextFrame = !0, this
            }, c.prototype.refreshHover = function (e) {
                return this.painter.refreshHover(e), this
            }, c.prototype.refreshShapes = function (e, t) {
                return this.painter.refreshShapes(e, t), this
            }, c.prototype.resize = function () {
                return this.painter.resize(), this
            }, c.prototype.animate = function (e, t, i) {
                var o = this;
                if ("string" == typeof e && (e = this.storage.get(e)), e) {
                    var r;
                    if (t) {
                        for (var s = t.split("."), l = e, h = 0, d = s.length; d > h; h++)l && (l = l[s[h]]);
                        l && (r = l)
                    } else r = e;
                    if (!r)return void a('Property "' + t + '" is not existed in element ' + e.id);
                    null == e.__animators && (e.__animators = []);
                    var c = e.__animators, p = this.animation.animate(r, {loop: i}).during(function () {
                        o.modShape(e)
                    }).done(function () {
                        var t = n.indexOf(e.__animators, p);
                        t >= 0 && c.splice(t, 1)
                    });
                    return c.push(p), p
                }
                a("Element not existed")
            }, c.prototype.stopAnimation = function (e) {
                if (e.__animators) {
                    for (var t = e.__animators, n = t.length, a = 0; n > a; a++)t[a].stop();
                    t.length = 0
                }
                return this
            }, c.prototype.clearAnimation = function () {
                return this.animation.clear(), this
            }, c.prototype.showLoading = function (e) {
                return this.painter.showLoading(e), this
            }, c.prototype.hideLoading = function () {
                return this.painter.hideLoading(), this
            }, c.prototype.getWidth = function () {
                return this.painter.getWidth()
            }, c.prototype.getHeight = function () {
                return this.painter.getHeight()
            }, c.prototype.toDataURL = function (e, t, n) {
                return this.painter.toDataURL(e, t, n)
            }, c.prototype.shapeToImage = function (e, t, n) {
                var a = i();
                return this.painter.shapeToImage(a, e, t, n)
            }, c.prototype.on = function (e, t, n) {
                return this.handler.on(e, t, n), this
            }, c.prototype.un = function (e, t) {
                return this.handler.un(e, t), this
            }, c.prototype.trigger = function (e, t) {
                return this.handler.trigger(e, t), this
            }, c.prototype.clear = function () {
                return this.storage.delRoot(), this.painter.clear(), this
            }, c.prototype.dispose = function () {
                this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, d.delInstance(this.id)
            }, d
        }), n("zrender/config", [], function () {
            var e = {
                EVENT: {
                    RESIZE: "resize",
                    CLICK: "click",
                    DBLCLICK: "dblclick",
                    MOUSEWHEEL: "mousewheel",
                    MOUSEMOVE: "mousemove",
                    MOUSEOVER: "mouseover",
                    MOUSEOUT: "mouseout",
                    MOUSEDOWN: "mousedown",
                    MOUSEUP: "mouseup",
                    GLOBALOUT: "globalout",
                    DRAGSTART: "dragstart",
                    DRAGEND: "dragend",
                    DRAGENTER: "dragenter",
                    DRAGOVER: "dragover",
                    DRAGLEAVE: "dragleave",
                    DROP: "drop",
                    touchClickDelay: 300
                },
                elementClassName: "zr-element",
                catchBrushException: !1,
                debugMode: 0,
                devicePixelRatio: Math.max(window.devicePixelRatio || 1, 1)
            };
            return e
        }), n("echarts/chart/island", ["require", "./base", "zrender/shape/Circle", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/event", "zrender/tool/color", "../util/accMath", "../chart"], function (e) {
            function t(e, t, a, i, r) {
                n.call(this, e, t, a, i, r), this._nameConnector, this._valueConnector, this._zrHeight = this.zr.getHeight(), this._zrWidth = this.zr.getWidth();
                var l = this;
                l.shapeHandler.onmousewheel = function (e) {
                    var t = e.target, n = e.event, a = s.getDelta(n);
                    a = a > 0 ? -1 : 1, t.style.r -= a, t.style.r = t.style.r < 5 ? 5 : t.style.r;
                    var i = o.get(t, "value"), r = i * l.option.island.calculateStep;
                    i = r > 1 ? Math.round(i - r * a) : +(i - r * a).toFixed(2);
                    var h = o.get(t, "name");
                    t.style.text = h + ":" + i, o.set(t, "value", i), o.set(t, "name", h), l.zr.modShape(t.id), l.zr.refreshNextFrame(), s.stop(n)
                }
            }

            var n = e("./base"), a = e("zrender/shape/Circle"), i = e("../config");
            i.island = {zlevel: 0, z: 5, r: 15, calculateStep: .1};
            var o = e("../util/ecData"), r = e("zrender/tool/util"), s = e("zrender/tool/event");
            return t.prototype = {
                type: i.CHART_TYPE_ISLAND, _combine: function (t, n) {
                    var a = e("zrender/tool/color"), i = e("../util/accMath"), r = i.accAdd(o.get(t, "value"), o.get(n, "value")), s = o.get(t, "name") + this._nameConnector + o.get(n, "name");
                    t.style.text = s + this._valueConnector + r, o.set(t, "value", r), o.set(t, "name", s), t.style.r = this.option.island.r, t.style.color = a.mix(t.style.color, n.style.color)
                }, refresh: function (e) {
                    e && (e.island = this.reformOption(e.island), this.option = e, this._nameConnector = this.option.nameConnector, this._valueConnector = this.option.valueConnector)
                }, getOption: function () {
                    return this.option
                }, resize: function () {
                    var e = this.zr.getWidth(), t = this.zr.getHeight(), n = e / (this._zrWidth || e), a = t / (this._zrHeight || t);
                    if (1 !== n || 1 !== a) {
                        this._zrWidth = e, this._zrHeight = t;
                        for (var i = 0, o = this.shapeList.length; o > i; i++)this.zr.modShape(this.shapeList[i].id, {
                            style: {
                                x: Math.round(this.shapeList[i].style.x * n),
                                y: Math.round(this.shapeList[i].style.y * a)
                            }
                        })
                    }
                }, add: function (e) {
                    var t = o.get(e, "name"), n = o.get(e, "value"), i = null != o.get(e, "series") ? o.get(e, "series").name : "", r = this.getFont(this.option.island.textStyle), s = this.option.island, l = {
                        zlevel: s.zlevel,
                        z: s.z,
                        style: {
                            x: e.style.x,
                            y: e.style.y,
                            r: this.option.island.r,
                            color: e.style.color || e.style.strokeColor,
                            text: t + this._valueConnector + n,
                            textFont: r
                        },
                        draggable: !0,
                        hoverable: !0,
                        onmousewheel: this.shapeHandler.onmousewheel,
                        _type: "island"
                    };
                    "#fff" === l.style.color && (l.style.color = e.style.strokeColor), this.setCalculable(l), l.dragEnableTime = 0, o.pack(l, {name: i}, -1, n, -1, t), l = new a(l), this.shapeList.push(l), this.zr.addShape(l)
                }, del: function (e) {
                    this.zr.delShape(e.id);
                    for (var t = [], n = 0, a = this.shapeList.length; a > n; n++)this.shapeList[n].id != e.id && t.push(this.shapeList[n]);
                    this.shapeList = t
                }, ondrop: function (e, t) {
                    if (this.isDrop && e.target) {
                        var n = e.target, a = e.dragged;
                        this._combine(n, a), this.zr.modShape(n.id), t.dragIn = !0, this.isDrop = !1
                    }
                }, ondragend: function (e, t) {
                    var n = e.target;
                    this.isDragend ? t.dragIn && (this.del(n), t.needRefresh = !0) : t.dragIn || (n.style.x = s.getX(e.event), n.style.y = s.getY(e.event), this.add(n), t.needRefresh = !0), this.isDragend = !1
                }
            }, r.inherits(t, n), e("../chart").define("island", t), t
        }), n("echarts/component/toolbox", ["require", "./base", "zrender/shape/Line", "zrender/shape/Image", "zrender/shape/Rectangle", "../util/shape/Icon", "../config", "zrender/tool/util", "zrender/config", "zrender/tool/event", "./dataView", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.dom = o.dom, this._magicType = {}, this._magicMap = {}, this._isSilence = !1, this._iconList, this._iconShapeMap = {}, this._featureTitle = {}, this._featureIcon = {}, this._featureColor = {}, this._featureOption = {}, this._enableColor = "red", this._disableColor = "#ccc", this._markShapeList = [];
                var r = this;
                r._onMark = function (e) {
                    r.__onMark(e)
                }, r._onMarkUndo = function (e) {
                    r.__onMarkUndo(e)
                }, r._onMarkClear = function (e) {
                    r.__onMarkClear(e)
                }, r._onDataZoom = function (e) {
                    r.__onDataZoom(e)
                }, r._onDataZoomReset = function (e) {
                    r.__onDataZoomReset(e)
                }, r._onDataView = function (e) {
                    r.__onDataView(e)
                }, r._onRestore = function (e) {
                    r.__onRestore(e)
                }, r._onSaveAsImage = function (e) {
                    r.__onSaveAsImage(e)
                }, r._onMagicType = function (e) {
                    r.__onMagicType(e)
                }, r._onCustomHandler = function (e) {
                    r.__onCustomHandler(e)
                }, r._onmousemove = function (e) {
                    return r.__onmousemove(e)
                }, r._onmousedown = function (e) {
                    return r.__onmousedown(e)
                }, r._onmouseup = function (e) {
                    return r.__onmouseup(e)
                }, r._onclick = function (e) {
                    return r.__onclick(e)
                }
            }

            var n = e("./base"), a = e("zrender/shape/Line"), i = e("zrender/shape/Image"), o = e("zrender/shape/Rectangle"), r = e("../util/shape/Icon"), s = e("../config");
            s.toolbox = {
                zlevel: 0,
                z: 6,
                show: !1,
                orient: "horizontal",
                x: "right",
                y: "top",
                color: ["#1e90ff", "#22bb22", "#4b0082", "#d2691e"],
                disableColor: "#ddd",
                effectiveColor: "red",
                backgroundColor: "rgba(0,0,0,0)",
                borderColor: "#ccc",
                borderWidth: 0,
                padding: 5,
                itemGap: 10,
                itemSize: 16,
                showTitle: !0,
                feature: {
                    mark: {
                        show: !1,
                        title: {mark: "辅助线开关", markUndo: "删除辅助线", markClear: "清空辅助线"},
                        lineStyle: {width: 1, color: "#1e90ff", type: "dashed"}
                    },
                    dataZoom: {show: !1, title: {dataZoom: "区域缩放", dataZoomReset: "区域缩放后退"}},
                    dataView: {show: !1, title: "数据视图", readOnly: !1, lang: ["数据视图", "关闭", "刷新"]},
                    magicType: {
                        show: !1,
                        title: {
                            line: "折线图切换",
                            bar: "柱形图切换",
                            stack: "堆积",
                            tiled: "平铺",
                            force: "力导向布局图切换",
                            chord: "和弦图切换",
                            pie: "饼图切换",
                            funnel: "漏斗图切换"
                        },
                        type: []
                    },
                    restore: {show: !1, title: "还原"},
                    saveAsImage: {show: !1, title: "保存为图片", type: "png", lang: ["点击保存"]}
                }
            };
            var l = e("zrender/tool/util"), h = e("zrender/config"), d = e("zrender/tool/event"), c = "stack", p = "tiled";
            return t.prototype = {
                type: s.COMPONENT_TYPE_TOOLBOX, _buildShape: function () {
                    this._iconList = [];
                    var e = this.option.toolbox;
                    this._enableColor = e.effectiveColor, this._disableColor = e.disableColor;
                    var t = e.feature, n = [];
                    for (var a in t)if (t[a].show)switch (a) {
                        case"mark":
                            n.push({key: a, name: "mark"}), n.push({key: a, name: "markUndo"}), n.push({
                                key: a,
                                name: "markClear"
                            });
                            break;
                        case"magicType":
                            for (var i = 0, o = t[a].type.length; o > i; i++)t[a].title[t[a].type[i] + "Chart"] = t[a].title[t[a].type[i]], t[a].option && (t[a].option[t[a].type[i] + "Chart"] = t[a].option[t[a].type[i]]), n.push({
                                key: a,
                                name: t[a].type[i] + "Chart"
                            });
                            break;
                        case"dataZoom":
                            n.push({key: a, name: "dataZoom"}), n.push({key: a, name: "dataZoomReset"});
                            break;
                        case"saveAsImage":
                            this.canvasSupported && n.push({key: a, name: "saveAsImage"});
                            break;
                        default:
                            n.push({key: a, name: a})
                    }
                    if (n.length > 0) {
                        for (var r, a, i = 0, o = n.length; o > i; i++)r = n[i].name, a = n[i].key, this._iconList.push(r), this._featureTitle[r] = t[a].title[r] || t[a].title, t[a].icon && (this._featureIcon[r] = t[a].icon[r] || t[a].icon), t[a].color && (this._featureColor[r] = t[a].color[r] || t[a].color), t[a].option && (this._featureOption[r] = t[a].option[r] || t[a].option);
                        this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
                        for (var i = 0, o = this.shapeList.length; o > i; i++)this.zr.addShape(this.shapeList[i]);
                        this._iconShapeMap.mark && (this._iconDisable(this._iconShapeMap.markUndo), this._iconDisable(this._iconShapeMap.markClear)), this._iconShapeMap.dataZoomReset && 0 === this._zoomQueue.length && this._iconDisable(this._iconShapeMap.dataZoomReset)
                    }
                }, _buildItem: function () {
                    var t, n, a, o, s = this.option.toolbox, l = this._iconList.length, h = this._itemGroupLocation.x, d = this._itemGroupLocation.y, c = s.itemSize, p = s.itemGap, m = s.color instanceof Array ? s.color : [s.color], u = this.getFont(s.textStyle);
                    "horizontal" === s.orient ? (n = this._itemGroupLocation.y / this.zr.getHeight() < .5 ? "bottom" : "top", a = this._itemGroupLocation.x / this.zr.getWidth() < .5 ? "left" : "right", o = this._itemGroupLocation.y / this.zr.getHeight() < .5 ? "top" : "bottom") : n = this._itemGroupLocation.x / this.zr.getWidth() < .5 ? "right" : "left", this._iconShapeMap = {};
                    for (var V = this, U = 0; l > U; U++) {
                        switch (t = {
                            type: "icon",
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            style: {
                                x: h,
                                y: d,
                                width: c,
                                height: c,
                                iconType: this._iconList[U],
                                lineWidth: 1,
                                strokeColor: this._featureColor[this._iconList[U]] || m[U % m.length],
                                brushType: "stroke"
                            },
                            highlightStyle: {
                                lineWidth: 1,
                                text: s.showTitle ? this._featureTitle[this._iconList[U]] : void 0,
                                textFont: u,
                                textPosition: n,
                                strokeColor: this._featureColor[this._iconList[U]] || m[U % m.length]
                            },
                            hoverable: !0,
                            clickable: !0
                        }, this._featureIcon[this._iconList[U]] && (t.style.image = this._featureIcon[this._iconList[U]].replace(new RegExp("^image:\\/\\/"), ""), t.style.opacity = .8, t.highlightStyle.opacity = 1, t.type = "image"), "horizontal" === s.orient && (0 === U && "left" === a && (t.highlightStyle.textPosition = "specific", t.highlightStyle.textAlign = a, t.highlightStyle.textBaseline = o, t.highlightStyle.textX = h, t.highlightStyle.textY = "top" === o ? d + c + 10 : d - 10), U === l - 1 && "right" === a && (t.highlightStyle.textPosition = "specific", t.highlightStyle.textAlign = a, t.highlightStyle.textBaseline = o, t.highlightStyle.textX = h + c, t.highlightStyle.textY = "top" === o ? d + c + 10 : d - 10)), this._iconList[U]) {
                            case"mark":
                                t.onclick = V._onMark;
                                break;
                            case"markUndo":
                                t.onclick = V._onMarkUndo;
                                break;
                            case"markClear":
                                t.onclick = V._onMarkClear;
                                break;
                            case"dataZoom":
                                t.onclick = V._onDataZoom;
                                break;
                            case"dataZoomReset":
                                t.onclick = V._onDataZoomReset;
                                break;
                            case"dataView":
                                if (!this._dataView) {
                                    var f = e("./dataView");
                                    this._dataView = new f(this.ecTheme, this.messageCenter, this.zr, this.option, this.myChart)
                                }
                                t.onclick = V._onDataView;
                                break;
                            case"restore":
                                t.onclick = V._onRestore;
                                break;
                            case"saveAsImage":
                                t.onclick = V._onSaveAsImage;
                                break;
                            default:
                                this._iconList[U].match("Chart") ? (t._name = this._iconList[U].replace("Chart", ""), t.onclick = V._onMagicType) : t.onclick = V._onCustomHandler
                        }
                        "icon" === t.type ? t = new r(t) : "image" === t.type && (t = new i(t)), this.shapeList.push(t), this._iconShapeMap[this._iconList[U]] = t, "horizontal" === s.orient ? h += c + p : d += c + p
                    }
                }, _buildBackground: function () {
                    var e = this.option.toolbox, t = this.reformCssArray(this.option.toolbox.padding);
                    this.shapeList.push(new o({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._itemGroupLocation.x - t[3],
                            y: this._itemGroupLocation.y - t[0],
                            width: this._itemGroupLocation.width + t[3] + t[1],
                            height: this._itemGroupLocation.height + t[0] + t[2],
                            brushType: 0 === e.borderWidth ? "fill" : "both",
                            color: e.backgroundColor,
                            strokeColor: e.borderColor,
                            lineWidth: e.borderWidth
                        }
                    }))
                }, _getItemGroupLocation: function () {
                    var e = this.option.toolbox, t = this.reformCssArray(this.option.toolbox.padding), n = this._iconList.length, a = e.itemGap, i = e.itemSize, o = 0, r = 0;
                    "horizontal" === e.orient ? (o = (i + a) * n - a, r = i) : (r = (i + a) * n - a, o = i);
                    var s, l = this.zr.getWidth();
                    switch (e.x) {
                        case"center":
                            s = Math.floor((l - o) / 2);
                            break;
                        case"left":
                            s = t[3] + e.borderWidth;
                            break;
                        case"right":
                            s = l - o - t[1] - e.borderWidth;
                            break;
                        default:
                            s = e.x - 0, s = isNaN(s) ? 0 : s
                    }
                    var h, d = this.zr.getHeight();
                    switch (e.y) {
                        case"top":
                            h = t[0] + e.borderWidth;
                            break;
                        case"bottom":
                            h = d - r - t[2] - e.borderWidth;
                            break;
                        case"center":
                            h = Math.floor((d - r) / 2);
                            break;
                        default:
                            h = e.y - 0, h = isNaN(h) ? 0 : h
                    }
                    return {x: s, y: h, width: o, height: r}
                }, __onmousemove: function (e) {
                    this._marking && (this._markShape.style.xEnd = d.getX(e.event), this._markShape.style.yEnd = d.getY(e.event), this.zr.addHoverShape(this._markShape)), this._zooming && (this._zoomShape.style.width = d.getX(e.event) - this._zoomShape.style.x, this._zoomShape.style.height = d.getY(e.event) - this._zoomShape.style.y, this.zr.addHoverShape(this._zoomShape), this.dom.style.cursor = "crosshair", d.stop(e.event)), this._zoomStart && "pointer" != this.dom.style.cursor && "move" != this.dom.style.cursor && (this.dom.style.cursor = "crosshair")
                }, __onmousedown: function (e) {
                    if (!e.target) {
                        this._zooming = !0;
                        var t = d.getX(e.event), n = d.getY(e.event), a = this.option.dataZoom || {};
                        return this._zoomShape = new o({
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            style: {x: t, y: n, width: 1, height: 1, brushType: "both"},
                            highlightStyle: {
                                lineWidth: 2,
                                color: a.fillerColor || s.dataZoom.fillerColor,
                                strokeColor: a.handleColor || s.dataZoom.handleColor,
                                brushType: "both"
                            }
                        }), this.zr.addHoverShape(this._zoomShape), !0
                    }
                }, __onmouseup: function () {
                    if (!this._zoomShape || Math.abs(this._zoomShape.style.width) < 10 || Math.abs(this._zoomShape.style.height) < 10)return this._zooming = !1, !0;
                    if (this._zooming && this.component.dataZoom) {
                        this._zooming = !1;
                        var e = this.component.dataZoom.rectZoom(this._zoomShape.style);
                        e && (this._zoomQueue.push({
                            start: e.start,
                            end: e.end,
                            start2: e.start2,
                            end2: e.end2
                        }), this._iconEnable(this._iconShapeMap.dataZoomReset), this.zr.refreshNextFrame())
                    }
                    return !0
                }, __onclick: function (e) {
                    if (!e.target)if (this._marking)this._marking = !1, this._markShapeList.push(this._markShape), this._iconEnable(this._iconShapeMap.markUndo), this._iconEnable(this._iconShapeMap.markClear), this.zr.addShape(this._markShape), this.zr.refreshNextFrame(); else if (this._markStart) {
                        this._marking = !0;
                        var t = d.getX(e.event), n = d.getY(e.event);
                        this._markShape = new a({
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            style: {
                                xStart: t,
                                yStart: n,
                                xEnd: t,
                                yEnd: n,
                                lineWidth: this.query(this.option, "toolbox.feature.mark.lineStyle.width"),
                                strokeColor: this.query(this.option, "toolbox.feature.mark.lineStyle.color"),
                                lineType: this.query(this.option, "toolbox.feature.mark.lineStyle.type")
                            }
                        }), this.zr.addHoverShape(this._markShape)
                    }
                }, __onMark: function (e) {
                    var t = e.target;
                    if (this._marking || this._markStart)this._resetMark(), this.zr.refreshNextFrame(); else {
                        this._resetZoom(), this.zr.modShape(t.id, {style: {strokeColor: this._enableColor}}), this.zr.refreshNextFrame(), this._markStart = !0;
                        var n = this;
                        setTimeout(function () {
                            n.zr && n.zr.on(h.EVENT.CLICK, n._onclick) && n.zr.on(h.EVENT.MOUSEMOVE, n._onmousemove)
                        }, 10)
                    }
                    return !0
                }, __onMarkUndo: function () {
                    if (this._marking)this._marking = !1; else {
                        var e = this._markShapeList.length;
                        if (e >= 1) {
                            var t = this._markShapeList[e - 1];
                            this.zr.delShape(t.id), this.zr.refreshNextFrame(), this._markShapeList.pop(), 1 === e && (this._iconDisable(this._iconShapeMap.markUndo), this._iconDisable(this._iconShapeMap.markClear))
                        }
                    }
                    return !0
                }, __onMarkClear: function () {
                    this._marking && (this._marking = !1);
                    var e = this._markShapeList.length;
                    if (e > 0) {
                        for (; e--;)this.zr.delShape(this._markShapeList.pop().id);
                        this._iconDisable(this._iconShapeMap.markUndo), this._iconDisable(this._iconShapeMap.markClear), this.zr.refreshNextFrame()
                    }
                    return !0
                }, __onDataZoom: function (e) {
                    var t = e.target;
                    if (this._zooming || this._zoomStart)this._resetZoom(), this.zr.refreshNextFrame(), this.dom.style.cursor = "default"; else {
                        this._resetMark(), this.zr.modShape(t.id, {style: {strokeColor: this._enableColor}}), this.zr.refreshNextFrame(), this._zoomStart = !0;
                        var n = this;
                        setTimeout(function () {
                            n.zr && n.zr.on(h.EVENT.MOUSEDOWN, n._onmousedown) && n.zr.on(h.EVENT.MOUSEUP, n._onmouseup) && n.zr.on(h.EVENT.MOUSEMOVE, n._onmousemove)
                        }, 10), this.dom.style.cursor = "crosshair"
                    }
                    return !0
                }, __onDataZoomReset: function () {
                    return this._zooming && (this._zooming = !1), this._zoomQueue.pop(), this._zoomQueue.length > 0 ? this.component.dataZoom.absoluteZoom(this._zoomQueue[this._zoomQueue.length - 1]) : (this.component.dataZoom.rectZoom(), this._iconDisable(this._iconShapeMap.dataZoomReset), this.zr.refreshNextFrame()), !0
                }, _resetMark: function () {
                    this._marking = !1, this._markStart && (this._markStart = !1, this._iconShapeMap.mark && this.zr.modShape(this._iconShapeMap.mark.id, {style: {strokeColor: this._iconShapeMap.mark.highlightStyle.strokeColor}}), this.zr.un(h.EVENT.CLICK, this._onclick), this.zr.un(h.EVENT.MOUSEMOVE, this._onmousemove))
                }, _resetZoom: function () {
                    this._zooming = !1, this._zoomStart && (this._zoomStart = !1, this._iconShapeMap.dataZoom && this.zr.modShape(this._iconShapeMap.dataZoom.id, {style: {strokeColor: this._iconShapeMap.dataZoom.highlightStyle.strokeColor}}), this.zr.un(h.EVENT.MOUSEDOWN, this._onmousedown), this.zr.un(h.EVENT.MOUSEUP, this._onmouseup), this.zr.un(h.EVENT.MOUSEMOVE, this._onmousemove))
                }, _iconDisable: function (e) {
                    "image" != e.type ? this.zr.modShape(e.id, {
                        hoverable: !1,
                        clickable: !1,
                        style: {strokeColor: this._disableColor}
                    }) : this.zr.modShape(e.id, {hoverable: !1, clickable: !1, style: {opacity: .3}})
                }, _iconEnable: function (e) {
                    "image" != e.type ? this.zr.modShape(e.id, {
                        hoverable: !0,
                        clickable: !0,
                        style: {strokeColor: e.highlightStyle.strokeColor}
                    }) : this.zr.modShape(e.id, {hoverable: !0, clickable: !0, style: {opacity: .8}})
                }, __onDataView: function () {
                    return this._dataView.show(this.option), !0
                }, __onRestore: function () {
                    return this._resetMark(), this._resetZoom(), this.messageCenter.dispatch(s.EVENT.RESTORE, null, null, this.myChart), !0
                }, __onSaveAsImage: function () {
                    var e = this.option.toolbox.feature.saveAsImage, t = e.type || "png";
                    "png" != t && "jpeg" != t && (t = "png");
                    var n;
                    n = this.myChart.isConnected() ? this.myChart.getConnectedDataURL(t) : this.zr.toDataURL("image/" + t, this.option.backgroundColor && "rgba(0,0,0,0)" === this.option.backgroundColor.replace(" ", "") ? "#fff" : this.option.backgroundColor);
                    var a = document.createElement("div");
                    a.id = "__echarts_download_wrap__", a.style.cssText = "position:fixed;z-index:99999;display:block;top:0;left:0;background-color:rgba(33,33,33,0.5);text-align:center;width:100%;height:100%;line-height:" + document.documentElement.clientHeight + "px;";
                    var i = document.createElement("a");
                    i.href = n, i.setAttribute("download", (e.name ? e.name : this.option.title && (this.option.title.text || this.option.title.subtext) ? this.option.title.text || this.option.title.subtext : "ECharts") + "." + t), i.innerHTML = '<img style="vertical-align:middle" src="' + n + '" title="' + (window.ActiveXObject || "ActiveXObject"in window ? "右键->图片另存为" : e.lang ? e.lang[0] : "点击保存") + '"/>', a.appendChild(i), document.body.appendChild(a), i = null, a = null, setTimeout(function () {
                        var e = document.getElementById("__echarts_download_wrap__");
                        e && (e.onclick = function () {
                            var e = document.getElementById("__echarts_download_wrap__");
                            e.onclick = null, e.innerHTML = "", document.body.removeChild(e), e = null
                        }, e = null)
                    }, 500)
                }, __onMagicType: function (e) {
                    this._resetMark();
                    var t = e.target._name;
                    return this._magicType[t] || (this._magicType[t] = !0, t === s.CHART_TYPE_LINE ? this._magicType[s.CHART_TYPE_BAR] = !1 : t === s.CHART_TYPE_BAR && (this._magicType[s.CHART_TYPE_LINE] = !1), t === s.CHART_TYPE_PIE ? this._magicType[s.CHART_TYPE_FUNNEL] = !1 : t === s.CHART_TYPE_FUNNEL && (this._magicType[s.CHART_TYPE_PIE] = !1), t === s.CHART_TYPE_FORCE ? this._magicType[s.CHART_TYPE_CHORD] = !1 : t === s.CHART_TYPE_CHORD && (this._magicType[s.CHART_TYPE_FORCE] = !1), t === c ? this._magicType[p] = !1 : t === p && (this._magicType[c] = !1), this.messageCenter.dispatch(s.EVENT.MAGIC_TYPE_CHANGED, e.event, {magicType: this._magicType}, this.myChart)), !0
                }, setMagicType: function (e) {
                    this._resetMark(), this._magicType = e, !this._isSilence && this.messageCenter.dispatch(s.EVENT.MAGIC_TYPE_CHANGED, null, {magicType: this._magicType}, this.myChart)
                }, __onCustomHandler: function (e) {
                    var t = e.target.style.iconType, n = this.option.toolbox.feature[t].onclick;
                    "function" == typeof n && n.call(this, this.option)
                }, reset: function (e, t) {
                    if (t && this.clear(), this.query(e, "toolbox.show") && this.query(e, "toolbox.feature.magicType.show")) {
                        var n = e.toolbox.feature.magicType.type, a = n.length;
                        for (this._magicMap = {}; a--;)this._magicMap[n[a]] = !0;
                        a = e.series.length;
                        for (var i, o; a--;)i = e.series[a].type, this._magicMap[i] && (o = e.xAxis instanceof Array ? e.xAxis[e.series[a].xAxisIndex || 0] : e.xAxis, o && "category" === (o.type || "category") && (o.__boundaryGap = null != o.boundaryGap ? o.boundaryGap : !0), o = e.yAxis instanceof Array ? e.yAxis[e.series[a].yAxisIndex || 0] : e.yAxis, o && "category" === o.type && (o.__boundaryGap = null != o.boundaryGap ? o.boundaryGap : !0), e.series[a].__type = i, e.series[a].__itemStyle = l.clone(e.series[a].itemStyle || {})), (this._magicMap[c] || this._magicMap[p]) && (e.series[a].__stack = e.series[a].stack)
                    }
                    this._magicType = t ? {} : this._magicType || {};
                    for (var r in this._magicType)if (this._magicType[r]) {
                        this.option = e, this.getMagicOption();
                        break
                    }
                    var s = e.dataZoom;
                    if (s && s.show) {
                        var h = null != s.start && s.start >= 0 && s.start <= 100 ? s.start : 0, d = null != s.end && s.end >= 0 && s.end <= 100 ? s.end : 100;
                        h > d && (h += d, d = h - d, h -= d), this._zoomQueue = [{
                            start: h,
                            end: d,
                            start2: 0,
                            end2: 100
                        }]
                    } else this._zoomQueue = []
                }, getMagicOption: function () {
                    var e, t;
                    if (this._magicType[s.CHART_TYPE_LINE] || this._magicType[s.CHART_TYPE_BAR]) {
                        for (var n = this._magicType[s.CHART_TYPE_LINE] ? !1 : !0, a = 0, i = this.option.series.length; i > a; a++)t = this.option.series[a].type, (t == s.CHART_TYPE_LINE || t == s.CHART_TYPE_BAR) && (e = this.option.xAxis instanceof Array ? this.option.xAxis[this.option.series[a].xAxisIndex || 0] : this.option.xAxis, e && "category" === (e.type || "category") && (e.boundaryGap = n ? !0 : e.__boundaryGap), e = this.option.yAxis instanceof Array ? this.option.yAxis[this.option.series[a].yAxisIndex || 0] : this.option.yAxis, e && "category" === e.type && (e.boundaryGap = n ? !0 : e.__boundaryGap));
                        this._defaultMagic(s.CHART_TYPE_LINE, s.CHART_TYPE_BAR)
                    }
                    if (this._defaultMagic(s.CHART_TYPE_CHORD, s.CHART_TYPE_FORCE), this._defaultMagic(s.CHART_TYPE_PIE, s.CHART_TYPE_FUNNEL), this._magicType[c] || this._magicType[p])for (var a = 0, i = this.option.series.length; i > a; a++)this._magicType[c] ? (this.option.series[a].stack = "_ECHARTS_STACK_KENER_2014_", t = c) : this._magicType[p] && (this.option.series[a].stack = null, t = p), this._featureOption[t + "Chart"] && l.merge(this.option.series[a], this._featureOption[t + "Chart"] || {}, !0);
                    return this.option
                }, _defaultMagic: function (e, t) {
                    if (this._magicType[e] || this._magicType[t])for (var n = 0, a = this.option.series.length; a > n; n++) {
                        var i = this.option.series[n].type;
                        (i == e || i == t) && (this.option.series[n].type = this._magicType[e] ? e : t, this.option.series[n].itemStyle = l.clone(this.option.series[n].__itemStyle), i = this.option.series[n].type, this._featureOption[i + "Chart"] && l.merge(this.option.series[n], this._featureOption[i + "Chart"] || {}, !0))
                    }
                }, silence: function (e) {
                    this._isSilence = e
                }, resize: function () {
                    this._resetMark(), this.clear(), this.option && this.option.toolbox && this.option.toolbox.show && this._buildShape(), this._dataView && this._dataView.resize()
                }, hideDataView: function () {
                    this._dataView && this._dataView.hide()
                }, clear: function (e) {
                    this.zr && (this.zr.delShape(this.shapeList), this.shapeList = [], e || (this.zr.delShape(this._markShapeList), this._markShapeList = []))
                }, onbeforDispose: function () {
                    this._dataView && (this._dataView.dispose(), this._dataView = null), this._markShapeList = null
                }, refresh: function (e) {
                    e && (this._resetMark(), this._resetZoom(), e.toolbox = this.reformOption(e.toolbox), this.option = e, this.clear(!0), e.toolbox.show && this._buildShape(), this.hideDataView())
                }
            }, l.inherits(t, n), e("../component").define("toolbox", t), t
        }), n("echarts/component", [], function () {
            var e = {}, t = {};
            return e.define = function (n, a) {
                return t[n] = a, e
            }, e.get = function (e) {
                return t[e]
            }, e
        }), n("echarts/component/title", ["require", "./base", "zrender/shape/Text", "zrender/shape/Rectangle", "../config", "zrender/tool/util", "zrender/tool/area", "zrender/tool/color", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Rectangle"), o = e("../config");
            o.title = {
                zlevel: 0,
                z: 6,
                show: !0,
                text: "",
                subtext: "",
                x: "left",
                y: "top",
                backgroundColor: "rgba(0,0,0,0)",
                borderColor: "#ccc",
                borderWidth: 0,
                padding: 5,
                itemGap: 5,
                textStyle: {fontSize: 18, fontWeight: "bolder", color: "#333"},
                subtextStyle: {color: "#aaa"}
            };
            var r = e("zrender/tool/util"), s = e("zrender/tool/area"), l = e("zrender/tool/color");
            return t.prototype = {
                type: o.COMPONENT_TYPE_TITLE, _buildShape: function () {
                    if (this.titleOption.show) {
                        this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
                        for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e])
                    }
                }, _buildItem: function () {
                    var e = this.titleOption.text, t = this.titleOption.link, n = this.titleOption.target, i = this.titleOption.subtext, o = this.titleOption.sublink, r = this.titleOption.subtarget, s = this.getFont(this.titleOption.textStyle), h = this.getFont(this.titleOption.subtextStyle), d = this._itemGroupLocation.x, c = this._itemGroupLocation.y, p = this._itemGroupLocation.width, m = this._itemGroupLocation.height, u = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            y: c,
                            color: this.titleOption.textStyle.color,
                            text: e,
                            textFont: s,
                            textBaseline: "top"
                        },
                        highlightStyle: {color: l.lift(this.titleOption.textStyle.color, 1), brushType: "fill"},
                        hoverable: !1
                    };
                    t && (u.hoverable = !0, u.clickable = !0, u.onclick = function () {
                        n && "self" == n ? window.location = t : window.open(t)
                    });
                    var V = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            y: c + m,
                            color: this.titleOption.subtextStyle.color,
                            text: i,
                            textFont: h,
                            textBaseline: "bottom"
                        },
                        highlightStyle: {color: l.lift(this.titleOption.subtextStyle.color, 1), brushType: "fill"},
                        hoverable: !1
                    };
                    switch (o && (V.hoverable = !0, V.clickable = !0, V.onclick = function () {
                        r && "self" == r ? window.location = o : window.open(o)
                    }), this.titleOption.x) {
                        case"center":
                            u.style.x = V.style.x = d + p / 2, u.style.textAlign = V.style.textAlign = "center";
                            break;
                        case"left":
                            u.style.x = V.style.x = d, u.style.textAlign = V.style.textAlign = "left";
                            break;
                        case"right":
                            u.style.x = V.style.x = d + p, u.style.textAlign = V.style.textAlign = "right";
                            break;
                        default:
                            d = this.titleOption.x - 0, d = isNaN(d) ? 0 : d, u.style.x = V.style.x = d
                    }
                    this.titleOption.textAlign && (u.style.textAlign = V.style.textAlign = this.titleOption.textAlign), this.shapeList.push(new a(u)), "" !== i && this.shapeList.push(new a(V))
                }, _buildBackground: function () {
                    var e = this.reformCssArray(this.titleOption.padding);
                    this.shapeList.push(new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._itemGroupLocation.x - e[3],
                            y: this._itemGroupLocation.y - e[0],
                            width: this._itemGroupLocation.width + e[3] + e[1],
                            height: this._itemGroupLocation.height + e[0] + e[2],
                            brushType: 0 === this.titleOption.borderWidth ? "fill" : "both",
                            color: this.titleOption.backgroundColor,
                            strokeColor: this.titleOption.borderColor,
                            lineWidth: this.titleOption.borderWidth
                        }
                    }))
                }, _getItemGroupLocation: function () {
                    var e, t = this.reformCssArray(this.titleOption.padding), n = this.titleOption.text, a = this.titleOption.subtext, i = this.getFont(this.titleOption.textStyle), o = this.getFont(this.titleOption.subtextStyle), r = Math.max(s.getTextWidth(n, i), s.getTextWidth(a, o)), l = s.getTextHeight(n, i) + ("" === a ? 0 : this.titleOption.itemGap + s.getTextHeight(a, o)), h = this.zr.getWidth();
                    switch (this.titleOption.x) {
                        case"center":
                            e = Math.floor((h - r) / 2);
                            break;
                        case"left":
                            e = t[3] + this.titleOption.borderWidth;
                            break;
                        case"right":
                            e = h - r - t[1] - this.titleOption.borderWidth;
                            break;
                        default:
                            e = this.titleOption.x - 0, e = isNaN(e) ? 0 : e
                    }
                    var d, c = this.zr.getHeight();
                    switch (this.titleOption.y) {
                        case"top":
                            d = t[0] + this.titleOption.borderWidth;
                            break;
                        case"bottom":
                            d = c - l - t[2] - this.titleOption.borderWidth;
                            break;
                        case"center":
                            d = Math.floor((c - l) / 2);
                            break;
                        default:
                            d = this.titleOption.y - 0, d = isNaN(d) ? 0 : d
                    }
                    return {x: e, y: d, width: r, height: l}
                }, refresh: function (e) {
                    e && (this.option = e, this.option.title = this.reformOption(this.option.title), this.titleOption = this.option.title, this.titleOption.textStyle = this.getTextStyle(this.titleOption.textStyle), this.titleOption.subtextStyle = this.getTextStyle(this.titleOption.subtextStyle)), this.clear(), this._buildShape()
                }
            }, r.inherits(t, n), e("../component").define("title", t), t
        }), n("echarts/component/tooltip", ["require", "./base", "../util/shape/Cross", "zrender/shape/Line", "zrender/shape/Rectangle", "../config", "../util/ecData", "zrender/config", "zrender/tool/event", "zrender/tool/area", "zrender/tool/color", "zrender/tool/util", "zrender/shape/Base", "../component"], function (e) {
            function t(e, t, o, r, s) {
                n.call(this, e, t, o, r, s), this.dom = s.dom;
                var l = this;
                l._onmousemove = function (e) {
                    return l.__onmousemove(e)
                }, l._onglobalout = function (e) {
                    return l.__onglobalout(e)
                }, this.zr.on(h.EVENT.MOUSEMOVE, l._onmousemove), this.zr.on(h.EVENT.GLOBALOUT, l._onglobalout), l._hide = function (e) {
                    return l.__hide(e)
                }, l._tryShow = function (e) {
                    return l.__tryShow(e)
                }, l._refixed = function (e) {
                    return l.__refixed(e)
                }, l._setContent = function (e, t) {
                    return l.__setContent(e, t)
                }, this._tDom = this._tDom || document.createElement("div"), this._tDom.onselectstart = function () {
                    return !1
                }, this._tDom.onmouseover = function () {
                    l._mousein = !0
                }, this._tDom.onmouseout = function () {
                    l._mousein = !1
                }, this._tDom.className = "echarts-tooltip", this._tDom.style.position = "absolute", this.hasAppend = !1, this._axisLineShape && this.zr.delShape(this._axisLineShape.id), this._axisLineShape = new i({
                    zlevel: this.getZlevelBase(),
                    z: this.getZBase(),
                    invisible: !0,
                    hoverable: !1
                }), this.shapeList.push(this._axisLineShape), this.zr.addShape(this._axisLineShape), this._axisShadowShape && this.zr.delShape(this._axisShadowShape.id), this._axisShadowShape = new i({
                    zlevel: this.getZlevelBase(),
                    z: 1,
                    invisible: !0,
                    hoverable: !1
                }), this.shapeList.push(this._axisShadowShape), this.zr.addShape(this._axisShadowShape), this._axisCrossShape && this.zr.delShape(this._axisCrossShape.id),
                    this._axisCrossShape = new a({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        invisible: !0,
                        hoverable: !1
                    }), this.shapeList.push(this._axisCrossShape), this.zr.addShape(this._axisCrossShape), this.showing = !1, this.refresh(r)
            }

            var n = e("./base"), a = e("../util/shape/Cross"), i = e("zrender/shape/Line"), o = e("zrender/shape/Rectangle"), r = new o({}), s = e("../config");
            s.tooltip = {
                zlevel: 1,
                z: 8,
                show: !0,
                showContent: !0,
                trigger: "item",
                islandFormatter: "{a} <br/>{b} : {c}",
                showDelay: 20,
                hideDelay: 100,
                transitionDuration: .4,
                enterable: !1,
                backgroundColor: "rgba(0,0,0,0.7)",
                borderColor: "#333",
                borderRadius: 4,
                borderWidth: 0,
                padding: 5,
                axisPointer: {
                    type: "line",
                    lineStyle: {color: "#48b", width: 2, type: "solid"},
                    crossStyle: {color: "#1e90ff", width: 1, type: "dashed"},
                    shadowStyle: {color: "rgba(150,150,150,0.3)", width: "auto", type: "default"}
                },
                textStyle: {color: "#fff"}
            };
            var l = e("../util/ecData"), h = e("zrender/config"), d = e("zrender/tool/event"), c = e("zrender/tool/area"), p = e("zrender/tool/color"), m = e("zrender/tool/util"), u = e("zrender/shape/Base");
            return t.prototype = {
                type: s.COMPONENT_TYPE_TOOLTIP,
                _gCssText: "position:absolute;display:block;border-style:solid;white-space:nowrap;",
                _style: function (e) {
                    if (!e)return "";
                    var t = [];
                    if (e.transitionDuration) {
                        var n = "left " + e.transitionDuration + "s,top " + e.transitionDuration + "s";
                        t.push("transition:" + n), t.push("-moz-transition:" + n), t.push("-webkit-transition:" + n), t.push("-o-transition:" + n)
                    }
                    e.backgroundColor && (t.push("background-Color:" + p.toHex(e.backgroundColor)), t.push("filter:alpha(opacity=70)"), t.push("background-Color:" + e.backgroundColor)), null != e.borderWidth && t.push("border-width:" + e.borderWidth + "px"), null != e.borderColor && t.push("border-color:" + e.borderColor), null != e.borderRadius && (t.push("border-radius:" + e.borderRadius + "px"), t.push("-moz-border-radius:" + e.borderRadius + "px"), t.push("-webkit-border-radius:" + e.borderRadius + "px"), t.push("-o-border-radius:" + e.borderRadius + "px"));
                    var a = e.textStyle;
                    a && (a.color && t.push("color:" + a.color), a.decoration && t.push("text-decoration:" + a.decoration), a.align && t.push("text-align:" + a.align), a.fontFamily && t.push("font-family:" + a.fontFamily), a.fontSize && t.push("font-size:" + a.fontSize + "px"), a.fontSize && t.push("line-height:" + Math.round(3 * a.fontSize / 2) + "px"), a.fontStyle && t.push("font-style:" + a.fontStyle), a.fontWeight && t.push("font-weight:" + a.fontWeight));
                    var i = e.padding;
                    return null != i && (i = this.reformCssArray(i), t.push("padding:" + i[0] + "px " + i[1] + "px " + i[2] + "px " + i[3] + "px")), t = t.join(";") + ";"
                },
                __hide: function () {
                    this._lastDataIndex = -1, this._lastSeriesIndex = -1, this._lastItemTriggerId = -1, this._tDom && (this._tDom.style.display = "none");
                    var e = !1;
                    this._axisLineShape.invisible || (this._axisLineShape.invisible = !0, this.zr.modShape(this._axisLineShape.id), e = !0), this._axisShadowShape.invisible || (this._axisShadowShape.invisible = !0, this.zr.modShape(this._axisShadowShape.id), e = !0), this._axisCrossShape.invisible || (this._axisCrossShape.invisible = !0, this.zr.modShape(this._axisCrossShape.id), e = !0), this._lastTipShape && this._lastTipShape.tipShape.length > 0 && (this.zr.delShape(this._lastTipShape.tipShape), this._lastTipShape = !1, this.shapeList.length = 2), e && this.zr.refreshNextFrame(), this.showing = !1
                },
                _show: function (e, t, n, a) {
                    var i = this._tDom.offsetHeight, o = this._tDom.offsetWidth;
                    e && ("function" == typeof e && (e = e([t, n])), e instanceof Array && (t = e[0], n = e[1])), t + o > this._zrWidth && (t -= o + 40), n + i > this._zrHeight && (n -= i - 20), 20 > n && (n = 0), this._tDom.style.cssText = this._gCssText + this._defaultCssText + (a ? a : "") + "left:" + t + "px;top:" + n + "px;", (10 > i || 10 > o) && setTimeout(this._refixed, 20), this.showing = !0
                },
                __refixed: function () {
                    if (this._tDom) {
                        var e = "", t = this._tDom.offsetHeight, n = this._tDom.offsetWidth;
                        this._tDom.offsetLeft + n > this._zrWidth && (e += "left:" + (this._zrWidth - n - 20) + "px;"), this._tDom.offsetTop + t > this._zrHeight && (e += "top:" + (this._zrHeight - t - 10) + "px;"), "" !== e && (this._tDom.style.cssText += e)
                    }
                },
                __tryShow: function () {
                    var e, t;
                    if (this._curTarget) {
                        if ("island" === this._curTarget._type && this.option.tooltip.show)return void this._showItemTrigger();
                        var n = l.get(this._curTarget, "series"), a = l.get(this._curTarget, "data");
                        e = this.deepQuery([a, n, this.option], "tooltip.show"), null != n && null != a && e ? (t = this.deepQuery([a, n, this.option], "tooltip.trigger"), "axis" === t ? this._showAxisTrigger(n.xAxisIndex, n.yAxisIndex, l.get(this._curTarget, "dataIndex")) : this._showItemTrigger()) : (clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this._hidingTicket = setTimeout(this._hide, this._hideDelay))
                    } else this._findPolarTrigger() || this._findAxisTrigger()
                },
                _findAxisTrigger: function () {
                    if (!this.component.xAxis || !this.component.yAxis)return void(this._hidingTicket = setTimeout(this._hide, this._hideDelay));
                    for (var e, t, n = this.option.series, a = 0, i = n.length; i > a; a++)if ("axis" === this.deepQuery([n[a], this.option], "tooltip.trigger"))return e = n[a].xAxisIndex || 0, t = n[a].yAxisIndex || 0, this.component.xAxis.getAxis(e) && this.component.xAxis.getAxis(e).type === s.COMPONENT_TYPE_AXIS_CATEGORY ? void this._showAxisTrigger(e, t, this._getNearestDataIndex("x", this.component.xAxis.getAxis(e))) : this.component.yAxis.getAxis(t) && this.component.yAxis.getAxis(t).type === s.COMPONENT_TYPE_AXIS_CATEGORY ? void this._showAxisTrigger(e, t, this._getNearestDataIndex("y", this.component.yAxis.getAxis(t))) : void this._showAxisTrigger(e, t, -1);
                    "cross" === this.option.tooltip.axisPointer.type && this._showAxisTrigger(-1, -1, -1)
                },
                _findPolarTrigger: function () {
                    if (!this.component.polar)return !1;
                    var e, t = d.getX(this._event), n = d.getY(this._event), a = this.component.polar.getNearestIndex([t, n]);
                    return a ? (e = a.valueIndex, a = a.polarIndex) : a = -1, -1 != a ? this._showPolarTrigger(a, e) : !1
                },
                _getNearestDataIndex: function (e, t) {
                    var n = -1, a = d.getX(this._event), i = d.getY(this._event);
                    if ("x" === e) {
                        for (var o, r, s = this.component.grid.getXend(), l = t.getCoordByIndex(n); s > l && (r = l, a >= l);)o = l, l = t.getCoordByIndex(++n);
                        return 0 >= n ? n = 0 : r - a >= a - o ? n -= 1 : null == t.getNameByIndex(n) && (n -= 1), n
                    }
                    for (var h, c, p = this.component.grid.getY(), l = t.getCoordByIndex(n); l > p && (h = l, l >= i);)c = l, l = t.getCoordByIndex(++n);
                    return 0 >= n ? n = 0 : i - h >= c - i ? n -= 1 : null == t.getNameByIndex(n) && (n -= 1), n
                },
                _showAxisTrigger: function (e, t, n) {
                    if (!this._event.connectTrigger && this.messageCenter.dispatch(s.EVENT.TOOLTIP_IN_GRID, this._event, null, this.myChart), null == this.component.xAxis || null == this.component.yAxis || null == e || null == t)return clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), void(this._hidingTicket = setTimeout(this._hide, this._hideDelay));
                    var a, i, o, r, l = this.option.series, h = [], c = [], p = "";
                    if ("axis" === this.option.tooltip.trigger) {
                        if (!this.option.tooltip.show)return;
                        i = this.option.tooltip.formatter, o = this.option.tooltip.position
                    }
                    var m, u, V = -1 != e && this.component.xAxis.getAxis(e).type === s.COMPONENT_TYPE_AXIS_CATEGORY ? "xAxis" : -1 != t && this.component.yAxis.getAxis(t).type === s.COMPONENT_TYPE_AXIS_CATEGORY ? "yAxis" : !1;
                    if (V) {
                        var U = "xAxis" == V ? e : t;
                        a = this.component[V].getAxis(U);
                        for (var f = 0, _ = l.length; _ > f; f++)this._isSelected(l[f].name) && l[f][V + "Index"] === U && "axis" === this.deepQuery([l[f], this.option], "tooltip.trigger") && (r = this.query(l[f], "tooltip.showContent") || r, i = this.query(l[f], "tooltip.formatter") || i, o = this.query(l[f], "tooltip.position") || o, p += this._style(this.query(l[f], "tooltip")), null != l[f].stack && "xAxis" == V ? (h.unshift(l[f]), c.unshift(f)) : (h.push(l[f]), c.push(f)));
                        this.messageCenter.dispatch(s.EVENT.TOOLTIP_HOVER, this._event, {
                            seriesIndex: c,
                            dataIndex: n
                        }, this.myChart);
                        var g;
                        "xAxis" == V ? (m = this.subPixelOptimize(a.getCoordByIndex(n), this._axisLineWidth), u = d.getY(this._event), g = [m, this.component.grid.getY(), m, this.component.grid.getYend()]) : (m = d.getX(this._event), u = this.subPixelOptimize(a.getCoordByIndex(n), this._axisLineWidth), g = [this.component.grid.getX(), u, this.component.grid.getXend(), u]), this._styleAxisPointer(h, g[0], g[1], g[2], g[3], a.getGap(), m, u)
                    } else m = d.getX(this._event), u = d.getY(this._event), this._styleAxisPointer(l, this.component.grid.getX(), u, this.component.grid.getXend(), u, 0, m, u), n >= 0 ? this._showItemTrigger(!0) : (clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this._tDom.style.display = "none");
                    if (h.length > 0) {
                        if (this._lastItemTriggerId = -1, this._lastDataIndex != n || this._lastSeriesIndex != c[0]) {
                            this._lastDataIndex = n, this._lastSeriesIndex = c[0];
                            var y, b;
                            if ("function" == typeof i) {
                                for (var k = [], f = 0, _ = h.length; _ > f; f++)y = h[f].data[n], b = this.getDataFromOption(y, "-"), k.push({
                                    seriesIndex: c[f],
                                    seriesName: h[f].name || "",
                                    series: h[f],
                                    dataIndex: n,
                                    data: y,
                                    name: a.getNameByIndex(n),
                                    value: b,
                                    0: h[f].name || "",
                                    1: a.getNameByIndex(n),
                                    2: b,
                                    3: y
                                });
                                this._curTicket = "axis:" + n, this._tDom.innerHTML = i.call(this.myChart, k, this._curTicket, this._setContent)
                            } else if ("string" == typeof i) {
                                this._curTicket = 0 / 0, i = i.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}");
                                for (var f = 0, _ = h.length; _ > f; f++)i = i.replace("{a" + f + "}", this._encodeHTML(h[f].name || "")), i = i.replace("{b" + f + "}", this._encodeHTML(a.getNameByIndex(n))), y = h[f].data[n], y = this.getDataFromOption(y, "-"), i = i.replace("{c" + f + "}", y instanceof Array ? y : this.numAddCommas(y));
                                this._tDom.innerHTML = i
                            } else {
                                this._curTicket = 0 / 0, i = this._encodeHTML(a.getNameByIndex(n));
                                for (var f = 0, _ = h.length; _ > f; f++)i += "<br/>" + this._encodeHTML(h[f].name || "") + " : ", y = h[f].data[n], y = this.getDataFromOption(y, "-"), i += y instanceof Array ? y : this.numAddCommas(y);
                                this._tDom.innerHTML = i
                            }
                        }
                        if (r === !1 || !this.option.tooltip.showContent)return;
                        this.hasAppend || (this._tDom.style.left = this._zrWidth / 2 + "px", this._tDom.style.top = this._zrHeight / 2 + "px", this.dom.firstChild.appendChild(this._tDom), this.hasAppend = !0), this._show(o, m + 10, u + 10, p)
                    }
                },
                _showPolarTrigger: function (e, t) {
                    if (null == this.component.polar || null == e || null == t || 0 > t)return !1;
                    var n, a, i, o = this.option.series, r = [], s = [], l = "";
                    if ("axis" === this.option.tooltip.trigger) {
                        if (!this.option.tooltip.show)return !1;
                        n = this.option.tooltip.formatter, a = this.option.tooltip.position
                    }
                    for (var h = this.option.polar[e].indicator[t].text, c = 0, p = o.length; p > c; c++)this._isSelected(o[c].name) && o[c].polarIndex === e && "axis" === this.deepQuery([o[c], this.option], "tooltip.trigger") && (i = this.query(o[c], "tooltip.showContent") || i, n = this.query(o[c], "tooltip.formatter") || n, a = this.query(o[c], "tooltip.position") || a, l += this._style(this.query(o[c], "tooltip")), r.push(o[c]), s.push(c));
                    if (r.length > 0) {
                        for (var m, u, V, U = [], c = 0, p = r.length; p > c; c++) {
                            m = r[c].data;
                            for (var f = 0, _ = m.length; _ > f; f++)u = m[f], this._isSelected(u.name) && (u = null != u ? u : {
                                name: "",
                                value: {dataIndex: "-"}
                            }, V = this.getDataFromOption(u.value[t]), U.push({
                                seriesIndex: s[c],
                                seriesName: r[c].name || "",
                                series: r[c],
                                dataIndex: t,
                                data: u,
                                name: u.name,
                                indicator: h,
                                value: V,
                                0: r[c].name || "",
                                1: u.name,
                                2: V,
                                3: h
                            }))
                        }
                        if (U.length <= 0)return;
                        if (this._lastItemTriggerId = -1, this._lastDataIndex != t || this._lastSeriesIndex != s[0])if (this._lastDataIndex = t, this._lastSeriesIndex = s[0], "function" == typeof n)this._curTicket = "axis:" + t, this._tDom.innerHTML = n.call(this.myChart, U, this._curTicket, this._setContent); else if ("string" == typeof n) {
                            n = n.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{d}", "{d0}");
                            for (var c = 0, p = U.length; p > c; c++)n = n.replace("{a" + c + "}", this._encodeHTML(U[c].seriesName)), n = n.replace("{b" + c + "}", this._encodeHTML(U[c].name)), n = n.replace("{c" + c + "}", this.numAddCommas(U[c].value)), n = n.replace("{d" + c + "}", this._encodeHTML(U[c].indicator));
                            this._tDom.innerHTML = n
                        } else {
                            n = this._encodeHTML(U[0].name) + "<br/>" + this._encodeHTML(U[0].indicator) + " : " + this.numAddCommas(U[0].value);
                            for (var c = 1, p = U.length; p > c; c++)n += "<br/>" + this._encodeHTML(U[c].name) + "<br/>", n += this._encodeHTML(U[c].indicator) + " : " + this.numAddCommas(U[c].value);
                            this._tDom.innerHTML = n
                        }
                        if (i === !1 || !this.option.tooltip.showContent)return;
                        return this.hasAppend || (this._tDom.style.left = this._zrWidth / 2 + "px", this._tDom.style.top = this._zrHeight / 2 + "px", this.dom.firstChild.appendChild(this._tDom), this.hasAppend = !0), this._show(a, d.getX(this._event), d.getY(this._event), l), !0
                    }
                },
                _showItemTrigger: function (e) {
                    if (this._curTarget) {
                        var t, n, a, i = l.get(this._curTarget, "series"), o = l.get(this._curTarget, "seriesIndex"), r = l.get(this._curTarget, "data"), h = l.get(this._curTarget, "dataIndex"), c = l.get(this._curTarget, "name"), p = l.get(this._curTarget, "value"), m = l.get(this._curTarget, "special"), u = l.get(this._curTarget, "special2"), V = [r, i, this.option], U = "";
                        if ("island" != this._curTarget._type) {
                            var f = e ? "axis" : "item";
                            this.option.tooltip.trigger === f && (t = this.option.tooltip.formatter, n = this.option.tooltip.position), this.query(i, "tooltip.trigger") === f && (a = this.query(i, "tooltip.showContent") || a, t = this.query(i, "tooltip.formatter") || t, n = this.query(i, "tooltip.position") || n, U += this._style(this.query(i, "tooltip"))), a = this.query(r, "tooltip.showContent") || a, t = this.query(r, "tooltip.formatter") || t, n = this.query(r, "tooltip.position") || n, U += this._style(this.query(r, "tooltip"))
                        } else this._lastItemTriggerId = 0 / 0, a = this.deepQuery(V, "tooltip.showContent"), t = this.deepQuery(V, "tooltip.islandFormatter"), n = this.deepQuery(V, "tooltip.islandPosition");
                        this._lastDataIndex = -1, this._lastSeriesIndex = -1, this._lastItemTriggerId !== this._curTarget.id && (this._lastItemTriggerId = this._curTarget.id, "function" == typeof t ? (this._curTicket = (i.name || "") + ":" + h, this._tDom.innerHTML = t.call(this.myChart, {
                            seriesIndex: o,
                            seriesName: i.name || "",
                            series: i,
                            dataIndex: h,
                            data: r,
                            name: c,
                            value: p,
                            percent: m,
                            indicator: m,
                            value2: u,
                            indicator2: u,
                            0: i.name || "",
                            1: c,
                            2: p,
                            3: m,
                            4: u,
                            5: r,
                            6: o,
                            7: h
                        }, this._curTicket, this._setContent)) : "string" == typeof t ? (this._curTicket = 0 / 0, t = t.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}"), t = t.replace("{a0}", this._encodeHTML(i.name || "")).replace("{b0}", this._encodeHTML(c)).replace("{c0}", p instanceof Array ? p : this.numAddCommas(p)), t = t.replace("{d}", "{d0}").replace("{d0}", m || ""), t = t.replace("{e}", "{e0}").replace("{e0}", l.get(this._curTarget, "special2") || ""), this._tDom.innerHTML = t) : (this._curTicket = 0 / 0, this._tDom.innerHTML = i.type === s.CHART_TYPE_RADAR && m ? this._itemFormatter.radar.call(this, i, c, p, m) : i.type === s.CHART_TYPE_EVENTRIVER ? this._itemFormatter.eventRiver.call(this, i, c, p, r) : "" + (null != i.name ? this._encodeHTML(i.name) + "<br/>" : "") + ("" === c ? "" : this._encodeHTML(c) + " : ") + (p instanceof Array ? p : this.numAddCommas(p))));
                        var _ = d.getX(this._event), g = d.getY(this._event);
                        this.deepQuery(V, "tooltip.axisPointer.show") && this.component.grid ? this._styleAxisPointer([i], this.component.grid.getX(), g, this.component.grid.getXend(), g, 0, _, g) : this._hide(), a !== !1 && this.option.tooltip.showContent && (this.hasAppend || (this._tDom.style.left = this._zrWidth / 2 + "px", this._tDom.style.top = this._zrHeight / 2 + "px", this.dom.firstChild.appendChild(this._tDom), this.hasAppend = !0), this._show(n, _ + 20, g - 20, U))
                    }
                },
                _itemFormatter: {
                    radar: function (e, t, n, a) {
                        var i = "";
                        i += this._encodeHTML("" === t ? e.name || "" : t), i += "" === i ? "" : "<br />";
                        for (var o = 0; o < a.length; o++)i += this._encodeHTML(a[o].text) + " : " + this.numAddCommas(n[o]) + "<br />";
                        return i
                    }, chord: function (e, t, n, a, i) {
                        if (null == i)return this._encodeHTML(t) + " (" + this.numAddCommas(n) + ")";
                        var o = this._encodeHTML(t), r = this._encodeHTML(a);
                        return "" + (null != e.name ? this._encodeHTML(e.name) + "<br/>" : "") + o + " -> " + r + " (" + this.numAddCommas(n) + ")<br />" + r + " -> " + o + " (" + this.numAddCommas(i) + ")"
                    }, eventRiver: function (e, t, n, a) {
                        var i = "";
                        i += this._encodeHTML("" === e.name ? "" : e.name + " : "), i += this._encodeHTML(t), i += "" === i ? "" : "<br />", a = a.evolution;
                        for (var o = 0, r = a.length; r > o; o++)i += '<div style="padding-top:5px;">', a[o].detail && (a[o].detail.img && (i += '<img src="' + a[o].detail.img + '" style="float:left;width:40px;height:40px;">'), i += '<div style="margin-left:45px;">' + a[o].time + "<br/>", i += '<a href="' + a[o].detail.link + '" target="_blank">', i += a[o].detail.text + "</a></div>", i += "</div>");
                        return i
                    }
                },
                _styleAxisPointer: function (e, t, n, a, i, o, r, s) {
                    if (e.length > 0) {
                        var l, h, d = this.option.tooltip.axisPointer, c = d.type, p = {
                            line: {},
                            cross: {},
                            shadow: {}
                        };
                        for (var m in p)p[m].color = d[m + "Style"].color, p[m].width = d[m + "Style"].width, p[m].type = d[m + "Style"].type;
                        for (var u = 0, V = e.length; V > u; u++)l = e[u], h = this.query(l, "tooltip.axisPointer.type"), c = h || c, h && (p[h].color = this.query(l, "tooltip.axisPointer." + h + "Style.color") || p[h].color, p[h].width = this.query(l, "tooltip.axisPointer." + h + "Style.width") || p[h].width, p[h].type = this.query(l, "tooltip.axisPointer." + h + "Style.type") || p[h].type);
                        if ("line" === c) {
                            var U = p.line.width, f = t == a;
                            this._axisLineShape.style = {
                                xStart: f ? this.subPixelOptimize(t, U) : t,
                                yStart: f ? n : this.subPixelOptimize(n, U),
                                xEnd: f ? this.subPixelOptimize(a, U) : a,
                                yEnd: f ? i : this.subPixelOptimize(i, U),
                                strokeColor: p.line.color,
                                lineWidth: U,
                                lineType: p.line.type
                            }, this._axisLineShape.invisible = !1, this.zr.modShape(this._axisLineShape.id)
                        } else if ("cross" === c) {
                            var _ = p.cross.width;
                            this._axisCrossShape.style = {
                                brushType: "stroke",
                                rect: this.component.grid.getArea(),
                                x: this.subPixelOptimize(r, _),
                                y: this.subPixelOptimize(s, _),
                                text: ("( " + this.component.xAxis.getAxis(0).getValueFromCoord(r) + " , " + this.component.yAxis.getAxis(0).getValueFromCoord(s) + " )").replace("  , ", " ").replace(" ,  ", " "),
                                textPosition: "specific",
                                strokeColor: p.cross.color,
                                lineWidth: _,
                                lineType: p.cross.type
                            }, this.component.grid.getXend() - r > 100 ? (this._axisCrossShape.style.textAlign = "left", this._axisCrossShape.style.textX = r + 10) : (this._axisCrossShape.style.textAlign = "right", this._axisCrossShape.style.textX = r - 10), s - this.component.grid.getY() > 50 ? (this._axisCrossShape.style.textBaseline = "bottom", this._axisCrossShape.style.textY = s - 10) : (this._axisCrossShape.style.textBaseline = "top", this._axisCrossShape.style.textY = s + 10), this._axisCrossShape.invisible = !1, this.zr.modShape(this._axisCrossShape.id)
                        } else"shadow" === c && ((null == p.shadow.width || "auto" === p.shadow.width || isNaN(p.shadow.width)) && (p.shadow.width = o), t === a ? Math.abs(this.component.grid.getX() - t) < 2 ? (p.shadow.width /= 2, t = a += p.shadow.width / 2) : Math.abs(this.component.grid.getXend() - t) < 2 && (p.shadow.width /= 2, t = a -= p.shadow.width / 2) : n === i && (Math.abs(this.component.grid.getY() - n) < 2 ? (p.shadow.width /= 2, n = i += p.shadow.width / 2) : Math.abs(this.component.grid.getYend() - n) < 2 && (p.shadow.width /= 2, n = i -= p.shadow.width / 2)), this._axisShadowShape.style = {
                            xStart: t,
                            yStart: n,
                            xEnd: a,
                            yEnd: i,
                            strokeColor: p.shadow.color,
                            lineWidth: p.shadow.width
                        }, this._axisShadowShape.invisible = !1, this.zr.modShape(this._axisShadowShape.id));
                        this.zr.refreshNextFrame()
                    }
                },
                __onmousemove: function (e) {
                    if (clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), !this._mousein || !this._enterable) {
                        var t = e.target, n = d.getX(e.event), a = d.getY(e.event);
                        if (t) {
                            this._curTarget = t, this._event = e.event, this._event.zrenderX = n, this._event.zrenderY = a;
                            var i;
                            if (this._needAxisTrigger && this.component.polar && -1 != (i = this.component.polar.isInside([n, a])))for (var o = this.option.series, l = 0, h = o.length; h > l; l++)if (o[l].polarIndex === i && "axis" === this.deepQuery([o[l], this.option], "tooltip.trigger")) {
                                this._curTarget = null;
                                break
                            }
                            this._showingTicket = setTimeout(this._tryShow, this._showDelay)
                        } else this._curTarget = !1, this._event = e.event, this._event.zrenderX = n, this._event.zrenderY = a, this._needAxisTrigger && this.component.grid && c.isInside(r, this.component.grid.getArea(), n, a) ? this._showingTicket = setTimeout(this._tryShow, this._showDelay) : this._needAxisTrigger && this.component.polar && -1 != this.component.polar.isInside([n, a]) ? this._showingTicket = setTimeout(this._tryShow, this._showDelay) : (!this._event.connectTrigger && this.messageCenter.dispatch(s.EVENT.TOOLTIP_OUT_GRID, this._event, null, this.myChart), this._hidingTicket = setTimeout(this._hide, this._hideDelay))
                    }
                },
                __onglobalout: function () {
                    clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this._hidingTicket = setTimeout(this._hide, this._hideDelay)
                },
                __setContent: function (e, t) {
                    this._tDom && (e === this._curTicket && (this._tDom.innerHTML = t), setTimeout(this._refixed, 20))
                },
                ontooltipHover: function (e, t) {
                    if (!this._lastTipShape || this._lastTipShape && this._lastTipShape.dataIndex != e.dataIndex) {
                        this._lastTipShape && this._lastTipShape.tipShape.length > 0 && (this.zr.delShape(this._lastTipShape.tipShape), this.shapeList.length = 2);
                        for (var n = 0, a = t.length; a > n; n++)t[n].zlevel = this.getZlevelBase(), t[n].z = this.getZBase(), t[n].style = u.prototype.getHighlightStyle(t[n].style, t[n].highlightStyle), t[n].draggable = !1, t[n].hoverable = !1, t[n].clickable = !1, t[n].ondragend = null, t[n].ondragover = null, t[n].ondrop = null, this.shapeList.push(t[n]), this.zr.addShape(t[n]);
                        this._lastTipShape = {dataIndex: e.dataIndex, tipShape: t}
                    }
                },
                ondragend: function () {
                    this._hide()
                },
                onlegendSelected: function (e) {
                    this._selectedMap = e.selected
                },
                _setSelectedMap: function () {
                    this._selectedMap = this.component.legend ? m.clone(this.component.legend.getSelectedMap()) : {}
                },
                _isSelected: function (e) {
                    return null != this._selectedMap[e] ? this._selectedMap[e] : !0
                },
                showTip: function (e) {
                    if (e) {
                        var t, n = this.option.series;
                        if (null != e.seriesIndex)t = e.seriesIndex; else for (var a = e.seriesName, i = 0, o = n.length; o > i; i++)if (n[i].name === a) {
                            t = i;
                            break
                        }
                        var r = n[t];
                        if (null != r) {
                            var d = this.myChart.chart[r.type], c = "axis" === this.deepQuery([r, this.option], "tooltip.trigger");
                            if (d)if (c) {
                                var p = e.dataIndex;
                                switch (d.type) {
                                    case s.CHART_TYPE_LINE:
                                    case s.CHART_TYPE_BAR:
                                    case s.CHART_TYPE_K:
                                    case s.CHART_TYPE_RADAR:
                                        if (null == this.component.polar || r.data[0].value.length <= p)return;
                                        var m = r.polarIndex || 0, u = this.component.polar.getVector(m, p, "max");
                                        this._event = {zrenderX: u[0], zrenderY: u[1]}, this._showPolarTrigger(m, p)
                                }
                            } else {
                                var V, U, f = d.shapeList;
                                switch (d.type) {
                                    case s.CHART_TYPE_LINE:
                                    case s.CHART_TYPE_BAR:
                                    case s.CHART_TYPE_K:
                                    case s.CHART_TYPE_TREEMAP:
                                    case s.CHART_TYPE_SCATTER:
                                        for (var p = e.dataIndex, i = 0, o = f.length; o > i; i++)if (null == f[i]._mark && l.get(f[i], "seriesIndex") == t && l.get(f[i], "dataIndex") == p) {
                                            this._curTarget = f[i], V = f[i].style.x, U = d.type != s.CHART_TYPE_K ? f[i].style.y : f[i].style.y[0];
                                            break
                                        }
                                        break;
                                    case s.CHART_TYPE_RADAR:
                                        for (var p = e.dataIndex, i = 0, o = f.length; o > i; i++)if ("polygon" === f[i].type && l.get(f[i], "seriesIndex") == t && l.get(f[i], "dataIndex") == p) {
                                            this._curTarget = f[i];
                                            var u = this.component.polar.getCenter(r.polarIndex || 0);
                                            V = u[0], U = u[1];
                                            break
                                        }
                                        break;
                                    case s.CHART_TYPE_PIE:
                                        for (var _ = e.name, i = 0, o = f.length; o > i; i++)if ("sector" === f[i].type && l.get(f[i], "seriesIndex") == t && l.get(f[i], "name") == _) {
                                            this._curTarget = f[i];
                                            var g = this._curTarget.style, y = (g.startAngle + g.endAngle) / 2 * Math.PI / 180;
                                            V = this._curTarget.style.x + Math.cos(y) * g.r / 1.5, U = this._curTarget.style.y - Math.sin(y) * g.r / 1.5;
                                            break
                                        }
                                        break;
                                    case s.CHART_TYPE_MAP:
                                        for (var _ = e.name, b = r.mapType, i = 0, o = f.length; o > i; i++)if ("text" === f[i].type && f[i]._mapType === b && f[i].style._name === _) {
                                            this._curTarget = f[i], V = this._curTarget.style.x + this._curTarget.position[0], U = this._curTarget.style.y + this._curTarget.position[1];
                                            break
                                        }
                                        break;
                                    case s.CHART_TYPE_CHORD:
                                        for (var _ = e.name, i = 0, o = f.length; o > i; i++)if ("sector" === f[i].type && l.get(f[i], "name") == _) {
                                            this._curTarget = f[i];
                                            var g = this._curTarget.style, y = (g.startAngle + g.endAngle) / 2 * Math.PI / 180;
                                            return V = this._curTarget.style.x + Math.cos(y) * (g.r - 2), U = this._curTarget.style.y - Math.sin(y) * (g.r - 2), void this.zr.trigger(h.EVENT.MOUSEMOVE, {
                                                zrenderX: V,
                                                zrenderY: U
                                            })
                                        }
                                        break;
                                    case s.CHART_TYPE_FORCE:
                                        for (var _ = e.name, i = 0, o = f.length; o > i; i++)if ("circle" === f[i].type && l.get(f[i], "name") == _) {
                                            this._curTarget = f[i], V = this._curTarget.position[0], U = this._curTarget.position[1];
                                            break
                                        }
                                }
                                null != V && null != U && (this._event = {
                                    zrenderX: V,
                                    zrenderY: U
                                }, this.zr.addHoverShape(this._curTarget), this.zr.refreshHover(), this._showItemTrigger())
                            }
                        }
                    }
                },
                hideTip: function () {
                    this._hide()
                },
                refresh: function (e) {
                    if (this._zrHeight = this.zr.getHeight(), this._zrWidth = this.zr.getWidth(), this._lastTipShape && this._lastTipShape.tipShape.length > 0 && this.zr.delShape(this._lastTipShape.tipShape), this._lastTipShape = !1, this.shapeList.length = 2, this._lastDataIndex = -1, this._lastSeriesIndex = -1, this._lastItemTriggerId = -1, e) {
                        this.option = e, this.option.tooltip = this.reformOption(this.option.tooltip), this.option.tooltip.textStyle = m.merge(this.option.tooltip.textStyle, this.ecTheme.textStyle), this._needAxisTrigger = !1, "axis" === this.option.tooltip.trigger && (this._needAxisTrigger = !0);
                        for (var t = this.option.series, n = 0, a = t.length; a > n; n++)if ("axis" === this.query(t[n], "tooltip.trigger")) {
                            this._needAxisTrigger = !0;
                            break
                        }
                        this._showDelay = this.option.tooltip.showDelay, this._hideDelay = this.option.tooltip.hideDelay, this._defaultCssText = this._style(this.option.tooltip), this._setSelectedMap(), this._axisLineWidth = this.option.tooltip.axisPointer.lineStyle.width, this._enterable = this.option.tooltip.enterable, !this._enterable && this._tDom.className.indexOf(h.elementClassName) < 0 && (this._tDom.className += " " + h.elementClassName)
                    }
                    if (this.showing) {
                        var i = this;
                        setTimeout(function () {
                            i.zr.trigger(h.EVENT.MOUSEMOVE, i.zr.handler._event)
                        }, 50)
                    }
                },
                onbeforDispose: function () {
                    this._lastTipShape && this._lastTipShape.tipShape.length > 0 && this.zr.delShape(this._lastTipShape.tipShape), clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this.zr.un(h.EVENT.MOUSEMOVE, this._onmousemove), this.zr.un(h.EVENT.GLOBALOUT, this._onglobalout), this.hasAppend && this.dom.firstChild && this.dom.firstChild.removeChild(this._tDom), this._tDom = null
                },
                _encodeHTML: function (e) {
                    return String(e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
                }
            }, m.inherits(t, n), e("../component").define("tooltip", t), t
        }), n("echarts/component/legend", ["require", "./base", "zrender/shape/Text", "zrender/shape/Rectangle", "zrender/shape/Sector", "../util/shape/Icon", "../util/shape/Candle", "../config", "zrender/tool/util", "zrender/tool/area", "../component"], function (e) {
            function t(e, t, a, i, o) {
                if (!this.query(i, "legend.data"))return void console.error("option.legend.data has not been defined.");
                n.call(this, e, t, a, i, o);
                var r = this;
                r._legendSelected = function (e) {
                    r.__legendSelected(e)
                }, r._dispatchHoverLink = function (e) {
                    return r.__dispatchHoverLink(e)
                }, this._colorIndex = 0, this._colorMap = {}, this._selectedMap = {}, this._hasDataMap = {}, this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Rectangle"), o = e("zrender/shape/Sector"), r = e("../util/shape/Icon"), s = e("../util/shape/Candle"), l = e("../config");
            l.legend = {
                zlevel: 0,
                z: 4,
                show: !0,
                orient: "horizontal",
                x: "center",
                y: "top",
                backgroundColor: "rgba(0,0,0,0)",
                borderColor: "#ccc",
                borderWidth: 0,
                padding: 5,
                itemGap: 10,
                itemWidth: 20,
                itemHeight: 14,
                textStyle: {color: "#333"},
                selectedMode: !0
            };
            var h = e("zrender/tool/util"), d = e("zrender/tool/area");
            t.prototype = {
                type: l.COMPONENT_TYPE_LEGEND, _buildShape: function () {
                    if (this.legendOption.show) {
                        this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
                        for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e])
                    }
                }, _buildItem: function () {
                    var e, t, n, i, o, s, l, c, p = this.legendOption.data, m = p.length, u = this.legendOption.textStyle, V = this.zr.getWidth(), U = this.zr.getHeight(), f = this._itemGroupLocation.x, _ = this._itemGroupLocation.y, g = this.legendOption.itemWidth, y = this.legendOption.itemHeight, b = this.legendOption.itemGap;
                    "vertical" === this.legendOption.orient && "right" === this.legendOption.x && (f = this._itemGroupLocation.x + this._itemGroupLocation.width - g);
                    for (var k = 0; m > k; k++)o = h.merge(p[k].textStyle || {}, u), s = this.getFont(o), e = this._getName(p[k]), l = this._getFormatterName(e), "" !== e ? (t = p[k].icon || this._getSomethingByName(e).type, c = this.getColor(e), "horizontal" === this.legendOption.orient ? 200 > V - f && g + 5 + d.getTextWidth(l, s) + (k === m - 1 || "" === p[k + 1] ? 0 : b) >= V - f && (f = this._itemGroupLocation.x, _ += y + b) : 200 > U - _ && y + (k === m - 1 || "" === p[k + 1] ? 0 : b) >= U - _ && ("right" === this.legendOption.x ? f -= this._itemGroupLocation.maxWidth + b : f += this._itemGroupLocation.maxWidth + b, _ = this._itemGroupLocation.y), n = this._getItemShapeByType(f, _, g, y, this._selectedMap[e] && this._hasDataMap[e] ? c : "#ccc", t, c), n._name = e, n = new r(n), i = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            x: f + g + 5,
                            y: _ + y / 2,
                            color: this._selectedMap[e] ? "auto" === o.color ? c : o.color : "#ccc",
                            text: l,
                            textFont: s,
                            textBaseline: "middle"
                        },
                        highlightStyle: {color: c, brushType: "fill"},
                        hoverable: !!this.legendOption.selectedMode,
                        clickable: !!this.legendOption.selectedMode
                    }, "vertical" === this.legendOption.orient && "right" === this.legendOption.x && (i.style.x -= g + 10, i.style.textAlign = "right"), i._name = e, i = new a(i), this.legendOption.selectedMode && (n.onclick = i.onclick = this._legendSelected, n.onmouseover = i.onmouseover = this._dispatchHoverLink, n.hoverConnect = i.id, i.hoverConnect = n.id), this.shapeList.push(n), this.shapeList.push(i), "horizontal" === this.legendOption.orient ? f += g + 5 + d.getTextWidth(l, s) + b : _ += y + b) : "horizontal" === this.legendOption.orient ? (f = this._itemGroupLocation.x, _ += y + b) : ("right" === this.legendOption.x ? f -= this._itemGroupLocation.maxWidth + b : f += this._itemGroupLocation.maxWidth + b, _ = this._itemGroupLocation.y);
                    "horizontal" === this.legendOption.orient && "center" === this.legendOption.x && _ != this._itemGroupLocation.y && this._mLineOptimize()
                }, _getName: function (e) {
                    return "undefined" != typeof e.name ? e.name : e
                }, _getFormatterName: function (e) {
                    var t, n = this.legendOption.formatter;
                    return t = "function" == typeof n ? n.call(this.myChart, e) : "string" == typeof n ? n.replace("{name}", e) : e
                }, _getFormatterNameFromData: function (e) {
                    var t = this._getName(e);
                    return this._getFormatterName(t)
                }, _mLineOptimize: function () {
                    for (var e = [], t = this._itemGroupLocation.x, n = 2, a = this.shapeList.length; a > n; n++)this.shapeList[n].style.x === t ? e.push((this._itemGroupLocation.width - (this.shapeList[n - 1].style.x + d.getTextWidth(this.shapeList[n - 1].style.text, this.shapeList[n - 1].style.textFont) - t)) / 2) : n === a - 1 && e.push((this._itemGroupLocation.width - (this.shapeList[n].style.x + d.getTextWidth(this.shapeList[n].style.text, this.shapeList[n].style.textFont) - t)) / 2);
                    for (var i = -1, n = 1, a = this.shapeList.length; a > n; n++)this.shapeList[n].style.x === t && i++, 0 !== e[i] && (this.shapeList[n].style.x += e[i])
                }, _buildBackground: function () {
                    var e = this.reformCssArray(this.legendOption.padding);
                    this.shapeList.push(new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._itemGroupLocation.x - e[3],
                            y: this._itemGroupLocation.y - e[0],
                            width: this._itemGroupLocation.width + e[3] + e[1],
                            height: this._itemGroupLocation.height + e[0] + e[2],
                            brushType: 0 === this.legendOption.borderWidth ? "fill" : "both",
                            color: this.legendOption.backgroundColor,
                            strokeColor: this.legendOption.borderColor,
                            lineWidth: this.legendOption.borderWidth
                        }
                    }))
                }, _getItemGroupLocation: function () {
                    var e = this.legendOption.data, t = e.length, n = this.legendOption.itemGap, a = this.legendOption.itemWidth + 5, i = this.legendOption.itemHeight, o = this.legendOption.textStyle, r = this.getFont(o), s = 0, l = 0, c = this.reformCssArray(this.legendOption.padding), p = this.zr.getWidth() - c[1] - c[3], m = this.zr.getHeight() - c[0] - c[2], u = 0, V = 0;
                    if ("horizontal" === this.legendOption.orient) {
                        l = i;
                        for (var U = 0; t > U; U++)if ("" !== this._getName(e[U])) {
                            var f = d.getTextWidth(this._getFormatterNameFromData(e[U]), e[U].textStyle ? this.getFont(h.merge(e[U].textStyle || {}, o)) : r);
                            u + a + f + n > p ? (u -= n, s = Math.max(s, u), l += i + n, u = 0) : (u += a + f + n, s = Math.max(s, u - n))
                        } else u -= n, s = Math.max(s, u), l += i + n, u = 0
                    } else {
                        for (var U = 0; t > U; U++)V = Math.max(V, d.getTextWidth(this._getFormatterNameFromData(e[U]), e[U].textStyle ? this.getFont(h.merge(e[U].textStyle || {}, o)) : r));
                        V += a, s = V;
                        for (var U = 0; t > U; U++)"" !== this._getName(e[U]) ? u + i + n > m ? (s += V + n, u -= n, l = Math.max(l, u), u = 0) : (u += i + n, l = Math.max(l, u - n)) : (s += V + n, u -= n, l = Math.max(l, u), u = 0)
                    }
                    p = this.zr.getWidth(), m = this.zr.getHeight();
                    var _;
                    switch (this.legendOption.x) {
                        case"center":
                            _ = Math.floor((p - s) / 2);
                            break;
                        case"left":
                            _ = c[3] + this.legendOption.borderWidth;
                            break;
                        case"right":
                            _ = p - s - c[1] - c[3] - 2 * this.legendOption.borderWidth;
                            break;
                        default:
                            _ = this.parsePercent(this.legendOption.x, p)
                    }
                    var g;
                    switch (this.legendOption.y) {
                        case"top":
                            g = c[0] + this.legendOption.borderWidth;
                            break;
                        case"bottom":
                            g = m - l - c[0] - c[2] - 2 * this.legendOption.borderWidth;
                            break;
                        case"center":
                            g = Math.floor((m - l) / 2);
                            break;
                        default:
                            g = this.parsePercent(this.legendOption.y, m)
                    }
                    return {x: _, y: g, width: s, height: l, maxWidth: V}
                }, _getSomethingByName: function (e) {
                    for (var t, n = this.option.series, a = 0, i = n.length; i > a; a++) {
                        if (n[a].name === e)return {
                            type: n[a].type,
                            series: n[a],
                            seriesIndex: a,
                            data: null,
                            dataIndex: -1
                        };
                        if (n[a].type === l.CHART_TYPE_PIE || n[a].type === l.CHART_TYPE_RADAR || n[a].type === l.CHART_TYPE_CHORD || n[a].type === l.CHART_TYPE_FORCE || n[a].type === l.CHART_TYPE_FUNNEL || n[a].type === l.CHART_TYPE_TREEMAP) {
                            t = n[a].categories || n[a].data || n[a].nodes;
                            for (var o = 0, r = t.length; r > o; o++)if (t[o].name === e)return {
                                type: n[a].type,
                                series: n[a],
                                seriesIndex: a,
                                data: t[o],
                                dataIndex: o
                            }
                        }
                    }
                    return {type: "bar", series: null, seriesIndex: -1, data: null, dataIndex: -1}
                }, _getItemShapeByType: function (e, t, n, a, i, o, r) {
                    var s, h = "#ccc" === i ? r : i, d = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            iconType: "legendicon" + o,
                            x: e,
                            y: t,
                            width: n,
                            height: a,
                            color: i,
                            strokeColor: i,
                            lineWidth: 2
                        },
                        highlightStyle: {color: h, strokeColor: h, lineWidth: 1},
                        hoverable: this.legendOption.selectedMode,
                        clickable: this.legendOption.selectedMode
                    };
                    if (o.match("image")) {
                        var s = o.replace(new RegExp("^image:\\/\\/"), "");
                        o = "image"
                    }
                    switch (o) {
                        case"line":
                            d.style.brushType = "stroke", d.highlightStyle.lineWidth = 3;
                            break;
                        case"radar":
                        case"venn":
                        case"tree":
                        case"treemap":
                        case"scatter":
                            d.highlightStyle.lineWidth = 3;
                            break;
                        case"k":
                            d.style.brushType = "both", d.highlightStyle.lineWidth = 3, d.highlightStyle.color = d.style.color = this.deepQuery([this.ecTheme, l], "k.itemStyle.normal.color") || "#fff", d.style.strokeColor = "#ccc" != i ? this.deepQuery([this.ecTheme, l], "k.itemStyle.normal.lineStyle.color") || "#ff3200" : i;
                            break;
                        case"image":
                            d.style.iconType = "image", d.style.image = s, "#ccc" === i && (d.style.opacity = .5)
                    }
                    return d
                }, __legendSelected: function (e) {
                    var t = e.target._name;
                    if ("single" === this.legendOption.selectedMode)for (var n in this._selectedMap)this._selectedMap[n] = !1;
                    this._selectedMap[t] = !this._selectedMap[t], this.messageCenter.dispatch(l.EVENT.LEGEND_SELECTED, e.event, {
                        selected: this._selectedMap,
                        target: t
                    }, this.myChart)
                }, __dispatchHoverLink: function (e) {
                    this.messageCenter.dispatch(l.EVENT.LEGEND_HOVERLINK, e.event, {target: e.target._name}, this.myChart)
                }, refresh: function (e) {
                    if (e) {
                        this.option = e || this.option, this.option.legend = this.reformOption(this.option.legend), this.legendOption = this.option.legend;
                        var t, n, a, i, o = this.legendOption.data || [];
                        if (this.legendOption.selected)for (var r in this.legendOption.selected)this._selectedMap[r] = "undefined" != typeof this._selectedMap[r] ? this._selectedMap[r] : this.legendOption.selected[r];
                        for (var s = 0, h = o.length; h > s; s++)t = this._getName(o[s]), "" !== t && (n = this._getSomethingByName(t), n.series ? (this._hasDataMap[t] = !0, i = !n.data || n.type !== l.CHART_TYPE_PIE && n.type !== l.CHART_TYPE_FORCE && n.type !== l.CHART_TYPE_FUNNEL ? [n.series] : [n.data, n.series], a = this.getItemStyleColor(this.deepQuery(i, "itemStyle.normal.color"), n.seriesIndex, n.dataIndex, n.data), a && n.type != l.CHART_TYPE_K && this.setColor(t, a), this._selectedMap[t] = null != this._selectedMap[t] ? this._selectedMap[t] : !0) : this._hasDataMap[t] = !1)
                    }
                    this.clear(), this._buildShape()
                }, getRelatedAmount: function (e) {
                    for (var t, n = 0, a = this.option.series, i = 0, o = a.length; o > i; i++)if (a[i].name === e && n++, a[i].type === l.CHART_TYPE_PIE || a[i].type === l.CHART_TYPE_RADAR || a[i].type === l.CHART_TYPE_CHORD || a[i].type === l.CHART_TYPE_FORCE || a[i].type === l.CHART_TYPE_FUNNEL) {
                        t = a[i].type != l.CHART_TYPE_FORCE ? a[i].data : a[i].categories;
                        for (var r = 0, s = t.length; s > r; r++)t[r].name === e && "-" != t[r].value && n++
                    }
                    return n
                }, setColor: function (e, t) {
                    this._colorMap[e] = t
                }, getColor: function (e) {
                    return this._colorMap[e] || (this._colorMap[e] = this.zr.getColor(this._colorIndex++)), this._colorMap[e]
                }, hasColor: function (e) {
                    return this._colorMap[e] ? this._colorMap[e] : !1
                }, add: function (e, t) {
                    for (var n = this.legendOption.data, a = 0, i = n.length; i > a; a++)if (this._getName(n[a]) === e)return;
                    this.legendOption.data.push(e), this.setColor(e, t), this._selectedMap[e] = !0, this._hasDataMap[e] = !0
                }, del: function (e) {
                    for (var t = this.legendOption.data, n = 0, a = t.length; a > n; n++)if (this._getName(t[n]) === e)return this.legendOption.data.splice(n, 1)
                }, getItemShape: function (e) {
                    if (null != e)for (var t, n = 0, a = this.shapeList.length; a > n; n++)if (t = this.shapeList[n], t._name === e && "text" != t.type)return t
                }, setItemShape: function (e, t) {
                    for (var n, a = 0, i = this.shapeList.length; i > a; a++)n = this.shapeList[a], n._name === e && "text" != n.type && (this._selectedMap[e] || (t.style.color = "#ccc", t.style.strokeColor = "#ccc"), this.zr.modShape(n.id, t))
                }, isSelected: function (e) {
                    return "undefined" != typeof this._selectedMap[e] ? this._selectedMap[e] : !0
                }, getSelectedMap: function () {
                    return this._selectedMap
                }, setSelected: function (e, t) {
                    if ("single" === this.legendOption.selectedMode)for (var n in this._selectedMap)this._selectedMap[n] = !1;
                    this._selectedMap[e] = t, this.messageCenter.dispatch(l.EVENT.LEGEND_SELECTED, null, {
                        selected: this._selectedMap,
                        target: e
                    }, this.myChart)
                }, onlegendSelected: function (e, t) {
                    var n = e.selected;
                    for (var a in n)this._selectedMap[a] != n[a] && (t.needRefresh = !0), this._selectedMap[a] = n[a]
                }
            };
            var c = {
                line: function (e, t) {
                    var n = t.height / 2;
                    e.moveTo(t.x, t.y + n), e.lineTo(t.x + t.width, t.y + n)
                }, pie: function (e, t) {
                    var n = t.x, a = t.y, i = t.width, r = t.height;
                    o.prototype.buildPath(e, {x: n + i / 2, y: a + r + 2, r: r, r0: 6, startAngle: 45, endAngle: 135})
                }, eventRiver: function (e, t) {
                    var n = t.x, a = t.y, i = t.width, o = t.height;
                    e.moveTo(n, a + o), e.bezierCurveTo(n + i, a + o, n, a + 4, n + i, a + 4), e.lineTo(n + i, a), e.bezierCurveTo(n, a, n + i, a + o - 4, n, a + o - 4), e.lineTo(n, a + o)
                }, k: function (e, t) {
                    var n = t.x, a = t.y, i = t.width, o = t.height;
                    s.prototype.buildPath(e, {x: n + i / 2, y: [a + 1, a + 1, a + o - 6, a + o], width: i - 6})
                }, bar: function (e, t) {
                    var n = t.x, a = t.y + 1, i = t.width, o = t.height - 2, r = 3;
                    e.moveTo(n + r, a), e.lineTo(n + i - r, a), e.quadraticCurveTo(n + i, a, n + i, a + r), e.lineTo(n + i, a + o - r), e.quadraticCurveTo(n + i, a + o, n + i - r, a + o), e.lineTo(n + r, a + o), e.quadraticCurveTo(n, a + o, n, a + o - r), e.lineTo(n, a + r), e.quadraticCurveTo(n, a, n + r, a)
                }, force: function (e, t) {
                    r.prototype.iconLibrary.circle(e, t)
                }, radar: function (e, t) {
                    var n = 6, a = t.x + t.width / 2, i = t.y + t.height / 2, o = t.height / 2, r = 2 * Math.PI / n, s = -Math.PI / 2, l = a + o * Math.cos(s), h = i + o * Math.sin(s);
                    e.moveTo(l, h), s += r;
                    for (var d = 0, c = n - 1; c > d; d++)e.lineTo(a + o * Math.cos(s), i + o * Math.sin(s)), s += r;
                    e.lineTo(l, h)
                }
            };
            c.chord = c.pie, c.map = c.bar;
            for (var p in c)r.prototype.iconLibrary["legendicon" + p] = c[p];
            return h.inherits(t, n), e("../component").define("legend", t), t
        }), n("echarts/util/ecData", [], function () {
            function e(e, t, n, a, i, o, r, s) {
                var l;
                return "undefined" != typeof a && (l = null == a.value ? a : a.value), e._echartsData = {
                    _series: t,
                    _seriesIndex: n,
                    _data: a,
                    _dataIndex: i,
                    _name: o,
                    _value: l,
                    _special: r,
                    _special2: s
                }, e._echartsData
            }

            function t(e, t) {
                var n = e._echartsData;
                if (!t)return n;
                switch (t) {
                    case"series":
                    case"seriesIndex":
                    case"data":
                    case"dataIndex":
                    case"name":
                    case"value":
                    case"special":
                    case"special2":
                        return n && n["_" + t]
                }
                return null
            }

            function n(e, t, n) {
                switch (e._echartsData = e._echartsData || {}, t) {
                    case"series":
                    case"seriesIndex":
                    case"data":
                    case"dataIndex":
                    case"name":
                    case"value":
                    case"special":
                    case"special2":
                        e._echartsData["_" + t] = n
                }
            }

            function a(e, t) {
                t._echartsData = {
                    _series: e._echartsData._series,
                    _seriesIndex: e._echartsData._seriesIndex,
                    _data: e._echartsData._data,
                    _dataIndex: e._echartsData._dataIndex,
                    _name: e._echartsData._name,
                    _value: e._echartsData._value,
                    _special: e._echartsData._special,
                    _special2: e._echartsData._special2
                }
            }

            return {pack: e, set: n, get: t, clone: a}
        }), n("echarts/chart", [], function () {
            var e = {}, t = {};
            return e.define = function (n, a) {
                return t[n] = a, e
            }, e.get = function (e) {
                return t[e]
            }, e
        }), n("zrender/tool/color", ["require", "../tool/util"], function (e) {
            function t(e) {
                D = e
            }

            function n() {
                D = N
            }

            function a(e, t) {
                return e = 0 | e, t = t || D, t[e % t.length]
            }

            function i(e) {
                H = e
            }

            function o() {
                B = H
            }

            function r() {
                return H
            }

            function s(e, t, n, a, i, o, r) {
                O || (O = P.getContext());
                for (var s = O.createRadialGradient(e, t, n, a, i, o), l = 0, h = r.length; h > l; l++)s.addColorStop(r[l][0], r[l][1]);
                return s.__nonRecursion = !0, s
            }

            function l(e, t, n, a, i) {
                O || (O = P.getContext());
                for (var o = O.createLinearGradient(e, t, n, a), r = 0, s = i.length; s > r; r++)o.addColorStop(i[r][0], i[r][1]);
                return o.__nonRecursion = !0, o
            }

            function h(e, t, n) {
                e = u(e), t = u(t), e = K(e), t = K(t);
                for (var a = [], i = (t[0] - e[0]) / n, o = (t[1] - e[1]) / n, r = (t[2] - e[2]) / n, s = (t[3] - e[3]) / n, l = 0, h = e[0], d = e[1], p = e[2], m = e[3]; n > l; l++)a[l] = c([E(Math.floor(h), [0, 255]), E(Math.floor(d), [0, 255]), E(Math.floor(p), [0, 255]), m.toFixed(4) - 0], "rgba"), h += i, d += o, p += r, m += s;
                return h = t[0], d = t[1], p = t[2], m = t[3], a[l] = c([h, d, p, m], "rgba"), a
            }

            function d(e, t) {
                var n = [], a = e.length;
                if (void 0 === t && (t = 20), 1 === a)n = h(e[0], e[0], t); else if (a > 1)for (var i = 0, o = a - 1; o > i; i++) {
                    var r = h(e[i], e[i + 1], t);
                    o - 1 > i && r.pop(), n = n.concat(r)
                }
                return n
            }

            function c(e, t) {
                if (t = t || "rgb", e && (3 === e.length || 4 === e.length)) {
                    if (e = C(e, function (e) {
                            return e > 1 ? Math.ceil(e) : e
                        }), t.indexOf("hex") > -1)return "#" + ((1 << 24) + (e[0] << 16) + (e[1] << 8) + +e[2]).toString(16).slice(1);
                    if (t.indexOf("hs") > -1) {
                        var n = C(e.slice(1, 3), function (e) {
                            return e + "%"
                        });
                        e[1] = n[0], e[2] = n[1]
                    }
                    return t.indexOf("a") > -1 ? (3 === e.length && e.push(1), e[3] = E(e[3], [0, 1]), t + "(" + e.slice(0, 4).join(",") + ")") : t + "(" + e.slice(0, 3).join(",") + ")"
                }
            }

            function p(e) {
                e = v(e), e.indexOf("rgba") < 0 && (e = u(e));
                var t = [], n = 0;
                return e.replace(/[\d.]+/g, function (e) {
                    e = 3 > n ? 0 | e : +e, t[n++] = e
                }), t
            }

            function m(e, t) {
                if (!J(e))return e;
                var n = K(e), a = n[3];
                return "undefined" == typeof a && (a = 1), e.indexOf("hsb") > -1 ? n = T(n) : e.indexOf("hsl") > -1 && (n = M(n)), t.indexOf("hsb") > -1 || t.indexOf("hsv") > -1 ? n = F(n) : t.indexOf("hsl") > -1 && (n = z(n)), n[3] = a, c(n, t)
            }

            function u(e) {
                return m(e, "rgba")
            }

            function V(e) {
                return m(e, "rgb")
            }

            function U(e) {
                return m(e, "hex")
            }

            function f(e) {
                return m(e, "hsva")
            }

            function _(e) {
                return m(e, "hsv")
            }

            function g(e) {
                return m(e, "hsba")
            }

            function y(e) {
                return m(e, "hsb")
            }

            function b(e) {
                return m(e, "hsla")
            }

            function k(e) {
                return m(e, "hsl")
            }

            function x(e) {
                for (var t in G)if (U(G[t]) === U(e))return t;
                return null
            }

            function v(e) {
                return String(e).replace(/\s+/g, "")
            }

            function L(e) {
                if (G[e] && (e = G[e]), e = v(e), e = e.replace(/hsv/i, "hsb"), /^#[\da-f]{3}$/i.test(e)) {
                    e = parseInt(e.slice(1), 16);
                    var t = (3840 & e) << 8, n = (240 & e) << 4, a = 15 & e;
                    e = "#" + ((1 << 24) + (t << 4) + t + (n << 4) + n + (a << 4) + a).toString(16).slice(1)
                }
                return e
            }

            function w(e, t) {
                if (!J(e))return e;
                var n = t > 0 ? 1 : -1;
                "undefined" == typeof t && (t = 0), t = Math.abs(t) > 1 ? 1 : Math.abs(t), e = V(e);
                for (var a = K(e), i = 0; 3 > i; i++)a[i] = 1 === n ? a[i] * (1 - t) | 0 : (255 - a[i]) * t + a[i] | 0;
                return "rgb(" + a.join(",") + ")"
            }

            function W(e) {
                if (!J(e))return e;
                var t = K(u(e));
                return t = C(t, function (e) {
                    return 255 - e
                }), c(t, "rgb")
            }

            function X(e, t, n) {
                if (!J(e) || !J(t))return e;
                "undefined" == typeof n && (n = .5), n = 1 - E(n, [0, 1]);
                for (var a = 2 * n - 1, i = K(u(e)), o = K(u(t)), r = i[3] - o[3], s = ((a * r === -1 ? a : (a + r) / (1 + a * r)) + 1) / 2, l = 1 - s, h = [], d = 0; 3 > d; d++)h[d] = i[d] * s + o[d] * l;
                var p = i[3] * n + o[3] * (1 - n);
                return p = Math.max(0, Math.min(1, p)), 1 === i[3] && 1 === o[3] ? c(h, "rgb") : (h[3] = p, c(h, "rgba"))
            }

            function I() {
                return "#" + (Math.random().toString(16) + "0000").slice(2, 8)
            }

            function K(e) {
                e = L(e);
                var t = e.match(R);
                if (null === t)throw new Error("The color format error");
                var n, a, i, o = [];
                if (t[2])n = t[2].replace("#", "").split(""), i = [n[0] + n[1], n[2] + n[3], n[4] + n[5]], o = C(i, function (e) {
                    return E(parseInt(e, 16), [0, 255])
                }); else if (t[4]) {
                    var r = t[4].split(",");
                    a = r[3], i = r.slice(0, 3), o = C(i, function (e) {
                        return e = Math.floor(e.indexOf("%") > 0 ? 2.55 * parseInt(e, 0) : e), E(e, [0, 255])
                    }), "undefined" != typeof a && o.push(E(parseFloat(a), [0, 1]))
                } else if (t[5] || t[6]) {
                    var s = (t[5] || t[6]).split(","), l = parseInt(s[0], 0) / 360, h = s[1], d = s[2];
                    a = s[3], o = C([h, d], function (e) {
                        return E(parseFloat(e) / 100, [0, 1])
                    }), o.unshift(l), "undefined" != typeof a && o.push(E(parseFloat(a), [0, 1]))
                }
                return o
            }

            function S(e, t) {
                if (!J(e))return e;
                null === t && (t = 1);
                var n = K(u(e));
                return n[3] = E(Number(t).toFixed(4), [0, 1]), c(n, "rgba")
            }

            function C(e, t) {
                if ("function" != typeof t)throw new TypeError;
                for (var n = e ? e.length : 0, a = 0; n > a; a++)e[a] = t(e[a]);
                return e
            }

            function E(e, t) {
                return e <= t[0] ? e = t[0] : e >= t[1] && (e = t[1]), e
            }

            function J(e) {
                return e instanceof Array || "string" == typeof e
            }

            function T(e) {
                var t, n, a, i = e[0], o = e[1], r = e[2];
                if (0 === o)t = 255 * r, n = 255 * r, a = 255 * r; else {
                    var s = 6 * i;
                    6 === s && (s = 0);
                    var l = 0 | s, h = r * (1 - o), d = r * (1 - o * (s - l)), c = r * (1 - o * (1 - (s - l))), p = 0, m = 0, u = 0;
                    0 === l ? (p = r, m = c, u = h) : 1 === l ? (p = d, m = r, u = h) : 2 === l ? (p = h, m = r, u = c) : 3 === l ? (p = h, m = d, u = r) : 4 === l ? (p = c, m = h, u = r) : (p = r, m = h, u = d), t = 255 * p, n = 255 * m, a = 255 * u
                }
                return [t, n, a]
            }

            function M(e) {
                var t, n, a, i = e[0], o = e[1], r = e[2];
                if (0 === o)t = 255 * r, n = 255 * r, a = 255 * r; else {
                    var s;
                    s = .5 > r ? r * (1 + o) : r + o - o * r;
                    var l = 2 * r - s;
                    t = 255 * A(l, s, i + 1 / 3), n = 255 * A(l, s, i), a = 255 * A(l, s, i - 1 / 3)
                }
                return [t, n, a]
            }

            function A(e, t, n) {
                return 0 > n && (n += 1), n > 1 && (n -= 1), 1 > 6 * n ? e + 6 * (t - e) * n : 1 > 2 * n ? t : 2 > 3 * n ? e + (t - e) * (2 / 3 - n) * 6 : e
            }

            function F(e) {
                var t, n, a = e[0] / 255, i = e[1] / 255, o = e[2] / 255, r = Math.min(a, i, o), s = Math.max(a, i, o), l = s - r, h = s;
                if (0 === l)t = 0, n = 0; else {
                    n = l / s;
                    var d = ((s - a) / 6 + l / 2) / l, c = ((s - i) / 6 + l / 2) / l, p = ((s - o) / 6 + l / 2) / l;
                    a === s ? t = p - c : i === s ? t = 1 / 3 + d - p : o === s && (t = 2 / 3 + c - d), 0 > t && (t += 1), t > 1 && (t -= 1)
                }
                return t = 360 * t, n = 100 * n, h = 100 * h, [t, n, h]
            }

            function z(e) {
                var t, n, a = e[0] / 255, i = e[1] / 255, o = e[2] / 255, r = Math.min(a, i, o), s = Math.max(a, i, o), l = s - r, h = (s + r) / 2;
                if (0 === l)t = 0, n = 0; else {
                    n = .5 > h ? l / (s + r) : l / (2 - s - r);
                    var d = ((s - a) / 6 + l / 2) / l, c = ((s - i) / 6 + l / 2) / l, p = ((s - o) / 6 + l / 2) / l;
                    a === s ? t = p - c : i === s ? t = 1 / 3 + d - p : o === s && (t = 2 / 3 + c - d), 0 > t && (t += 1), t > 1 && (t -= 1)
                }
                return t = 360 * t, n = 100 * n, h = 100 * h, [t, n, h]
            }

            var O, P = e("../tool/util"), D = ["#ff9277", " #dddd00", " #ffc877", " #bbe3ff", " #d5ffbb", "#bbbbff", " #ddb000", " #b0dd00", " #e2bbff", " #ffbbe3", "#ff7777", " #ff9900", " #83dd00", " #77e3ff", " #778fff", "#c877ff", " #ff77ab", " #ff6600", " #aa8800", " #77c7ff", "#ad77ff", " #ff77ff", " #dd0083", " #777700", " #00aa00", "#0088aa", " #8400dd", " #aa0088", " #dd0000", " #772e00"], N = D, H = "rgba(255,255,0,0.5)", B = H, R = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i, G = {
                aliceblue: "#f0f8ff",
                antiquewhite: "#faebd7",
                aqua: "#0ff",
                aquamarine: "#7fffd4",
                azure: "#f0ffff",
                beige: "#f5f5dc",
                bisque: "#ffe4c4",
                black: "#000",
                blanchedalmond: "#ffebcd",
                blue: "#00f",
                blueviolet: "#8a2be2",
                brown: "#a52a2a",
                burlywood: "#deb887",
                cadetblue: "#5f9ea0",
                chartreuse: "#7fff00",
                chocolate: "#d2691e",
                coral: "#ff7f50",
                cornflowerblue: "#6495ed",
                cornsilk: "#fff8dc",
                crimson: "#dc143c",
                cyan: "#0ff",
                darkblue: "#00008b",
                darkcyan: "#008b8b",
                darkgoldenrod: "#b8860b",
                darkgray: "#a9a9a9",
                darkgrey: "#a9a9a9",
                darkgreen: "#006400",
                darkkhaki: "#bdb76b",
                darkmagenta: "#8b008b",
                darkolivegreen: "#556b2f",
                darkorange: "#ff8c00",
                darkorchid: "#9932cc",
                darkred: "#8b0000",
                darksalmon: "#e9967a",
                darkseagreen: "#8fbc8f",
                darkslateblue: "#483d8b",
                darkslategray: "#2f4f4f",
                darkslategrey: "#2f4f4f",
                darkturquoise: "#00ced1",
                darkviolet: "#9400d3",
                deeppink: "#ff1493",
                deepskyblue: "#00bfff",
                dimgray: "#696969",
                dimgrey: "#696969",
                dodgerblue: "#1e90ff",
                firebrick: "#b22222",
                floralwhite: "#fffaf0",
                forestgreen: "#228b22",
                fuchsia: "#f0f",
                gainsboro: "#dcdcdc",
                ghostwhite: "#f8f8ff",
                gold: "#ffd700",
                goldenrod: "#daa520",
                gray: "#808080",
                grey: "#808080",
                green: "#008000",
                greenyellow: "#adff2f",
                honeydew: "#f0fff0",
                hotpink: "#ff69b4",
                indianred: "#cd5c5c",
                indigo: "#4b0082",
                ivory: "#fffff0",
                khaki: "#f0e68c",
                lavender: "#e6e6fa",
                lavenderblush: "#fff0f5",
                lawngreen: "#7cfc00",
                lemonchiffon: "#fffacd",
                lightblue: "#add8e6",
                lightcoral: "#f08080",
                lightcyan: "#e0ffff",
                lightgoldenrodyellow: "#fafad2",
                lightgray: "#d3d3d3",
                lightgrey: "#d3d3d3",
                lightgreen: "#90ee90",
                lightpink: "#ffb6c1",
                lightsalmon: "#ffa07a",
                lightseagreen: "#20b2aa",
                lightskyblue: "#87cefa",
                lightslategray: "#789",
                lightslategrey: "#789",
                lightsteelblue: "#b0c4de",
                lightyellow: "#ffffe0",
                lime: "#0f0",
                limegreen: "#32cd32",
                linen: "#faf0e6",
                magenta: "#f0f",
                maroon: "#800000",
                mediumaquamarine: "#66cdaa",
                mediumblue: "#0000cd",
                mediumorchid: "#ba55d3",
                mediumpurple: "#9370d8",
                mediumseagreen: "#3cb371",
                mediumslateblue: "#7b68ee",
                mediumspringgreen: "#00fa9a",
                mediumturquoise: "#48d1cc",
                mediumvioletred: "#c71585",
                midnightblue: "#191970",
                mintcream: "#f5fffa",
                mistyrose: "#ffe4e1",
                moccasin: "#ffe4b5",
                navajowhite: "#ffdead",
                navy: "#000080",
                oldlace: "#fdf5e6",
                olive: "#808000",
                olivedrab: "#6b8e23",
                orange: "#ffa500",
                orangered: "#ff4500",
                orchid: "#da70d6",
                palegoldenrod: "#eee8aa",
                palegreen: "#98fb98",
                paleturquoise: "#afeeee",
                palevioletred: "#d87093",
                papayawhip: "#ffefd5",
                peachpuff: "#ffdab9",
                peru: "#cd853f",
                pink: "#ffc0cb",
                plum: "#dda0dd",
                powderblue: "#b0e0e6",
                purple: "#800080",
                red: "#f00",
                rosybrown: "#bc8f8f",
                royalblue: "#4169e1",
                saddlebrown: "#8b4513",
                salmon: "#fa8072",
                sandybrown: "#f4a460",
                seagreen: "#2e8b57",
                seashell: "#fff5ee",
                sienna: "#a0522d",
                silver: "#c0c0c0",
                skyblue: "#87ceeb",
                slateblue: "#6a5acd",
                slategray: "#708090",
                slategrey: "#708090",
                snow: "#fffafa",
                springgreen: "#00ff7f",
                steelblue: "#4682b4",
                tan: "#d2b48c",
                teal: "#008080",
                thistle: "#d8bfd8",
                tomato: "#ff6347",
                turquoise: "#40e0d0",
                violet: "#ee82ee",
                wheat: "#f5deb3",
                white: "#fff",
                whitesmoke: "#f5f5f5",
                yellow: "#ff0",
                yellowgreen: "#9acd32"
            };
            return {
                customPalette: t,
                resetPalette: n,
                getColor: a,
                getHighlightColor: r,
                customHighlight: i,
                resetHighlight: o,
                getRadialGradient: s,
                getLinearGradient: l,
                getGradientColors: d,
                getStepColors: h,
                reverse: W,
                mix: X,
                lift: w,
                trim: v,
                random: I,
                toRGB: V,
                toRGBA: u,
                toHex: U,
                toHSL: k,
                toHSLA: b,
                toHSB: y,
                toHSBA: g,
                toHSV: _,
                toHSVA: f,
                toName: x,
                toColor: c,
                toArray: p,
                alpha: S,
                getData: K
            }
        }), n("echarts/component/timeline", ["require", "./base", "zrender/shape/Rectangle", "../util/shape/Icon", "../util/shape/Chain", "../config", "zrender/tool/util", "zrender/tool/area", "zrender/tool/event", "../component"], function (e) {
            function t(e, t, n, i, o) {
                a.call(this, e, t, n, i, o);
                var r = this;
                if (r._onclick = function (e) {
                        return r.__onclick(e)
                    }, r._ondrift = function (e, t) {
                        return r.__ondrift(this, e, t)
                    }, r._ondragend = function () {
                        return r.__ondragend()
                    }, r._setCurrentOption = function () {
                        var e = r.timelineOption;
                        r.currentIndex %= e.data.length;
                        var t = r.options[r.currentIndex] || {};
                        r.myChart._setOption(t, e.notMerge, !0), r.messageCenter.dispatch(s.EVENT.TIMELINE_CHANGED, null, {
                            currentIndex: r.currentIndex,
                            data: null != e.data[r.currentIndex].name ? e.data[r.currentIndex].name : e.data[r.currentIndex]
                        }, r.myChart)
                    }, r._onFrame = function () {
                        r._setCurrentOption(), r._syncHandleShape(), r.timelineOption.autoPlay && (r.playTicket = setTimeout(function () {
                            return r.currentIndex += 1, !r.timelineOption.loop && r.currentIndex >= r.timelineOption.data.length ? (r.currentIndex = r.timelineOption.data.length - 1, void r.stop()) : void r._onFrame()
                        }, r.timelineOption.playInterval))
                    }, this.setTheme(!1), this.options = this.option.options, this.currentIndex = this.timelineOption.currentIndex % this.timelineOption.data.length, this.timelineOption.notMerge || 0 === this.currentIndex || (this.options[this.currentIndex] = l.merge(this.options[this.currentIndex], this.options[0])), this.timelineOption.show && (this._buildShape(), this._syncHandleShape()), this._setCurrentOption(), this.timelineOption.autoPlay) {
                    var r = this;
                    this.playTicket = setTimeout(function () {
                        r.play()
                    }, null != this.ecTheme.animationDuration ? this.ecTheme.animationDuration : s.animationDuration)
                }
            }

            function n(e, t) {
                var n = 2, a = t.x + n, i = t.y + n + 2, r = t.width - n, s = t.height - n, l = t.symbol;
                if ("last" === l)e.moveTo(a + r - 2, i + s / 3), e.lineTo(a + r - 2, i), e.lineTo(a + 2, i + s / 2), e.lineTo(a + r - 2, i + s), e.lineTo(a + r - 2, i + s / 3 * 2), e.moveTo(a, i), e.lineTo(a, i); else if ("next" === l)e.moveTo(a + 2, i + s / 3), e.lineTo(a + 2, i), e.lineTo(a + r - 2, i + s / 2), e.lineTo(a + 2, i + s), e.lineTo(a + 2, i + s / 3 * 2), e.moveTo(a, i), e.lineTo(a, i); else if ("play" === l)if ("stop" === t.status)e.moveTo(a + 2, i), e.lineTo(a + r - 2, i + s / 2), e.lineTo(a + 2, i + s), e.lineTo(a + 2, i); else {
                    var h = "both" === t.brushType ? 2 : 3;
                    e.rect(a + 2, i, h, s), e.rect(a + r - h - 2, i, h, s)
                } else if (l.match("image")) {
                    var d = "";
                    d = l.replace(new RegExp("^image:\\/\\/"), ""), l = o.prototype.iconLibrary.image, l(e, {
                        x: a,
                        y: i,
                        width: r,
                        height: s,
                        image: d
                    })
                }
            }

            var a = e("./base"), i = e("zrender/shape/Rectangle"), o = e("../util/shape/Icon"), r = e("../util/shape/Chain"), s = e("../config");
            s.timeline = {
                zlevel: 0,
                z: 4,
                show: !0,
                type: "time",
                notMerge: !1,
                realtime: !0,
                x: 80,
                x2: 80,
                y2: 0,
                height: 50,
                backgroundColor: "rgba(0,0,0,0)",
                borderColor: "#ccc",
                borderWidth: 0,
                padding: 5,
                controlPosition: "left",
                autoPlay: !1,
                loop: !0,
                playInterval: 2e3,
                lineStyle: {width: 1, color: "#666", type: "dashed"},
                label: {show: !0, interval: "auto", rotate: 0, textStyle: {color: "#333"}},
                checkpointStyle: {
                    symbol: "auto",
                    symbolSize: "auto",
                    color: "auto",
                    borderColor: "auto",
                    borderWidth: "auto",
                    label: {show: !1, textStyle: {color: "auto"}}
                },
                controlStyle: {itemSize: 15, itemGap: 5, normal: {color: "#333"}, emphasis: {color: "#1e90ff"}},
                symbol: "emptyDiamond",
                symbolSize: 4,
                currentIndex: 0
            };
            var l = e("zrender/tool/util"), h = e("zrender/tool/area"), d = e("zrender/tool/event");
            return t.prototype = {
                type: s.COMPONENT_TYPE_TIMELINE, _buildShape: function () {
                    if (this._location = this._getLocation(), this._buildBackground(), this._buildControl(), this._chainPoint = this._getChainPoint(), this.timelineOption.label.show)for (var e = this._getInterval(), t = 0, n = this._chainPoint.length; n > t; t += e)this._chainPoint[t].showLabel = !0;
                    this._buildChain(), this._buildHandle();
                    for (var t = 0, a = this.shapeList.length; a > t; t++)this.zr.addShape(this.shapeList[t])
                }, _getLocation: function () {
                    var e, t = this.timelineOption, n = this.reformCssArray(this.timelineOption.padding), a = this.zr.getWidth(), i = this.parsePercent(t.x, a), o = this.parsePercent(t.x2, a);
                    null == t.width ? (e = a - i - o, o = a - o) : (e = this.parsePercent(t.width, a), o = i + e);
                    var r, s, l = this.zr.getHeight(), h = this.parsePercent(t.height, l);
                    return null != t.y ? (r = this.parsePercent(t.y, l), s = r + h) : (s = l - this.parsePercent(t.y2, l), r = s - h), {
                        x: i + n[3],
                        y: r + n[0],
                        x2: o - n[1],
                        y2: s - n[2],
                        width: e - n[1] - n[3],
                        height: h - n[0] - n[2]
                    }
                }, _getReformedLabel: function (e) {
                    var t = this.timelineOption, n = null != t.data[e].name ? t.data[e].name : t.data[e], a = t.data[e].formatter || t.label.formatter;
                    return a && ("function" == typeof a ? n = a.call(this.myChart, n) : "string" == typeof a && (n = a.replace("{value}", n))), n
                }, _getInterval: function () {
                    var e = this._chainPoint, t = this.timelineOption, n = t.label.interval;
                    if ("auto" === n) {
                        var a = t.label.textStyle.fontSize, i = t.data, o = t.data.length;
                        if (o > 3) {
                            var r, s, l = !1;
                            for (n = 0; !l && o > n;) {
                                n++, l = !0;
                                for (var d = n; o > d; d += n) {
                                    if (r = e[d].x - e[d - n].x, 0 !== t.label.rotate)s = a; else if (i[d].textStyle)s = h.getTextWidth(e[d].name, e[d].textFont); else {
                                        var c = e[d].name + "", p = (c.match(/\w/g) || "").length, m = c.length - p;
                                        s = p * a * 2 / 3 + m * a
                                    }
                                    if (s > r) {
                                        l = !1;
                                        break
                                    }
                                }
                            }
                        } else n = 1
                    } else n = n - 0 + 1;
                    return n
                }, _getChainPoint: function () {
                    function e(e) {
                        return null != h[e].name ? h[e].name : h[e] + ""
                    }

                    var t, n = this.timelineOption, a = n.symbol.toLowerCase(), i = n.symbolSize, o = n.label.rotate, r = n.label.textStyle, s = this.getFont(r), h = n.data, d = this._location.x, c = this._location.y + this._location.height / 4 * 3, p = this._location.x2 - this._location.x, m = h.length, u = [];
                    if (m > 1) {
                        var V = p / m;
                        if (V = V > 50 ? 50 : 20 > V ? 5 : V, p -= 2 * V, "number" === n.type)for (var U = 0; m > U; U++)u.push(d + V + p / (m - 1) * U); else {
                            u[0] = new Date(e(0).replace(/-/g, "/")), u[m - 1] = new Date(e(m - 1).replace(/-/g, "/")) - u[0];
                            for (var U = 1; m > U; U++)u[U] = d + V + p * (new Date(e(U).replace(/-/g, "/")) - u[0]) / u[m - 1];
                            u[0] = d + V
                        }
                    } else u.push(d + p / 2);
                    for (var f, _, g, y, b, k = [], U = 0; m > U; U++)d = u[U], f = h[U].symbol && h[U].symbol.toLowerCase() || a, f.match("empty") ? (f = f.replace("empty", ""), g = !0) : g = !1, f.match("star") && (_ = f.replace("star", "") - 0 || 5, f = "star"), t = h[U].textStyle ? l.merge(h[U].textStyle || {}, r) : r, y = t.align || "center", o ? (y = o > 0 ? "right" : "left", b = [o * Math.PI / 180, d, c - 5]) : b = !1, k.push({
                        x: d,
                        n: _,
                        isEmpty: g,
                        symbol: f,
                        symbolSize: h[U].symbolSize || i,
                        color: h[U].color,
                        borderColor: h[U].borderColor,
                        borderWidth: h[U].borderWidth,
                        name: this._getReformedLabel(U),
                        textColor: t.color,
                        textAlign: y,
                        textBaseline: t.baseline || "middle",
                        textX: d,
                        textY: c - (o ? 5 : 0),
                        textFont: h[U].textStyle ? this.getFont(t) : s,
                        rotation: b,
                        showLabel: !1
                    });
                    return k
                }, _buildBackground: function () {
                    var e = this.timelineOption, t = this.reformCssArray(this.timelineOption.padding), n = this._location.width, a = this._location.height;
                    (0 !== e.borderWidth || "rgba(0,0,0,0)" != e.backgroundColor.replace(/\s/g, "")) && this.shapeList.push(new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._location.x - t[3],
                            y: this._location.y - t[0],
                            width: n + t[1] + t[3],
                            height: a + t[0] + t[2],
                            brushType: 0 === e.borderWidth ? "fill" : "both",
                            color: e.backgroundColor,
                            strokeColor: e.borderColor,
                            lineWidth: e.borderWidth
                        }
                    }))
                }, _buildControl: function () {
                    var e = this, t = this.timelineOption, n = t.lineStyle, a = t.controlStyle;
                    if ("none" !== t.controlPosition) {
                        var i, r = a.itemSize, s = a.itemGap;
                        "left" === t.controlPosition ? (i = this._location.x, this._location.x += 3 * (r + s)) : (i = this._location.x2 - (3 * (r + s) - s), this._location.x2 -= 3 * (r + s));
                        var h = this._location.y, d = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 1,
                            style: {
                                iconType: "timelineControl",
                                symbol: "last",
                                x: i,
                                y: h,
                                width: r,
                                height: r,
                                brushType: "stroke",
                                color: a.normal.color,
                                strokeColor: a.normal.color,
                                lineWidth: n.width
                            },
                            highlightStyle: {
                                color: a.emphasis.color,
                                strokeColor: a.emphasis.color,
                                lineWidth: n.width + 1
                            },
                            clickable: !0
                        };
                        this._ctrLastShape = new o(d), this._ctrLastShape.onclick = function () {
                            e.last()
                        }, this.shapeList.push(this._ctrLastShape), i += r + s, this._ctrPlayShape = new o(l.clone(d)), this._ctrPlayShape.style.brushType = "fill", this._ctrPlayShape.style.symbol = "play", this._ctrPlayShape.style.status = this.timelineOption.autoPlay ? "playing" : "stop", this._ctrPlayShape.style.x = i, this._ctrPlayShape.onclick = function () {
                            "stop" === e._ctrPlayShape.style.status ? e.play() : e.stop()
                        }, this.shapeList.push(this._ctrPlayShape), i += r + s, this._ctrNextShape = new o(l.clone(d)), this._ctrNextShape.style.symbol = "next", this._ctrNextShape.style.x = i, this._ctrNextShape.onclick = function () {
                            e.next()
                        }, this.shapeList.push(this._ctrNextShape)
                    }
                }, _buildChain: function () {
                    var e = this.timelineOption, t = e.lineStyle;
                    this._timelineShae = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            x: this._location.x,
                            y: this.subPixelOptimize(this._location.y, t.width),
                            width: this._location.x2 - this._location.x,
                            height: this._location.height,
                            chainPoint: this._chainPoint,
                            brushType: "both",
                            strokeColor: t.color,
                            lineWidth: t.width,
                            lineType: t.type
                        },
                        hoverable: !1,
                        clickable: !0,
                        onclick: this._onclick
                    }, this._timelineShae = new r(this._timelineShae), this.shapeList.push(this._timelineShae)
                }, _buildHandle: function () {
                    var e = this._chainPoint[this.currentIndex], t = e.symbolSize + 1;
                    t = 5 > t ? 5 : t, this._handleShape = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase() + 1,
                        hoverable: !1,
                        draggable: !0,
                        style: {
                            iconType: "diamond",
                            n: e.n,
                            x: e.x - t,
                            y: this._location.y + this._location.height / 4 - t,
                            width: 2 * t,
                            height: 2 * t,
                            brushType: "both",
                            textPosition: "specific",
                            textX: e.x,
                            textY: this._location.y - this._location.height / 4,
                            textAlign: "center",
                            textBaseline: "middle"
                        },
                        highlightStyle: {},
                        ondrift: this._ondrift,
                        ondragend: this._ondragend
                    }, this._handleShape = new o(this._handleShape), this.shapeList.push(this._handleShape)
                }, _syncHandleShape: function () {
                    if (this.timelineOption.show) {
                        var e = this.timelineOption, t = e.checkpointStyle, n = this._chainPoint[this.currentIndex];
                        this._handleShape.style.text = t.label.show ? n.name : "", this._handleShape.style.textFont = n.textFont, this._handleShape.style.n = n.n, "auto" === t.symbol ? this._handleShape.style.iconType = "none" != n.symbol ? n.symbol : "diamond" : (this._handleShape.style.iconType = t.symbol, t.symbol.match("star") && (this._handleShape.style.n = t.symbol.replace("star", "") - 0 || 5, this._handleShape.style.iconType = "star"));
                        var a;
                        "auto" === t.symbolSize ? (a = n.symbolSize + 2, a = 5 > a ? 5 : a) : a = t.symbolSize - 0, this._handleShape.style.color = "auto" === t.color ? n.color ? n.color : e.controlStyle.emphasis.color : t.color, this._handleShape.style.textColor = "auto" === t.label.textStyle.color ? this._handleShape.style.color : t.label.textStyle.color, this._handleShape.highlightStyle.strokeColor = this._handleShape.style.strokeColor = "auto" === t.borderColor ? n.borderColor ? n.borderColor : "#fff" : t.borderColor, this._handleShape.style.lineWidth = "auto" === t.borderWidth ? n.borderWidth ? n.borderWidth : 0 : t.borderWidth - 0, this._handleShape.highlightStyle.lineWidth = this._handleShape.style.lineWidth + 1, this.zr.animate(this._handleShape.id, "style").when(500, {
                            x: n.x - a,
                            textX: n.x,
                            y: this._location.y + this._location.height / 4 - a,
                            width: 2 * a,
                            height: 2 * a
                        }).start("ExponentialOut")
                    }
                }, _findChainIndex: function (e) {
                    var t = this._chainPoint, n = t.length;
                    if (e <= t[0].x)return 0;
                    if (e >= t[n - 1].x)return n - 1;
                    for (var a = 0; n - 1 > a; a++)if (e >= t[a].x && e <= t[a + 1].x)return Math.abs(e - t[a].x) < Math.abs(e - t[a + 1].x) ? a : a + 1
                }, __onclick: function (e) {
                    var t = d.getX(e.event), n = this._findChainIndex(t);
                    return n === this.currentIndex ? !0 : (this.currentIndex = n, this.timelineOption.autoPlay && this.stop(), clearTimeout(this.playTicket), void this._onFrame())
                }, __ondrift: function (e, t) {
                    this.timelineOption.autoPlay && this.stop();
                    var n, a = this._chainPoint, i = a.length;
                    e.style.x + t <= a[0].x - a[0].symbolSize ? (e.style.x = a[0].x - a[0].symbolSize, n = 0) : e.style.x + t >= a[i - 1].x - a[i - 1].symbolSize ? (e.style.x = a[i - 1].x - a[i - 1].symbolSize, n = i - 1) : (e.style.x += t, n = this._findChainIndex(e.style.x));
                    var o = a[n], r = o.symbolSize + 2;
                    if (e.style.iconType = o.symbol, e.style.n = o.n, e.style.textX = e.style.x + r / 2, e.style.y = this._location.y + this._location.height / 4 - r, e.style.width = 2 * r, e.style.height = 2 * r, e.style.text = o.name, n === this.currentIndex)return !0;
                    if (this.currentIndex = n, this.timelineOption.realtime) {
                        clearTimeout(this.playTicket);
                        var s = this;
                        this.playTicket = setTimeout(function () {
                            s._setCurrentOption()
                        }, 200)
                    }
                    return !0
                }, __ondragend: function () {
                    this.isDragend = !0
                }, ondragend: function (e, t) {
                    this.isDragend && e.target && (!this.timelineOption.realtime && this._setCurrentOption(), t.dragOut = !0, t.dragIn = !0, t.needRefresh = !1, this.isDragend = !1, this._syncHandleShape())
                }, last: function () {
                    return this.timelineOption.autoPlay && this.stop(), this.currentIndex -= 1, this.currentIndex < 0 && (this.currentIndex = this.timelineOption.data.length - 1), this._onFrame(), this.currentIndex
                }, next: function () {
                    return this.timelineOption.autoPlay && this.stop(), this.currentIndex += 1, this.currentIndex >= this.timelineOption.data.length && (this.currentIndex = 0), this._onFrame(), this.currentIndex
                }, play: function (e, t) {
                    return this._ctrPlayShape && "playing" != this._ctrPlayShape.style.status && (this._ctrPlayShape.style.status = "playing", this.zr.modShape(this._ctrPlayShape.id), this.zr.refreshNextFrame()), this.timelineOption.autoPlay = null != t ? t : !0, this.timelineOption.autoPlay || clearTimeout(this.playTicket), this.currentIndex = null != e ? e : this.currentIndex + 1, this.currentIndex >= this.timelineOption.data.length && (this.currentIndex = 0), this._onFrame(), this.currentIndex
                }, stop: function () {
                    return this._ctrPlayShape && "stop" != this._ctrPlayShape.style.status && (this._ctrPlayShape.style.status = "stop", this.zr.modShape(this._ctrPlayShape.id), this.zr.refreshNextFrame()), this.timelineOption.autoPlay = !1, clearTimeout(this.playTicket), this.currentIndex
                }, resize: function () {
                    this.timelineOption.show && (this.clear(), this._buildShape(), this._syncHandleShape())
                }, setTheme: function (e) {
                    this.timelineOption = this.reformOption(l.clone(this.option.timeline)), this.timelineOption.label.textStyle = this.getTextStyle(this.timelineOption.label.textStyle), this.timelineOption.checkpointStyle.label.textStyle = this.getTextStyle(this.timelineOption.checkpointStyle.label.textStyle), this.myChart.canvasSupported || (this.timelineOption.realtime = !1), this.timelineOption.show && e && (this.clear(), this._buildShape(), this._syncHandleShape())
                }, onbeforDispose: function () {
                    clearTimeout(this.playTicket)
                }
            }, o.prototype.iconLibrary.timelineControl = n, l.inherits(t, a), e("../component").define("timeline", t), t
        }), n("zrender/shape/Image", ["require", "./Base", "../tool/util"], function (e) {
            var t = e("./Base"), n = function (e) {
                t.call(this, e)
            };
            return n.prototype = {
                type: "image", brush: function (e, t, n) {
                    var a = this.style || {};
                    t && (a = this.getHighlightStyle(a, this.highlightStyle || {}));
                    var i = a.image, o = this;
                    if (this._imageCache || (this._imageCache = {}), "string" == typeof i) {
                        var r = i;
                        this._imageCache[r] ? i = this._imageCache[r] : (i = new Image, i.onload = function () {
                            i.onload = null, o.modSelf(), n()
                        }, i.src = r, this._imageCache[r] = i)
                    }
                    if (i) {
                        if ("IMG" == i.nodeName.toUpperCase())if (window.ActiveXObject) {
                            if ("complete" != i.readyState)return
                        } else if (!i.complete)return;
                        var s = a.width || i.width, l = a.height || i.height, h = a.x, d = a.y;
                        if (!i.width || !i.height)return;
                        if (e.save(), this.doClip(e), this.setContext(e, a), this.setTransform(e), a.sWidth && a.sHeight) {
                            var c = a.sx || 0, p = a.sy || 0;
                            e.drawImage(i, c, p, a.sWidth, a.sHeight, h, d, s, l)
                        } else if (a.sx && a.sy) {
                            var c = a.sx, p = a.sy, m = s - c, u = l - p;
                            e.drawImage(i, c, p, m, u, h, d, s, l)
                        } else e.drawImage(i, h, d, s, l);
                        a.width || (a.width = s), a.height || (a.height = l), this.style.width || (this.style.width = s), this.style.height || (this.style.height = l), this.drawText(e, a, this.style), e.restore()
                    }
                }, getRect: function (e) {
                    return {x: e.x, y: e.y, width: e.width, height: e.height}
                }, clearCache: function () {
                    this._imageCache = {}
                }
            }, e("../tool/util").inherits(n, t), n
        }), n("zrender/loadingEffect/Bar", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Rectangle"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("./Base"), a = e("../tool/util"), i = e("../tool/color"), o = e("../shape/Rectangle");
            return a.inherits(t, n), t.prototype._start = function (e, t) {
                var n = a.merge(this.options, {
                    textStyle: {color: "#888"},
                    backgroundColor: "rgba(250, 250, 250, 0.8)",
                    effectOption: {
                        x: 0,
                        y: this.canvasHeight / 2 - 30,
                        width: this.canvasWidth,
                        height: 5,
                        brushType: "fill",
                        timeInterval: 100
                    }
                }), r = this.createTextShape(n.textStyle), s = this.createBackgroundShape(n.backgroundColor), l = n.effectOption, h = new o({highlightStyle: a.clone(l)});
                return h.highlightStyle.color = l.color || i.getLinearGradient(l.x, l.y, l.x + l.width, l.y + l.height, [[0, "#ff6400"], [.5, "#ffe100"], [1, "#b1ff00"]]), null != n.progress ? (e(s), h.highlightStyle.width = this.adjust(n.progress, [0, 1]) * n.effectOption.width, e(h), e(r), void t()) : (h.highlightStyle.width = 0, setInterval(function () {
                    e(s), h.highlightStyle.width < l.width ? h.highlightStyle.width += 8 : h.highlightStyle.width = 0, e(h), e(r), t()
                }, l.timeInterval))
            }, t
        }), n("zrender/loadingEffect/Bubble", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Circle"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("./Base"), a = e("../tool/util"), i = e("../tool/color"), o = e("../shape/Circle");
            return a.inherits(t, n), t.prototype._start = function (e, t) {
                for (var n = a.merge(this.options, {
                    textStyle: {color: "#888"}, backgroundColor: "rgba(250, 250, 250, 0.8)",
                    effect: {n: 50, lineWidth: 2, brushType: "stroke", color: "random", timeInterval: 100}
                }), r = this.createTextShape(n.textStyle), s = this.createBackgroundShape(n.backgroundColor), l = n.effect, h = l.n, d = l.brushType, c = l.lineWidth, p = [], m = this.canvasWidth, u = this.canvasHeight, V = 0; h > V; V++) {
                    var U = "random" == l.color ? i.alpha(i.random(), .3) : l.color;
                    p[V] = new o({
                        highlightStyle: {
                            x: Math.ceil(Math.random() * m),
                            y: Math.ceil(Math.random() * u),
                            r: Math.ceil(40 * Math.random()),
                            brushType: d,
                            color: U,
                            strokeColor: U,
                            lineWidth: c
                        }, animationY: Math.ceil(20 * Math.random())
                    })
                }
                return setInterval(function () {
                    e(s);
                    for (var n = 0; h > n; n++) {
                        var a = p[n].highlightStyle;
                        a.y - p[n].animationY + a.r <= 0 && (p[n].highlightStyle.y = u + a.r, p[n].highlightStyle.x = Math.ceil(Math.random() * m)), p[n].highlightStyle.y -= p[n].animationY, e(p[n])
                    }
                    e(r), t()
                }, l.timeInterval)
            }, t
        }), n("zrender/loadingEffect/DynamicLine", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Line"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("./Base"), a = e("../tool/util"), i = e("../tool/color"), o = e("../shape/Line");
            return a.inherits(t, n), t.prototype._start = function (e, t) {
                for (var n = a.merge(this.options, {
                    textStyle: {color: "#fff"},
                    backgroundColor: "rgba(0, 0, 0, 0.8)",
                    effectOption: {n: 30, lineWidth: 1, color: "random", timeInterval: 100}
                }), r = this.createTextShape(n.textStyle), s = this.createBackgroundShape(n.backgroundColor), l = n.effectOption, h = l.n, d = l.lineWidth, c = [], p = this.canvasWidth, m = this.canvasHeight, u = 0; h > u; u++) {
                    var V = -Math.ceil(1e3 * Math.random()), U = Math.ceil(400 * Math.random()), f = Math.ceil(Math.random() * m), _ = "random" == l.color ? i.random() : l.color;
                    c[u] = new o({
                        highlightStyle: {
                            xStart: V,
                            yStart: f,
                            xEnd: V + U,
                            yEnd: f,
                            strokeColor: _,
                            lineWidth: d
                        }, animationX: Math.ceil(100 * Math.random()), len: U
                    })
                }
                return setInterval(function () {
                    e(s);
                    for (var n = 0; h > n; n++) {
                        var a = c[n].highlightStyle;
                        a.xStart >= p && (c[n].len = Math.ceil(400 * Math.random()), a.xStart = -400, a.xEnd = -400 + c[n].len, a.yStart = Math.ceil(Math.random() * m), a.yEnd = a.yStart), a.xStart += c[n].animationX, a.xEnd += c[n].animationX, e(c[n])
                    }
                    e(r), t()
                }, l.timeInterval)
            }, t
        }), n("zrender/loadingEffect/Ring", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Ring", "../shape/Sector"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("./Base"), a = e("../tool/util"), i = e("../tool/color"), o = e("../shape/Ring"), r = e("../shape/Sector");
            return a.inherits(t, n), t.prototype._start = function (e, t) {
                var n = a.merge(this.options, {
                    textStyle: {color: "#07a"},
                    backgroundColor: "rgba(250, 250, 250, 0.8)",
                    effect: {
                        x: this.canvasWidth / 2,
                        y: this.canvasHeight / 2,
                        r0: 60,
                        r: 100,
                        color: "#bbdcff",
                        brushType: "fill",
                        textPosition: "inside",
                        textFont: "normal 30px verdana",
                        textColor: "rgba(30, 144, 255, 0.6)",
                        timeInterval: 100
                    }
                }), s = n.effect, l = n.textStyle;
                null == l.x && (l.x = s.x), null == l.y && (l.y = s.y + (s.r0 + s.r) / 2 - 5);
                for (var h = this.createTextShape(n.textStyle), d = this.createBackgroundShape(n.backgroundColor), c = s.x, p = s.y, m = s.r0 + 6, u = s.r - 6, V = s.color, U = i.lift(V, .1), f = new o({highlightStyle: a.clone(s)}), _ = [], g = i.getGradientColors(["#ff6400", "#ffe100", "#97ff00"], 25), y = 15, b = 240, k = 0; 16 > k; k++)_.push(new r({
                    highlightStyle: {
                        x: c,
                        y: p,
                        r0: m,
                        r: u,
                        startAngle: b - y,
                        endAngle: b,
                        brushType: "fill",
                        color: U
                    },
                    _color: i.getLinearGradient(c + m * Math.cos(b, !0), p - m * Math.sin(b, !0), c + m * Math.cos(b - y, !0), p - m * Math.sin(b - y, !0), [[0, g[2 * k]], [1, g[2 * k + 1]]])
                })), b -= y;
                b = 360;
                for (var k = 0; 4 > k; k++)_.push(new r({
                    highlightStyle: {
                        x: c,
                        y: p,
                        r0: m,
                        r: u,
                        startAngle: b - y,
                        endAngle: b,
                        brushType: "fill",
                        color: U
                    },
                    _color: i.getLinearGradient(c + m * Math.cos(b, !0), p - m * Math.sin(b, !0), c + m * Math.cos(b - y, !0), p - m * Math.sin(b - y, !0), [[0, g[2 * k + 32]], [1, g[2 * k + 33]]])
                })), b -= y;
                var x = 0;
                if (null != n.progress) {
                    e(d), x = 100 * this.adjust(n.progress, [0, 1]).toFixed(2) / 5, f.highlightStyle.text = 5 * x + "%", e(f);
                    for (var k = 0; 20 > k; k++)_[k].highlightStyle.color = x > k ? _[k]._color : U, e(_[k]);
                    return e(h), void t()
                }
                return setInterval(function () {
                    e(d), x += x >= 20 ? -20 : 1, e(f);
                    for (var n = 0; 20 > n; n++)_[n].highlightStyle.color = x > n ? _[n]._color : U, e(_[n]);
                    e(h), t()
                }, s.timeInterval)
            }, t
        }), n("zrender/loadingEffect/Spin", ["require", "./Base", "../tool/util", "../tool/color", "../tool/area", "../shape/Sector"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("./Base"), a = e("../tool/util"), i = e("../tool/color"), o = e("../tool/area"), r = e("../shape/Sector");
            return a.inherits(t, n), t.prototype._start = function (e, t) {
                var n = a.merge(this.options, {
                    textStyle: {color: "#fff", textAlign: "start"},
                    backgroundColor: "rgba(0, 0, 0, 0.8)"
                }), s = this.createTextShape(n.textStyle), l = 10, h = o.getTextWidth(s.highlightStyle.text, s.highlightStyle.textFont), d = o.getTextHeight(s.highlightStyle.text, s.highlightStyle.textFont), c = a.merge(this.options.effect || {}, {
                    r0: 9,
                    r: 15,
                    n: 18,
                    color: "#fff",
                    timeInterval: 100
                }), p = this.getLocation(this.options.textStyle, h + l + 2 * c.r, Math.max(2 * c.r, d));
                c.x = p.x + c.r, c.y = s.highlightStyle.y = p.y + p.height / 2, s.highlightStyle.x = c.x + c.r + l;
                for (var m = this.createBackgroundShape(n.backgroundColor), u = c.n, V = c.x, U = c.y, f = c.r0, _ = c.r, g = c.color, y = [], b = Math.round(180 / u), k = 0; u > k; k++)y[k] = new r({
                    highlightStyle: {
                        x: V,
                        y: U,
                        r0: f,
                        r: _,
                        startAngle: b * k * 2,
                        endAngle: b * k * 2 + b,
                        color: i.alpha(g, (k + 1) / u),
                        brushType: "fill"
                    }
                });
                var x = [0, V, U];
                return setInterval(function () {
                    e(m), x[0] -= .3;
                    for (var n = 0; u > n; n++)y[n].rotation = x, e(y[n]);
                    e(s), t()
                }, c.timeInterval)
            }, t
        }), n("zrender/loadingEffect/Whirling", ["require", "./Base", "../tool/util", "../tool/area", "../shape/Ring", "../shape/Droplet", "../shape/Circle"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("./Base"), a = e("../tool/util"), i = e("../tool/area"), o = e("../shape/Ring"), r = e("../shape/Droplet"), s = e("../shape/Circle");
            return a.inherits(t, n), t.prototype._start = function (e, t) {
                var n = a.merge(this.options, {
                    textStyle: {color: "#888", textAlign: "start"},
                    backgroundColor: "rgba(250, 250, 250, 0.8)"
                }), l = this.createTextShape(n.textStyle), h = 10, d = i.getTextWidth(l.highlightStyle.text, l.highlightStyle.textFont), c = i.getTextHeight(l.highlightStyle.text, l.highlightStyle.textFont), p = a.merge(this.options.effect || {}, {
                    r: 18,
                    colorIn: "#fff",
                    colorOut: "#555",
                    colorWhirl: "#6cf",
                    timeInterval: 50
                }), m = this.getLocation(this.options.textStyle, d + h + 2 * p.r, Math.max(2 * p.r, c));
                p.x = m.x + p.r, p.y = l.highlightStyle.y = m.y + m.height / 2, l.highlightStyle.x = p.x + p.r + h;
                var u = this.createBackgroundShape(n.backgroundColor), V = new r({
                    highlightStyle: {
                        a: Math.round(p.r / 2),
                        b: Math.round(p.r - p.r / 6),
                        brushType: "fill",
                        color: p.colorWhirl
                    }
                }), U = new s({
                    highlightStyle: {
                        r: Math.round(p.r / 6),
                        brushType: "fill",
                        color: p.colorIn
                    }
                }), f = new o({
                    highlightStyle: {
                        r0: Math.round(p.r - p.r / 3),
                        r: p.r,
                        brushType: "fill",
                        color: p.colorOut
                    }
                }), _ = [0, p.x, p.y];
                return V.highlightStyle.x = U.highlightStyle.x = f.highlightStyle.x = _[1], V.highlightStyle.y = U.highlightStyle.y = f.highlightStyle.y = _[2], setInterval(function () {
                    e(u), e(f), _[0] -= .3, V.rotation = _, e(V), e(U), e(l), t()
                }, p.timeInterval)
            }, t
        }), n("echarts/theme/macarons", [], function () {
            var e = {
                color: ["#2ec7c9", "#b6a2de", "#5ab1ef", "#ffb980", "#d87a80", "#8d98b3", "#e5cf0d", "#97b552", "#95706d", "#dc69aa", "#07a2a4", "#9a7fd1", "#588dd5", "#f5994e", "#c05050", "#59678c", "#c9ab00", "#7eb00a", "#6f5553", "#c14089"],
                title: {textStyle: {fontWeight: "normal", color: "#008acd"}},
                dataRange: {itemWidth: 15, color: ["#5ab1ef", "#e0ffff"]},
                toolbox: {color: ["#1e90ff", "#1e90ff", "#1e90ff", "#1e90ff"], effectiveColor: "#ff4500"},
                tooltip: {
                    backgroundColor: "rgba(50,50,50,0.5)",
                    axisPointer: {
                        type: "line",
                        lineStyle: {color: "#008acd"},
                        crossStyle: {color: "#008acd"},
                        shadowStyle: {color: "rgba(200,200,200,0.2)"}
                    }
                },
                dataZoom: {
                    dataBackgroundColor: "#efefff",
                    fillerColor: "rgba(182,162,222,0.2)",
                    handleColor: "#008acd"
                },
                grid: {borderColor: "#eee"},
                categoryAxis: {axisLine: {lineStyle: {color: "#008acd"}}, splitLine: {lineStyle: {color: ["#eee"]}}},
                valueAxis: {
                    axisLine: {lineStyle: {color: "#008acd"}},
                    splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.1)", "rgba(200,200,200,0.1)"]}},
                    splitLine: {lineStyle: {color: ["#eee"]}}
                },
                polar: {
                    axisLine: {lineStyle: {color: "#ddd"}},
                    splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]}},
                    splitLine: {lineStyle: {color: "#ddd"}}
                },
                timeline: {
                    lineStyle: {color: "#008acd"},
                    controlStyle: {normal: {color: "#008acd"}, emphasis: {color: "#008acd"}},
                    symbol: "emptyCircle",
                    symbolSize: 3
                },
                bar: {itemStyle: {normal: {barBorderRadius: 5}, emphasis: {barBorderRadius: 5}}},
                line: {smooth: !0, symbol: "emptyCircle", symbolSize: 3},
                k: {
                    itemStyle: {
                        normal: {
                            color: "#d87a80",
                            color0: "#2ec7c9",
                            lineStyle: {color: "#d87a80", color0: "#2ec7c9"}
                        }
                    }
                },
                scatter: {symbol: "circle", symbolSize: 4},
                radar: {symbol: "emptyCircle", symbolSize: 3},
                map: {
                    itemStyle: {
                        normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#d87a80"}}},
                        emphasis: {areaStyle: {color: "#fe994e"}}
                    }
                },
                force: {itemStyle: {normal: {linkStyle: {color: "#1e90ff"}}}},
                chord: {
                    itemStyle: {
                        normal: {
                            borderWidth: 1,
                            borderColor: "rgba(128, 128, 128, 0.5)",
                            chordStyle: {lineStyle: {color: "rgba(128, 128, 128, 0.5)"}}
                        },
                        emphasis: {
                            borderWidth: 1,
                            borderColor: "rgba(128, 128, 128, 0.5)",
                            chordStyle: {lineStyle: {color: "rgba(128, 128, 128, 0.5)"}}
                        }
                    }
                },
                gauge: {
                    axisLine: {lineStyle: {color: [[.2, "#2ec7c9"], [.8, "#5ab1ef"], [1, "#d87a80"]], width: 10}},
                    axisTick: {splitNumber: 10, length: 15, lineStyle: {color: "auto"}},
                    splitLine: {length: 22, lineStyle: {color: "auto"}},
                    pointer: {width: 5}
                },
                textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
            };
            return e
        }), n("echarts/theme/infographic", [], function () {
            var e = {
                color: ["#C1232B", "#B5C334", "#FCCE10", "#E87C25", "#27727B", "#FE8463", "#9BCA63", "#FAD860", "#F3A43B", "#60C0DD", "#D7504B", "#C6E579", "#F4E001", "#F0805A", "#26C0C0"],
                title: {textStyle: {fontWeight: "normal", color: "#27727B"}},
                dataRange: {x: "right", y: "center", itemWidth: 5, itemHeight: 25, color: ["#C1232B", "#FCCE10"]},
                toolbox: {
                    color: ["#C1232B", "#B5C334", "#FCCE10", "#E87C25", "#27727B", "#FE8463", "#9BCA63", "#FAD860", "#F3A43B", "#60C0DD"],
                    effectiveColor: "#ff4500"
                },
                tooltip: {
                    backgroundColor: "rgba(50,50,50,0.5)",
                    axisPointer: {
                        type: "line",
                        lineStyle: {color: "#27727B", type: "dashed"},
                        crossStyle: {color: "#27727B"},
                        shadowStyle: {color: "rgba(200,200,200,0.3)"}
                    }
                },
                dataZoom: {
                    dataBackgroundColor: "rgba(181,195,52,0.3)",
                    fillerColor: "rgba(181,195,52,0.2)",
                    handleColor: "#27727B"
                },
                grid: {borderWidth: 0},
                categoryAxis: {axisLine: {lineStyle: {color: "#27727B"}}, splitLine: {show: !1}},
                valueAxis: {
                    axisLine: {show: !1},
                    splitArea: {show: !1},
                    splitLine: {lineStyle: {color: ["#ccc"], type: "dashed"}}
                },
                polar: {
                    axisLine: {lineStyle: {color: "#ddd"}},
                    splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]}},
                    splitLine: {lineStyle: {color: "#ddd"}}
                },
                timeline: {
                    lineStyle: {color: "#27727B"},
                    controlStyle: {normal: {color: "#27727B"}, emphasis: {color: "#27727B"}},
                    symbol: "emptyCircle",
                    symbolSize: 3
                },
                line: {
                    itemStyle: {
                        normal: {borderWidth: 2, borderColor: "#fff", lineStyle: {width: 3}},
                        emphasis: {borderWidth: 0}
                    }, symbol: "circle", symbolSize: 3.5
                },
                k: {
                    itemStyle: {
                        normal: {
                            color: "#C1232B",
                            color0: "#B5C334",
                            lineStyle: {width: 1, color: "#C1232B", color0: "#B5C334"}
                        }
                    }
                },
                scatter: {
                    itemStyle: {
                        normal: {borderWidth: 1, borderColor: "rgba(200,200,200,0.5)"},
                        emphasis: {borderWidth: 0}
                    }, symbol: "star4", symbolSize: 4
                },
                radar: {symbol: "emptyCircle", symbolSize: 3},
                map: {
                    itemStyle: {
                        normal: {areaStyle: {color: "#ddd"}, label: {textStyle: {color: "#C1232B"}}},
                        emphasis: {areaStyle: {color: "#fe994e"}, label: {textStyle: {color: "rgb(100,0,0)"}}}
                    }
                },
                force: {itemStyle: {normal: {linkStyle: {color: "#27727B"}}}},
                chord: {
                    itemStyle: {
                        normal: {
                            borderWidth: 1,
                            borderColor: "rgba(128, 128, 128, 0.5)",
                            chordStyle: {lineStyle: {color: "rgba(128, 128, 128, 0.5)"}}
                        },
                        emphasis: {
                            borderWidth: 1,
                            borderColor: "rgba(128, 128, 128, 0.5)",
                            chordStyle: {lineStyle: {color: "rgba(128, 128, 128, 0.5)"}}
                        }
                    }
                },
                gauge: {
                    center: ["50%", "80%"],
                    radius: "100%",
                    startAngle: 180,
                    endAngle: 0,
                    axisLine: {
                        show: !0,
                        lineStyle: {color: [[.2, "#B5C334"], [.8, "#27727B"], [1, "#C1232B"]], width: "40%"}
                    },
                    axisTick: {splitNumber: 2, length: 5, lineStyle: {color: "#fff"}},
                    axisLabel: {textStyle: {color: "#fff", fontWeight: "bolder"}},
                    splitLine: {length: "5%", lineStyle: {color: "#fff"}},
                    pointer: {width: "40%", length: "80%", color: "#fff"},
                    title: {offsetCenter: [0, -20], textStyle: {color: "auto", fontSize: 20}},
                    detail: {offsetCenter: [0, 0], textStyle: {color: "auto", fontSize: 40}}
                },
                textStyle: {fontFamily: "微软雅黑, Arial, Verdana, sans-serif"}
            };
            return e
        }), n("zrender/dep/excanvas", ["require"], function () {
            return document.createElement("canvas").getContext ? G_vmlCanvasManager = !1 : !function () {
                function e() {
                    return this.context_ || (this.context_ = new y(this))
                }

                function t(e, t) {
                    var n = O.call(arguments, 2);
                    return function () {
                        return e.apply(t, n.concat(O.call(arguments)))
                    }
                }

                function n(e) {
                    return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;")
                }

                function a(e, t, n) {
                    e.namespaces[t] || e.namespaces.add(t, n, "#default#VML")
                }

                function i(e) {
                    if (a(e, "g_vml_", "urn:schemas-microsoft-com:vml"), a(e, "g_o_", "urn:schemas-microsoft-com:office:office"), !e.styleSheets.ex_canvas_) {
                        var t = e.createStyleSheet();
                        t.owningElement.id = "ex_canvas_", t.cssText = "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}"
                    }
                }

                function o(e) {
                    var t = e.srcElement;
                    switch (e.propertyName) {
                        case"width":
                            t.getContext().clearRect(), t.style.width = t.attributes.width.nodeValue + "px", t.firstChild.style.width = t.clientWidth + "px";
                            break;
                        case"height":
                            t.getContext().clearRect(), t.style.height = t.attributes.height.nodeValue + "px", t.firstChild.style.height = t.clientHeight + "px"
                    }
                }

                function r(e) {
                    var t = e.srcElement;
                    t.firstChild && (t.firstChild.style.width = t.clientWidth + "px", t.firstChild.style.height = t.clientHeight + "px")
                }

                function s() {
                    return [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
                }

                function l(e, t) {
                    for (var n = s(), a = 0; 3 > a; a++)for (var i = 0; 3 > i; i++) {
                        for (var o = 0, r = 0; 3 > r; r++)o += e[a][r] * t[r][i];
                        n[a][i] = o
                    }
                    return n
                }

                function h(e, t) {
                    t.fillStyle = e.fillStyle, t.lineCap = e.lineCap, t.lineJoin = e.lineJoin, t.lineWidth = e.lineWidth, t.miterLimit = e.miterLimit, t.shadowBlur = e.shadowBlur, t.shadowColor = e.shadowColor, t.shadowOffsetX = e.shadowOffsetX, t.shadowOffsetY = e.shadowOffsetY, t.strokeStyle = e.strokeStyle, t.globalAlpha = e.globalAlpha, t.font = e.font, t.textAlign = e.textAlign, t.textBaseline = e.textBaseline, t.scaleX_ = e.scaleX_, t.scaleY_ = e.scaleY_, t.lineScale_ = e.lineScale_
                }

                function d(e) {
                    var t = e.indexOf("(", 3), n = e.indexOf(")", t + 1), a = e.substring(t + 1, n).split(",");
                    return (4 != a.length || "a" != e.charAt(3)) && (a[3] = 1), a
                }

                function c(e) {
                    return parseFloat(e) / 100
                }

                function p(e, t, n) {
                    return Math.min(n, Math.max(t, e))
                }

                function m(e) {
                    var t, n, a, i, o, r;
                    if (i = parseFloat(e[0]) / 360 % 360, 0 > i && i++, o = p(c(e[1]), 0, 1), r = p(c(e[2]), 0, 1), 0 == o)t = n = a = r; else {
                        var s = .5 > r ? r * (1 + o) : r + o - r * o, l = 2 * r - s;
                        t = u(l, s, i + 1 / 3), n = u(l, s, i), a = u(l, s, i - 1 / 3)
                    }
                    return "#" + D[Math.floor(255 * t)] + D[Math.floor(255 * n)] + D[Math.floor(255 * a)]
                }

                function u(e, t, n) {
                    return 0 > n && n++, n > 1 && n--, 1 > 6 * n ? e + 6 * (t - e) * n : 1 > 2 * n ? t : 2 > 3 * n ? e + (t - e) * (2 / 3 - n) * 6 : e
                }

                function V(e) {
                    if (e in R)return R[e];
                    var t, n = 1;
                    if (e = String(e), "#" == e.charAt(0))t = e; else if (/^rgb/.test(e)) {
                        for (var a, i = d(e), t = "#", o = 0; 3 > o; o++)a = -1 != i[o].indexOf("%") ? Math.floor(255 * c(i[o])) : +i[o], t += D[p(a, 0, 255)];
                        n = +i[3]
                    } else if (/^hsl/.test(e)) {
                        var i = d(e);
                        t = m(i), n = i[3]
                    } else t = B[e] || e;
                    return R[e] = {color: t, alpha: n}
                }

                function U(e) {
                    if (Y[e])return Y[e];
                    var t, n = document.createElement("div"), a = n.style;
                    try {
                        a.font = e, t = a.fontFamily.split(",")[0]
                    } catch (i) {
                    }
                    return Y[e] = {
                        style: a.fontStyle || G.style,
                        variant: a.fontVariant || G.variant,
                        weight: a.fontWeight || G.weight,
                        size: a.fontSize || G.size,
                        family: t || G.family
                    }
                }

                function f(e, t) {
                    var n = {};
                    for (var a in e)n[a] = e[a];
                    var i = parseFloat(t.currentStyle.fontSize), o = parseFloat(e.size);
                    return n.size = "number" == typeof e.size ? e.size : -1 != e.size.indexOf("px") ? o : -1 != e.size.indexOf("em") ? i * o : -1 != e.size.indexOf("%") ? i / 100 * o : -1 != e.size.indexOf("pt") ? o / .75 : i, n
                }

                function _(e) {
                    return e.style + " " + e.variant + " " + e.weight + " " + e.size + "px '" + e.family + "'"
                }

                function g(e) {
                    return $[e] || "square"
                }

                function y(e) {
                    this.m_ = s(), this.mStack_ = [], this.aStack_ = [], this.currentPath_ = [], this.strokeStyle = "#000", this.fillStyle = "#000", this.lineWidth = 1, this.lineJoin = "miter", this.lineCap = "butt", this.miterLimit = 1 * F, this.globalAlpha = 1, this.font = "12px 微软雅黑", this.textAlign = "left", this.textBaseline = "alphabetic", this.canvas = e;
                    var t = "width:" + e.clientWidth + "px;height:" + e.clientHeight + "px;overflow:hidden;position:absolute", n = e.ownerDocument.createElement("div");
                    n.style.cssText = t, e.appendChild(n);
                    var a = n.cloneNode(!1);
                    a.style.backgroundColor = "#fff", a.style.filter = "alpha(opacity=0)", e.appendChild(a), this.element_ = n, this.scaleX_ = 1, this.scaleY_ = 1, this.lineScale_ = 1
                }

                function b(e, t, n, a) {
                    e.currentPath_.push({
                        type: "bezierCurveTo",
                        cp1x: t.x,
                        cp1y: t.y,
                        cp2x: n.x,
                        cp2y: n.y,
                        x: a.x,
                        y: a.y
                    }), e.currentX_ = a.x, e.currentY_ = a.y
                }

                function k(e, t) {
                    var n = V(e.strokeStyle), a = n.color, i = n.alpha * e.globalAlpha, o = e.lineScale_ * e.lineWidth;
                    1 > o && (i *= o), t.push("<g_vml_:stroke", ' opacity="', i, '"', ' joinstyle="', e.lineJoin, '"', ' miterlimit="', e.miterLimit, '"', ' endcap="', g(e.lineCap), '"', ' weight="', o, 'px"', ' color="', a, '" />')
                }

                function x(e, t, n, a) {
                    var i = e.fillStyle, o = e.scaleX_, r = e.scaleY_, s = a.x - n.x, l = a.y - n.y;
                    if (i instanceof W) {
                        var h = 0, d = {x: 0, y: 0}, c = 0, p = 1;
                        if ("gradient" == i.type_) {
                            var m = i.x0_ / o, u = i.y0_ / r, U = i.x1_ / o, f = i.y1_ / r, _ = v(e, m, u), g = v(e, U, f), y = g.x - _.x, b = g.y - _.y;
                            h = 180 * Math.atan2(y, b) / Math.PI, 0 > h && (h += 360), 1e-6 > h && (h = 0)
                        } else {
                            var _ = v(e, i.x0_, i.y0_);
                            d = {x: (_.x - n.x) / s, y: (_.y - n.y) / l}, s /= o * F, l /= r * F;
                            var k = C.max(s, l);
                            c = 2 * i.r0_ / k, p = 2 * i.r1_ / k - c
                        }
                        var x = i.colors_;
                        x.sort(function (e, t) {
                            return e.offset - t.offset
                        });
                        for (var L = x.length, w = x[0].color, I = x[L - 1].color, K = x[0].alpha * e.globalAlpha, S = x[L - 1].alpha * e.globalAlpha, E = [], J = 0; L > J; J++) {
                            var T = x[J];
                            E.push(T.offset * p + c + " " + T.color)
                        }
                        t.push('<g_vml_:fill type="', i.type_, '"', ' method="none" focus="100%"', ' color="', w, '"', ' color2="', I, '"', ' colors="', E.join(","), '"', ' opacity="', S, '"', ' g_o_:opacity2="', K, '"', ' angle="', h, '"', ' focusposition="', d.x, ",", d.y, '" />')
                    } else if (i instanceof X) {
                        if (s && l) {
                            var M = -n.x, A = -n.y;
                            t.push("<g_vml_:fill", ' position="', M / s * o * o, ",", A / l * r * r, '"', ' type="tile"', ' src="', i.src_, '" />')
                        }
                    } else {
                        var z = V(e.fillStyle), O = z.color, P = z.alpha * e.globalAlpha;
                        t.push('<g_vml_:fill color="', O, '" opacity="', P, '" />')
                    }
                }

                function v(e, t, n) {
                    var a = e.m_;
                    return {
                        x: F * (t * a[0][0] + n * a[1][0] + a[2][0]) - z,
                        y: F * (t * a[0][1] + n * a[1][1] + a[2][1]) - z
                    }
                }

                function L(e) {
                    return isFinite(e[0][0]) && isFinite(e[0][1]) && isFinite(e[1][0]) && isFinite(e[1][1]) && isFinite(e[2][0]) && isFinite(e[2][1])
                }

                function w(e, t, n) {
                    if (L(t) && (e.m_ = t, e.scaleX_ = Math.sqrt(t[0][0] * t[0][0] + t[0][1] * t[0][1]), e.scaleY_ = Math.sqrt(t[1][0] * t[1][0] + t[1][1] * t[1][1]), n)) {
                        var a = t[0][0] * t[1][1] - t[0][1] * t[1][0];
                        e.lineScale_ = A(M(a))
                    }
                }

                function W(e) {
                    this.type_ = e, this.x0_ = 0, this.y0_ = 0, this.r0_ = 0, this.x1_ = 0, this.y1_ = 0, this.r1_ = 0, this.colors_ = []
                }

                function X(e, t) {
                    switch (K(e), t) {
                        case"repeat":
                        case null:
                        case"":
                            this.repetition_ = "repeat";
                            break;
                        case"repeat-x":
                        case"repeat-y":
                        case"no-repeat":
                            this.repetition_ = t;
                            break;
                        default:
                            I("SYNTAX_ERR")
                    }
                    this.src_ = e.src, this.width_ = e.width, this.height_ = e.height
                }

                function I(e) {
                    throw new S(e)
                }

                function K(e) {
                    e && 1 == e.nodeType && "IMG" == e.tagName || I("TYPE_MISMATCH_ERR"), "complete" != e.readyState && I("INVALID_STATE_ERR")
                }

                function S(e) {
                    this.code = this[e], this.message = e + ": DOM Exception " + this.code
                }

                var C = Math, E = C.round, J = C.sin, T = C.cos, M = C.abs, A = C.sqrt, F = 10, z = F / 2, O = (+navigator.userAgent.match(/MSIE ([\d.]+)?/)[1], Array.prototype.slice);
                i(document);
                var P = {
                    init: function (e) {
                        var n = e || document;
                        n.createElement("canvas"), n.attachEvent("onreadystatechange", t(this.init_, this, n))
                    }, init_: function (e) {
                        for (var t = e.getElementsByTagName("canvas"), n = 0; n < t.length; n++)this.initElement(t[n])
                    }, initElement: function (t) {
                        if (!t.getContext) {
                            t.getContext = e, i(t.ownerDocument), t.innerHTML = "", t.attachEvent("onpropertychange", o), t.attachEvent("onresize", r);
                            var n = t.attributes;
                            n.width && n.width.specified ? t.style.width = n.width.nodeValue + "px" : t.width = t.clientWidth, n.height && n.height.specified ? t.style.height = n.height.nodeValue + "px" : t.height = t.clientHeight
                        }
                        return t
                    }
                };
                P.init();
                for (var D = [], N = 0; 16 > N; N++)for (var H = 0; 16 > H; H++)D[16 * N + H] = N.toString(16) + H.toString(16);
                var B = {
                    aliceblue: "#F0F8FF",
                    antiquewhite: "#FAEBD7",
                    aquamarine: "#7FFFD4",
                    azure: "#F0FFFF",
                    beige: "#F5F5DC",
                    bisque: "#FFE4C4",
                    black: "#000000",
                    blanchedalmond: "#FFEBCD",
                    blueviolet: "#8A2BE2",
                    brown: "#A52A2A",
                    burlywood: "#DEB887",
                    cadetblue: "#5F9EA0",
                    chartreuse: "#7FFF00",
                    chocolate: "#D2691E",
                    coral: "#FF7F50",
                    cornflowerblue: "#6495ED",
                    cornsilk: "#FFF8DC",
                    crimson: "#DC143C",
                    cyan: "#00FFFF",
                    darkblue: "#00008B",
                    darkcyan: "#008B8B",
                    darkgoldenrod: "#B8860B",
                    darkgray: "#A9A9A9",
                    darkgreen: "#006400",
                    darkgrey: "#A9A9A9",
                    darkkhaki: "#BDB76B",
                    darkmagenta: "#8B008B",
                    darkolivegreen: "#556B2F",
                    darkorange: "#FF8C00",
                    darkorchid: "#9932CC",
                    darkred: "#8B0000",
                    darksalmon: "#E9967A",
                    darkseagreen: "#8FBC8F",
                    darkslateblue: "#483D8B",
                    darkslategray: "#2F4F4F",
                    darkslategrey: "#2F4F4F",
                    darkturquoise: "#00CED1",
                    darkviolet: "#9400D3",
                    deeppink: "#FF1493",
                    deepskyblue: "#00BFFF",
                    dimgray: "#696969",
                    dimgrey: "#696969",
                    dodgerblue: "#1E90FF",
                    firebrick: "#B22222",
                    floralwhite: "#FFFAF0",
                    forestgreen: "#228B22",
                    gainsboro: "#DCDCDC",
                    ghostwhite: "#F8F8FF",
                    gold: "#FFD700",
                    goldenrod: "#DAA520",
                    grey: "#808080",
                    greenyellow: "#ADFF2F",
                    honeydew: "#F0FFF0",
                    hotpink: "#FF69B4",
                    indianred: "#CD5C5C",
                    indigo: "#4B0082",
                    ivory: "#FFFFF0",
                    khaki: "#F0E68C",
                    lavender: "#E6E6FA",
                    lavenderblush: "#FFF0F5",
                    lawngreen: "#7CFC00",
                    lemonchiffon: "#FFFACD",
                    lightblue: "#ADD8E6",
                    lightcoral: "#F08080",
                    lightcyan: "#E0FFFF",
                    lightgoldenrodyellow: "#FAFAD2",
                    lightgreen: "#90EE90",
                    lightgrey: "#D3D3D3",
                    lightpink: "#FFB6C1",
                    lightsalmon: "#FFA07A",
                    lightseagreen: "#20B2AA",
                    lightskyblue: "#87CEFA",
                    lightslategray: "#778899",
                    lightslategrey: "#778899",
                    lightsteelblue: "#B0C4DE",
                    lightyellow: "#FFFFE0",
                    limegreen: "#32CD32",
                    linen: "#FAF0E6",
                    magenta: "#FF00FF",
                    mediumaquamarine: "#66CDAA",
                    mediumblue: "#0000CD",
                    mediumorchid: "#BA55D3",
                    mediumpurple: "#9370DB",
                    mediumseagreen: "#3CB371",
                    mediumslateblue: "#7B68EE",
                    mediumspringgreen: "#00FA9A",
                    mediumturquoise: "#48D1CC",
                    mediumvioletred: "#C71585",
                    midnightblue: "#191970",
                    mintcream: "#F5FFFA",
                    mistyrose: "#FFE4E1",
                    moccasin: "#FFE4B5",
                    navajowhite: "#FFDEAD",
                    oldlace: "#FDF5E6",
                    olivedrab: "#6B8E23",
                    orange: "#FFA500",
                    orangered: "#FF4500",
                    orchid: "#DA70D6",
                    palegoldenrod: "#EEE8AA",
                    palegreen: "#98FB98",
                    paleturquoise: "#AFEEEE",
                    palevioletred: "#DB7093",
                    papayawhip: "#FFEFD5",
                    peachpuff: "#FFDAB9",
                    peru: "#CD853F",
                    pink: "#FFC0CB",
                    plum: "#DDA0DD",
                    powderblue: "#B0E0E6",
                    rosybrown: "#BC8F8F",
                    royalblue: "#4169E1",
                    saddlebrown: "#8B4513",
                    salmon: "#FA8072",
                    sandybrown: "#F4A460",
                    seagreen: "#2E8B57",
                    seashell: "#FFF5EE",
                    sienna: "#A0522D",
                    skyblue: "#87CEEB",
                    slateblue: "#6A5ACD",
                    slategray: "#708090",
                    slategrey: "#708090",
                    snow: "#FFFAFA",
                    springgreen: "#00FF7F",
                    steelblue: "#4682B4",
                    tan: "#D2B48C",
                    thistle: "#D8BFD8",
                    tomato: "#FF6347",
                    turquoise: "#40E0D0",
                    violet: "#EE82EE",
                    wheat: "#F5DEB3",
                    whitesmoke: "#F5F5F5",
                    yellowgreen: "#9ACD32"
                }, R = {}, G = {
                    style: "normal",
                    variant: "normal",
                    weight: "normal",
                    size: 12,
                    family: "微软雅黑"
                }, Y = {}, $ = {butt: "flat", round: "round"}, Z = y.prototype;
                Z.clearRect = function () {
                    this.textMeasureEl_ && (this.textMeasureEl_.removeNode(!0), this.textMeasureEl_ = null), this.element_.innerHTML = ""
                }, Z.beginPath = function () {
                    this.currentPath_ = []
                }, Z.moveTo = function (e, t) {
                    var n = v(this, e, t);
                    this.currentPath_.push({type: "moveTo", x: n.x, y: n.y}), this.currentX_ = n.x, this.currentY_ = n.y
                }, Z.lineTo = function (e, t) {
                    var n = v(this, e, t);
                    this.currentPath_.push({type: "lineTo", x: n.x, y: n.y}), this.currentX_ = n.x, this.currentY_ = n.y
                }, Z.bezierCurveTo = function (e, t, n, a, i, o) {
                    var r = v(this, i, o), s = v(this, e, t), l = v(this, n, a);
                    b(this, s, l, r)
                }, Z.quadraticCurveTo = function (e, t, n, a) {
                    var i = v(this, e, t), o = v(this, n, a), r = {
                        x: this.currentX_ + 2 / 3 * (i.x - this.currentX_),
                        y: this.currentY_ + 2 / 3 * (i.y - this.currentY_)
                    }, s = {x: r.x + (o.x - this.currentX_) / 3, y: r.y + (o.y - this.currentY_) / 3};
                    b(this, r, s, o)
                }, Z.arc = function (e, t, n, a, i, o) {
                    n *= F;
                    var r = o ? "at" : "wa", s = e + T(a) * n - z, l = t + J(a) * n - z, h = e + T(i) * n - z, d = t + J(i) * n - z;
                    s != h || o || (s += .125);
                    var c = v(this, e, t), p = v(this, s, l), m = v(this, h, d);
                    this.currentPath_.push({
                        type: r,
                        x: c.x,
                        y: c.y,
                        radius: n,
                        xStart: p.x,
                        yStart: p.y,
                        xEnd: m.x,
                        yEnd: m.y
                    })
                }, Z.rect = function (e, t, n, a) {
                    this.moveTo(e, t), this.lineTo(e + n, t), this.lineTo(e + n, t + a), this.lineTo(e, t + a), this.closePath()
                }, Z.strokeRect = function (e, t, n, a) {
                    var i = this.currentPath_;
                    this.beginPath(), this.moveTo(e, t), this.lineTo(e + n, t), this.lineTo(e + n, t + a), this.lineTo(e, t + a), this.closePath(), this.stroke(), this.currentPath_ = i
                }, Z.fillRect = function (e, t, n, a) {
                    var i = this.currentPath_;
                    this.beginPath(), this.moveTo(e, t), this.lineTo(e + n, t), this.lineTo(e + n, t + a), this.lineTo(e, t + a), this.closePath(), this.fill(), this.currentPath_ = i
                }, Z.createLinearGradient = function (e, t, n, a) {
                    var i = new W("gradient");
                    return i.x0_ = e, i.y0_ = t, i.x1_ = n, i.y1_ = a, i
                }, Z.createRadialGradient = function (e, t, n, a, i, o) {
                    var r = new W("gradientradial");
                    return r.x0_ = e, r.y0_ = t, r.r0_ = n, r.x1_ = a, r.y1_ = i, r.r1_ = o, r
                }, Z.drawImage = function (e) {
                    var t, n, a, i, o, r, s, l, h = e.runtimeStyle.width, d = e.runtimeStyle.height;
                    e.runtimeStyle.width = "auto", e.runtimeStyle.height = "auto";
                    var c = e.width, p = e.height;
                    if (e.runtimeStyle.width = h, e.runtimeStyle.height = d, 3 == arguments.length)t = arguments[1], n = arguments[2], o = r = 0, s = a = c, l = i = p; else if (5 == arguments.length)t = arguments[1], n = arguments[2], a = arguments[3], i = arguments[4], o = r = 0, s = c, l = p; else {
                        if (9 != arguments.length)throw Error("Invalid number of arguments");
                        o = arguments[1], r = arguments[2], s = arguments[3], l = arguments[4], t = arguments[5], n = arguments[6], a = arguments[7], i = arguments[8]
                    }
                    var m = v(this, t, n), u = [], V = 10, U = 10, f = g = 1;
                    if (u.push(" <g_vml_:group", ' coordsize="', F * V, ",", F * U, '"', ' coordorigin="0,0"', ' style="width:', V, "px;height:", U, "px;position:absolute;"), 1 != this.m_[0][0] || this.m_[0][1] || 1 != this.m_[1][1] || this.m_[1][0]) {
                        var _ = [], f = this.scaleX_, g = this.scaleY_;
                        _.push("M11=", this.m_[0][0] / f, ",", "M12=", this.m_[1][0] / g, ",", "M21=", this.m_[0][1] / f, ",", "M22=", this.m_[1][1] / g, ",", "Dx=", E(m.x / F), ",", "Dy=", E(m.y / F), "");
                        var y = m, b = v(this, t + a, n), k = v(this, t, n + i), x = v(this, t + a, n + i);
                        y.x = C.max(y.x, b.x, k.x, x.x), y.y = C.max(y.y, b.y, k.y, x.y), u.push("padding:0 ", E(y.x / F), "px ", E(y.y / F), "px 0;filter:progid:DXImageTransform.Microsoft.Matrix(", _.join(""), ", SizingMethod='clip');")
                    } else u.push("top:", E(m.y / F), "px;left:", E(m.x / F), "px;");
                    u.push(' ">'), (o || r) && u.push('<div style="overflow: hidden; width:', Math.ceil((a + o * a / s) * f), "px;", " height:", Math.ceil((i + r * i / l) * g), "px;", " filter:progid:DxImageTransform.Microsoft.Matrix(Dx=", -o * a / s * f, ",Dy=", -r * i / l * g, ');">'), u.push('<div style="width:', Math.round(f * c * a / s), "px;", " height:", Math.round(g * p * i / l), "px;", " filter:"), this.globalAlpha < 1 && u.push(" progid:DXImageTransform.Microsoft.Alpha(opacity=" + 100 * this.globalAlpha + ")"), u.push(" progid:DXImageTransform.Microsoft.AlphaImageLoader(src=", e.src, ',sizingMethod=scale)">'), (o || r) && u.push("</div>"), u.push("</div></div>"), this.element_.insertAdjacentHTML("BeforeEnd", u.join(""))
                }, Z.stroke = function (e) {
                    var t = [], n = 10, a = 10;
                    t.push("<g_vml_:shape", ' filled="', !!e, '"', ' style="position:absolute;width:', n, "px;height:", a, 'px;"', ' coordorigin="0,0"', ' coordsize="', F * n, ",", F * a, '"', ' stroked="', !e, '"', ' path="');
                    for (var i = {x: null, y: null}, o = {x: null, y: null}, r = 0; r < this.currentPath_.length; r++) {
                        var s, l = this.currentPath_[r];
                        switch (l.type) {
                            case"moveTo":
                                s = l, t.push(" m ", E(l.x), ",", E(l.y));
                                break;
                            case"lineTo":
                                t.push(" l ", E(l.x), ",", E(l.y));
                                break;
                            case"close":
                                t.push(" x "), l = null;
                                break;
                            case"bezierCurveTo":
                                t.push(" c ", E(l.cp1x), ",", E(l.cp1y), ",", E(l.cp2x), ",", E(l.cp2y), ",", E(l.x), ",", E(l.y));
                                break;
                            case"at":
                            case"wa":
                                t.push(" ", l.type, " ", E(l.x - this.scaleX_ * l.radius), ",", E(l.y - this.scaleY_ * l.radius), " ", E(l.x + this.scaleX_ * l.radius), ",", E(l.y + this.scaleY_ * l.radius), " ", E(l.xStart), ",", E(l.yStart), " ", E(l.xEnd), ",", E(l.yEnd))
                        }
                        l && ((null == i.x || l.x < i.x) && (i.x = l.x), (null == o.x || l.x > o.x) && (o.x = l.x), (null == i.y || l.y < i.y) && (i.y = l.y), (null == o.y || l.y > o.y) && (o.y = l.y))
                    }
                    t.push(' ">'), e ? x(this, t, i, o) : k(this, t), t.push("</g_vml_:shape>"), this.element_.insertAdjacentHTML("beforeEnd", t.join(""))
                }, Z.fill = function () {
                    this.stroke(!0)
                }, Z.closePath = function () {
                    this.currentPath_.push({type: "close"})
                }, Z.save = function () {
                    var e = {};
                    h(this, e), this.aStack_.push(e), this.mStack_.push(this.m_), this.m_ = l(s(), this.m_)
                }, Z.restore = function () {
                    this.aStack_.length && (h(this.aStack_.pop(), this), this.m_ = this.mStack_.pop())
                }, Z.translate = function (e, t) {
                    var n = [[1, 0, 0], [0, 1, 0], [e, t, 1]];
                    w(this, l(n, this.m_), !1)
                }, Z.rotate = function (e) {
                    var t = T(e), n = J(e), a = [[t, n, 0], [-n, t, 0], [0, 0, 1]];
                    w(this, l(a, this.m_), !1)
                }, Z.scale = function (e, t) {
                    var n = [[e, 0, 0], [0, t, 0], [0, 0, 1]];
                    w(this, l(n, this.m_), !0)
                }, Z.transform = function (e, t, n, a, i, o) {
                    var r = [[e, t, 0], [n, a, 0], [i, o, 1]];
                    w(this, l(r, this.m_), !0)
                }, Z.setTransform = function (e, t, n, a, i, o) {
                    var r = [[e, t, 0], [n, a, 0], [i, o, 1]];
                    w(this, r, !0)
                }, Z.drawText_ = function (e, t, a, i, o) {
                    var r = this.m_, s = 1e3, l = 0, h = s, d = {
                        x: 0,
                        y: 0
                    }, c = [], p = f(U(this.font), this.element_), m = _(p), u = this.element_.currentStyle, V = this.textAlign.toLowerCase();
                    switch (V) {
                        case"left":
                        case"center":
                        case"right":
                            break;
                        case"end":
                            V = "ltr" == u.direction ? "right" : "left";
                            break;
                        case"start":
                            V = "rtl" == u.direction ? "right" : "left";
                            break;
                        default:
                            V = "left"
                    }
                    switch (this.textBaseline) {
                        case"hanging":
                        case"top":
                            d.y = p.size / 1.75;
                            break;
                        case"middle":
                            break;
                        default:
                        case null:
                        case"alphabetic":
                        case"ideographic":
                        case"bottom":
                            d.y = -p.size / 2.25
                    }
                    switch (V) {
                        case"right":
                            l = s, h = .05;
                            break;
                        case"center":
                            l = h = s / 2
                    }
                    var g = v(this, t + d.x, a + d.y);
                    c.push('<g_vml_:line from="', -l, ' 0" to="', h, ' 0.05" ', ' coordsize="100 100" coordorigin="0 0"', ' filled="', !o, '" stroked="', !!o, '" style="position:absolute;width:1px;height:1px;">'), o ? k(this, c) : x(this, c, {
                        x: -l,
                        y: 0
                    }, {x: h, y: p.size});
                    var y = r[0][0].toFixed(3) + "," + r[1][0].toFixed(3) + "," + r[0][1].toFixed(3) + "," + r[1][1].toFixed(3) + ",0,0", b = E(g.x / F) + "," + E(g.y / F);
                    c.push('<g_vml_:skew on="t" matrix="', y, '" ', ' offset="', b, '" origin="', l, ' 0" />', '<g_vml_:path textpathok="true" />', '<g_vml_:textpath on="true" string="', n(e), '" style="v-text-align:', V, ";font:", n(m), '" /></g_vml_:line>'), this.element_.insertAdjacentHTML("beforeEnd", c.join(""))
                }, Z.fillText = function (e, t, n, a) {
                    this.drawText_(e, t, n, a, !1)
                }, Z.strokeText = function (e, t, n, a) {
                    this.drawText_(e, t, n, a, !0)
                }, Z.measureText = function (e) {
                    if (!this.textMeasureEl_) {
                        var t = '<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;"></span>';
                        this.element_.insertAdjacentHTML("beforeEnd", t), this.textMeasureEl_ = this.element_.lastChild
                    }
                    var n = this.element_.ownerDocument;
                    this.textMeasureEl_.innerHTML = "";
                    try {
                        this.textMeasureEl_.style.font = this.font
                    } catch (a) {
                    }
                    return this.textMeasureEl_.appendChild(n.createTextNode(e)), {width: this.textMeasureEl_.offsetWidth}
                }, Z.clip = function () {
                }, Z.arcTo = function () {
                }, Z.createPattern = function (e, t) {
                    return new X(e, t)
                }, W.prototype.addColorStop = function (e, t) {
                    t = V(t), this.colors_.push({offset: e, color: t.color, alpha: t.alpha})
                };
                var Q = S.prototype = new Error;
                Q.INDEX_SIZE_ERR = 1, Q.DOMSTRING_SIZE_ERR = 2, Q.HIERARCHY_REQUEST_ERR = 3, Q.WRONG_DOCUMENT_ERR = 4, Q.INVALID_CHARACTER_ERR = 5, Q.NO_DATA_ALLOWED_ERR = 6, Q.NO_MODIFICATION_ALLOWED_ERR = 7, Q.NOT_FOUND_ERR = 8, Q.NOT_SUPPORTED_ERR = 9, Q.INUSE_ATTRIBUTE_ERR = 10, Q.INVALID_STATE_ERR = 11, Q.SYNTAX_ERR = 12, Q.INVALID_MODIFICATION_ERR = 13, Q.NAMESPACE_ERR = 14, Q.INVALID_ACCESS_ERR = 15, Q.VALIDATION_ERR = 16, Q.TYPE_MISMATCH_ERR = 17, G_vmlCanvasManager = P, CanvasRenderingContext2D = y, CanvasGradient = W, CanvasPattern = X, DOMException = S
            }(), G_vmlCanvasManager
        }), n("zrender/mixin/Eventful", ["require"], function () {
            var e = function () {
                this._handlers = {}
            };
            return e.prototype.one = function (e, t, n) {
                var a = this._handlers;
                return t && e ? (a[e] || (a[e] = []), a[e].push({h: t, one: !0, ctx: n || this}), this) : this
            }, e.prototype.bind = function (e, t, n) {
                var a = this._handlers;
                return t && e ? (a[e] || (a[e] = []), a[e].push({h: t, one: !1, ctx: n || this}), this) : this
            }, e.prototype.unbind = function (e, t) {
                var n = this._handlers;
                if (!e)return this._handlers = {}, this;
                if (t) {
                    if (n[e]) {
                        for (var a = [], i = 0, o = n[e].length; o > i; i++)n[e][i].h != t && a.push(n[e][i]);
                        n[e] = a
                    }
                    n[e] && 0 === n[e].length && delete n[e]
                } else delete n[e];
                return this
            }, e.prototype.dispatch = function (e) {
                if (this._handlers[e]) {
                    var t = arguments, n = t.length;
                    n > 3 && (t = Array.prototype.slice.call(t, 1));
                    for (var a = this._handlers[e], i = a.length, o = 0; i > o;) {
                        switch (n) {
                            case 1:
                                a[o].h.call(a[o].ctx);
                                break;
                            case 2:
                                a[o].h.call(a[o].ctx, t[1]);
                                break;
                            case 3:
                                a[o].h.call(a[o].ctx, t[1], t[2]);
                                break;
                            default:
                                a[o].h.apply(a[o].ctx, t)
                        }
                        a[o].one ? (a.splice(o, 1), i--) : o++
                    }
                }
                return this
            }, e.prototype.dispatchWithContext = function (e) {
                if (this._handlers[e]) {
                    var t = arguments, n = t.length;
                    n > 4 && (t = Array.prototype.slice.call(t, 1, t.length - 1));
                    for (var a = t[t.length - 1], i = this._handlers[e], o = i.length, r = 0; o > r;) {
                        switch (n) {
                            case 1:
                                i[r].h.call(a);
                                break;
                            case 2:
                                i[r].h.call(a, t[1]);
                                break;
                            case 3:
                                i[r].h.call(a, t[1], t[2]);
                                break;
                            default:
                                i[r].h.apply(a, t)
                        }
                        i[r].one ? (i.splice(r, 1), o--) : r++
                    }
                }
                return this
            }, e
        }), n("zrender/tool/log", ["require", "../config"], function (e) {
            var t = e("../config");
            return function () {
                if (0 !== t.debugMode)if (1 == t.debugMode)for (var e in arguments)throw new Error(arguments[e]); else if (t.debugMode > 1)for (var e in arguments)console.log(arguments[e])
            }
        }), n("zrender/tool/guid", [], function () {
            var e = 2311;
            return function () {
                return "zrender__" + e++
            }
        }), n("zrender/Handler", ["require", "./config", "./tool/env", "./tool/event", "./tool/util", "./tool/vector", "./tool/matrix", "./mixin/Eventful"], function (e) {
            "use strict";
            function t(e, t) {
                return function (n, a) {
                    return e.call(t, n, a)
                }
            }

            function n(e, t) {
                return function (n, a, i) {
                    return e.call(t, n, a, i)
                }
            }

            function a(e) {
                for (var n = m.length; n--;) {
                    var a = m[n];
                    e["_" + a + "Handler"] = t(V[a], e)
                }
            }

            function i(e, t, n) {
                if (this._draggingTarget && this._draggingTarget.id == e.id || e.isSilent())return !1;
                var a = this._event;
                if (e.isCover(t, n)) {
                    e.hoverable && this.storage.addHover(e);
                    for (var i = e.parent; i;) {
                        if (i.clipShape && !i.clipShape.isCover(this._mouseX, this._mouseY))return !1;
                        i = i.parent
                    }
                    return this._lastHover != e && (this._processOutShape(a), this._processDragLeave(a), this._lastHover = e, this._processDragEnter(a)), this._processOverShape(a), this._processDragOver(a), this._hasfound = 1, !0
                }
                return !1
            }

            var o = e("./config"), r = e("./tool/env"), s = e("./tool/event"), l = e("./tool/util"), h = e("./tool/vector"), d = e("./tool/matrix"), c = o.EVENT, p = e("./mixin/Eventful"), m = ["resize", "click", "dblclick", "mousewheel", "mousemove", "mouseout", "mouseup", "mousedown", "touchstart", "touchend", "touchmove"], u = function (e) {
                if (window.G_vmlCanvasManager)return !0;
                e = e || window.event;
                var t = e.toElement || e.relatedTarget || e.srcElement || e.target;
                return t && t.className.match(o.elementClassName)
            }, V = {
                resize: function (e) {
                    e = e || window.event, this._lastHover = null, this._isMouseDown = 0, this.dispatch(c.RESIZE, e)
                }, click: function (e, t) {
                    if (u(e) || t) {
                        e = this._zrenderEventFixed(e);
                        var n = this._lastHover;
                        (n && n.clickable || !n) && this._clickThreshold < 5 && this._dispatchAgency(n, c.CLICK, e), this._mousemoveHandler(e)
                    }
                }, dblclick: function (e, t) {
                    if (u(e) || t) {
                        e = e || window.event, e = this._zrenderEventFixed(e);
                        var n = this._lastHover;
                        (n && n.clickable || !n) && this._clickThreshold < 5 && this._dispatchAgency(n, c.DBLCLICK, e), this._mousemoveHandler(e)
                    }
                }, mousewheel: function (e, t) {
                    if (u(e) || t) {
                        e = this._zrenderEventFixed(e);
                        var n = e.wheelDelta || -e.detail, a = n > 0 ? 1.1 : 1 / 1.1, i = !1, o = this._mouseX, r = this._mouseY;
                        this.painter.eachBuildinLayer(function (t) {
                            var n = t.position;
                            if (t.zoomable) {
                                t.__zoom = t.__zoom || 1;
                                var l = t.__zoom;
                                l *= a, l = Math.max(Math.min(t.maxZoom, l), t.minZoom), a = l / t.__zoom, t.__zoom = l, n[0] -= (o - n[0]) * (a - 1), n[1] -= (r - n[1]) * (a - 1), t.scale[0] *= a, t.scale[1] *= a, t.dirty = !0, i = !0, s.stop(e)
                            }
                        }), i && this.painter.refresh(), this._dispatchAgency(this._lastHover, c.MOUSEWHEEL, e), this._mousemoveHandler(e)
                    }
                }, mousemove: function (e, t) {
                    if ((u(e) || t) && !this.painter.isLoading()) {
                        e = this._zrenderEventFixed(e), this._lastX = this._mouseX, this._lastY = this._mouseY, this._mouseX = s.getX(e), this._mouseY = s.getY(e);
                        var n = this._mouseX - this._lastX, a = this._mouseY - this._lastY;
                        this._processDragStart(e), this._hasfound = 0, this._event = e, this._iterateAndFindHover(), this._hasfound || ((!this._draggingTarget || this._lastHover && this._lastHover != this._draggingTarget) && (this._processOutShape(e), this._processDragLeave(e)), this._lastHover = null, this.storage.delHover(), this.painter.clearHover());
                        var i = "default";
                        if (this._draggingTarget)this.storage.drift(this._draggingTarget.id, n, a), this._draggingTarget.modSelf(), this.storage.addHover(this._draggingTarget), this._clickThreshold++; else if (this._isMouseDown) {
                            var o = !1;
                            this.painter.eachBuildinLayer(function (e) {
                                e.panable && (i = "move", e.position[0] += n, e.position[1] += a, o = !0, e.dirty = !0)
                            }), o && this.painter.refresh()
                        }
                        this._draggingTarget || this._hasfound && this._lastHover.draggable ? i = "move" : this._hasfound && this._lastHover.clickable && (i = "pointer"), this.root.style.cursor = i, this._dispatchAgency(this._lastHover, c.MOUSEMOVE, e), (this._draggingTarget || this._hasfound || this.storage.hasHoverShape()) && this.painter.refreshHover()
                    }
                }, mouseout: function (e, t) {
                    if (u(e) || t) {
                        e = this._zrenderEventFixed(e);
                        var n = e.toElement || e.relatedTarget;
                        if (n != this.root)for (; n && 9 != n.nodeType;) {
                            if (n == this.root)return void this._mousemoveHandler(e);
                            n = n.parentNode
                        }
                        e.zrenderX = this._lastX, e.zrenderY = this._lastY, this.root.style.cursor = "default", this._isMouseDown = 0, this._processOutShape(e), this._processDrop(e), this._processDragEnd(e), this.painter.isLoading() || this.painter.refreshHover(), this.dispatch(c.GLOBALOUT, e)
                    }
                }, mousedown: function (e, t) {
                    if (u(e) || t) {
                        if (this._clickThreshold = 0, 2 == this._lastDownButton)return this._lastDownButton = e.button, void(this._mouseDownTarget = null);
                        this._lastMouseDownMoment = new Date, e = this._zrenderEventFixed(e), this._isMouseDown = 1, this._mouseDownTarget = this._lastHover, this._dispatchAgency(this._lastHover, c.MOUSEDOWN, e), this._lastDownButton = e.button
                    }
                }, mouseup: function (e, t) {
                    (u(e) || t) && (e = this._zrenderEventFixed(e), this.root.style.cursor = "default", this._isMouseDown = 0, this._mouseDownTarget = null, this._dispatchAgency(this._lastHover, c.MOUSEUP, e), this._processDrop(e), this._processDragEnd(e))
                }, touchstart: function (e, t) {
                    (u(e) || t) && (e = this._zrenderEventFixed(e, !0), this._lastTouchMoment = new Date, this._mobileFindFixed(e), this._mousedownHandler(e))
                }, touchmove: function (e, t) {
                    (u(e) || t) && (e = this._zrenderEventFixed(e, !0), this._mousemoveHandler(e), this._isDragging && s.stop(e))
                }, touchend: function (e, t) {
                    if (u(e) || t) {
                        e = this._zrenderEventFixed(e, !0), this._mouseupHandler(e);
                        var n = new Date;
                        n - this._lastTouchMoment < c.touchClickDelay && (this._mobileFindFixed(e), this._clickHandler(e), n - this._lastClickMoment < c.touchClickDelay / 2 && (this._dblclickHandler(e), this._lastHover && this._lastHover.clickable && s.stop(e)), this._lastClickMoment = n), this.painter.clearHover()
                    }
                }
            }, U = function (e, t, o) {
                p.call(this), this.root = e, this.storage = t, this.painter = o, this._lastX = this._lastY = this._mouseX = this._mouseY = 0, this._findHover = n(i, this), this._domHover = o.getDomHover(), a(this), window.addEventListener ? (window.addEventListener("resize", this._resizeHandler), r.os.tablet || r.os.phone ? (e.addEventListener("touchstart", this._touchstartHandler), e.addEventListener("touchmove", this._touchmoveHandler), e.addEventListener("touchend", this._touchendHandler)) : (e.addEventListener("click", this._clickHandler), e.addEventListener("dblclick", this._dblclickHandler), e.addEventListener("mousewheel", this._mousewheelHandler), e.addEventListener("mousemove", this._mousemoveHandler), e.addEventListener("mousedown", this._mousedownHandler), e.addEventListener("mouseup", this._mouseupHandler)), e.addEventListener("DOMMouseScroll", this._mousewheelHandler), e.addEventListener("mouseout", this._mouseoutHandler)) : (window.attachEvent("onresize", this._resizeHandler), e.attachEvent("onclick", this._clickHandler), e.ondblclick = this._dblclickHandler, e.attachEvent("onmousewheel", this._mousewheelHandler), e.attachEvent("onmousemove", this._mousemoveHandler), e.attachEvent("onmouseout", this._mouseoutHandler), e.attachEvent("onmousedown", this._mousedownHandler), e.attachEvent("onmouseup", this._mouseupHandler))
            };
            U.prototype.on = function (e, t, n) {
                return this.bind(e, t, n), this
            }, U.prototype.un = function (e, t) {
                return this.unbind(e, t), this
            }, U.prototype.trigger = function (e, t) {
                switch (e) {
                    case c.RESIZE:
                    case c.CLICK:
                    case c.DBLCLICK:
                    case c.MOUSEWHEEL:
                    case c.MOUSEMOVE:
                    case c.MOUSEDOWN:
                    case c.MOUSEUP:
                    case c.MOUSEOUT:
                        this["_" + e + "Handler"](t, !0)
                }
            }, U.prototype.dispose = function () {
                var e = this.root;
                window.removeEventListener ? (window.removeEventListener("resize", this._resizeHandler), r.os.tablet || r.os.phone ? (e.removeEventListener("touchstart", this._touchstartHandler), e.removeEventListener("touchmove", this._touchmoveHandler), e.removeEventListener("touchend", this._touchendHandler)) : (e.removeEventListener("click", this._clickHandler), e.removeEventListener("dblclick", this._dblclickHandler), e.removeEventListener("mousewheel", this._mousewheelHandler), e.removeEventListener("mousemove", this._mousemoveHandler), e.removeEventListener("mousedown", this._mousedownHandler), e.removeEventListener("mouseup", this._mouseupHandler)), e.removeEventListener("DOMMouseScroll", this._mousewheelHandler), e.removeEventListener("mouseout", this._mouseoutHandler)) : (window.detachEvent("onresize", this._resizeHandler), e.detachEvent("onclick", this._clickHandler), e.detachEvent("dblclick", this._dblclickHandler), e.detachEvent("onmousewheel", this._mousewheelHandler), e.detachEvent("onmousemove", this._mousemoveHandler), e.detachEvent("onmouseout", this._mouseoutHandler), e.detachEvent("onmousedown", this._mousedownHandler), e.detachEvent("onmouseup", this._mouseupHandler)), this.root = this._domHover = this.storage = this.painter = null, this.un()
            }, U.prototype._processDragStart = function (e) {
                var t = this._lastHover;
                if (this._isMouseDown && t && t.draggable && !this._draggingTarget && this._mouseDownTarget == t) {
                    if (t.dragEnableTime && new Date - this._lastMouseDownMoment < t.dragEnableTime)return;
                    var n = t;
                    this._draggingTarget = n, this._isDragging = 1, n.invisible = !0, this.storage.mod(n.id), this._dispatchAgency(n, c.DRAGSTART, e), this.painter.refresh()
                }
            }, U.prototype._processDragEnter = function (e) {
                this._draggingTarget && this._dispatchAgency(this._lastHover, c.DRAGENTER, e, this._draggingTarget)
            }, U.prototype._processDragOver = function (e) {
                this._draggingTarget && this._dispatchAgency(this._lastHover, c.DRAGOVER, e, this._draggingTarget)
            }, U.prototype._processDragLeave = function (e) {
                this._draggingTarget && this._dispatchAgency(this._lastHover, c.DRAGLEAVE, e, this._draggingTarget)
            }, U.prototype._processDrop = function (e) {
                this._draggingTarget && (this._draggingTarget.invisible = !1, this.storage.mod(this._draggingTarget.id), this.painter.refresh(), this._dispatchAgency(this._lastHover, c.DROP, e, this._draggingTarget))
            }, U.prototype._processDragEnd = function (e) {
                this._draggingTarget && (this._dispatchAgency(this._draggingTarget, c.DRAGEND, e), this._lastHover = null), this._isDragging = 0, this._draggingTarget = null
            }, U.prototype._processOverShape = function (e) {
                this._dispatchAgency(this._lastHover, c.MOUSEOVER, e)
            }, U.prototype._processOutShape = function (e) {
                this._dispatchAgency(this._lastHover, c.MOUSEOUT, e)
            }, U.prototype._dispatchAgency = function (e, t, n, a) {
                var i = "on" + t, o = {type: t, event: n, target: e, cancelBubble: !1}, r = e;
                for (a && (o.dragged = a); r && (r[i] && (o.cancelBubble = r[i](o)), r.dispatch(t, o), r = r.parent, !o.cancelBubble););
                if (e)o.cancelBubble || this.dispatch(t, o); else if (!a) {
                    var s = {type: t, event: n};
                    this.dispatch(t, s), this.painter.eachOtherLayer(function (e) {
                        "function" == typeof e[i] && e[i](s), e.dispatch && e.dispatch(t, s)
                    })
                }
            }, U.prototype._iterateAndFindHover = function () {
                var e = d.create();
                return function () {
                    for (var t, n, a = this.storage.getShapeList(), i = [0, 0], o = a.length - 1; o >= 0; o--) {
                        var r = a[o];
                        if (t !== r.zlevel && (n = this.painter.getLayer(r.zlevel, n), i[0] = this._mouseX, i[1] = this._mouseY, n.needTransform && (d.invert(e, n.transform), h.applyTransform(i, i, e))), this._findHover(r, i[0], i[1]))break
                    }
                }
            }();
            var f = [{x: 10}, {x: -20}, {x: 10, y: 10}, {y: -20}];
            return U.prototype._mobileFindFixed = function (e) {
                this._lastHover = null, this._mouseX = e.zrenderX, this._mouseY = e.zrenderY, this._event = e, this._iterateAndFindHover();
                for (var t = 0; !this._lastHover && t < f.length; t++) {
                    var n = f[t];
                    n.x && (this._mouseX += n.x), n.y && (this._mouseY += n.y), this._iterateAndFindHover()
                }
                this._lastHover && (e.zrenderX = this._mouseX, e.zrenderY = this._mouseY)
            }, U.prototype._zrenderEventFixed = function (e, t) {
                if (e.zrenderFixed)return e;
                if (t) {
                    var n = "touchend" != e.type ? e.targetTouches[0] : e.changedTouches[0];
                    if (n) {
                        var a = this.painter._domRoot.getBoundingClientRect();
                        e.zrenderX = n.clientX - a.left, e.zrenderY = n.clientY - a.top
                    }
                } else {
                    e = e || window.event;
                    var i = e.toElement || e.relatedTarget || e.srcElement || e.target;
                    i && i != this._domHover && (e.zrenderX = ("undefined" != typeof e.offsetX ? e.offsetX : e.layerX) + i.offsetLeft, e.zrenderY = ("undefined" != typeof e.offsetY ? e.offsetY : e.layerY) + i.offsetTop)
                }
                return e.zrenderFixed = 1, e
            }, l.merge(U.prototype, p.prototype, !0), U
        }), n("zrender/Painter", ["require", "./config", "./tool/util", "./tool/log", "./loadingEffect/Base", "./Layer", "./shape/Image"], function (e) {
            "use strict";
            function t() {
                return !1
            }

            function n() {
            }

            function a(e) {
                return e ? e.isBuildin ? !0 : "function" != typeof e.resize || "function" != typeof e.refresh ? !1 : !0 : !1
            }

            var i = e("./config"), o = e("./tool/util"), r = e("./tool/log"), s = e("./loadingEffect/Base"), l = e("./Layer"), h = function (e, n) {
                this.root = e, e.style["-webkit-tap-highlight-color"] = "transparent", e.style["-webkit-user-select"] = "none", e.style["user-select"] = "none", e.style["-webkit-touch-callout"] = "none", this.storage = n, e.innerHTML = "", this._width = this._getWidth(), this._height = this._getHeight();
                var a = document.createElement("div");
                this._domRoot = a, a.style.position = "relative", a.style.overflow = "hidden", a.style.width = this._width + "px", a.style.height = this._height + "px", e.appendChild(a), this._layers = {}, this._zlevelList = [], this._layerConfig = {}, this._loadingEffect = new s({}), this.shapeToImage = this._createShapeToImageProcessor(), this._bgDom = document.createElement("div"), this._bgDom.style.cssText = ["position:absolute;left:0px;top:0px;width:", this._width, "px;height:", this._height + "px;", "-webkit-user-select:none;user-select;none;", "-webkit-touch-callout:none;"].join(""), this._bgDom.setAttribute("data-zr-dom-id", "bg"), this._bgDom.className = i.elementClassName, a.appendChild(this._bgDom), this._bgDom.onselectstart = t;
                var o = new l("_zrender_hover_", this);
                this._layers.hover = o, a.appendChild(o.dom), o.initContext(), o.dom.onselectstart = t, o.dom.style["-webkit-user-select"] = "none", o.dom.style["user-select"] = "none", o.dom.style["-webkit-touch-callout"] = "none", this.refreshNextFrame = null
            };
            return h.prototype.render = function (e) {
                return this.isLoading() && this.hideLoading(), this.refresh(e, !0), this
            }, h.prototype.refresh = function (e, t) {
                var n = this.storage.getShapeList(!0);
                this._paintList(n, t);
                for (var a = 0; a < this._zlevelList.length; a++) {
                    var i = this._zlevelList[a], o = this._layers[i];
                    !o.isBuildin && o.refresh && o.refresh()
                }
                return "function" == typeof e && e(), this
            }, h.prototype._preProcessLayer = function (e) {
                e.unusedCount++, e.updateTransform()
            }, h.prototype._postProcessLayer = function (e) {
                e.dirty = !1, 1 == e.unusedCount && e.clear()
            }, h.prototype._paintList = function (e, t) {
                "undefined" == typeof t && (t = !1), this._updateLayerStatus(e);
                var n, a, o;
                this.eachBuildinLayer(this._preProcessLayer);
                for (var s = 0, l = e.length; l > s; s++) {
                    var h = e[s];
                    if (a !== h.zlevel && (n && (n.needTransform && o.restore(), o.flush && o.flush()), a = h.zlevel, n = this.getLayer(a), n.isBuildin || r("ZLevel " + a + " has been used by unkown layer " + n.id), o = n.ctx, n.unusedCount = 0, (n.dirty || t) && n.clear(), n.needTransform && (o.save(), n.setTransform(o))), (n.dirty || t) && !h.invisible && (!h.onbrush || h.onbrush && !h.onbrush(o, !1)))if (i.catchBrushException)try {
                        h.brush(o, !1, this.refreshNextFrame)
                    } catch (d) {
                        r(d, "brush error of " + h.type, h)
                    } else h.brush(o, !1, this.refreshNextFrame);
                    h.__dirty = !1
                }
                n && (n.needTransform && o.restore(), o.flush && o.flush()), this.eachBuildinLayer(this._postProcessLayer)
            }, h.prototype.getLayer = function (e) {
                var t = this._layers[e];
                return t || (t = new l(e, this), t.isBuildin = !0, this._layerConfig[e] && o.merge(t, this._layerConfig[e], !0), t.updateTransform(), this.insertLayer(e, t), t.initContext()), t
            }, h.prototype.insertLayer = function (e, t) {
                if (this._layers[e])return void r("ZLevel " + e + " has been used already");
                if (!a(t))return void r("Layer of zlevel " + e + " is not valid");
                var n = this._zlevelList.length, i = null, o = -1;
                if (n > 0 && e > this._zlevelList[0]) {
                    for (o = 0; n - 1 > o && !(this._zlevelList[o] < e && this._zlevelList[o + 1] > e); o++);
                    i = this._layers[this._zlevelList[o]]
                }
                this._zlevelList.splice(o + 1, 0, e);
                var s = i ? i.dom : this._bgDom;
                s.nextSibling ? s.parentNode.insertBefore(t.dom, s.nextSibling) : s.parentNode.appendChild(t.dom), this._layers[e] = t
            }, h.prototype.eachLayer = function (e, t) {
                for (var n = 0; n < this._zlevelList.length; n++) {
                    var a = this._zlevelList[n];
                    e.call(t, this._layers[a], a)
                }
            }, h.prototype.eachBuildinLayer = function (e, t) {
                for (var n = 0; n < this._zlevelList.length; n++) {
                    var a = this._zlevelList[n], i = this._layers[a];
                    i.isBuildin && e.call(t, i, a)
                }
            }, h.prototype.eachOtherLayer = function (e, t) {
                for (var n = 0; n < this._zlevelList.length; n++) {
                    var a = this._zlevelList[n], i = this._layers[a];
                    i.isBuildin || e.call(t, i, a)
                }
            }, h.prototype.getLayers = function () {
                return this._layers
            }, h.prototype._updateLayerStatus = function (e) {
                var t = this._layers, n = {};
                this.eachBuildinLayer(function (e, t) {
                    n[t] = e.elCount, e.elCount = 0
                });
                for (var a = 0, i = e.length; i > a; a++) {
                    var o = e[a], r = o.zlevel, s = t[r];
                    if (s) {
                        if (s.elCount++, s.dirty)continue;
                        s.dirty = o.__dirty
                    }
                }
                this.eachBuildinLayer(function (e, t) {
                    n[t] !== e.elCount && (e.dirty = !0)
                })
            }, h.prototype.refreshShapes = function (e, t) {
                for (var n = 0, a = e.length; a > n; n++) {
                    var i = e[n];
                    i.modSelf()
                }
                return this.refresh(t), this
            }, h.prototype.setLoadingEffect = function (e) {
                return this._loadingEffect = e, this
            }, h.prototype.clear = function () {
                return this.eachBuildinLayer(this._clearLayer), this
            }, h.prototype._clearLayer = function (e) {
                e.clear()
            }, h.prototype.modLayer = function (e, t) {
                if (t) {
                    this._layerConfig[e] ? o.merge(this._layerConfig[e], t, !0) : this._layerConfig[e] = t;
                    var n = this._layers[e];
                    n && o.merge(n, this._layerConfig[e], !0)
                }
            }, h.prototype.delLayer = function (e) {
                var t = this._layers[e];
                t && (this.modLayer(e, {
                    position: t.position,
                    rotation: t.rotation,
                    scale: t.scale
                }), t.dom.parentNode.removeChild(t.dom), delete this._layers[e], this._zlevelList.splice(o.indexOf(this._zlevelList, e), 1))
            }, h.prototype.refreshHover = function () {
                this.clearHover();
                for (var e = this.storage.getHoverShapes(!0), t = 0, n = e.length; n > t; t++)this._brushHover(e[t]);
                var a = this._layers.hover.ctx;
                return a.flush && a.flush(), this.storage.delHover(), this
            }, h.prototype.clearHover = function () {
                var e = this._layers.hover;
                return e && e.clear(), this
            }, h.prototype.showLoading = function (e) {
                return this._loadingEffect && this._loadingEffect.stop(), e && this.setLoadingEffect(e), this._loadingEffect.start(this), this.loading = !0, this
            }, h.prototype.hideLoading = function () {
                return this._loadingEffect.stop(), this.clearHover(), this.loading = !1, this
            }, h.prototype.isLoading = function () {
                return this.loading
            }, h.prototype.resize = function () {
                var e = this._domRoot;
                e.style.display = "none";
                var t = this._getWidth(), n = this._getHeight();
                if (e.style.display = "", this._width != t || n != this._height) {
                    this._width = t, this._height = n, e.style.width = t + "px", e.style.height = n + "px";
                    for (var a in this._layers)this._layers[a].resize(t, n);
                    this.refresh(null, !0)
                }
                return this
            }, h.prototype.clearLayer = function (e) {
                var t = this._layers[e];
                t && t.clear()
            }, h.prototype.dispose = function () {
                this.isLoading() && this.hideLoading(), this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null
            }, h.prototype.getDomHover = function () {
                return this._layers.hover.dom
            }, h.prototype.toDataURL = function (e, t, n) {
                if (window.G_vmlCanvasManager)return null;
                var a = new l("image", this);
                this._bgDom.appendChild(a.dom), a.initContext();
                var o = a.ctx;
                a.clearColor = t || "#fff", a.clear();
                var s = this;
                this.storage.iterShape(function (e) {
                    if (!e.invisible && (!e.onbrush || e.onbrush && !e.onbrush(o, !1)))if (i.catchBrushException)try {
                        e.brush(o, !1, s.refreshNextFrame)
                    } catch (t) {
                        r(t, "brush error of " + e.type, e)
                    } else e.brush(o, !1, s.refreshNextFrame)
                }, {normal: "up", update: !0});
                var h = a.dom.toDataURL(e, n);
                return o = null, this._bgDom.removeChild(a.dom), h
            }, h.prototype.getWidth = function () {
                return this._width
            }, h.prototype.getHeight = function () {
                return this._height
            }, h.prototype._getWidth = function () {
                var e = this.root, t = e.currentStyle || document.defaultView.getComputedStyle(e);
                return ((e.clientWidth || parseInt(t.width, 10)) - parseInt(t.paddingLeft, 10) - parseInt(t.paddingRight, 10)).toFixed(0) - 0
            }, h.prototype._getHeight = function () {
                var e = this.root, t = e.currentStyle || document.defaultView.getComputedStyle(e);
                return ((e.clientHeight || parseInt(t.height, 10)) - parseInt(t.paddingTop, 10) - parseInt(t.paddingBottom, 10)).toFixed(0) - 0
            }, h.prototype._brushHover = function (e) {
                var t = this._layers.hover.ctx;
                if (!e.onbrush || e.onbrush && !e.onbrush(t, !0)) {
                    var n = this.getLayer(e.zlevel);
                    if (n.needTransform && (t.save(), n.setTransform(t)), i.catchBrushException)try {
                        e.brush(t, !0, this.refreshNextFrame)
                    } catch (a) {
                        r(a, "hoverBrush error of " + e.type, e)
                    } else e.brush(t, !0, this.refreshNextFrame);
                    n.needTransform && t.restore()
                }
            }, h.prototype._shapeToImage = function (t, n, a, i, o) {
                var r = document.createElement("canvas"), s = r.getContext("2d");
                r.style.width = a + "px", r.style.height = i + "px", r.setAttribute("width", a * o), r.setAttribute("height", i * o), s.clearRect(0, 0, a * o, i * o);
                var l = {position: n.position, rotation: n.rotation, scale: n.scale};
                n.position = [0, 0, 0], n.rotation = 0, n.scale = [1, 1], n && n.brush(s, !1);
                var h = e("./shape/Image"), d = new h({id: t, style: {x: 0, y: 0, image: r}});
                return null != l.position && (d.position = n.position = l.position), null != l.rotation && (d.rotation = n.rotation = l.rotation), null != l.scale && (d.scale = n.scale = l.scale), d
            }, h.prototype._createShapeToImageProcessor = function () {
                if (window.G_vmlCanvasManager)return n;
                var e = this;
                return function (t, n, a, o) {
                    return e._shapeToImage(t, n, a, o, i.devicePixelRatio)
                }
            }, h
        }), n("zrender/Storage", ["require", "./tool/util", "./Group"], function (e) {
            "use strict";
            function t(e, t) {
                return e.zlevel == t.zlevel ? e.z == t.z ? e.__renderidx - t.__renderidx : e.z - t.z : e.zlevel - t.zlevel
            }

            var n = e("./tool/util"), a = e("./Group"), i = {hover: !1, normal: "down", update: !1}, o = function () {
                this._elements = {}, this._hoverElements = [], this._roots = [], this._shapeList = [], this._shapeListOffset = 0
            };
            return o.prototype.iterShape = function (e, t) {
                if (t || (t = i), t.hover)for (var n = 0, a = this._hoverElements.length; a > n; n++) {
                    var o = this._hoverElements[n];
                    if (o.updateTransform(), e(o))return this
                }
                switch (t.update && this.updateShapeList(), t.normal) {
                    case"down":
                        for (var a = this._shapeList.length; a--;)if (e(this._shapeList[a]))return this;
                        break;
                    default:
                        for (var n = 0, a = this._shapeList.length; a > n; n++)if (e(this._shapeList[n]))return this
                }
                return this
            }, o.prototype.getHoverShapes = function (e) {
                for (var n = [], a = 0, i = this._hoverElements.length; i > a; a++) {
                    n.push(this._hoverElements[a]);
                    var o = this._hoverElements[a].hoverConnect;
                    if (o) {
                        var r;
                        o = o instanceof Array ? o : [o];
                        for (var s = 0, l = o.length; l > s; s++)r = o[s].id ? o[s] : this.get(o[s]), r && n.push(r)
                    }
                }
                if (n.sort(t), e)for (var a = 0, i = n.length; i > a; a++)n[a].updateTransform();
                return n
            }, o.prototype.getShapeList = function (e) {
                return e && this.updateShapeList(), this._shapeList
            }, o.prototype.updateShapeList = function () {
                this._shapeListOffset = 0;
                for (var e = 0, n = this._roots.length; n > e; e++) {
                    var a = this._roots[e];
                    this._updateAndAddShape(a)
                }
                this._shapeList.length = this._shapeListOffset;
                for (var e = 0, n = this._shapeList.length; n > e; e++)this._shapeList[e].__renderidx = e;
                this._shapeList.sort(t)
            }, o.prototype._updateAndAddShape = function (e, t) {
                if (!e.ignore)if (e.updateTransform(), e.clipShape && (e.clipShape.parent = e, e.clipShape.updateTransform(), t ? (t = t.slice(), t.push(e.clipShape)) : t = [e.clipShape]), "group" == e.type) {
                    for (var n = 0; n < e._children.length; n++) {
                        var a = e._children[n];
                        a.__dirty = e.__dirty || a.__dirty, this._updateAndAddShape(a, t)
                    }
                    e.__dirty = !1
                } else e.__clipShapes = t, this._shapeList[this._shapeListOffset++] = e
            }, o.prototype.mod = function (e, t) {
                if ("string" == typeof e && (e = this._elements[e]), e && (e.modSelf(), t))if (t.parent || t._storage || t.__clipShapes) {
                    var a = {};
                    for (var i in t)"parent" !== i && "_storage" !== i && "__clipShapes" !== i && t.hasOwnProperty(i) && (a[i] = t[i]);
                    n.merge(e, a, !0)
                } else n.merge(e, t, !0);
                return this
            }, o.prototype.drift = function (e, t, n) {
                var a = this._elements[e];
                return a && (a.needTransform = !0, "horizontal" === a.draggable ? n = 0 : "vertical" === a.draggable && (t = 0), (!a.ondrift || a.ondrift && !a.ondrift(t, n)) && a.drift(t, n)), this
            }, o.prototype.addHover = function (e) {
                return e.updateNeedTransform(), this._hoverElements.push(e), this
            }, o.prototype.delHover = function () {
                return this._hoverElements = [], this
            }, o.prototype.hasHoverShape = function () {
                return this._hoverElements.length > 0
            }, o.prototype.addRoot = function (e) {
                this._elements[e.id] || (e instanceof a && e.addChildrenToStorage(this), this.addToMap(e), this._roots.push(e))
            }, o.prototype.delRoot = function (e) {
                if ("undefined" == typeof e) {
                    for (var t = 0; t < this._roots.length; t++) {
                        var i = this._roots[t];
                        i instanceof a && i.delChildrenFromStorage(this)
                    }
                    return this._elements = {}, this._hoverElements = [], this._roots = [], this._shapeList = [], void(this._shapeListOffset = 0)
                }
                if (e instanceof Array)for (var t = 0, o = e.length; o > t; t++)this.delRoot(e[t]); else {
                    var r;
                    r = "string" == typeof e ? this._elements[e] : e;
                    var s = n.indexOf(this._roots, r);
                    s >= 0 && (this.delFromMap(r.id), this._roots.splice(s, 1), r instanceof a && r.delChildrenFromStorage(this))
                }
            }, o.prototype.addToMap = function (e) {
                return e instanceof a && (e._storage = this), e.modSelf(), this._elements[e.id] = e, this
            }, o.prototype.get = function (e) {
                return this._elements[e]
            }, o.prototype.delFromMap = function (e) {
                var t = this._elements[e];
                return t && (delete this._elements[e], t instanceof a && (t._storage = null)), this
            }, o.prototype.dispose = function () {
                this._elements = this._renderList = this._roots = this._hoverElements = null
            }, o
        }), n("zrender/animation/Animation", ["require", "./Clip", "../tool/color", "../tool/util", "../tool/event"], function (e) {
            "use strict";
            function t(e, t) {
                return e[t]
            }

            function n(e, t, n) {
                e[t] = n
            }

            function a(e, t, n) {
                return (t - e) * n + e
            }

            function i(e, t, n, i, o) {
                var r = e.length;
                if (1 == o)for (var s = 0; r > s; s++)i[s] = a(e[s], t[s], n); else for (var l = e[0].length, s = 0; r > s; s++)for (var h = 0; l > h; h++)i[s][h] = a(e[s][h], t[s][h], n)
            }

            function o(e) {
                switch (typeof e) {
                    case"undefined":
                    case"string":
                        return !1
                }
                return "undefined" != typeof e.length
            }

            function r(e, t, n, a, i, o, r, l, h) {
                var d = e.length;
                if (1 == h)for (var c = 0; d > c; c++)l[c] = s(e[c], t[c], n[c], a[c], i, o, r); else for (var p = e[0].length, c = 0; d > c; c++)for (var m = 0; p > m; m++)l[c][m] = s(e[c][m], t[c][m], n[c][m], a[c][m], i, o, r)
            }

            function s(e, t, n, a, i, o, r) {
                var s = .5 * (n - e), l = .5 * (a - t);
                return (2 * (t - n) + s + l) * r + (-3 * (t - n) - 2 * s - l) * o + s * i + t
            }

            function l(e) {
                if (o(e)) {
                    var t = e.length;
                    if (o(e[0])) {
                        for (var n = [], a = 0; t > a; a++)n.push(V.call(e[a]));
                        return n
                    }
                    return V.call(e)
                }
                return e
            }

            function h(e) {
                return e[0] = Math.floor(e[0]), e[1] = Math.floor(e[1]), e[2] = Math.floor(e[2]), "rgba(" + e.join(",") + ")"
            }

            var d = e("./Clip"), c = e("../tool/color"), p = e("../tool/util"), m = e("../tool/event").Dispatcher, u = window.requestAnimationFrame || window.msRequestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (e) {
                    setTimeout(e, 16)
                }, V = Array.prototype.slice, U = function (e) {
                e = e || {}, this.stage = e.stage || {}, this.onframe = e.onframe || function () {
                }, this._clips = [], this._running = !1, this._time = 0, m.call(this)
            };
            U.prototype = {
                add: function (e) {
                    this._clips.push(e)
                }, remove: function (e) {
                    if (e.__inStep)e.__needsRemove = !0; else {
                        var t = p.indexOf(this._clips, e);
                        t >= 0 && this._clips.splice(t, 1)
                    }
                }, _update: function () {
                    for (var e = (new Date).getTime(), t = e - this._time, n = this._clips, a = n.length, i = [], o = [], r = 0; a > r; r++) {
                        var s = n[r];
                        s.__inStep = !0;
                        var l = s.step(e);
                        s.__inStep = !1, l && (i.push(l), o.push(s))
                    }
                    for (var r = 0; a > r;)n[r].__needsRemove ? (n[r] = n[a - 1], n.pop(), a--) : r++;
                    a = i.length;
                    for (var r = 0; a > r; r++)o[r].fire(i[r]);
                    this._time = e, this.onframe(t), this.dispatch("frame", t), this.stage.update && this.stage.update()
                }, start: function () {
                    function e() {
                        t._running && (u(e), t._update())
                    }

                    var t = this;
                    this._running = !0, this._time = (new Date).getTime(), u(e)
                }, stop: function () {
                    this._running = !1
                }, clear: function () {
                    this._clips = []
                }, animate: function (e, t) {
                    t = t || {};
                    var n = new f(e, t.loop, t.getter, t.setter);
                    return n.animation = this, n
                }, constructor: U
            }, p.merge(U.prototype, m.prototype, !0);
            var f = function (e, a, i, o) {
                this._tracks = {}, this._target = e, this._loop = a || !1, this._getter = i || t, this._setter = o || n, this._clipCount = 0, this._delay = 0, this._doneList = [], this._onframeList = [], this._clipList = []
            };
            return f.prototype = {
                when: function (e, t) {
                    for (var n in t)this._tracks[n] || (this._tracks[n] = [], 0 !== e && this._tracks[n].push({
                        time: 0,
                        value: l(this._getter(this._target, n))
                    })), this._tracks[n].push({time: parseInt(e, 10), value: t[n]});
                    return this
                }, during: function (e) {
                    return this._onframeList.push(e), this
                }, start: function (e) {
                    var t = this, n = this._setter, l = this._getter, p = "spline" === e, m = function () {
                        if (t._clipCount--, 0 === t._clipCount) {
                            t._tracks = {};
                            for (var e = t._doneList.length, n = 0; e > n; n++)t._doneList[n].call(t)
                        }
                    }, u = function (u, V) {
                        var U = u.length;
                        if (U) {
                            var f = u[0].value, _ = o(f), g = !1, y = _ && o(f[0]) ? 2 : 1;
                            u.sort(function (e, t) {
                                return e.time - t.time
                            });
                            var b;
                            if (U) {
                                b = u[U - 1].time;
                                for (var k = [], x = [], v = 0; U > v; v++) {
                                    k.push(u[v].time / b);
                                    var L = u[v].value;
                                    "string" == typeof L && (L = c.toArray(L), 0 === L.length && (L[0] = L[1] = L[2] = 0, L[3] = 1), g = !0), x.push(L)
                                }
                                var w, v, W, X, I, K, S, C = 0, E = 0;
                                if (g)var J = [0, 0, 0, 0];
                                var T = function (e, o) {
                                    if (E > o) {
                                        for (w = Math.min(C + 1, U - 1), v = w; v >= 0 && !(k[v] <= o); v--);
                                        v = Math.min(v, U - 2)
                                    } else {
                                        for (v = C; U > v && !(k[v] > o); v++);
                                        v = Math.min(v - 1, U - 2)
                                    }
                                    C = v, E = o;
                                    var d = k[v + 1] - k[v];
                                    if (0 !== d) {
                                        if (W = (o - k[v]) / d, p)if (I = x[v], X = x[0 === v ? v : v - 1], K = x[v > U - 2 ? U - 1 : v + 1], S = x[v > U - 3 ? U - 1 : v + 2], _)r(X, I, K, S, W, W * W, W * W * W, l(e, V), y); else {
                                            var c;
                                            g ? (c = r(X, I, K, S, W, W * W, W * W * W, J, 1), c = h(J)) : c = s(X, I, K, S, W, W * W, W * W * W), n(e, V, c)
                                        } else if (_)i(x[v], x[v + 1], W, l(e, V), y); else {
                                            var c;
                                            g ? (i(x[v], x[v + 1], W, J, 1), c = h(J)) : c = a(x[v], x[v + 1], W), n(e, V, c)
                                        }
                                        for (v = 0; v < t._onframeList.length; v++)t._onframeList[v](e, o)
                                    }
                                }, M = new d({
                                    target: t._target,
                                    life: b,
                                    loop: t._loop,
                                    delay: t._delay,
                                    onframe: T,
                                    ondestroy: m
                                });
                                e && "spline" !== e && (M.easing = e), t._clipList.push(M), t._clipCount++, t.animation.add(M)
                            }
                        }
                    };
                    for (var V in this._tracks)u(this._tracks[V], V);
                    return this
                }, stop: function () {
                    for (var e = 0; e < this._clipList.length; e++) {
                        var t = this._clipList[e];
                        this.animation.remove(t)
                    }
                    this._clipList = []
                }, delay: function (e) {
                    return this._delay = e, this
                }, done: function (e) {
                    return e && this._doneList.push(e), this
                }
            }, U
        }), n("zrender/tool/vector", [], function () {
            var e = "undefined" == typeof Float32Array ? Array : Float32Array, t = {
                create: function (t, n) {
                    var a = new e(2);
                    return a[0] = t || 0, a[1] = n || 0, a
                }, copy: function (e, t) {
                    return e[0] = t[0], e[1] = t[1], e
                }, clone: function (t) {
                    var n = new e(2);
                    return n[0] = t[0], n[1] = t[1], n
                }, set: function (e, t, n) {
                    return e[0] = t, e[1] = n, e
                }, add: function (e, t, n) {
                    return e[0] = t[0] + n[0], e[1] = t[1] + n[1], e
                }, scaleAndAdd: function (e, t, n, a) {
                    return e[0] = t[0] + n[0] * a, e[1] = t[1] + n[1] * a, e
                }, sub: function (e, t, n) {
                    return e[0] = t[0] - n[0], e[1] = t[1] - n[1], e
                }, len: function (e) {
                    return Math.sqrt(this.lenSquare(e))
                }, lenSquare: function (e) {
                    return e[0] * e[0] + e[1] * e[1]
                }, mul: function (e, t, n) {
                    return e[0] = t[0] * n[0], e[1] = t[1] * n[1], e
                }, div: function (e, t, n) {
                    return e[0] = t[0] / n[0], e[1] = t[1] / n[1], e
                }, dot: function (e, t) {
                    return e[0] * t[0] + e[1] * t[1]
                }, scale: function (e, t, n) {
                    return e[0] = t[0] * n, e[1] = t[1] * n, e
                }, normalize: function (e, n) {
                    var a = t.len(n);
                    return 0 === a ? (e[0] = 0, e[1] = 0) : (e[0] = n[0] / a, e[1] = n[1] / a), e
                }, distance: function (e, t) {
                    return Math.sqrt((e[0] - t[0]) * (e[0] - t[0]) + (e[1] - t[1]) * (e[1] - t[1]))
                }, distanceSquare: function (e, t) {
                    return (e[0] - t[0]) * (e[0] - t[0]) + (e[1] - t[1]) * (e[1] - t[1])
                }, negate: function (e, t) {
                    return e[0] = -t[0], e[1] = -t[1], e
                }, lerp: function (e, t, n, a) {
                    return e[0] = t[0] + a * (n[0] - t[0]), e[1] = t[1] + a * (n[1] - t[1]), e
                }, applyTransform: function (e, t, n) {
                    var a = t[0], i = t[1];
                    return e[0] = n[0] * a + n[2] * i + n[4], e[1] = n[1] * a + n[3] * i + n[5], e
                }, min: function (e, t, n) {
                    return e[0] = Math.min(t[0], n[0]), e[1] = Math.min(t[1], n[1]), e
                }, max: function (e, t, n) {
                    return e[0] = Math.max(t[0], n[0]), e[1] = Math.max(t[1], n[1]), e
                }
            };
            return t.length = t.len, t.lengthSquare = t.lenSquare, t.dist = t.distance, t.distSquare = t.distanceSquare, t
        }), n("zrender/tool/matrix", [], function () {
            var e = "undefined" == typeof Float32Array ? Array : Float32Array, t = {
                create: function () {
                    var n = new e(6);
                    return t.identity(n), n
                }, identity: function (e) {
                    return e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 1, e[4] = 0, e[5] = 0, e
                }, copy: function (e, t) {
                    return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e
                }, mul: function (e, t, n) {
                    return e[0] = t[0] * n[0] + t[2] * n[1], e[1] = t[1] * n[0] + t[3] * n[1], e[2] = t[0] * n[2] + t[2] * n[3], e[3] = t[1] * n[2] + t[3] * n[3], e[4] = t[0] * n[4] + t[2] * n[5] + t[4], e[5] = t[1] * n[4] + t[3] * n[5] + t[5], e
                }, translate: function (e, t, n) {
                    return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4] + n[0], e[5] = t[5] + n[1], e
                }, rotate: function (e, t, n) {
                    var a = t[0], i = t[2], o = t[4], r = t[1], s = t[3], l = t[5], h = Math.sin(n), d = Math.cos(n);
                    return e[0] = a * d + r * h, e[1] = -a * h + r * d, e[2] = i * d + s * h, e[3] = -i * h + d * s, e[4] = d * o + h * l, e[5] = d * l - h * o, e
                }, scale: function (e, t, n) {
                    var a = n[0], i = n[1];
                    return e[0] = t[0] * a, e[1] = t[1] * i, e[2] = t[2] * a, e[3] = t[3] * i, e[4] = t[4] * a, e[5] = t[5] * i, e
                }, invert: function (e, t) {
                    var n = t[0], a = t[2], i = t[4], o = t[1], r = t[3], s = t[5], l = n * r - o * a;
                    return l ? (l = 1 / l, e[0] = r * l, e[1] = -o * l, e[2] = -a * l, e[3] = n * l, e[4] = (a * s - r * i) * l, e[5] = (o * i - n * s) * l, e) : null
                }
            };
            return t
        }), n("zrender/loadingEffect/Base", ["require", "../tool/util", "../shape/Text", "../shape/Rectangle"], function (e) {
            function t(e) {
                this.setOptions(e)
            }

            var n = e("../tool/util"), a = e("../shape/Text"), i = e("../shape/Rectangle"), o = "Loading...", r = "normal 16px Arial";
            return t.prototype.createTextShape = function (e) {
                return new a({
                    highlightStyle: n.merge({
                        x: this.canvasWidth / 2,
                        y: this.canvasHeight / 2,
                        text: o,
                        textAlign: "center",
                        textBaseline: "middle",
                        textFont: r,
                        color: "#333",
                        brushType: "fill"
                    }, e, !0)
                })
            }, t.prototype.createBackgroundShape = function (e) {
                return new i({
                    highlightStyle: {
                        x: 0,
                        y: 0,
                        width: this.canvasWidth,
                        height: this.canvasHeight,
                        brushType: "fill",
                        color: e
                    }
                })
            }, t.prototype.start = function (e) {
                function t(t) {
                    e.storage.addHover(t)
                }

                function n() {
                    e.refreshHover()
                }

                this.canvasWidth = e._width, this.canvasHeight = e._height, this.loadingTimer = this._start(t, n)
            }, t.prototype._start = function () {
                return setInterval(function () {
                }, 1e4)
            }, t.prototype.stop = function () {
                clearInterval(this.loadingTimer)
            }, t.prototype.setOptions = function (e) {
                this.options = e || {}
            }, t.prototype.adjust = function (e, t) {
                return e <= t[0] ? e = t[0] : e >= t[1] && (e = t[1]), e
            }, t.prototype.getLocation = function (e, t, n) {
                var a = null != e.x ? e.x : "center";
                switch (a) {
                    case"center":
                        a = Math.floor((this.canvasWidth - t) / 2);
                        break;
                    case"left":
                        a = 0;
                        break;
                    case"right":
                        a = this.canvasWidth - t
                }
                var i = null != e.y ? e.y : "center";
                switch (i) {
                    case"center":
                        i = Math.floor((this.canvasHeight - n) / 2);
                        break;
                    case"top":
                        i = 0;
                        break;
                    case"bottom":
                        i = this.canvasHeight - n
                }
                return {x: a, y: i, width: t, height: n}
            }, t
        }), n("zrender/Layer", ["require", "./mixin/Transformable", "./tool/util", "./config"], function (e) {
            function t() {
                return !1
            }

            function n(e, t, n) {
                var a = document.createElement(t), i = n.getWidth(), o = n.getHeight();
                return a.style.position = "absolute", a.style.left = 0, a.style.top = 0, a.style.width = i + "px", a.style.height = o + "px", a.width = i * r.devicePixelRatio, a.height = o * r.devicePixelRatio, a.setAttribute("data-zr-dom-id", e), a
            }

            var a = e("./mixin/Transformable"), i = e("./tool/util"), o = window.G_vmlCanvasManager, r = e("./config"), s = function (e, i) {
                this.id = e, this.dom = n(e, "canvas", i), this.dom.onselectstart = t, this.dom.style["-webkit-user-select"] = "none", this.dom.style["user-select"] = "none", this.dom.style["-webkit-touch-callout"] = "none", this.dom.style["-webkit-tap-highlight-color"] = "rgba(0,0,0,0)", this.dom.className = r.elementClassName, o && o.initElement(this.dom), this.domBack = null, this.ctxBack = null, this.painter = i, this.unusedCount = 0, this.config = null, this.dirty = !0, this.elCount = 0, this.clearColor = 0, this.motionBlur = !1, this.lastFrameAlpha = .7, this.zoomable = !1, this.panable = !1, this.maxZoom = 1 / 0, this.minZoom = 0, a.call(this)
            };
            return s.prototype.initContext = function () {
                this.ctx = this.dom.getContext("2d");
                var e = r.devicePixelRatio;
                1 != e && this.ctx.scale(e, e)
            }, s.prototype.createBackBuffer = function () {
                if (!o) {
                    this.domBack = n("back-" + this.id, "canvas", this.painter), this.ctxBack = this.domBack.getContext("2d");
                    var e = r.devicePixelRatio;
                    1 != e && this.ctxBack.scale(e, e)
                }
            }, s.prototype.resize = function (e, t) {
                var n = r.devicePixelRatio;
                this.dom.style.width = e + "px", this.dom.style.height = t + "px", this.dom.setAttribute("width", e * n), this.dom.setAttribute("height", t * n), 1 != n && this.ctx.scale(n, n), this.domBack && (this.domBack.setAttribute("width", e * n), this.domBack.setAttribute("height", t * n), 1 != n && this.ctxBack.scale(n, n))
            }, s.prototype.clear = function () {
                var e = this.dom, t = this.ctx, n = e.width, a = e.height, i = this.clearColor && !o, s = this.motionBlur && !o, l = this.lastFrameAlpha, h = r.devicePixelRatio;
                if (s && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(e, 0, 0, n / h, a / h)), t.clearRect(0, 0, n / h, a / h), i && (t.save(), t.fillStyle = this.clearColor, t.fillRect(0, 0, n / h, a / h), t.restore()), s) {
                    var d = this.domBack;
                    t.save(), t.globalAlpha = l, t.drawImage(d, 0, 0, n / h, a / h), t.restore()
                }
            }, i.merge(s.prototype, a.prototype), s
        }), n("zrender/shape/Text", ["require", "../tool/area", "./Base", "../tool/util"], function (e) {
            var t = e("../tool/area"), n = e("./Base"), a = function (e) {
                n.call(this, e)
            };
            return a.prototype = {
                type: "text", brush: function (e, n) {
                    var a = this.style;
                    if (n && (a = this.getHighlightStyle(a, this.highlightStyle || {})), "undefined" != typeof a.text && a.text !== !1) {
                        e.save(), this.doClip(e), this.setContext(e, a), this.setTransform(e), a.textFont && (e.font = a.textFont), e.textAlign = a.textAlign || "start", e.textBaseline = a.textBaseline || "middle";
                        var i, o = (a.text + "").split("\n"), r = t.getTextHeight("国", a.textFont), s = this.getRect(a), l = a.x;
                        i = "top" == a.textBaseline ? s.y : "bottom" == a.textBaseline ? s.y + r : s.y + r / 2;
                        for (var h = 0, d = o.length; d > h; h++) {
                            if (a.maxWidth)switch (a.brushType) {
                                case"fill":
                                    e.fillText(o[h], l, i, a.maxWidth);
                                    break;
                                case"stroke":
                                    e.strokeText(o[h], l, i, a.maxWidth);
                                    break;
                                case"both":
                                    e.fillText(o[h], l, i, a.maxWidth), e.strokeText(o[h], l, i, a.maxWidth);
                                    break;
                                default:
                                    e.fillText(o[h], l, i, a.maxWidth)
                            } else switch (a.brushType) {
                                case"fill":
                                    e.fillText(o[h], l, i);
                                    break;
                                case"stroke":
                                    e.strokeText(o[h], l, i);
                                    break;
                                case"both":
                                    e.fillText(o[h], l, i), e.strokeText(o[h], l, i);
                                    break;
                                default:
                                    e.fillText(o[h], l, i)
                            }
                            i += r
                        }
                        e.restore()
                    }
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var n = t.getTextWidth(e.text, e.textFont), a = t.getTextHeight(e.text, e.textFont), i = e.x;
                    "end" == e.textAlign || "right" == e.textAlign ? i -= n : "center" == e.textAlign && (i -= n / 2);
                    var o;
                    return o = "top" == e.textBaseline ? e.y : "bottom" == e.textBaseline ? e.y - a : e.y - a / 2, e.__rect = {
                        x: i,
                        y: o,
                        width: n,
                        height: a
                    }, e.__rect
                }
            }, e("../tool/util").inherits(a, n), a
        }), n("zrender/shape/Rectangle", ["require", "./Base", "../tool/util"], function (e) {
            var t = e("./Base"), n = function (e) {
                t.call(this, e)
            };
            return n.prototype = {
                type: "rectangle", _buildRadiusPath: function (e, t) {
                    var n, a, i, o, r = t.x, s = t.y, l = t.width, h = t.height, d = t.radius;
                    "number" == typeof d ? n = a = i = o = d : d instanceof Array ? 1 === d.length ? n = a = i = o = d[0] : 2 === d.length ? (n = i = d[0], a = o = d[1]) : 3 === d.length ? (n = d[0], a = o = d[1], i = d[2]) : (n = d[0], a = d[1], i = d[2], o = d[3]) : n = a = i = o = 0;
                    var c;
                    n + a > l && (c = n + a, n *= l / c, a *= l / c), i + o > l && (c = i + o, i *= l / c, o *= l / c), a + i > h && (c = a + i, a *= h / c, i *= h / c), n + o > h && (c = n + o, n *= h / c, o *= h / c), e.moveTo(r + n, s), e.lineTo(r + l - a, s), 0 !== a && e.quadraticCurveTo(r + l, s, r + l, s + a), e.lineTo(r + l, s + h - i), 0 !== i && e.quadraticCurveTo(r + l, s + h, r + l - i, s + h), e.lineTo(r + o, s + h), 0 !== o && e.quadraticCurveTo(r, s + h, r, s + h - o), e.lineTo(r, s + n), 0 !== n && e.quadraticCurveTo(r, s, r + n, s)
                }, buildPath: function (e, t) {
                    t.radius ? this._buildRadiusPath(e, t) : (e.moveTo(t.x, t.y), e.lineTo(t.x + t.width, t.y), e.lineTo(t.x + t.width, t.y + t.height), e.lineTo(t.x, t.y + t.height), e.lineTo(t.x, t.y)), e.closePath()
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t;
                    return t = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0, e.__rect = {
                        x: Math.round(e.x - t / 2),
                        y: Math.round(e.y - t / 2),
                        width: e.width + t,
                        height: e.height + t
                    }, e.__rect
                }
            }, e("../tool/util").inherits(n, t), n
        }), n("zrender/tool/area", ["require", "./util", "./curve"], function (e) {
            "use strict";
            function t(e) {
                return e %= C, 0 > e && (e += C), e
            }

            function n(e, t, n, o) {
                if (!t || !e)return !1;
                var r = e.type;
                v = v || L.getContext();
                var s = a(e, t, n, o);
                if ("undefined" != typeof s)return s;
                if (e.buildPath && v.isPointInPath)return i(e, v, t, n, o);
                switch (r) {
                    case"ellipse":
                        return !0;
                    case"trochoid":
                        var l = "out" == t.location ? t.r1 + t.r2 + t.d : t.r1 - t.r2 + t.d;
                        return m(t, n, o, l);
                    case"rose":
                        return m(t, n, o, t.maxr);
                    default:
                        return !1
                }
            }

            function a(e, t, n, a) {
                var i = e.type;
                switch (i) {
                    case"bezier-curve":
                        return "undefined" == typeof t.cpX2 ? l(t.xStart, t.yStart, t.cpX1, t.cpY1, t.xEnd, t.yEnd, t.lineWidth, n, a) : s(t.xStart, t.yStart, t.cpX1, t.cpY1, t.cpX2, t.cpY2, t.xEnd, t.yEnd, t.lineWidth, n, a);
                    case"line":
                        return r(t.xStart, t.yStart, t.xEnd, t.yEnd, t.lineWidth, n, a);
                    case"polyline":
                        return d(t.pointList, t.lineWidth, n, a);
                    case"ring":
                        return c(t.x, t.y, t.r0, t.r, n, a);
                    case"circle":
                        return m(t.x, t.y, t.r, n, a);
                    case"sector":
                        var o = t.startAngle * Math.PI / 180, h = t.endAngle * Math.PI / 180;
                        return t.clockWise || (o = -o, h = -h), u(t.x, t.y, t.r0, t.r, o, h, !t.clockWise, n, a);
                    case"path":
                        return t.pathArray && b(t.pathArray, Math.max(t.lineWidth, 5), t.brushType, n, a);
                    case"polygon":
                    case"star":
                    case"isogon":
                        return V(t.pointList, n, a);
                    case"text":
                        var U = t.__rect || e.getRect(t);
                        return p(U.x, U.y, U.width, U.height, n, a);
                    case"rectangle":
                    case"image":
                        return p(t.x, t.y, t.width, t.height, n, a)
                }
            }

            function i(e, t, n, a, i) {
                return t.beginPath(), e.buildPath(t, n), t.closePath(), t.isPointInPath(a, i)
            }

            function o(e, t, a, i) {
                return !n(e, t, a, i)
            }

            function r(e, t, n, a, i, o, r) {
                if (0 === i)return !1;
                var s = Math.max(i, 5), l = 0, h = e;
                if (r > t + s && r > a + s || t - s > r && a - s > r || o > e + s && o > n + s || e - s > o && n - s > o)return !1;
                if (e === n)return Math.abs(o - e) <= s / 2;
                l = (t - a) / (e - n), h = (e * a - n * t) / (e - n);
                var d = l * o - r + h, c = d * d / (l * l + 1);
                return s / 2 * s / 2 >= c
            }

            function s(e, t, n, a, i, o, r, s, l, h, d) {
                if (0 === l)return !1;
                var c = Math.max(l, 5);
                if (d > t + c && d > a + c && d > o + c && d > s + c || t - c > d && a - c > d && o - c > d && s - c > d || h > e + c && h > n + c && h > i + c && h > r + c || e - c > h && n - c > h && i - c > h && r - c > h)return !1;
                var p = w.cubicProjectPoint(e, t, n, a, i, o, r, s, h, d, null);
                return c / 2 >= p
            }

            function l(e, t, n, a, i, o, r, s, l) {
                if (0 === r)return !1;
                var h = Math.max(r, 5);
                if (l > t + h && l > a + h && l > o + h || t - h > l && a - h > l && o - h > l || s > e + h && s > n + h && s > i + h || e - h > s && n - h > s && i - h > s)return !1;
                var d = w.quadraticProjectPoint(e, t, n, a, i, o, s, l, null);
                return h / 2 >= d
            }

            function h(e, n, a, i, o, r, s, l, h) {
                if (0 === s)return !1;
                var d = Math.max(s, 5);
                l -= e, h -= n;
                var c = Math.sqrt(l * l + h * h);
                if (c - d > a || a > c + d)return !1;
                if (Math.abs(i - o) >= C)return !0;
                if (r) {
                    var p = i;
                    i = t(o), o = t(p)
                } else i = t(i), o = t(o);
                i > o && (o += C);
                var m = Math.atan2(h, l);
                return 0 > m && (m += C), m >= i && o >= m || m + C >= i && o >= m + C
            }

            function d(e, t, n, a) {
                for (var t = Math.max(t, 10), i = 0, o = e.length - 1; o > i; i++) {
                    var s = e[i][0], l = e[i][1], h = e[i + 1][0], d = e[i + 1][1];
                    if (r(s, l, h, d, t, n, a))return !0
                }
                return !1
            }

            function c(e, t, n, a, i, o) {
                var r = (i - e) * (i - e) + (o - t) * (o - t);
                return a * a > r && r > n * n
            }

            function p(e, t, n, a, i, o) {
                return i >= e && e + n >= i && o >= t && t + a >= o
            }

            function m(e, t, n, a, i) {
                return n * n > (a - e) * (a - e) + (i - t) * (i - t)
            }

            function u(e, t, n, a, i, o, r, s, l) {
                return h(e, t, (n + a) / 2, i, o, r, a - n, s, l)
            }

            function V(e, t, n) {
                for (var a = e.length, i = 0, o = 0, r = a - 1; a > o; o++) {
                    var s = e[r][0], l = e[r][1], h = e[o][0], d = e[o][1];
                    i += U(s, l, h, d, t, n), r = o
                }
                return 0 !== i
            }

            function U(e, t, n, a, i, o) {
                if (o > t && o > a || t > o && a > o)return 0;
                if (a == t)return 0;
                var r = t > a ? 1 : -1, s = (o - t) / (a - t), l = s * (n - e) + e;
                return l > i ? r : 0
            }

            function f() {
                var e = J[0];
                J[0] = J[1], J[1] = e
            }

            function _(e, t, n, a, i, o, r, s, l, h) {
                if (h > t && h > a && h > o && h > s || t > h && a > h && o > h && s > h)return 0;
                var d = w.cubicRootAt(t, a, o, s, h, E);
                if (0 === d)return 0;
                for (var c, p, m = 0, u = -1, V = 0; d > V; V++) {
                    var U = E[V], _ = w.cubicAt(e, n, i, r, U);
                    l > _ || (0 > u && (u = w.cubicExtrema(t, a, o, s, J), J[1] < J[0] && u > 1 && f(), c = w.cubicAt(t, a, o, s, J[0]), u > 1 && (p = w.cubicAt(t, a, o, s, J[1]))), m += 2 == u ? U < J[0] ? t > c ? 1 : -1 : U < J[1] ? c > p ? 1 : -1 : p > s ? 1 : -1 : U < J[0] ? t > c ? 1 : -1 : c > s ? 1 : -1)
                }
                return m
            }

            function g(e, t, n, a, i, o, r, s) {
                if (s > t && s > a && s > o || t > s && a > s && o > s)return 0;
                var l = w.quadraticRootAt(t, a, o, s, E);
                if (0 === l)return 0;
                var h = w.quadraticExtremum(t, a, o);
                if (h >= 0 && 1 >= h) {
                    for (var d = 0, c = w.quadraticAt(t, a, o, h), p = 0; l > p; p++) {
                        var m = w.quadraticAt(e, n, i, E[p]);
                        r > m || (d += E[p] < h ? t > c ? 1 : -1 : c > o ? 1 : -1)
                    }
                    return d
                }
                var m = w.quadraticAt(e, n, i, E[0]);
                return r > m ? 0 : t > o ? 1 : -1
            }

            function y(e, n, a, i, o, r, s, l) {
                if (l -= n, l > a || -a > l)return 0;
                var h = Math.sqrt(a * a - l * l);
                if (E[0] = -h, E[1] = h, Math.abs(i - o) >= C) {
                    i = 0, o = C;
                    var d = r ? 1 : -1;
                    return s >= E[0] + e && s <= E[1] + e ? d : 0
                }
                if (r) {
                    var h = i;
                    i = t(o), o = t(h)
                } else i = t(i), o = t(o);
                i > o && (o += C);
                for (var c = 0, p = 0; 2 > p; p++) {
                    var m = E[p];
                    if (m + e > s) {
                        var u = Math.atan2(l, m), d = r ? 1 : -1;
                        0 > u && (u = C + u), (u >= i && o >= u || u + C >= i && o >= u + C) && (u > Math.PI / 2 && u < 1.5 * Math.PI && (d = -d), c += d)
                    }
                }
                return c
            }

            function b(e, t, n, a, i) {
                var o = 0, d = 0, c = 0, p = 0, m = 0, u = !0, V = !0;
                n = n || "fill";
                for (var f = "stroke" === n || "both" === n, b = "fill" === n || "both" === n, k = 0; k < e.length; k++) {
                    var x = e[k], v = x.points;
                    if (u || "M" === x.command) {
                        if (k > 0 && (b && (o += U(d, c, p, m, a, i)), 0 !== o))return !0;
                        p = v[v.length - 2], m = v[v.length - 1], u = !1, V && "A" !== x.command && (V = !1, d = p, c = m)
                    }
                    switch (x.command) {
                        case"M":
                            d = v[0], c = v[1];
                            break;
                        case"L":
                            if (f && r(d, c, v[0], v[1], t, a, i))return !0;
                            b && (o += U(d, c, v[0], v[1], a, i)), d = v[0], c = v[1];
                            break;
                        case"C":
                            if (f && s(d, c, v[0], v[1], v[2], v[3], v[4], v[5], t, a, i))return !0;
                            b && (o += _(d, c, v[0], v[1], v[2], v[3], v[4], v[5], a, i)), d = v[4], c = v[5];
                            break;
                        case"Q":
                            if (f && l(d, c, v[0], v[1], v[2], v[3], t, a, i))return !0;
                            b && (o += g(d, c, v[0], v[1], v[2], v[3], a, i)), d = v[2], c = v[3];
                            break;
                        case"A":
                            var L = v[0], w = v[1], W = v[2], X = v[3], I = v[4], K = v[5], S = Math.cos(I) * W + L, C = Math.sin(I) * X + w;
                            V ? (V = !1, p = S, m = C) : o += U(d, c, S, C);
                            var E = (a - L) * X / W + L;
                            if (f && h(L, w, X, I, I + K, 1 - v[7], t, E, i))return !0;
                            b && (o += y(L, w, X, I, I + K, 1 - v[7], E, i)), d = Math.cos(I + K) * W + L, c = Math.sin(I + K) * X + w;
                            break;
                        case"z":
                            if (f && r(d, c, p, m, t, a, i))return !0;
                            u = !0
                    }
                }
                return b && (o += U(d, c, p, m, a, i)), 0 !== o
            }

            function k(e, t) {
                var n = e + ":" + t;
                if (W[n])return W[n];
                v = v || L.getContext(), v.save(), t && (v.font = t), e = (e + "").split("\n");
                for (var a = 0, i = 0, o = e.length; o > i; i++)a = Math.max(v.measureText(e[i]).width, a);
                return v.restore(), W[n] = a, ++I > S && (I = 0, W = {}), a
            }

            function x(e, t) {
                var n = e + ":" + t;
                if (X[n])return X[n];
                v = v || L.getContext(), v.save(), t && (v.font = t), e = (e + "").split("\n");
                var a = (v.measureText("国").width + 2) * e.length;
                return v.restore(), X[n] = a, ++K > S && (K = 0, X = {}), a
            }

            var v, L = e("./util"), w = e("./curve"), W = {}, X = {}, I = 0, K = 0, S = 5e3, C = 2 * Math.PI, E = [-1, -1, -1], J = [-1, -1];
            return {
                isInside: n,
                isOutside: o,
                getTextWidth: k,
                getTextHeight: x,
                isInsidePath: b,
                isInsidePolygon: V,
                isInsideSector: u,
                isInsideCircle: m,
                isInsideLine: r,
                isInsideRect: p,
                isInsidePolyline: d,
                isInsideCubicStroke: s,
                isInsideQuadraticStroke: l
            }
        }), n("zrender/shape/Base", ["require", "../tool/matrix", "../tool/guid", "../tool/util", "../tool/log", "../mixin/Transformable", "../mixin/Eventful", "../tool/area", "../tool/color"], function (e) {
            function t(t, a, i, o, r, s, l) {
                r && (t.font = r), t.textAlign = s, t.textBaseline = l;
                var h = n(a, i, o, r, s, l);
                a = (a + "").split("\n");
                var d = e("../tool/area").getTextHeight("国", r);
                switch (l) {
                    case"top":
                        o = h.y;
                        break;
                    case"bottom":
                        o = h.y + d;
                        break;
                    default:
                        o = h.y + d / 2
                }
                for (var c = 0, p = a.length; p > c; c++)t.fillText(a[c], i, o), o += d
            }

            function n(t, n, a, i, o, r) {
                var s = e("../tool/area"), l = s.getTextWidth(t, i), h = s.getTextHeight("国", i);
                switch (t = (t + "").split("\n"), o) {
                    case"end":
                    case"right":
                        n -= l;
                        break;
                    case"center":
                        n -= l / 2
                }
                switch (r) {
                    case"top":
                        break;
                    case"bottom":
                        a -= h * t.length;
                        break;
                    default:
                        a -= h * t.length / 2
                }
                return {x: n, y: a, width: l, height: h * t.length}
            }

            var a = window.G_vmlCanvasManager, i = e("../tool/matrix"), o = e("../tool/guid"), r = e("../tool/util"), s = e("../tool/log"), l = e("../mixin/Transformable"), h = e("../mixin/Eventful"), d = function (e) {
                e = e || {}, this.id = e.id || o();
                for (var t in e)this[t] = e[t];
                this.style = this.style || {}, this.highlightStyle = this.highlightStyle || null, this.parent = null, this.__dirty = !0, this.__clipShapes = [], l.call(this), h.call(this)
            };
            d.prototype.invisible = !1, d.prototype.ignore = !1, d.prototype.zlevel = 0, d.prototype.draggable = !1, d.prototype.clickable = !1, d.prototype.hoverable = !0, d.prototype.z = 0, d.prototype.brush = function (e, t) {
                var n = this.beforeBrush(e, t);
                switch (e.beginPath(), this.buildPath(e, n), n.brushType) {
                    case"both":
                        e.fill();
                    case"stroke":
                        n.lineWidth > 0 && e.stroke();
                        break;
                    default:
                        e.fill()
                }
                this.drawText(e, n, this.style), this.afterBrush(e)
            }, d.prototype.beforeBrush = function (e, t) {
                var n = this.style;
                return this.brushTypeOnly && (n.brushType = this.brushTypeOnly), t && (n = this.getHighlightStyle(n, this.highlightStyle || {}, this.brushTypeOnly)), "stroke" == this.brushTypeOnly && (n.strokeColor = n.strokeColor || n.color), e.save(), this.doClip(e), this.setContext(e, n), this.setTransform(e), n
            }, d.prototype.afterBrush = function (e) {
                e.restore()
            };
            var c = [["color", "fillStyle"], ["strokeColor", "strokeStyle"], ["opacity", "globalAlpha"], ["lineCap", "lineCap"], ["lineJoin", "lineJoin"], ["miterLimit", "miterLimit"], ["lineWidth", "lineWidth"], ["shadowBlur", "shadowBlur"], ["shadowColor", "shadowColor"], ["shadowOffsetX", "shadowOffsetX"], ["shadowOffsetY", "shadowOffsetY"]];
            d.prototype.setContext = function (e, t) {
                for (var n = 0, a = c.length; a > n; n++) {
                    var i = c[n][0], o = t[i], r = c[n][1];
                    "undefined" != typeof o && (e[r] = o)
                }
            };
            var p = i.create();
            return d.prototype.doClip = function (e) {
                if (this.__clipShapes && !a)for (var t = 0; t < this.__clipShapes.length; t++) {
                    var n = this.__clipShapes[t];
                    if (n.needTransform) {
                        var o = n.transform;
                        i.invert(p, o), e.transform(o[0], o[1], o[2], o[3], o[4], o[5])
                    }
                    if (e.beginPath(), n.buildPath(e, n.style), e.clip(), n.needTransform) {
                        var o = p;
                        e.transform(o[0], o[1], o[2], o[3], o[4], o[5])
                    }
                }
            }, d.prototype.getHighlightStyle = function (t, n, a) {
                var i = {};
                for (var o in t)i[o] = t[o];
                var r = e("../tool/color"), s = r.getHighlightColor();
                "stroke" != t.brushType ? (i.strokeColor = s, i.lineWidth = (t.lineWidth || 1) + this.getHighlightZoom(), i.brushType = "both") : "stroke" != a ? (i.strokeColor = s, i.lineWidth = (t.lineWidth || 1) + this.getHighlightZoom()) : i.strokeColor = n.strokeColor || r.mix(t.strokeColor, r.toRGB(s));
                for (var o in n)"undefined" != typeof n[o] && (i[o] = n[o]);
                return i
            }, d.prototype.getHighlightZoom = function () {
                return "text" != this.type ? 6 : 2
            }, d.prototype.drift = function (e, t) {
                this.position[0] += e, this.position[1] += t
            }, d.prototype.buildPath = function () {
                s("buildPath not implemented in " + this.type)
            }, d.prototype.getRect = function () {
                s("getRect not implemented in " + this.type)
            }, d.prototype.isCover = function (t, n) {
                var a = this.transformCoordToLocal(t, n);
                return t = a[0], n = a[1], this.isCoverRect(t, n) ? e("../tool/area").isInside(this, this.style, t, n) : !1
            }, d.prototype.isCoverRect = function (e, t) {
                var n = this.style.__rect;
                return n || (n = this.style.__rect = this.getRect(this.style)), e >= n.x && e <= n.x + n.width && t >= n.y && t <= n.y + n.height
            }, d.prototype.drawText = function (e, n, a) {
                if ("undefined" != typeof n.text && n.text !== !1) {
                    var i = n.textColor || n.color || n.strokeColor;
                    e.fillStyle = i;
                    var o, r, s, l, h = 10, d = n.textPosition || this.textPosition || "top";
                    switch (d) {
                        case"inside":
                        case"top":
                        case"bottom":
                        case"left":
                        case"right":
                            if (this.getRect) {
                                var c = (a || n).__rect || this.getRect(a || n);
                                switch (d) {
                                    case"inside":
                                        s = c.x + c.width / 2, l = c.y + c.height / 2, o = "center", r = "middle", "stroke" != n.brushType && i == n.color && (e.fillStyle = "#fff");
                                        break;
                                    case"left":
                                        s = c.x - h, l = c.y + c.height / 2, o = "end", r = "middle";
                                        break;
                                    case"right":
                                        s = c.x + c.width + h, l = c.y + c.height / 2, o = "start", r = "middle";
                                        break;
                                    case"top":
                                        s = c.x + c.width / 2, l = c.y - h, o = "center", r = "bottom";
                                        break;
                                    case"bottom":
                                        s = c.x + c.width / 2, l = c.y + c.height + h, o = "center", r = "top"
                                }
                            }
                            break;
                        case"start":
                        case"end":
                            var p = n.pointList || [[n.xStart || 0, n.yStart || 0], [n.xEnd || 0, n.yEnd || 0]], m = p.length;
                            if (2 > m)return;
                            var u, V, U, f;
                            switch (d) {
                                case"start":
                                    u = p[1][0], V = p[0][0], U = p[1][1], f = p[0][1];
                                    break;
                                case"end":
                                    u = p[m - 2][0], V = p[m - 1][0], U = p[m - 2][1], f = p[m - 1][1]
                            }
                            s = V, l = f;
                            var _ = Math.atan((U - f) / (V - u)) / Math.PI * 180;
                            0 > V - u ? _ += 180 : 0 > U - f && (_ += 360), h = 5, _ >= 30 && 150 >= _ ? (o = "center", r = "bottom", l -= h) : _ > 150 && 210 > _ ? (o = "right", r = "middle", s -= h) : _ >= 210 && 330 >= _ ? (o = "center", r = "top", l += h) : (o = "left", r = "middle", s += h);
                            break;
                        case"specific":
                            s = n.textX || 0, l = n.textY || 0, o = "start", r = "middle"
                    }
                    null != s && null != l && t(e, n.text, s, l, n.textFont, n.textAlign || o, n.textBaseline || r)
                }
            }, d.prototype.modSelf = function () {
                this.__dirty = !0, this.style && (this.style.__rect = null), this.highlightStyle && (this.highlightStyle.__rect = null)
            }, d.prototype.isSilent = function () {
                return !(this.hoverable || this.draggable || this.clickable || this.onmousemove || this.onmouseover || this.onmouseout || this.onmousedown || this.onmouseup || this.onclick || this.ondragenter || this.ondragover || this.ondragleave || this.ondrop)
            }, r.merge(d.prototype, l.prototype, !0), r.merge(d.prototype, h.prototype, !0), d
        }), n("zrender/tool/curve", ["require", "./vector"], function (e) {
            function t(e) {
                return e > -U && U > e
            }

            function n(e) {
                return e > U || -U > e
            }

            function a(e, t, n, a, i) {
                var o = 1 - i;
                return o * o * (o * e + 3 * i * t) + i * i * (i * a + 3 * o * n)
            }

            function i(e, t, n, a, i) {
                var o = 1 - i;
                return 3 * (((t - e) * o + 2 * (n - t) * i) * o + (a - n) * i * i)
            }

            function o(e, n, a, i, o, r) {
                var s = i + 3 * (n - a) - e, l = 3 * (a - 2 * n + e), h = 3 * (n - e), d = e - o, c = l * l - 3 * s * h, p = l * h - 9 * s * d, m = h * h - 3 * l * d, u = 0;
                if (t(c) && t(p))if (t(l))r[0] = 0; else {
                    var V = -h / l;
                    V >= 0 && 1 >= V && (r[u++] = V)
                } else {
                    var U = p * p - 4 * c * m;
                    if (t(U)) {
                        var g = p / c, V = -l / s + g, y = -g / 2;
                        V >= 0 && 1 >= V && (r[u++] = V), y >= 0 && 1 >= y && (r[u++] = y)
                    } else if (U > 0) {
                        var b = Math.sqrt(U), k = c * l + 1.5 * s * (-p + b), x = c * l + 1.5 * s * (-p - b);
                        k = 0 > k ? -Math.pow(-k, _) : Math.pow(k, _), x = 0 > x ? -Math.pow(-x, _) : Math.pow(x, _);
                        var V = (-l - (k + x)) / (3 * s);
                        V >= 0 && 1 >= V && (r[u++] = V)
                    } else {
                        var v = (2 * c * l - 3 * s * p) / (2 * Math.sqrt(c * c * c)), L = Math.acos(v) / 3, w = Math.sqrt(c), W = Math.cos(L), V = (-l - 2 * w * W) / (3 * s), y = (-l + w * (W + f * Math.sin(L))) / (3 * s), X = (-l + w * (W - f * Math.sin(L))) / (3 * s);
                        V >= 0 && 1 >= V && (r[u++] = V), y >= 0 && 1 >= y && (r[u++] = y), X >= 0 && 1 >= X && (r[u++] = X)
                    }
                }
                return u
            }

            function r(e, a, i, o, r) {
                var s = 6 * i - 12 * a + 6 * e, l = 9 * a + 3 * o - 3 * e - 9 * i, h = 3 * a - 3 * e, d = 0;
                if (t(l)) {
                    if (n(s)) {
                        var c = -h / s;
                        c >= 0 && 1 >= c && (r[d++] = c)
                    }
                } else {
                    var p = s * s - 4 * l * h;
                    if (t(p))r[0] = -s / (2 * l); else if (p > 0) {
                        var m = Math.sqrt(p), c = (-s + m) / (2 * l), u = (-s - m) / (2 * l);
                        c >= 0 && 1 >= c && (r[d++] = c), u >= 0 && 1 >= u && (r[d++] = u)
                    }
                }
                return d
            }

            function s(e, t, n, a, i, o) {
                var r = (t - e) * i + e, s = (n - t) * i + t, l = (a - n) * i + n, h = (s - r) * i + r, d = (l - s) * i + s, c = (d - h) * i + h;
                o[0] = e, o[1] = r, o[2] = h, o[3] = c, o[4] = c, o[5] = d, o[6] = l, o[7] = a
            }

            function l(e, t, n, i, o, r, s, l, h, d, c) {
                var p, m = .005, u = 1 / 0;
                g[0] = h, g[1] = d;
                for (var f = 0; 1 > f; f += .05) {
                    y[0] = a(e, n, o, s, f), y[1] = a(t, i, r, l, f);
                    var _ = V.distSquare(g, y);
                    u > _ && (p = f, u = _)
                }
                u = 1 / 0;
                for (var k = 0; 32 > k && !(U > m); k++) {
                    var x = p - m, v = p + m;
                    y[0] = a(e, n, o, s, x), y[1] = a(t, i, r, l, x);
                    var _ = V.distSquare(y, g);
                    if (x >= 0 && u > _)p = x, u = _; else {
                        b[0] = a(e, n, o, s, v), b[1] = a(t, i, r, l, v);
                        var L = V.distSquare(b, g);
                        1 >= v && u > L ? (p = v, u = L) : m *= .5
                    }
                }
                return c && (c[0] = a(e, n, o, s, p), c[1] = a(t, i, r, l, p)), Math.sqrt(u)
            }

            function h(e, t, n, a) {
                var i = 1 - a;
                return i * (i * e + 2 * a * t) + a * a * n
            }

            function d(e, t, n, a) {
                return 2 * ((1 - a) * (t - e) + a * (n - t))
            }

            function c(e, a, i, o, r) {
                var s = e - 2 * a + i, l = 2 * (a - e), h = e - o, d = 0;
                if (t(s)) {
                    if (n(l)) {
                        var c = -h / l;
                        c >= 0 && 1 >= c && (r[d++] = c)
                    }
                } else {
                    var p = l * l - 4 * s * h;
                    if (t(p)) {
                        var c = -l / (2 * s);
                        c >= 0 && 1 >= c && (r[d++] = c)
                    } else if (p > 0) {
                        var m = Math.sqrt(p), c = (-l + m) / (2 * s), u = (-l - m) / (2 * s);
                        c >= 0 && 1 >= c && (r[d++] = c), u >= 0 && 1 >= u && (r[d++] = u)
                    }
                }
                return d
            }

            function p(e, t, n) {
                var a = e + n - 2 * t;
                return 0 === a ? .5 : (e - t) / a
            }

            function m(e, t, n, a, i) {
                var o = (t - e) * a + e, r = (n - t) * a + t, s = (r - o) * a + o;
                i[0] = e, i[1] = o, i[2] = s, i[3] = s, i[4] = r, i[5] = n
            }

            function u(e, t, n, a, i, o, r, s, l) {
                var d, c = .005, p = 1 / 0;
                g[0] = r, g[1] = s;
                for (var m = 0; 1 > m; m += .05) {
                    y[0] = h(e, n, i, m), y[1] = h(t, a, o, m);
                    var u = V.distSquare(g, y);
                    p > u && (d = m, p = u)
                }
                p = 1 / 0;
                for (var f = 0; 32 > f && !(U > c); f++) {
                    var _ = d - c, k = d + c;
                    y[0] = h(e, n, i, _), y[1] = h(t, a, o, _);
                    var u = V.distSquare(y, g);
                    if (_ >= 0 && p > u)d = _, p = u; else {
                        b[0] = h(e, n, i, k), b[1] = h(t, a, o, k);
                        var x = V.distSquare(b, g);
                        1 >= k && p > x ? (d = k, p = x) : c *= .5
                    }
                }
                return l && (l[0] = h(e, n, i, d), l[1] = h(t, a, o, d)), Math.sqrt(p)
            }

            var V = e("./vector"), U = 1e-4, f = Math.sqrt(3), _ = 1 / 3, g = V.create(), y = V.create(), b = V.create();
            return {
                cubicAt: a,
                cubicDerivativeAt: i,
                cubicRootAt: o,
                cubicExtrema: r,
                cubicSubdivide: s,
                cubicProjectPoint: l,
                quadraticAt: h,
                quadraticDerivativeAt: d,
                quadraticRootAt: c,
                quadraticExtremum: p,
                quadraticSubdivide: m,
                quadraticProjectPoint: u
            }
        }), n("zrender/mixin/Transformable", ["require", "../tool/matrix", "../tool/vector"], function (e) {
            "use strict";
            function t(e) {
                return e > -s && s > e
            }

            function n(e) {
                return e > s || -s > e
            }

            var a = e("../tool/matrix"), i = e("../tool/vector"), o = [0, 0], r = a.translate, s = 5e-5, l = function () {
                this.position || (this.position = [0, 0]), "undefined" == typeof this.rotation && (this.rotation = [0, 0, 0]), this.scale || (this.scale = [1, 1, 0, 0]), this.needLocalTransform = !1, this.needTransform = !1
            };
            return l.prototype = {
                constructor: l, updateNeedTransform: function () {
                    this.needLocalTransform = n(this.rotation[0]) || n(this.position[0]) || n(this.position[1]) || n(this.scale[0] - 1) || n(this.scale[1] - 1)
                }, updateTransform: function () {
                    this.updateNeedTransform();
                    var e = this.parent && this.parent.needTransform;
                    if (this.needTransform = this.needLocalTransform || e, this.needTransform) {
                        var t = this.transform || a.create();
                        if (a.identity(t), this.needLocalTransform) {
                            var i = this.scale;
                            if (n(i[0]) || n(i[1])) {
                                o[0] = -i[2] || 0, o[1] = -i[3] || 0;
                                var s = n(o[0]) || n(o[1]);
                                s && r(t, t, o), a.scale(t, t, i), s && (o[0] = -o[0], o[1] = -o[1], r(t, t, o))
                            }
                            if (this.rotation instanceof Array) {
                                if (0 !== this.rotation[0]) {
                                    o[0] = -this.rotation[1] || 0, o[1] = -this.rotation[2] || 0;
                                    var s = n(o[0]) || n(o[1]);
                                    s && r(t, t, o), a.rotate(t, t, this.rotation[0]), s && (o[0] = -o[0], o[1] = -o[1], r(t, t, o))
                                }
                            } else 0 !== this.rotation && a.rotate(t, t, this.rotation);
                            (n(this.position[0]) || n(this.position[1])) && r(t, t, this.position)
                        }
                        e && (this.needLocalTransform ? a.mul(t, this.parent.transform, t) : a.copy(t, this.parent.transform)), this.transform = t, this.invTransform = this.invTransform || a.create(), a.invert(this.invTransform, t)
                    }
                }, setTransform: function (e) {
                    if (this.needTransform) {
                        var t = this.transform;
                        e.transform(t[0], t[1], t[2], t[3], t[4], t[5])
                    }
                }, lookAt: function () {
                    var e = i.create();
                    return function (n) {
                        this.transform || (this.transform = a.create());
                        var o = this.transform;
                        if (i.sub(e, n, this.position), !t(e[0]) || !t(e[1])) {
                            i.normalize(e, e);
                            var r = this.scale;
                            o[2] = e[0] * r[1], o[3] = e[1] * r[1], o[0] = e[1] * r[0], o[1] = -e[0] * r[0], o[4] = this.position[0], o[5] = this.position[1], this.decomposeTransform()
                        }
                    }
                }(), decomposeTransform: function () {
                    if (this.transform) {
                        var e = this.transform, t = e[0] * e[0] + e[1] * e[1], a = this.position, i = this.scale, o = this.rotation;
                        n(t - 1) && (t = Math.sqrt(t));
                        var r = e[2] * e[2] + e[3] * e[3];
                        n(r - 1) && (r = Math.sqrt(r)), a[0] = e[4], a[1] = e[5], i[0] = t, i[1] = r, i[2] = i[3] = 0, o[0] = Math.atan2(-e[1] / r, e[0] / t), o[1] = o[2] = 0
                    }
                }, transformCoordToLocal: function (e, t) {
                    var n = [e, t];
                    return this.needTransform && this.invTransform && i.applyTransform(n, n, this.invTransform), n
                }
            }, l
        }), n("zrender/Group", ["require", "./tool/guid", "./tool/util", "./mixin/Transformable", "./mixin/Eventful"], function (e) {
            var t = e("./tool/guid"), n = e("./tool/util"), a = e("./mixin/Transformable"), i = e("./mixin/Eventful"), o = function (e) {
                e = e || {}, this.id = e.id || t();
                for (var n in e)this[n] = e[n];
                this.type = "group", this.clipShape = null, this._children = [], this._storage = null, this.__dirty = !0, a.call(this), i.call(this)
            };
            return o.prototype.ignore = !1, o.prototype.children = function () {
                return this._children.slice()
            }, o.prototype.childAt = function (e) {
                return this._children[e]
            }, o.prototype.addChild = function (e) {
                e != this && e.parent != this && (e.parent && e.parent.removeChild(e), this._children.push(e), e.parent = this, this._storage && this._storage !== e._storage && (this._storage.addToMap(e), e instanceof o && e.addChildrenToStorage(this._storage)))
            }, o.prototype.removeChild = function (e) {
                var t = n.indexOf(this._children, e);
                t >= 0 && this._children.splice(t, 1), e.parent = null, this._storage && (this._storage.delFromMap(e.id), e instanceof o && e.delChildrenFromStorage(this._storage))
            }, o.prototype.clearChildren = function () {
                for (var e = 0; e < this._children.length; e++) {
                    var t = this._children[e];
                    this._storage && (this._storage.delFromMap(t.id), t instanceof o && t.delChildrenFromStorage(this._storage))
                }
                this._children.length = 0
            }, o.prototype.eachChild = function (e, t) {
                for (var n = !!t, a = 0; a < this._children.length; a++) {
                    var i = this._children[a];
                    n ? e.call(t, i) : e(i)
                }
            }, o.prototype.traverse = function (e, t) {
                for (var n = !!t, a = 0; a < this._children.length; a++) {
                    var i = this._children[a];
                    n ? e.call(t, i) : e(i), "group" === i.type && i.traverse(e, t)
                }
            }, o.prototype.addChildrenToStorage = function (e) {
                for (var t = 0; t < this._children.length; t++) {
                    var n = this._children[t];
                    e.addToMap(n), n instanceof o && n.addChildrenToStorage(e)
                }
            }, o.prototype.delChildrenFromStorage = function (e) {
                for (var t = 0; t < this._children.length; t++) {
                    var n = this._children[t];
                    e.delFromMap(n.id), n instanceof o && n.delChildrenFromStorage(e)
                }
            }, o.prototype.modSelf = function () {
                this.__dirty = !0
            }, n.merge(o.prototype, a.prototype, !0), n.merge(o.prototype, i.prototype, !0), o
        }), n("zrender/animation/Clip", ["require", "./easing"], function (e) {
            function t(e) {
                this._targetPool = e.target || {}, this._targetPool instanceof Array || (this._targetPool = [this._targetPool]), this._life = e.life || 1e3, this._delay = e.delay || 0, this._startTime = (new Date).getTime() + this._delay, this._endTime = this._startTime + 1e3 * this._life, this.loop = "undefined" == typeof e.loop ? !1 : e.loop, this.gap = e.gap || 0, this.easing = e.easing || "Linear", this.onframe = e.onframe, this.ondestroy = e.ondestroy, this.onrestart = e.onrestart
            }

            var n = e("./easing");
            return t.prototype = {
                step: function (e) {
                    var t = (e - this._startTime) / this._life;
                    if (!(0 > t)) {
                        t = Math.min(t, 1);
                        var a = "string" == typeof this.easing ? n[this.easing] : this.easing, i = "function" == typeof a ? a(t) : t;
                        return this.fire("frame", i), 1 == t ? this.loop ? (this.restart(), "restart") : (this.__needsRemove = !0, "destroy") : null
                    }
                }, restart: function () {
                    var e = (new Date).getTime(), t = (e - this._startTime) % this._life;
                    this._startTime = (new Date).getTime() - t + this.gap, this.__needsRemove = !1
                }, fire: function (e, t) {
                    for (var n = 0, a = this._targetPool.length; a > n; n++)this["on" + e] && this["on" + e](this._targetPool[n], t)
                }, constructor: t
            }, t
        }), n("zrender/animation/easing", [], function () {
            var e = {
                Linear: function (e) {
                    return e
                }, QuadraticIn: function (e) {
                    return e * e
                }, QuadraticOut: function (e) {
                    return e * (2 - e)
                }, QuadraticInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1)
                }, CubicIn: function (e) {
                    return e * e * e
                }, CubicOut: function (e) {
                    return --e * e * e + 1
                }, CubicInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2)
                }, QuarticIn: function (e) {
                    return e * e * e * e
                }, QuarticOut: function (e) {
                    return 1 - --e * e * e * e
                }, QuarticInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2)
                }, QuinticIn: function (e) {
                    return e * e * e * e * e
                }, QuinticOut: function (e) {
                    return --e * e * e * e * e + 1
                }, QuinticInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2)
                }, SinusoidalIn: function (e) {
                    return 1 - Math.cos(e * Math.PI / 2)
                }, SinusoidalOut: function (e) {
                    return Math.sin(e * Math.PI / 2)
                }, SinusoidalInOut: function (e) {
                    return .5 * (1 - Math.cos(Math.PI * e))
                }, ExponentialIn: function (e) {
                    return 0 === e ? 0 : Math.pow(1024, e - 1)
                }, ExponentialOut: function (e) {
                    return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
                }, ExponentialInOut: function (e) {
                    return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? .5 * Math.pow(1024, e - 1) : .5 * (-Math.pow(2, -10 * (e - 1)) + 2)
                }, CircularIn: function (e) {
                    return 1 - Math.sqrt(1 - e * e)
                }, CircularOut: function (e) {
                    return Math.sqrt(1 - --e * e)
                }, CircularInOut: function (e) {
                    return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
                }, ElasticIn: function (e) {
                    var t, n = .1, a = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = a / 4) : t = a * Math.asin(1 / n) / (2 * Math.PI), -(n * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / a)))
                }, ElasticOut: function (e) {
                    var t, n = .1, a = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = a / 4) : t = a * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * e) * Math.sin(2 * (e - t) * Math.PI / a) + 1)
                }, ElasticInOut: function (e) {
                    var t, n = .1, a = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = a / 4) : t = a * Math.asin(1 / n) / (2 * Math.PI), (e *= 2) < 1 ? -.5 * n * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / a) : n * Math.pow(2, -10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / a) * .5 + 1)
                }, BackIn: function (e) {
                    var t = 1.70158;
                    return e * e * ((t + 1) * e - t)
                }, BackOut: function (e) {
                    var t = 1.70158;
                    return --e * e * ((t + 1) * e + t) + 1
                }, BackInOut: function (e) {
                    var t = 2.5949095;
                    return (e *= 2) < 1 ? .5 * e * e * ((t + 1) * e - t) : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
                }, BounceIn: function (t) {
                    return 1 - e.BounceOut(1 - t)
                }, BounceOut: function (e) {
                    return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
                }, BounceInOut: function (t) {
                    return .5 > t ? .5 * e.BounceIn(2 * t) : .5 * e.BounceOut(2 * t - 1) + .5
                }
            };
            return e
        }), n("echarts/chart/base", ["require", "zrender/shape/Image", "../util/shape/Icon", "../util/shape/MarkLine", "../util/shape/Symbol", "zrender/shape/Polyline", "zrender/shape/ShapeBundle", "../config", "../util/ecData", "../util/ecAnimation", "../util/ecEffect", "../util/accMath", "../component/base", "../layout/EdgeBundling", "zrender/tool/util", "zrender/tool/area"], function (e) {
            function t(e) {
                return null != e.x && null != e.y
            }

            function n(e, t, n, a, i) {
                u.call(this, e, t, n, a, i);
                var o = this;
                this.selectedMap = {}, this.lastShapeList = [], this.shapeHandler = {
                    onclick: function () {
                        o.isClick = !0
                    }, ondragover: function (e) {
                        var t = e.target;
                        t.highlightStyle = t.highlightStyle || {};
                        var n = t.highlightStyle, a = n.brushTyep, i = n.strokeColor, r = n.lineWidth;
                        n.brushType = "stroke", n.strokeColor = o.ecTheme.calculableColor || h.calculableColor, n.lineWidth = "icon" === t.type ? 30 : 10, o.zr.addHoverShape(t), setTimeout(function () {
                            n && (n.brushType = a, n.strokeColor = i, n.lineWidth = r)
                        }, 20)
                    }, ondrop: function (e) {
                        null != d.get(e.dragged, "data") && (o.isDrop = !0)
                    }, ondragend: function () {
                        o.isDragend = !0
                    }
                }
            }

            var a = e("zrender/shape/Image"), i = e("../util/shape/Icon"), o = e("../util/shape/MarkLine"), r = e("../util/shape/Symbol"), s = e("zrender/shape/Polyline"), l = e("zrender/shape/ShapeBundle"), h = e("../config"), d = e("../util/ecData"), c = e("../util/ecAnimation"), p = e("../util/ecEffect"), m = e("../util/accMath"), u = e("../component/base"), V = e("../layout/EdgeBundling"), U = e("zrender/tool/util"), f = e("zrender/tool/area");
            return n.prototype = {
                setCalculable: function (e) {
                    return e.dragEnableTime = this.ecTheme.DRAG_ENABLE_TIME || h.DRAG_ENABLE_TIME, e.ondragover = this.shapeHandler.ondragover, e.ondragend = this.shapeHandler.ondragend, e.ondrop = this.shapeHandler.ondrop, e
                }, ondrop: function (e, t) {
                    if (this.isDrop && e.target && !t.dragIn) {
                        var n, a = e.target, i = e.dragged, o = d.get(a, "seriesIndex"), r = d.get(a, "dataIndex"), s = this.series, l = this.component.legend;
                        if (-1 === r) {
                            if (d.get(i, "seriesIndex") == o)return t.dragOut = t.dragIn = t.needRefresh = !0, void(this.isDrop = !1);
                            n = {
                                value: d.get(i, "value"),
                                name: d.get(i, "name")
                            }, this.type === h.CHART_TYPE_PIE && n.value < 0 && (n.value = 0);
                            for (var c = !1, p = s[o].data, u = 0, V = p.length; V > u; u++)p[u].name === n.name && "-" === p[u].value && (s[o].data[u].value = n.value, c = !0);
                            !c && s[o].data.push(n), l && l.add(n.name, i.style.color || i.style.strokeColor)
                        } else n = s[o].data[r] || "-", null != n.value ? (s[o].data[r].value = "-" != n.value ? m.accAdd(s[o].data[r].value, d.get(i, "value")) : d.get(i, "value"), (this.type === h.CHART_TYPE_FUNNEL || this.type === h.CHART_TYPE_PIE) && (l && 1 === l.getRelatedAmount(n.name) && this.component.legend.del(n.name), n.name += this.option.nameConnector + d.get(i, "name"), l && l.add(n.name, i.style.color || i.style.strokeColor))) : s[o].data[r] = "-" != n ? m.accAdd(s[o].data[r], d.get(i, "value")) : d.get(i, "value");
                        t.dragIn = t.dragIn || !0, this.isDrop = !1;
                        var U = this;
                        setTimeout(function () {
                            U.zr.trigger("mousemove", e.event)
                        }, 300)
                    }
                }, ondragend: function (e, t) {
                    if (this.isDragend && e.target && !t.dragOut) {
                        var n = e.target, a = d.get(n, "seriesIndex"), i = d.get(n, "dataIndex"), o = this.series;
                        if (null != o[a].data[i].value) {
                            o[a].data[i].value = "-";
                            var r = o[a].data[i].name, s = this.component.legend;
                            s && 0 === s.getRelatedAmount(r) && s.del(r)
                        } else o[a].data[i] = "-";
                        t.dragOut = !0, t.needRefresh = !0, this.isDragend = !1
                    }
                }, onlegendSelected: function (e, t) {
                    var n = e.selected;
                    for (var a in this.selectedMap)this.selectedMap[a] != n[a] && (t.needRefresh = !0), this.selectedMap[a] = n[a]
                }, _buildPosition: function () {
                    this._symbol = this.option.symbolList, this._sIndex2ShapeMap = {}, this._sIndex2ColorMap = {}, this.selectedMap = {}, this.xMarkMap = {};
                    for (var e, t, n, a, i = this.series, o = {
                        top: [],
                        bottom: [],
                        left: [],
                        right: [],
                        other: []
                    }, r = 0, s = i.length; s > r; r++)i[r].type === this.type && (i[r] = this.reformOption(i[r]), this.legendHoverLink = i[r].legendHoverLink || this.legendHoverLink,
                        e = i[r].xAxisIndex, t = i[r].yAxisIndex, n = this.component.xAxis.getAxis(e), a = this.component.yAxis.getAxis(t), n.type === h.COMPONENT_TYPE_AXIS_CATEGORY ? o[n.getPosition()].push(r) : a.type === h.COMPONENT_TYPE_AXIS_CATEGORY ? o[a.getPosition()].push(r) : o.other.push(r));
                    for (var l in o)o[l].length > 0 && this._buildSinglePosition(l, o[l]);
                    this.addShapeList()
                }, _buildSinglePosition: function (e, t) {
                    var n = this._mapData(t), a = n.locationMap, i = n.maxDataLength;
                    if (0 !== i && 0 !== a.length) {
                        switch (e) {
                            case"bottom":
                            case"top":
                                this._buildHorizontal(t, i, a, this.xMarkMap);
                                break;
                            case"left":
                            case"right":
                                this._buildVertical(t, i, a, this.xMarkMap);
                                break;
                            case"other":
                                this._buildOther(t, i, a, this.xMarkMap)
                        }
                        for (var o = 0, r = t.length; r > o; o++)this.buildMark(t[o])
                    }
                }, _mapData: function (e) {
                    for (var t, n, a, i, o = this.series, r = 0, s = {}, l = "__kener__stack__", d = this.component.legend, c = [], p = 0, m = 0, u = e.length; u > m; m++) {
                        if (t = o[e[m]], a = t.name, this._sIndex2ShapeMap[e[m]] = this._sIndex2ShapeMap[e[m]] || this.query(t, "symbol") || this._symbol[m % this._symbol.length], d) {
                            if (this.selectedMap[a] = d.isSelected(a), this._sIndex2ColorMap[e[m]] = d.getColor(a), i = d.getItemShape(a)) {
                                var V = i.style;
                                if (this.type == h.CHART_TYPE_LINE)V.iconType = "legendLineIcon", V.symbol = this._sIndex2ShapeMap[e[m]]; else if (t.itemStyle.normal.barBorderWidth > 0) {
                                    var U = i.highlightStyle;
                                    V.brushType = "both", V.x += 1, V.y += 1, V.width -= 2, V.height -= 2, V.strokeColor = U.strokeColor = t.itemStyle.normal.barBorderColor, U.lineWidth = 3
                                }
                                d.setItemShape(a, i)
                            }
                        } else this.selectedMap[a] = !0, this._sIndex2ColorMap[e[m]] = this.zr.getColor(e[m]);
                        this.selectedMap[a] && (n = t.stack || l + e[m], null == s[n] ? (s[n] = r, c[r] = [e[m]], r++) : c[s[n]].push(e[m])), p = Math.max(p, t.data.length)
                    }
                    return {locationMap: c, maxDataLength: p}
                }, _calculMarkMapXY: function (e, t, n) {
                    for (var a = this.series, i = 0, o = t.length; o > i; i++)for (var r = 0, s = t[i].length; s > r; r++) {
                        var l = t[i][r], h = "xy" == n ? 0 : "", d = this.component.grid, c = e[l];
                        if ("-1" != n.indexOf("x")) {
                            c["counter" + h] > 0 && (c["average" + h] = c["sum" + h] / c["counter" + h]);
                            var p = this.component.xAxis.getAxis(a[l].xAxisIndex || 0).getCoord(c["average" + h]);
                            c["averageLine" + h] = [[p, d.getYend()], [p, d.getY()]], c["minLine" + h] = [[c["minX" + h], d.getYend()], [c["minX" + h], d.getY()]], c["maxLine" + h] = [[c["maxX" + h], d.getYend()], [c["maxX" + h], d.getY()]], c.isHorizontal = !1
                        }
                        if (h = "xy" == n ? 1 : "", "-1" != n.indexOf("y")) {
                            c["counter" + h] > 0 && (c["average" + h] = c["sum" + h] / c["counter" + h]);
                            var m = this.component.yAxis.getAxis(a[l].yAxisIndex || 0).getCoord(c["average" + h]);
                            c["averageLine" + h] = [[d.getX(), m], [d.getXend(), m]], c["minLine" + h] = [[d.getX(), c["minY" + h]], [d.getXend(), c["minY" + h]]], c["maxLine" + h] = [[d.getX(), c["maxY" + h]], [d.getXend(), c["maxY" + h]]], c.isHorizontal = !0
                        }
                    }
                }, addLabel: function (e, t, n, a, i) {
                    var o = [n, t], r = this.deepMerge(o, "itemStyle.normal.label"), s = this.deepMerge(o, "itemStyle.emphasis.label"), l = r.textStyle || {}, h = s.textStyle || {};
                    if (r.show) {
                        var d = e.style;
                        d.text = this._getLabelText(t, n, a, "normal"), d.textPosition = null == r.position ? "horizontal" === i ? "right" : "top" : r.position, d.textColor = l.color, d.textFont = this.getFont(l), d.textAlign = l.align, d.textBaseline = l.baseline
                    }
                    if (s.show) {
                        var c = e.highlightStyle;
                        c.text = this._getLabelText(t, n, a, "emphasis"), c.textPosition = r.show ? e.style.textPosition : null == s.position ? "horizontal" === i ? "right" : "top" : s.position, c.textColor = h.color, c.textFont = this.getFont(h), c.textAlign = h.align, c.textBaseline = h.baseline
                    }
                    return e
                }, _getLabelText: function (e, t, n, a) {
                    var i = this.deepQuery([t, e], "itemStyle." + a + ".label.formatter");
                    i || "emphasis" !== a || (i = this.deepQuery([t, e], "itemStyle.normal.label.formatter"));
                    var o = this.getDataFromOption(t, "-");
                    return i ? "function" == typeof i ? i.call(this.myChart, {
                        seriesName: e.name,
                        series: e,
                        name: n,
                        value: o,
                        data: t,
                        status: a
                    }) : "string" == typeof i ? i = i.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{a0}", e.name).replace("{b0}", n).replace("{c0}", this.numAddCommas(o)) : void 0 : o instanceof Array ? null != o[2] ? this.numAddCommas(o[2]) : o[0] + " , " + o[1] : this.numAddCommas(o)
                }, buildMark: function (e) {
                    var t = this.series[e];
                    this.selectedMap[t.name] && (t.markLine && this._buildMarkLine(e), t.markPoint && this._buildMarkPoint(e))
                }, _buildMarkPoint: function (e) {
                    for (var t, n, a = (this.markAttachStyle || {})[e], i = this.series[e], o = U.clone(i.markPoint), r = 0, s = o.data.length; s > r; r++)t = o.data[r], n = this.getMarkCoord(e, t), t.x = null != t.x ? t.x : n[0], t.y = null != t.y ? t.y : n[1], !t.type || "max" !== t.type && "min" !== t.type || (t.value = n[3], t.name = t.name || t.type, t.symbolSize = t.symbolSize || f.getTextWidth(n[3], this.getFont()) / 2 + 5);
                    for (var l = this._markPoint(e, o), r = 0, s = l.length; s > r; r++) {
                        var d = l[r];
                        d.zlevel = i.zlevel, d.z = i.z + 1;
                        for (var c in a)d[c] = U.clone(a[c]);
                        this.shapeList.push(d)
                    }
                    if (this.type === h.CHART_TYPE_FORCE || this.type === h.CHART_TYPE_CHORD)for (var r = 0, s = l.length; s > r; r++)this.zr.addShape(l[r])
                }, _buildMarkLine: function (e) {
                    for (var t, n = (this.markAttachStyle || {})[e], a = this.series[e], i = U.clone(a.markLine), o = 0, r = i.data.length; r > o; o++) {
                        var s = i.data[o];
                        !s.type || "max" !== s.type && "min" !== s.type && "average" !== s.type ? t = [this.getMarkCoord(e, s[0]), this.getMarkCoord(e, s[1])] : (t = this.getMarkCoord(e, s), i.data[o] = [U.clone(s), {}], i.data[o][0].name = s.name || s.type, i.data[o][0].value = "average" !== s.type ? t[3] : +t[3].toFixed(null != i.precision ? i.precision : this.deepQuery([this.ecTheme, h], "markLine.precision")), t = t[2], s = [{}, {}]), null != t && null != t[0] && null != t[1] && (i.data[o][0].x = null != s[0].x ? s[0].x : t[0][0], i.data[o][0].y = null != s[0].y ? s[0].y : t[0][1], i.data[o][1].x = null != s[1].x ? s[1].x : t[1][0], i.data[o][1].y = null != s[1].y ? s[1].y : t[1][1])
                    }
                    var d = this._markLine(e, i), c = i.large;
                    if (c) {
                        var p = new l({style: {shapeList: d}}), m = d[0];
                        if (m) {
                            U.merge(p.style, m.style), U.merge(p.highlightStyle = {}, m.highlightStyle), p.style.brushType = "stroke", p.zlevel = a.zlevel, p.z = a.z + 1, p.hoverable = !1;
                            for (var u in n)p[u] = U.clone(n[u])
                        }
                        this.shapeList.push(p), this.zr.addShape(p), p._mark = "largeLine";
                        var V = i.effect;
                        V.show && (p.effect = V)
                    } else {
                        for (var o = 0, r = d.length; r > o; o++) {
                            var f = d[o];
                            f.zlevel = a.zlevel, f.z = a.z + 1;
                            for (var u in n)f[u] = U.clone(n[u]);
                            this.shapeList.push(f)
                        }
                        if (this.type === h.CHART_TYPE_FORCE || this.type === h.CHART_TYPE_CHORD)for (var o = 0, r = d.length; r > o; o++)this.zr.addShape(d[o])
                    }
                }, _markPoint: function (e, t) {
                    var n = this.series[e], a = this.component;
                    U.merge(U.merge(t, U.clone(this.ecTheme.markPoint || {})), U.clone(h.markPoint)), t.name = n.name;
                    var i, o, r, s, l, c, p, m = [], u = t.data, V = a.dataRange, f = a.legend, _ = this.zr.getWidth(), g = this.zr.getHeight();
                    if (t.large)i = this.getLargeMarkPointShape(e, t), i._mark = "largePoint", i && m.push(i); else for (var y = 0, b = u.length; b > y; y++)null != u[y].x && null != u[y].y && (r = null != u[y].value ? u[y].value : "", f && (o = f.getColor(n.name)), V && (o = isNaN(r) ? o : V.getColor(r), s = [u[y], t], l = this.deepQuery(s, "itemStyle.normal.color") || o, c = this.deepQuery(s, "itemStyle.emphasis.color") || l, null == l && null == c) || (o = null == o ? this.zr.getColor(e) : o, u[y].tooltip = u[y].tooltip || t.tooltip || {trigger: "item"}, u[y].name = null != u[y].name ? u[y].name : "", u[y].value = r, i = this.getSymbolShape(t, e, u[y], y, u[y].name, this.parsePercent(u[y].x, _), this.parsePercent(u[y].y, g), "pin", o, "rgba(0,0,0,0)", "horizontal"), i._mark = "point", p = this.deepMerge([u[y], t], "effect"), p.show && (i.effect = p), n.type === h.CHART_TYPE_MAP && (i._geo = this.getMarkGeo(u[y])), d.pack(i, n, e, u[y], y, u[y].name, r), m.push(i)));
                    return m
                }, _markLine: function () {
                    function e(e, t) {
                        e[t] = e[t]instanceof Array ? e[t].length > 1 ? e[t] : [e[t][0], e[t][0]] : [e[t], e[t]]
                    }

                    return function (n, a) {
                        var i = this.series[n], o = this.component, r = o.dataRange, s = o.legend;
                        U.merge(U.merge(a, U.clone(this.ecTheme.markLine || {})), U.clone(h.markLine));
                        var l = s ? s.getColor(i.name) : this.zr.getColor(n);
                        e(a, "symbol"), e(a, "symbolSize"), e(a, "symbolRotate");
                        for (var c = a.data, p = [], m = this.zr.getWidth(), u = this.zr.getHeight(), f = 0; f < c.length; f++) {
                            var _ = c[f];
                            if (t(_[0]) && t(_[1])) {
                                var g = this.deepMerge(_), y = [g, a], b = l, k = null != g.value ? g.value : "";
                                if (r) {
                                    b = isNaN(k) ? b : r.getColor(k);
                                    var x = this.deepQuery(y, "itemStyle.normal.color") || b, v = this.deepQuery(y, "itemStyle.emphasis.color") || x;
                                    if (null == x && null == v)continue
                                }
                                _[0].tooltip = g.tooltip || a.tooltip || {trigger: "item"}, _[0].name = _[0].name || "", _[1].name = _[1].name || "", _[0].value = k, p.push({
                                    points: [[this.parsePercent(_[0].x, m), this.parsePercent(_[0].y, u)], [this.parsePercent(_[1].x, m), this.parsePercent(_[1].y, u)]],
                                    rawData: _,
                                    color: b
                                })
                            }
                        }
                        var L = this.query(a, "bundling.enable");
                        if (L) {
                            var w = new V;
                            w.maxTurningAngle = this.query(a, "bundling.maxTurningAngle") / 180 * Math.PI, p = w.run(p)
                        }
                        a.name = i.name;
                        for (var W = [], f = 0, X = p.length; X > f; f++) {
                            var I = p[f], K = I.rawEdge || I, _ = K.rawData, k = null != _.value ? _.value : "", S = this.getMarkLineShape(a, n, _, f, I.points, L, K.color);
                            S._mark = "line";
                            var C = this.deepMerge([_[0], _[1], a], "effect");
                            C.show && (S.effect = C, S.effect.large = a.large), i.type === h.CHART_TYPE_MAP && (S._geo = [this.getMarkGeo(_[0]), this.getMarkGeo(_[1])]), d.pack(S, i, n, _[0], f, _[0].name + ("" !== _[1].name ? " > " + _[1].name : ""), k), W.push(S)
                        }
                        return W
                    }
                }(), getMarkCoord: function () {
                    return [0, 0]
                }, getSymbolShape: function (e, t, n, o, r, s, l, h, c, p, m) {
                    var u = [n, e], V = this.getDataFromOption(n, "-");
                    h = this.deepQuery(u, "symbol") || h;
                    var U = this.deepQuery(u, "symbolSize");
                    U = "function" == typeof U ? U(V) : U, "number" == typeof U && (U = [U, U]);
                    var f = this.deepQuery(u, "symbolRotate"), _ = this.deepMerge(u, "itemStyle.normal"), g = this.deepMerge(u, "itemStyle.emphasis"), y = null != _.borderWidth ? _.borderWidth : _.lineStyle && _.lineStyle.width;
                    null == y && (y = h.match("empty") ? 2 : 0);
                    var b = null != g.borderWidth ? g.borderWidth : g.lineStyle && g.lineStyle.width;
                    null == b && (b = y + 2);
                    var k = this.getItemStyleColor(_.color, t, o, n), x = this.getItemStyleColor(g.color, t, o, n), v = U[0], L = U[1], w = new i({
                        style: {
                            iconType: h.replace("empty", "").toLowerCase(),
                            x: s - v,
                            y: l - L,
                            width: 2 * v,
                            height: 2 * L,
                            brushType: "both",
                            color: h.match("empty") ? p : k || c,
                            strokeColor: _.borderColor || k || c,
                            lineWidth: y
                        },
                        highlightStyle: {
                            color: h.match("empty") ? p : x || k || c,
                            strokeColor: g.borderColor || _.borderColor || x || k || c,
                            lineWidth: b
                        },
                        clickable: this.deepQuery(u, "clickable")
                    });
                    return h.match("image") && (w.style.image = h.replace(new RegExp("^image:\\/\\/"), ""), w = new a({
                        style: w.style,
                        highlightStyle: w.highlightStyle,
                        clickable: this.deepQuery(u, "clickable")
                    })), null != f && (w.rotation = [f * Math.PI / 180, s, l]), h.match("star") && (w.style.iconType = "star", w.style.n = h.replace("empty", "").replace("star", "") - 0 || 5), "none" === h && (w.invisible = !0, w.hoverable = !1), w = this.addLabel(w, e, n, r, m), h.match("empty") && (null == w.style.textColor && (w.style.textColor = w.style.strokeColor), null == w.highlightStyle.textColor && (w.highlightStyle.textColor = w.highlightStyle.strokeColor)), d.pack(w, e, t, n, o, r), w._x = s, w._y = l, w._dataIndex = o, w._seriesIndex = t, w
                }, getMarkLineShape: function (e, t, n, a, i, r, l) {
                    var h = null != n[0].value ? n[0].value : "-", d = null != n[1].value ? n[1].value : "-", c = [n[0].symbol || e.symbol[0], n[1].symbol || e.symbol[1]], p = [n[0].symbolSize || e.symbolSize[0], n[1].symbolSize || e.symbolSize[1]];
                    p[0] = "function" == typeof p[0] ? p[0](h) : p[0], p[1] = "function" == typeof p[1] ? p[1](d) : p[1];
                    var m = [this.query(n[0], "symbolRotate") || e.symbolRotate[0], this.query(n[1], "symbolRotate") || e.symbolRotate[1]], u = [n[0], n[1], e], V = this.deepMerge(u, "itemStyle.normal");
                    V.color = this.getItemStyleColor(V.color, t, a, n);
                    var U = this.deepMerge(u, "itemStyle.emphasis");
                    U.color = this.getItemStyleColor(U.color, t, a, n);
                    var f = V.lineStyle, _ = U.lineStyle, g = f.width;
                    null == g && (g = V.borderWidth);
                    var y = _.width;
                    null == y && (y = null != U.borderWidth ? U.borderWidth : g + 2);
                    var b = this.deepQuery(u, "smoothness");
                    this.deepQuery(u, "smooth") || (b = 0);
                    var k = r ? s : o, x = new k({
                        style: {
                            symbol: c,
                            symbolSize: p,
                            symbolRotate: m,
                            brushType: "both",
                            lineType: f.type,
                            shadowColor: f.shadowColor || f.color || V.borderColor || V.color || l,
                            shadowBlur: f.shadowBlur,
                            shadowOffsetX: f.shadowOffsetX,
                            shadowOffsetY: f.shadowOffsetY,
                            color: V.color || l,
                            strokeColor: f.color || V.borderColor || V.color || l,
                            lineWidth: g,
                            symbolBorderColor: V.borderColor || V.color || l,
                            symbolBorder: V.borderWidth
                        },
                        highlightStyle: {
                            shadowColor: _.shadowColor,
                            shadowBlur: _.shadowBlur,
                            shadowOffsetX: _.shadowOffsetX,
                            shadowOffsetY: _.shadowOffsetY,
                            color: U.color || V.color || l,
                            strokeColor: _.color || f.color || U.borderColor || V.borderColor || U.color || V.color || l,
                            lineWidth: y,
                            symbolBorderColor: U.borderColor || V.borderColor || U.color || V.color || l,
                            symbolBorder: null == U.borderWidth ? V.borderWidth + 2 : U.borderWidth
                        },
                        clickable: this.deepQuery(u, "clickable")
                    }), v = x.style;
                    return r ? (v.pointList = i, v.smooth = b) : (v.xStart = i[0][0], v.yStart = i[0][1], v.xEnd = i[1][0], v.yEnd = i[1][1], v.curveness = b, x.updatePoints(x.style)), x = this.addLabel(x, e, n[0], n[0].name + " : " + n[1].name)
                }, getLargeMarkPointShape: function (e, t) {
                    var n, a, i, o, s, l, h = this.series[e], d = this.component, c = t.data, p = d.dataRange, m = d.legend, u = [c[0], t];
                    if (m && (a = m.getColor(h.name)), !p || (i = null != c[0].value ? c[0].value : "", a = isNaN(i) ? a : p.getColor(i), o = this.deepQuery(u, "itemStyle.normal.color") || a, s = this.deepQuery(u, "itemStyle.emphasis.color") || o, null != o || null != s)) {
                        a = this.deepMerge(u, "itemStyle.normal").color || a;
                        var V = this.deepQuery(u, "symbol") || "circle";
                        V = V.replace("empty", "").replace(/\d/g, ""), l = this.deepMerge([c[0], t], "effect");
                        var U = window.devicePixelRatio || 1;
                        return n = new r({
                            style: {
                                pointList: c,
                                color: a,
                                strokeColor: a,
                                shadowColor: l.shadowColor || a,
                                shadowBlur: (null != l.shadowBlur ? l.shadowBlur : 8) * U,
                                size: this.deepQuery(u, "symbolSize"),
                                iconType: V,
                                brushType: "fill",
                                lineWidth: 1
                            }, draggable: !1, hoverable: !1
                        }), l.show && (n.effect = l), n
                    }
                }, backupShapeList: function () {
                    this.shapeList && this.shapeList.length > 0 ? (this.lastShapeList = this.shapeList, this.shapeList = []) : this.lastShapeList = []
                }, addShapeList: function () {
                    var e, t, n = this.option.animationThreshold / (this.canvasSupported ? 2 : 4), a = this.lastShapeList, i = this.shapeList, o = a.length > 0, r = o ? this.query(this.option, "animationDurationUpdate") : this.query(this.option, "animationDuration"), s = this.query(this.option, "animationEasing"), l = {}, d = {};
                    if (this.option.animation && !this.option.renderAsImage && i.length < n && !this.motionlessOnce) {
                        for (var c = 0, p = a.length; p > c; c++)t = this._getAnimationKey(a[c]), t.match("undefined") ? this.zr.delShape(a[c].id) : (t += a[c].type, l[t] ? this.zr.delShape(a[c].id) : l[t] = a[c]);
                        for (var c = 0, p = i.length; p > c; c++)t = this._getAnimationKey(i[c]), t.match("undefined") ? this.zr.addShape(i[c]) : (t += i[c].type, d[t] = i[c]);
                        for (t in l)d[t] || this.zr.delShape(l[t].id);
                        for (t in d)l[t] ? (this.zr.delShape(l[t].id), this._animateMod(l[t], d[t], r, s, 0, o)) : (e = this.type != h.CHART_TYPE_LINE && this.type != h.CHART_TYPE_RADAR || 0 === t.indexOf("icon") ? 0 : r / 2, this._animateMod(!1, d[t], r, s, e, o));
                        this.zr.refresh(), this.animationEffect()
                    } else {
                        this.motionlessOnce = !1, this.zr.delShape(a);
                        for (var c = 0, p = i.length; p > c; c++)this.zr.addShape(i[c])
                    }
                }, _getAnimationKey: function (e) {
                    return this.type != h.CHART_TYPE_MAP && this.type != h.CHART_TYPE_TREEMAP && this.type != h.CHART_TYPE_VENN && this.type != h.CHART_TYPE_TREE ? d.get(e, "seriesIndex") + "_" + d.get(e, "dataIndex") + (e._mark ? e._mark : "") + (this.type === h.CHART_TYPE_RADAR ? d.get(e, "special") : "") : d.get(e, "seriesIndex") + "_" + d.get(e, "dataIndex") + (e._mark ? e._mark : "undefined")
                }, _animateMod: function (e, t, n, a, i, o) {
                    switch (t.type) {
                        case"polyline":
                        case"half-smooth-polygon":
                            c.pointList(this.zr, e, t, n, a);
                            break;
                        case"rectangle":
                            c.rectangle(this.zr, e, t, n, a);
                            break;
                        case"image":
                        case"icon":
                            c.icon(this.zr, e, t, n, a, i);
                            break;
                        case"candle":
                            o ? this.zr.addShape(t) : c.candle(this.zr, e, t, n, a);
                            break;
                        case"ring":
                        case"sector":
                        case"circle":
                            o ? "sector" === t.type ? c.sector(this.zr, e, t, n, a) : this.zr.addShape(t) : c.ring(this.zr, e, t, n + (d.get(t, "dataIndex") || 0) % 20 * 100, a);
                            break;
                        case"text":
                            c.text(this.zr, e, t, n, a);
                            break;
                        case"polygon":
                            o ? c.pointList(this.zr, e, t, n, a) : c.polygon(this.zr, e, t, n, a);
                            break;
                        case"ribbon":
                            c.ribbon(this.zr, e, t, n, a);
                            break;
                        case"gauge-pointer":
                            c.gaugePointer(this.zr, e, t, n, a);
                            break;
                        case"mark-line":
                            c.markline(this.zr, e, t, n, a);
                            break;
                        case"bezier-curve":
                        case"line":
                            c.line(this.zr, e, t, n, a);
                            break;
                        default:
                            this.zr.addShape(t)
                    }
                }, animationMark: function (e, t, n) {
                    for (var n = n || this.shapeList, a = 0, i = n.length; i > a; a++)n[a]._mark && this._animateMod(!1, n[a], e, t, 0, !0);
                    this.animationEffect(n)
                }, animationEffect: function (e) {
                    if (!e && this.clearEffectShape(), e = e || this.shapeList, null != e) {
                        var t = h.EFFECT_ZLEVEL;
                        this.canvasSupported && this.zr.modLayer(t, {
                            motionBlur: !0,
                            lastFrameAlpha: this.option.effectBlendAlpha || h.effectBlendAlpha
                        });
                        for (var n, a = 0, i = e.length; i > a; a++)n = e[a], n._mark && n.effect && n.effect.show && p[n._mark] && (p[n._mark](this.zr, this.effectList, n, t), this.effectList[this.effectList.length - 1]._mark = n._mark)
                    }
                }, clearEffectShape: function (e) {
                    var t = this.effectList;
                    if (this.zr && t && t.length > 0) {
                        e && this.zr.modLayer(h.EFFECT_ZLEVEL, {motionBlur: !1}), this.zr.delShape(t);
                        for (var n = 0; n < t.length; n++)t[n].effectAnimator && t[n].effectAnimator.stop()
                    }
                    this.effectList = []
                }, addMark: function (e, t, n) {
                    var a = this.series[e];
                    if (this.selectedMap[a.name]) {
                        var i = this.query(this.option, "animationDurationUpdate"), o = this.query(this.option, "animationEasing"), r = a[n].data, s = this.shapeList.length;
                        if (a[n].data = t.data, this["_build" + n.replace("m", "M")](e), this.option.animation && !this.option.renderAsImage)this.animationMark(i, o, this.shapeList.slice(s)); else {
                            for (var l = s, h = this.shapeList.length; h > l; l++)this.zr.addShape(this.shapeList[l]);
                            this.zr.refreshNextFrame()
                        }
                        a[n].data = r
                    }
                }, delMark: function (e, t, n) {
                    n = n.replace("mark", "").replace("large", "").toLowerCase();
                    var a = this.series[e];
                    if (this.selectedMap[a.name]) {
                        for (var i = !1, o = [this.shapeList, this.effectList], r = 2; r--;)for (var s = 0, l = o[r].length; l > s; s++)if (o[r][s]._mark == n && d.get(o[r][s], "seriesIndex") == e && d.get(o[r][s], "name") == t) {
                            this.zr.delShape(o[r][s].id), o[r].splice(s, 1), i = !0;
                            break
                        }
                        i && this.zr.refreshNextFrame()
                    }
                }
            }, U.inherits(n, u), n
        }), n("zrender/shape/Circle", ["require", "./Base", "../tool/util"], function (e) {
            "use strict";
            var t = e("./Base"), n = function (e) {
                t.call(this, e)
            };
            return n.prototype = {
                type: "circle", buildPath: function (e, t) {
                    e.moveTo(t.x + t.r, t.y), e.arc(t.x, t.y, t.r, 0, 2 * Math.PI, !0)
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t;
                    return t = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0, e.__rect = {
                        x: Math.round(e.x - e.r - t / 2),
                        y: Math.round(e.y - e.r - t / 2),
                        width: 2 * e.r + t,
                        height: 2 * e.r + t
                    }, e.__rect
                }
            }, e("../tool/util").inherits(n, t), n
        }), n("echarts/util/accMath", [], function () {
            function e(e, t) {
                var n = e.toString(), a = t.toString(), i = 0;
                try {
                    i = a.split(".")[1].length
                } catch (o) {
                }
                try {
                    i -= n.split(".")[1].length
                } catch (o) {
                }
                return (n.replace(".", "") - 0) / (a.replace(".", "") - 0) * Math.pow(10, i)
            }

            function t(e, t) {
                var n = e.toString(), a = t.toString(), i = 0;
                try {
                    i += n.split(".")[1].length
                } catch (o) {
                }
                try {
                    i += a.split(".")[1].length
                } catch (o) {
                }
                return (n.replace(".", "") - 0) * (a.replace(".", "") - 0) / Math.pow(10, i)
            }

            function n(e, t) {
                var n = 0, a = 0;
                try {
                    n = e.toString().split(".")[1].length
                } catch (i) {
                }
                try {
                    a = t.toString().split(".")[1].length
                } catch (i) {
                }
                var o = Math.pow(10, Math.max(n, a));
                return (Math.round(e * o) + Math.round(t * o)) / o
            }

            function a(e, t) {
                return n(e, -t)
            }

            return {accDiv: e, accMul: t, accAdd: n, accSub: a}
        }), n("echarts/util/shape/Icon", ["require", "zrender/tool/util", "zrender/shape/Star", "zrender/shape/Heart", "zrender/shape/Droplet", "zrender/shape/Image", "zrender/shape/Base"], function (e) {
            function t(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n, a + t.height), e.lineTo(n + 5 * i, a + 14 * o), e.lineTo(n + t.width, a + 3 * o), e.lineTo(n + 13 * i, a), e.lineTo(n + 2 * i, a + 11 * o), e.lineTo(n, a + t.height), e.moveTo(n + 6 * i, a + 10 * o), e.lineTo(n + 14 * i, a + 2 * o), e.moveTo(n + 10 * i, a + 13 * o), e.lineTo(n + t.width, a + 13 * o), e.moveTo(n + 13 * i, a + 10 * o), e.lineTo(n + 13 * i, a + t.height)
            }

            function n(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n, a + t.height), e.lineTo(n + 5 * i, a + 14 * o), e.lineTo(n + t.width, a + 3 * o), e.lineTo(n + 13 * i, a), e.lineTo(n + 2 * i, a + 11 * o), e.lineTo(n, a + t.height), e.moveTo(n + 6 * i, a + 10 * o), e.lineTo(n + 14 * i, a + 2 * o), e.moveTo(n + 10 * i, a + 13 * o), e.lineTo(n + t.width, a + 13 * o)
            }

            function a(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n + 4 * i, a + 15 * o), e.lineTo(n + 9 * i, a + 13 * o), e.lineTo(n + 14 * i, a + 8 * o), e.lineTo(n + 11 * i, a + 5 * o), e.lineTo(n + 6 * i, a + 10 * o), e.lineTo(n + 4 * i, a + 15 * o), e.moveTo(n + 5 * i, a), e.lineTo(n + 11 * i, a), e.moveTo(n + 5 * i, a + o), e.lineTo(n + 11 * i, a + o), e.moveTo(n, a + 2 * o), e.lineTo(n + t.width, a + 2 * o), e.moveTo(n, a + 5 * o), e.lineTo(n + 3 * i, a + t.height), e.lineTo(n + 13 * i, a + t.height), e.lineTo(n + t.width, a + 5 * o)
            }

            function i(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n, a + 3 * o), e.lineTo(n + 6 * i, a + 3 * o), e.moveTo(n + 3 * i, a), e.lineTo(n + 3 * i, a + 6 * o), e.moveTo(n + 3 * i, a + 8 * o), e.lineTo(n + 3 * i, a + t.height), e.lineTo(n + t.width, a + t.height), e.lineTo(n + t.width, a + 3 * o), e.lineTo(n + 8 * i, a + 3 * o)
            }

            function o(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n + 6 * i, a), e.lineTo(n + 2 * i, a + 3 * o), e.lineTo(n + 6 * i, a + 6 * o), e.moveTo(n + 2 * i, a + 3 * o), e.lineTo(n + 14 * i, a + 3 * o), e.lineTo(n + 14 * i, a + 11 * o), e.moveTo(n + 2 * i, a + 5 * o), e.lineTo(n + 2 * i, a + 13 * o), e.lineTo(n + 14 * i, a + 13 * o), e.moveTo(n + 10 * i, a + 10 * o), e.lineTo(n + 14 * i, a + 13 * o), e.lineTo(n + 10 * i, a + t.height)
            }

            function r(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16, r = t.width / 2;
                e.lineWidth = 1.5, e.arc(n + r, a + r, r - i, 0, 2 * Math.PI / 3), e.moveTo(n + 3 * i, a + t.height), e.lineTo(n + 0 * i, a + 12 * o), e.lineTo(n + 5 * i, a + 11 * o), e.moveTo(n, a + 8 * o), e.arc(n + r, a + r, r - i, Math.PI, 5 * Math.PI / 3), e.moveTo(n + 13 * i, a), e.lineTo(n + t.width, a + 4 * o), e.lineTo(n + 11 * i, a + 5 * o)
            }

            function s(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n, a), e.lineTo(n, a + t.height), e.lineTo(n + t.width, a + t.height), e.moveTo(n + 2 * i, a + 14 * o), e.lineTo(n + 7 * i, a + 6 * o), e.lineTo(n + 11 * i, a + 11 * o), e.lineTo(n + 15 * i, a + 2 * o)
            }

            function l(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n, a), e.lineTo(n, a + t.height), e.lineTo(n + t.width, a + t.height), e.moveTo(n + 3 * i, a + 14 * o), e.lineTo(n + 3 * i, a + 6 * o), e.lineTo(n + 4 * i, a + 6 * o), e.lineTo(n + 4 * i, a + 14 * o), e.moveTo(n + 7 * i, a + 14 * o), e.lineTo(n + 7 * i, a + 2 * o), e.lineTo(n + 8 * i, a + 2 * o), e.lineTo(n + 8 * i, a + 14 * o), e.moveTo(n + 11 * i, a + 14 * o), e.lineTo(n + 11 * i, a + 9 * o), e.lineTo(n + 12 * i, a + 9 * o), e.lineTo(n + 12 * i, a + 14 * o)
            }

            function h(e, t) {
                var n = t.x, a = t.y, i = t.width - 2, o = t.height - 2, r = Math.min(i, o) / 2;
                a += 2, e.moveTo(n + r + 3, a + r - 3), e.arc(n + r + 3, a + r - 3, r - 1, 0, -Math.PI / 2, !0), e.lineTo(n + r + 3, a + r - 3), e.moveTo(n + r, a), e.lineTo(n + r, a + r), e.arc(n + r, a + r, r, -Math.PI / 2, 2 * Math.PI, !0), e.lineTo(n + r, a + r), e.lineWidth = 1.5
            }

            function d(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                a -= o, e.moveTo(n + 1 * i, a + 2 * o), e.lineTo(n + 15 * i, a + 2 * o), e.lineTo(n + 14 * i, a + 3 * o), e.lineTo(n + 2 * i, a + 3 * o), e.moveTo(n + 3 * i, a + 6 * o), e.lineTo(n + 13 * i, a + 6 * o), e.lineTo(n + 12 * i, a + 7 * o), e.lineTo(n + 4 * i, a + 7 * o), e.moveTo(n + 5 * i, a + 10 * o), e.lineTo(n + 11 * i, a + 10 * o), e.lineTo(n + 10 * i, a + 11 * o), e.lineTo(n + 6 * i, a + 11 * o), e.moveTo(n + 7 * i, a + 14 * o), e.lineTo(n + 9 * i, a + 14 * o), e.lineTo(n + 8 * i, a + 15 * o), e.lineTo(n + 7 * i, a + 15 * o)
            }

            function c(e, t) {
                var n = t.x, a = t.y, i = t.width, o = t.height, r = i / 16, s = o / 16, l = 2 * Math.min(r, s);
                e.moveTo(n + r + l, a + s + l), e.arc(n + r, a + s, l, Math.PI / 4, 3 * Math.PI), e.lineTo(n + 7 * r - l, a + 6 * s - l), e.arc(n + 7 * r, a + 6 * s, l, Math.PI / 4 * 5, 4 * Math.PI), e.arc(n + 7 * r, a + 6 * s, l / 2, Math.PI / 4 * 5, 4 * Math.PI), e.moveTo(n + 7 * r - l / 2, a + 6 * s + l), e.lineTo(n + r + l, a + 14 * s - l), e.arc(n + r, a + 14 * s, l, -Math.PI / 4, 2 * Math.PI), e.moveTo(n + 7 * r + l / 2, a + 6 * s), e.lineTo(n + 14 * r - l, a + 10 * s - l / 2), e.moveTo(n + 16 * r, a + 10 * s), e.arc(n + 14 * r, a + 10 * s, l, 0, 3 * Math.PI), e.lineWidth = 1.5
            }

            function p(e, t) {
                var n = t.x, a = t.y, i = t.width, o = t.height, r = Math.min(i, o) / 2;
                e.moveTo(n + i, a + o / 2), e.arc(n + r, a + r, r, 0, 2 * Math.PI), e.arc(n + r, a, r, Math.PI / 4, Math.PI / 5 * 4), e.arc(n, a + r, r, -Math.PI / 3, Math.PI / 3), e.arc(n + i, a + o, r, Math.PI, Math.PI / 2 * 3), e.lineWidth = 1.5
            }

            function m(e, t) {
                for (var n = t.x, a = t.y, i = t.width, o = t.height, r = Math.round(o / 3), s = Math.round((r - 2) / 2), l = 3; l--;)e.rect(n, a + r * l + s, i, 2)
            }

            function u(e, t) {
                for (var n = t.x, a = t.y, i = t.width, o = t.height, r = Math.round(i / 3), s = Math.round((r - 2) / 2), l = 3; l--;)e.rect(n + r * l + s, a, 2, o)
            }

            function V(e, t) {
                var n = t.x, a = t.y, i = t.width / 16;
                e.moveTo(n + i, a), e.lineTo(n + i, a + t.height), e.lineTo(n + 15 * i, a + t.height), e.lineTo(n + 15 * i, a), e.lineTo(n + i, a), e.moveTo(n + 3 * i, a + 3 * i), e.lineTo(n + 13 * i, a + 3 * i), e.moveTo(n + 3 * i, a + 6 * i), e.lineTo(n + 13 * i, a + 6 * i), e.moveTo(n + 3 * i, a + 9 * i), e.lineTo(n + 13 * i, a + 9 * i), e.moveTo(n + 3 * i, a + 12 * i), e.lineTo(n + 9 * i, a + 12 * i)
            }

            function U(e, t) {
                var n = t.x, a = t.y, i = t.width / 16, o = t.height / 16;
                e.moveTo(n, a), e.lineTo(n, a + t.height), e.lineTo(n + t.width, a + t.height), e.lineTo(n + t.width, a), e.lineTo(n, a), e.moveTo(n + 4 * i, a), e.lineTo(n + 4 * i, a + 8 * o), e.lineTo(n + 12 * i, a + 8 * o), e.lineTo(n + 12 * i, a), e.moveTo(n + 6 * i, a + 11 * o), e.lineTo(n + 6 * i, a + 13 * o), e.lineTo(n + 10 * i, a + 13 * o), e.lineTo(n + 10 * i, a + 11 * o), e.lineTo(n + 6 * i, a + 11 * o)
            }

            function f(e, t) {
                var n = t.x, a = t.y, i = t.width, o = t.height;
                e.moveTo(n, a + o / 2), e.lineTo(n + i, a + o / 2), e.moveTo(n + i / 2, a), e.lineTo(n + i / 2, a + o)
            }

            function _(e, t) {
                var n = t.width / 2, a = t.height / 2, i = Math.min(n, a);
                e.moveTo(t.x + n + i, t.y + a), e.arc(t.x + n, t.y + a, i, 0, 2 * Math.PI), e.closePath()
            }

            function g(e, t) {
                e.rect(t.x, t.y, t.width, t.height), e.closePath()
            }

            function y(e, t) {
                var n = t.width / 2, a = t.height / 2, i = t.x + n, o = t.y + a, r = Math.min(n, a);
                e.moveTo(i, o - r), e.lineTo(i + r, o + r), e.lineTo(i - r, o + r), e.lineTo(i, o - r), e.closePath()
            }

            function b(e, t) {
                var n = t.width / 2, a = t.height / 2, i = t.x + n, o = t.y + a, r = Math.min(n, a);
                e.moveTo(i, o - r), e.lineTo(i + r, o), e.lineTo(i, o + r), e.lineTo(i - r, o), e.lineTo(i, o - r), e.closePath()
            }

            function k(e, t) {
                var n = t.x, a = t.y, i = t.width / 16;
                e.moveTo(n + 8 * i, a), e.lineTo(n + i, a + t.height), e.lineTo(n + 8 * i, a + t.height / 4 * 3), e.lineTo(n + 15 * i, a + t.height), e.lineTo(n + 8 * i, a), e.closePath()
            }

            function x(t, n) {
                var a = e("zrender/shape/Star"), i = n.width / 2, o = n.height / 2;
                a.prototype.buildPath(t, {x: n.x + i, y: n.y + o, r: Math.min(i, o), n: n.n || 5})
            }

            function v(t, n) {
                var a = e("zrender/shape/Heart");
                a.prototype.buildPath(t, {
                    x: n.x + n.width / 2,
                    y: n.y + .2 * n.height,
                    a: n.width / 2,
                    b: .8 * n.height
                })
            }

            function L(t, n) {
                var a = e("zrender/shape/Droplet");
                a.prototype.buildPath(t, {
                    x: n.x + .5 * n.width,
                    y: n.y + .5 * n.height,
                    a: .5 * n.width,
                    b: .8 * n.height
                })
            }

            function w(e, t) {
                var n = t.x, a = t.y - t.height / 2 * 1.5, i = t.width / 2, o = t.height / 2, r = Math.min(i, o);
                e.arc(n + i, a + o, r, Math.PI / 5 * 4, Math.PI / 5), e.lineTo(n + i, a + o + 1.5 * r), e.closePath()
            }

            function W(t, n, a) {
                var i = e("zrender/shape/Image");
                this._imageShape = this._imageShape || new i({style: {}});
                for (var o in n)this._imageShape.style[o] = n[o];
                this._imageShape.brush(t, !1, a)
            }

            function X(e) {
                K.call(this, e)
            }

            var I = e("zrender/tool/util"), K = e("zrender/shape/Base");
            return X.prototype = {
                type: "icon",
                iconLibrary: {
                    mark: t,
                    markUndo: n,
                    markClear: a,
                    dataZoom: i,
                    dataZoomReset: o,
                    restore: r,
                    lineChart: s,
                    barChart: l,
                    pieChart: h,
                    funnelChart: d,
                    forceChart: c,
                    chordChart: p,
                    stackChart: m,
                    tiledChart: u,
                    dataView: V,
                    saveAsImage: U,
                    cross: f,
                    circle: _,
                    rectangle: g,
                    triangle: y,
                    diamond: b,
                    arrow: k,
                    star: x,
                    heart: v,
                    droplet: L,
                    pin: w,
                    image: W
                },
                brush: function (t, n, a) {
                    var i = n ? this.highlightStyle : this.style;
                    i = i || {};
                    var o = i.iconType || this.style.iconType;
                    if ("image" === o) {
                        var r = e("zrender/shape/Image");
                        r.prototype.brush.call(this, t, n, a)
                    } else {
                        var i = this.beforeBrush(t, n);
                        switch (t.beginPath(), this.buildPath(t, i, a), i.brushType) {
                            case"both":
                                t.fill();
                            case"stroke":
                                i.lineWidth > 0 && t.stroke();
                                break;
                            default:
                                t.fill()
                        }
                        this.drawText(t, i, this.style), this.afterBrush(t)
                    }
                },
                buildPath: function (e, t, n) {
                    this.iconLibrary[t.iconType] ? this.iconLibrary[t.iconType].call(this, e, t, n) : (e.moveTo(t.x, t.y), e.lineTo(t.x + t.width, t.y), e.lineTo(t.x + t.width, t.y + t.height), e.lineTo(t.x, t.y + t.height), e.lineTo(t.x, t.y), e.closePath())
                },
                getRect: function (e) {
                    return e.__rect ? e.__rect : (e.__rect = {
                        x: Math.round(e.x),
                        y: Math.round(e.y - ("pin" == e.iconType ? e.height / 2 * 1.5 : 0)),
                        width: e.width,
                        height: e.height * ("pin" === e.iconType ? 1.25 : 1)
                    }, e.__rect)
                },
                isCover: function (e, t) {
                    var n = this.transformCoordToLocal(e, t);
                    e = n[0], t = n[1];
                    var a = this.style.__rect;
                    a || (a = this.style.__rect = this.getRect(this.style));
                    var i = a.height < 8 || a.width < 8 ? 4 : 0;
                    return e >= a.x - i && e <= a.x + a.width + i && t >= a.y - i && t <= a.y + a.height + i
                }
            }, I.inherits(X, K), X
        }), n("echarts/util/shape/MarkLine", ["require", "zrender/shape/Base", "./Icon", "zrender/shape/Line", "zrender/shape/BezierCurve", "zrender/tool/area", "zrender/shape/util/dashedLineTo", "zrender/tool/util", "zrender/tool/curve"], function (e) {
            function t(e) {
                n.call(this, e), this.style.curveness > 0 && this.updatePoints(this.style), this.highlightStyle.curveness > 0 && this.updatePoints(this.highlightStyle)
            }

            var n = e("zrender/shape/Base"), a = e("./Icon"), i = e("zrender/shape/Line"), o = new i({}), r = e("zrender/shape/BezierCurve"), s = new r({}), l = e("zrender/tool/area"), h = e("zrender/shape/util/dashedLineTo"), d = e("zrender/tool/util"), c = e("zrender/tool/curve");
            return t.prototype = {
                type: "mark-line", brush: function (e, t) {
                    var n = this.style;
                    t && (n = this.getHighlightStyle(n, this.highlightStyle || {})), e.save(), this.setContext(e, n), this.setTransform(e), e.save(), e.beginPath(), this.buildPath(e, n), e.stroke(), e.restore(), this.brushSymbol(e, n, 0), this.brushSymbol(e, n, 1), this.drawText(e, n, this.style), e.restore()
                }, buildPath: function (e, t) {
                    var n = t.lineType || "solid";
                    if (e.moveTo(t.xStart, t.yStart), t.curveness > 0) {
                        var a = null;
                        switch (n) {
                            case"dashed":
                                a = [5, 5];
                                break;
                            case"dotted":
                                a = [1, 1]
                        }
                        a && e.setLineDash && e.setLineDash(a), e.quadraticCurveTo(t.cpX1, t.cpY1, t.xEnd, t.yEnd)
                    } else if ("solid" == n)e.lineTo(t.xEnd, t.yEnd); else {
                        var i = (t.lineWidth || 1) * ("dashed" == t.lineType ? 5 : 1);
                        h(e, t.xStart, t.yStart, t.xEnd, t.yEnd, i)
                    }
                }, updatePoints: function (e) {
                    var t = e.curveness || 0, n = 1, a = e.xStart, i = e.yStart, o = e.xEnd, r = e.yEnd, s = (a + o) / 2 - n * (i - r) * t, l = (i + r) / 2 - n * (o - a) * t;
                    e.cpX1 = s, e.cpY1 = l
                }, brushSymbol: function (e, t, n) {
                    if ("none" != t.symbol[n]) {
                        e.save(), e.beginPath(), e.lineWidth = t.symbolBorder, e.strokeStyle = t.symbolBorderColor;
                        var i = t.symbol[n].replace("empty", "").toLowerCase();
                        t.symbol[n].match("empty") && (e.fillStyle = "#fff");
                        var o = t.xStart, r = t.yStart, s = t.xEnd, l = t.yEnd, h = 0 === n ? o : s, d = 0 === n ? r : l, p = t.curveness || 0, m = null != t.symbolRotate[n] ? t.symbolRotate[n] - 0 : 0;
                        if (m = m / 180 * Math.PI, "arrow" == i && 0 === m)if (0 === p) {
                            var u = 0 === n ? -1 : 1;
                            m = Math.PI / 2 + Math.atan2(u * (l - r), u * (s - o))
                        } else {
                            var V = t.cpX1, U = t.cpY1, f = c.quadraticDerivativeAt, _ = f(o, V, s, n), g = f(r, U, l, n);
                            m = Math.PI / 2 + Math.atan2(g, _)
                        }
                        e.translate(h, d), 0 !== m && e.rotate(m);
                        var y = t.symbolSize[n];
                        a.prototype.buildPath(e, {
                            x: -y,
                            y: -y,
                            width: 2 * y,
                            height: 2 * y,
                            iconType: i
                        }), e.closePath(), e.fill(), e.stroke(), e.restore()
                    }
                }, getRect: function (e) {
                    return e.curveness > 0 ? s.getRect(e) : o.getRect(e), e.__rect
                }, isCover: function (e, t) {
                    var n = this.transformCoordToLocal(e, t);
                    return e = n[0], t = n[1], this.isCoverRect(e, t) ? this.style.curveness > 0 ? l.isInside(s, this.style, e, t) : l.isInside(o, this.style, e, t) : !1
                }
            }, d.inherits(t, n), t
        }), n("echarts/util/shape/Symbol", ["require", "zrender/shape/Base", "zrender/shape/Polygon", "zrender/tool/util", "./normalIsCover"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("zrender/shape/Polygon"), i = new a({}), o = e("zrender/tool/util");
            return t.prototype = {
                type: "symbol", buildPath: function (e, t) {
                    var n = t.pointList, a = n.length;
                    if (0 !== a)for (var i, o, r, s, l, h = 1e4, d = Math.ceil(a / h), c = n[0]instanceof Array, p = t.size ? t.size : 2, m = p, u = p / 2, V = 2 * Math.PI, U = 0; d > U; U++) {
                        e.beginPath(), i = U * h, o = i + h, o = o > a ? a : o;
                        for (var f = i; o > f; f++)if (t.random && (r = t["randomMap" + f % 20] / 100, m = p * r * r, u = m / 2), c ? (s = n[f][0], l = n[f][1]) : (s = n[f].x, l = n[f].y), 3 > m)e.rect(s - u, l - u, m, m); else switch (t.iconType) {
                            case"circle":
                                e.moveTo(s, l), e.arc(s, l, u, 0, V, !0);
                                break;
                            case"diamond":
                                e.moveTo(s, l - u), e.lineTo(s + u / 3, l - u / 3), e.lineTo(s + u, l), e.lineTo(s + u / 3, l + u / 3), e.lineTo(s, l + u), e.lineTo(s - u / 3, l + u / 3), e.lineTo(s - u, l), e.lineTo(s - u / 3, l - u / 3), e.lineTo(s, l - u);
                                break;
                            default:
                                e.rect(s - u, l - u, m, m)
                        }
                        if (e.closePath(), d - 1 > U)switch (t.brushType) {
                            case"both":
                                e.fill(), t.lineWidth > 0 && e.stroke();
                                break;
                            case"stroke":
                                t.lineWidth > 0 && e.stroke();
                                break;
                            default:
                                e.fill()
                        }
                    }
                }, getRect: function (e) {
                    return e.__rect || i.getRect(e)
                }, isCover: e("./normalIsCover")
            }, o.inherits(t, n), t
        }), n("zrender/shape/Polyline", ["require", "./Base", "./util/smoothSpline", "./util/smoothBezier", "./util/dashedLineTo", "./Polygon", "../tool/util"], function (e) {
            var t = e("./Base"), n = e("./util/smoothSpline"), a = e("./util/smoothBezier"), i = e("./util/dashedLineTo"), o = function (e) {
                this.brushTypeOnly = "stroke", this.textPosition = "end", t.call(this, e)
            };
            return o.prototype = {
                type: "polyline", buildPath: function (e, t) {
                    var a = t.pointList;
                    if (!(a.length < 2)) {
                        var o = Math.min(t.pointList.length, Math.round(t.pointListLength || t.pointList.length));
                        if (t.smooth && "spline" !== t.smooth) {
                            t.controlPointList || this.updateControlPoints(t);
                            var r = t.controlPointList;
                            e.moveTo(a[0][0], a[0][1]);
                            for (var s, l, h, d = 0; o - 1 > d; d++)s = r[2 * d], l = r[2 * d + 1], h = a[d + 1], e.bezierCurveTo(s[0], s[1], l[0], l[1], h[0], h[1])
                        } else if ("spline" === t.smooth && (a = n(a), o = a.length), t.lineType && "solid" != t.lineType) {
                            if ("dashed" == t.lineType || "dotted" == t.lineType) {
                                var c = (t.lineWidth || 1) * ("dashed" == t.lineType ? 5 : 1);
                                e.moveTo(a[0][0], a[0][1]);
                                for (var d = 1; o > d; d++)i(e, a[d - 1][0], a[d - 1][1], a[d][0], a[d][1], c)
                            }
                        } else {
                            e.moveTo(a[0][0], a[0][1]);
                            for (var d = 1; o > d; d++)e.lineTo(a[d][0], a[d][1])
                        }
                    }
                }, updateControlPoints: function (e) {
                    e.controlPointList = a(e.pointList, e.smooth, !1, e.smoothConstraint)
                }, getRect: function (t) {
                    return e("./Polygon").prototype.getRect(t)
                }
            }, e("../tool/util").inherits(o, t), o
        }), n("zrender/shape/ShapeBundle", ["require", "./Base", "../tool/util"], function (e) {
            var t = e("./Base"), n = function (e) {
                t.call(this, e)
            };
            return n.prototype = {
                constructor: n, type: "shape-bundle", brush: function (e, t) {
                    var n = this.beforeBrush(e, t);
                    e.beginPath();
                    for (var a = 0; a < n.shapeList.length; a++) {
                        var i = n.shapeList[a], o = i.style;
                        t && (o = i.getHighlightStyle(o, i.highlightStyle || {}, i.brushTypeOnly)), i.buildPath(e, o)
                    }
                    switch (n.brushType) {
                        case"both":
                            e.fill();
                        case"stroke":
                            n.lineWidth > 0 && e.stroke();
                            break;
                        default:
                            e.fill()
                    }
                    this.drawText(e, n, this.style), this.afterBrush(e)
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    for (var t = 1 / 0, n = -(1 / 0), a = 1 / 0, i = -(1 / 0), o = 0; o < e.shapeList.length; o++)var r = e.shapeList[o], s = r.getRect(r.style), t = Math.min(s.x, t), a = Math.min(s.y, a), n = Math.max(s.x + s.width, n), i = Math.max(s.y + s.height, i);
                    return e.__rect = {x: t, y: a, width: n - t, height: i - a}, e.__rect
                }, isCover: function (e, t) {
                    var n = this.transformCoordToLocal(e, t);
                    if (e = n[0], t = n[1], this.isCoverRect(e, t))for (var a = 0; a < this.style.shapeList.length; a++) {
                        var i = this.style.shapeList[a];
                        if (i.isCover(e, t))return !0
                    }
                    return !1
                }
            }, e("../tool/util").inherits(n, t), n
        }), n("echarts/util/ecAnimation", ["require", "zrender/tool/util", "zrender/tool/curve", "zrender/shape/Polygon"], function (e) {
            function t(e, t, n, a, i) {
                var o, r = n.style.pointList, s = r.length;
                if (!t) {
                    if (o = [], "vertical" != n._orient)for (var l = r[0][1], h = 0; s > h; h++)o[h] = [r[h][0], l]; else for (var d = r[0][0], h = 0; s > h; h++)o[h] = [d, r[h][1]];
                    "half-smooth-polygon" == n.type && (o[s - 1] = u.clone(r[s - 1]), o[s - 2] = u.clone(r[s - 2])), t = {style: {pointList: o}}
                }
                o = t.style.pointList;
                var c = o.length;
                n.style.pointList = c == s ? o : s > c ? o.concat(r.slice(c)) : o.slice(0, s), e.addShape(n), n.__animating = !0, e.animate(n.id, "style").when(a, {pointList: r}).during(function () {
                    n.updateControlPoints && n.updateControlPoints(n.style)
                }).done(function () {
                    n.__animating = !1
                }).start(i)
            }

            function n(e, t) {
                for (var n = arguments.length, a = 2; n > a; a++) {
                    var i = arguments[a];
                    e.style[i] = t.style[i]
                }
            }

            function a(e, t, a, i, o) {
                var r = a.style;
                t || (t = {
                    position: a.position,
                    style: {
                        x: r.x,
                        y: "vertical" == a._orient ? r.y + r.height : r.y,
                        width: "vertical" == a._orient ? r.width : 0,
                        height: "vertical" != a._orient ? r.height : 0
                    }
                });
                var s = r.x, l = r.y, h = r.width, d = r.height, c = [a.position[0], a.position[1]];
                n(a, t, "x", "y", "width", "height"), a.position = t.position, e.addShape(a), (c[0] != t.position[0] || c[1] != t.position[1]) && e.animate(a.id, "").when(i, {position: c}).start(o), a.__animating = !0, e.animate(a.id, "style").when(i, {
                    x: s,
                    y: l,
                    width: h,
                    height: d
                }).done(function () {
                    a.__animating = !1
                }).start(o)
            }

            function i(e, t, n, a, i) {
                if (!t) {
                    var o = n.style.y;
                    t = {style: {y: [o[0], o[0], o[0], o[0]]}}
                }
                var r = n.style.y;
                n.style.y = t.style.y, e.addShape(n), n.__animating = !0, e.animate(n.id, "style").when(a, {y: r}).done(function () {
                    n.__animating = !1
                }).start(i)
            }

            function o(e, t, n, a, i) {
                var o = n.style.x, r = n.style.y, s = n.style.r0, l = n.style.r;
                n.__animating = !0, "r" != n._animationAdd ? (n.style.r0 = 0, n.style.r = 0, n.rotation = [2 * Math.PI, o, r], e.addShape(n), e.animate(n.id, "style").when(a, {
                    r0: s,
                    r: l
                }).done(function () {
                    n.__animating = !1
                }).start(i), e.animate(n.id, "").when(a, {rotation: [0, o, r]}).start(i)) : (n.style.r0 = n.style.r, e.addShape(n), e.animate(n.id, "style").when(a, {r0: s}).done(function () {
                    n.__animating = !1
                }).start(i))
            }

            function r(e, t, a, i, o) {
                t || (t = "r" != a._animationAdd ? {
                    style: {
                        startAngle: a.style.startAngle,
                        endAngle: a.style.startAngle
                    }
                } : {style: {r0: a.style.r}});
                var r = a.style.startAngle, s = a.style.endAngle;
                n(a, t, "startAngle", "endAngle"), e.addShape(a), a.__animating = !0, e.animate(a.id, "style").when(i, {
                    startAngle: r,
                    endAngle: s
                }).done(function () {
                    a.__animating = !1
                }).start(o)
            }

            function s(e, t, a, i, o) {
                t || (t = {style: {x: "left" == a.style.textAlign ? a.style.x + 100 : a.style.x - 100, y: a.style.y}});
                var r = a.style.x, s = a.style.y;
                n(a, t, "x", "y"), e.addShape(a), a.__animating = !0, e.animate(a.id, "style").when(i, {
                    x: r,
                    y: s
                }).done(function () {
                    a.__animating = !1
                }).start(o)
            }

            function l(t, n, a, i, o) {
                var r = e("zrender/shape/Polygon").prototype.getRect(a.style), s = r.x + r.width / 2, l = r.y + r.height / 2;
                a.scale = [.1, .1, s, l], t.addShape(a), a.__animating = !0, t.animate(a.id, "").when(i, {scale: [1, 1, s, l]}).done(function () {
                    a.__animating = !1
                }).start(o)
            }

            function h(e, t, a, i, o) {
                t || (t = {
                    style: {
                        source0: 0,
                        source1: a.style.source1 > 0 ? 360 : -360,
                        target0: 0,
                        target1: a.style.target1 > 0 ? 360 : -360
                    }
                });
                var r = a.style.source0, s = a.style.source1, l = a.style.target0, h = a.style.target1;
                t.style && n(a, t, "source0", "source1", "target0", "target1"), e.addShape(a), a.__animating = !0, e.animate(a.id, "style").when(i, {
                    source0: r,
                    source1: s,
                    target0: l,
                    target1: h
                }).done(function () {
                    a.__animating = !1
                }).start(o)
            }

            function d(e, t, n, a, i) {
                t || (t = {style: {angle: n.style.startAngle}});
                var o = n.style.angle;
                n.style.angle = t.style.angle, e.addShape(n), n.__animating = !0, e.animate(n.id, "style").when(a, {angle: o}).done(function () {
                    n.__animating = !1
                }).start(i)
            }

            function c(e, t, n, i, o, r) {
                if (n.style._x = n.style.x, n.style._y = n.style.y, n.style._width = n.style.width, n.style._height = n.style.height, t)a(e, t, n, i, o); else {
                    var s = n._x || 0, l = n._y || 0;
                    n.scale = [.01, .01, s, l], e.addShape(n), n.__animating = !0, e.animate(n.id, "").delay(r).when(i, {scale: [1, 1, s, l]}).done(function () {
                        n.__animating = !1
                    }).start(o || "QuinticOut")
                }
            }

            function p(e, t, a, i, o) {
                t || (t = {
                    style: {
                        xStart: a.style.xStart,
                        yStart: a.style.yStart,
                        xEnd: a.style.xStart,
                        yEnd: a.style.yStart
                    }
                });
                var r = a.style.xStart, s = a.style.xEnd, l = a.style.yStart, h = a.style.yEnd;
                n(a, t, "xStart", "xEnd", "yStart", "yEnd"), e.addShape(a), a.__animating = !0, e.animate(a.id, "style").when(i, {
                    xStart: r,
                    xEnd: s,
                    yStart: l,
                    yEnd: h
                }).done(function () {
                    a.__animating = !1
                }).start(o)
            }

            function m(e, t, n, a, i) {
                i = i || "QuinticOut", n.__animating = !0, e.addShape(n);
                var o = n.style, r = function () {
                    n.__animating = !1
                }, s = o.xStart, l = o.yStart, h = o.xEnd, d = o.yEnd;
                if (o.curveness > 0) {
                    n.updatePoints(o);
                    var c = {p: 0}, p = o.cpX1, m = o.cpY1, u = [], U = [], f = V.quadraticSubdivide;
                    e.animation.animate(c).when(a, {p: 1}).during(function () {
                        f(s, p, h, c.p, u), f(l, m, d, c.p, U), o.cpX1 = u[1], o.cpY1 = U[1], o.xEnd = u[2], o.yEnd = U[2], e.modShape(n)
                    }).done(r).start(i)
                } else e.animate(n.id, "style").when(0, {xEnd: s, yEnd: l}).when(a, {xEnd: h, yEnd: d}).done(r).start(i)
            }

            var u = e("zrender/tool/util"), V = e("zrender/tool/curve");
            return {
                pointList: t,
                rectangle: a,
                candle: i,
                ring: o,
                sector: r,
                text: s,
                polygon: l,
                ribbon: h,
                gaugePointer: d,
                icon: c,
                line: p,
                markline: m
            }
        }), n("echarts/util/ecEffect", ["require", "../util/ecData", "zrender/shape/Circle", "zrender/shape/Image", "zrender/tool/curve", "../util/shape/Icon", "../util/shape/Symbol", "zrender/shape/ShapeBundle", "zrender/shape/Polyline", "zrender/tool/vector", "zrender/tool/env"], function (e) {
            function t(e, t, n, a) {
                var i, r = n.effect, l = r.color || n.style.strokeColor || n.style.color, d = r.shadowColor || l, c = r.scaleSize, p = r.bounceDistance, m = "undefined" != typeof r.shadowBlur ? r.shadowBlur : c;
                "image" !== n.type ? (i = new h({
                    zlevel: a,
                    style: {
                        brushType: "stroke",
                        iconType: "droplet" != n.style.iconType ? n.style.iconType : "circle",
                        x: m + 1,
                        y: m + 1,
                        n: n.style.n,
                        width: n.style._width * c,
                        height: n.style._height * c,
                        lineWidth: 1,
                        strokeColor: l,
                        shadowColor: d,
                        shadowBlur: m
                    },
                    draggable: !1,
                    hoverable: !1
                }), "pin" == n.style.iconType && (i.style.y += i.style.height / 2 * 1.5), u && (i.style.image = e.shapeToImage(i, i.style.width + 2 * m + 2, i.style.height + 2 * m + 2).style.image, i = new s({
                    zlevel: i.zlevel,
                    style: i.style,
                    draggable: !1,
                    hoverable: !1
                }))) : i = new s({
                    zlevel: a,
                    style: n.style,
                    draggable: !1,
                    hoverable: !1
                }), o.clone(n, i), i.position = n.position, t.push(i), e.addShape(i);
                var V = "image" !== n.type ? window.devicePixelRatio || 1 : 1, U = (i.style.width / V - n.style._width) / 2;
                i.style.x = n.style._x - U, i.style.y = n.style._y - U, "pin" == n.style.iconType && (i.style.y -= n.style.height / 2 * 1.5);
                var f = 100 * (r.period + 10 * Math.random());
                e.modShape(n.id, {invisible: !0});
                var _ = i.style.x + i.style.width / 2 / V, g = i.style.y + i.style.height / 2 / V;
                "scale" === r.type ? (e.modShape(i.id, {scale: [.1, .1, _, g]}), e.animate(i.id, "", r.loop).when(f, {scale: [1, 1, _, g]}).done(function () {
                    n.effect.show = !1, e.delShape(i.id)
                }).start()) : e.animate(i.id, "style", r.loop).when(f, {y: i.style.y - p}).when(2 * f, {y: i.style.y}).done(function () {
                    n.effect.show = !1, e.delShape(i.id)
                }).start()
            }

            function n(e, t, n, a) {
                var i = n.effect, o = i.color || n.style.strokeColor || n.style.color, r = i.scaleSize, s = i.shadowColor || o, l = "undefined" != typeof i.shadowBlur ? i.shadowBlur : 2 * r, h = window.devicePixelRatio || 1, c = new d({
                    zlevel: a,
                    position: n.position,
                    scale: n.scale,
                    style: {
                        pointList: n.style.pointList,
                        iconType: n.style.iconType,
                        color: o,
                        strokeColor: o,
                        shadowColor: s,
                        shadowBlur: l * h,
                        random: !0,
                        brushType: "fill",
                        lineWidth: 1,
                        size: n.style.size
                    },
                    draggable: !1,
                    hoverable: !1
                });
                t.push(c), e.addShape(c), e.modShape(n.id, {invisible: !0});
                for (var p = Math.round(100 * i.period), m = {}, u = {}, V = 0; 20 > V; V++)c.style["randomMap" + V] = 0, m = {}, m["randomMap" + V] = 100, u = {}, u["randomMap" + V] = 0, c.style["randomMap" + V] = 100 * Math.random(), e.animate(c.id, "style", !0).when(p, m).when(2 * p, u).when(3 * p, m).when(4 * p, m).delay(Math.random() * p * V).start()
            }

            function a(e, t, n, a, i) {
                var s = n.effect, h = n.style, d = s.color || h.strokeColor || h.color, c = s.shadowColor || h.strokeColor || d, V = h.lineWidth * s.scaleSize, U = "undefined" != typeof s.shadowBlur ? s.shadowBlur : V, f = new r({
                    zlevel: a,
                    style: {x: U, y: U, r: V, color: d, shadowColor: c, shadowBlur: U},
                    hoverable: !1
                }), _ = 0;
                if (u && !i) {
                    var a = f.zlevel;
                    f = e.shapeToImage(f, 2 * (V + U), 2 * (V + U)), f.zlevel = a, f.hoverable = !1, _ = U
                }
                i || (o.clone(n, f), f.position = n.position, t.push(f), e.addShape(f));
                var g = function () {
                    i || (n.effect.show = !1, e.delShape(f.id)), f.effectAnimator = null
                };
                if (n instanceof p) {
                    for (var y = [0], b = 0, k = h.pointList, x = h.controlPointList, v = 1; v < k.length; v++) {
                        if (x) {
                            var L = x[2 * (v - 1)], w = x[2 * (v - 1) + 1];
                            b += m.dist(k[v - 1], L) + m.dist(L, w) + m.dist(w, k[v])
                        } else b += m.dist(k[v - 1], k[v]);
                        y.push(b)
                    }
                    for (var W = {p: 0}, X = e.animation.animate(W, {loop: s.loop}), v = 0; v < y.length; v++)X.when(y[v] * s.period, {p: v});
                    X.during(function () {
                        var t, n, a = Math.floor(W.p);
                        if (a == k.length - 1)t = k[a][0], n = k[a][1]; else {
                            var o = W.p - a, r = k[a], s = k[a + 1];
                            if (x) {
                                var h = x[2 * a], d = x[2 * a + 1];
                                t = l.cubicAt(r[0], h[0], d[0], s[0], o), n = l.cubicAt(r[1], h[1], d[1], s[1], o)
                            } else t = (s[0] - r[0]) * o + r[0], n = (s[1] - r[1]) * o + r[1]
                        }
                        f.style.x = t, f.style.y = n, i || e.modShape(f)
                    }).done(g).start(), X.duration = b * s.period, f.effectAnimator = X
                } else {
                    var I = h.xStart - _, K = h.yStart - _, S = h.xEnd - _, C = h.yEnd - _;
                    f.style.x = I, f.style.y = K;
                    var E = (S - I) * (S - I) + (C - K) * (C - K), J = Math.round(Math.sqrt(Math.round(E * s.period * s.period)));
                    if (n.style.curveness > 0) {
                        var T = h.cpX1 - _, M = h.cpY1 - _;
                        f.effectAnimator = e.animation.animate(f, {loop: s.loop}).when(J, {p: 1}).during(function (t, n) {
                            f.style.x = l.quadraticAt(I, T, S, n), f.style.y = l.quadraticAt(K, M, C, n), i || e.modShape(f)
                        }).done(g).start()
                    } else f.effectAnimator = e.animation.animate(f.style, {loop: s.loop}).when(J, {
                        x: S,
                        y: C
                    }).during(function () {
                        i || e.modShape(f)
                    }).done(g).start();
                    f.effectAnimator.duration = J
                }
                return f
            }

            function i(e, t, n, i) {
                var o = new c({style: {shapeList: []}, zlevel: i, hoverable: !1}), r = n.style.shapeList, s = n.effect;
                o.position = n.position;
                for (var l = 0, h = [], d = 0; d < r.length; d++) {
                    r[d].effect = s;
                    var p = a(e, null, r[d], i, !0), m = p.effectAnimator;
                    o.style.shapeList.push(p), m.duration > l && (l = m.duration), 0 === d && (o.style.color = p.style.color, o.style.shadowBlur = p.style.shadowBlur, o.style.shadowColor = p.style.shadowColor), h.push(m)
                }
                t.push(o), e.addShape(o);
                var u = function () {
                    for (var e = 0; e < h.length; e++)h[e].stop()
                };
                if (l) {
                    o.__dummy = 0;
                    var V = e.animate(o.id, "", s.loop).when(l, {__dummy: 1}).during(function () {
                        e.modShape(o)
                    }).done(function () {
                        n.effect.show = !1, e.delShape(o.id)
                    }).start(), U = V.stop;
                    V.stop = function () {
                        u(), U.call(this)
                    }
                }
            }

            var o = e("../util/ecData"), r = e("zrender/shape/Circle"), s = e("zrender/shape/Image"), l = e("zrender/tool/curve"), h = e("../util/shape/Icon"), d = e("../util/shape/Symbol"), c = e("zrender/shape/ShapeBundle"), p = e("zrender/shape/Polyline"), m = e("zrender/tool/vector"), u = e("zrender/tool/env").canvasSupported;
            return {point: t, largePoint: n, line: a, largeLine: i}
        }), n("echarts/component/base", ["require", "../config", "../util/ecData", "../util/ecQuery", "../util/number", "zrender/tool/util", "zrender/tool/env"], function (e) {
            function t(e, t, i, o, r) {
                this.ecTheme = e, this.messageCenter = t, this.zr = i, this.option = o, this.series = o.series, this.myChart = r, this.component = r.component, this.shapeList = [], this.effectList = [];
                var s = this;
                s._onlegendhoverlink = function (e) {
                    if (s.legendHoverLink)for (var t, i = e.target, o = s.shapeList.length - 1; o >= 0; o--)t = s.type == n.CHART_TYPE_PIE || s.type == n.CHART_TYPE_FUNNEL ? a.get(s.shapeList[o], "name") : (a.get(s.shapeList[o], "series") || {}).name, t != i || s.shapeList[o].invisible || s.shapeList[o].__animating || s.zr.addHoverShape(s.shapeList[o])
                }, t && t.bind(n.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink)
            }

            var n = e("../config"), a = e("../util/ecData"), i = e("../util/ecQuery"), o = e("../util/number"), r = e("zrender/tool/util");
            return t.prototype = {
                canvasSupported: e("zrender/tool/env").canvasSupported,
                _getZ: function (e) {
                    if (null != this[e])return this[e];
                    var t = this.ecTheme[this.type];
                    return t && null != t[e] ? t[e] : (t = n[this.type], t && null != t[e] ? t[e] : 0)
                },
                getZlevelBase: function () {
                    return this._getZ("zlevel")
                },
                getZBase: function () {
                    return this._getZ("z")
                },
                reformOption: function (e) {
                    return e = r.merge(r.merge(e || {}, r.clone(this.ecTheme[this.type] || {})), r.clone(n[this.type] || {})), this.z = e.z, this.zlevel = e.zlevel, e
                },
                reformCssArray: function (e) {
                    if (!(e instanceof Array))return [e, e, e, e];
                    switch (e.length + "") {
                        case"4":
                            return e;
                        case"3":
                            return [e[0], e[1], e[2], e[1]];
                        case"2":
                            return [e[0], e[1], e[0], e[1]];
                        case"1":
                            return [e[0], e[0], e[0], e[0]];
                        case"0":
                            return [0, 0, 0, 0]
                    }
                },
                getShapeById: function (e) {
                    for (var t = 0, n = this.shapeList.length; n > t; t++)if (this.shapeList[t].id === e)return this.shapeList[t];
                    return null
                },
                getFont: function (e) {
                    var t = this.getTextStyle(r.clone(e));
                    return t.fontStyle + " " + t.fontWeight + " " + t.fontSize + "px " + t.fontFamily
                },
                getTextStyle: function (e) {
                    return r.merge(r.merge(e || {}, this.ecTheme.textStyle), n.textStyle)
                },
                getItemStyleColor: function (e, t, n, a) {
                    return "function" == typeof e ? e.call(this.myChart, {
                        seriesIndex: t,
                        series: this.series[t],
                        dataIndex: n,
                        data: a
                    }) : e
                },
                getDataFromOption: function (e, t) {
                    return null != e ? null != e.value ? e.value : e : t
                },
                subPixelOptimize: function (e, t) {
                    return e = t % 2 === 1 ? Math.floor(e) + .5 : Math.round(e)
                },
                resize: function () {
                    this.refresh && this.refresh(), this.clearEffectShape && this.clearEffectShape(!0);
                    var e = this;
                    setTimeout(function () {
                        e.animationEffect && e.animationEffect()
                    }, 200)
                },
                clear: function () {
                    this.clearEffectShape && this.clearEffectShape(), this.zr && this.zr.delShape(this.shapeList), this.shapeList = []
                },
                dispose: function () {
                    this.onbeforDispose && this.onbeforDispose(), this.clear(), this.shapeList = null, this.effectList = null, this.messageCenter && this.messageCenter.unbind(n.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink), this.onafterDispose && this.onafterDispose()
                },
                query: i.query,
                deepQuery: i.deepQuery,
                deepMerge: i.deepMerge,
                parsePercent: o.parsePercent,
                parseCenter: o.parseCenter,
                parseRadius: o.parseRadius,
                numAddCommas: o.addCommas,
                getPrecision: o.getPrecision
            }, t
        }), n("echarts/layout/EdgeBundling", ["require", "../data/KDTree", "zrender/tool/vector"], function (e) {
            function t(e, t) {
                e = e.array, t = t.array;
                var n = t[0] - e[0], a = t[1] - e[1], i = t[2] - e[2], o = t[3] - e[3];
                return n * n + a * a + i * i + o * o
            }

            function n(e) {
                this.points = [e.mp0, e.mp1], this.group = e
            }

            function a(e) {
                var t = e.points;
                t[0][1] < t[1][1] || e instanceof n ? (this.array = [t[0][0], t[0][1], t[1][0], t[1][1]], this._startPoint = t[0], this._endPoint = t[1]) : (this.array = [t[1][0], t[1][1], t[0][0], t[0][1]], this._startPoint = t[1], this._endPoint = t[0]), this.ink = d(t[0], t[1]), this.edge = e, this.group = null
            }

            function i() {
                this.edgeList = [], this.mp0 = l(), this.mp1 = l(), this.ink = 0
            }

            function o() {
                this.maxNearestEdge = 6, this.maxTurningAngle = Math.PI / 4, this.maxIteration = 20
            }

            var r = e("../data/KDTree"), s = e("zrender/tool/vector"), l = s.create, h = s.distSquare, d = s.dist, c = s.copy, p = s.clone;
            return a.prototype.getStartPoint = function () {
                return this._startPoint
            }, a.prototype.getEndPoint = function () {
                return this._endPoint
            }, i.prototype.addEdge = function (e) {
                e.group = this, this.edgeList.push(e)
            }, i.prototype.removeEdge = function (e) {
                e.group = null, this.edgeList.splice(this.edgeList.indexOf(e), 1)
            }, o.prototype = {
                constructor: o, run: function (e) {
                    function t(e, t) {
                        return h(e, t) < 1e-10
                    }

                    function a(e, n) {
                        for (var a = [], i = 0, o = 0; o < e.length; o++)i > 0 && t(e[o], a[i - 1]) || (a[i++] = p(e[o]));
                        return n[0] && !t(a[0], n[0]) && (a = a.reverse()), a
                    }

                    for (var i = this._iterate(e), o = 0; o++ < this.maxIteration;) {
                        for (var r = [], s = 0; s < i.groups.length; s++)r.push(new n(i.groups[s]));
                        var l = this._iterate(r);
                        if (l.savedInk <= 0)break;
                        i = l
                    }
                    var d = [], c = function (e, t) {
                        for (var i, o = 0; o < e.length; o++) {
                            var r = e[o];
                            if (r.edgeList[0] && r.edgeList[0].edge instanceof n) {
                                for (var s = [], l = 0; l < r.edgeList.length; l++)s.push(r.edgeList[l].edge.group);
                                i = t ? t.slice() : [], i.unshift(r.mp0), i.push(r.mp1), c(s, i)
                            } else for (var l = 0; l < r.edgeList.length; l++) {
                                var h = r.edgeList[l];
                                i = t ? t.slice() : [], i.unshift(r.mp0), i.push(r.mp1), i.unshift(h.getStartPoint()), i.push(h.getEndPoint()), d.push({
                                    points: a(i, h.edge.points),
                                    rawEdge: h.edge
                                })
                            }
                        }
                    };
                    return c(i.groups), d
                }, _iterate: function (e) {
                    for (var n = [], o = [], s = 0, h = 0; h < e.length; h++) {
                        var d = new a(e[h]);
                        n.push(d)
                    }
                    for (var p = new r(n, 4), m = [], u = l(), V = l(), U = 0, f = l(), _ = l(), g = 0, h = 0; h < n.length; h++) {
                        var d = n[h];
                        if (!d.group) {
                            p.nearestN(d, this.maxNearestEdge, t, m);
                            for (var y = 0, b = null, k = null, x = 0; x < m.length; x++) {
                                var v = m[x], L = 0;
                                v.group ? v.group !== k && (k = v.group, U = this._calculateGroupEdgeInk(v.group, d, u, V), L = v.group.ink + d.ink - U) : (U = this._calculateEdgeEdgeInk(d, v, u, V), L = v.ink + d.ink - U), L > y && (y = L, b = v, c(_, V), c(f, u), g = U)
                            }
                            if (b) {
                                s += y;
                                var w;
                                b.group || (w = new i, o.push(w), w.addEdge(b)), w = b.group, c(w.mp0, f), c(w.mp1, _), w.ink = g, b.group.addEdge(d)
                            } else {
                                var w = new i;
                                o.push(w), c(w.mp0, d.getStartPoint()), c(w.mp1, d.getEndPoint()), w.ink = d.ink, w.addEdge(d)
                            }
                        }
                    }
                    return {groups: o, edges: n, savedInk: s}
                }, _calculateEdgeEdgeInk: function () {
                    var e = [], t = [];
                    return function (n, a, i, o) {
                        e[0] = n.getStartPoint(), e[1] = a.getStartPoint(), t[0] = n.getEndPoint(), t[1] = a.getEndPoint(), this._calculateMeetPoints(e, t, i, o);
                        var r = d(e[0], i) + d(i, o) + d(o, t[0]) + d(e[1], i) + d(o, t[1]);
                        return r
                    }
                }(), _calculateGroupEdgeInk: function (e, t, n, a) {
                    for (var i = [], o = [], r = 0; r < e.edgeList.length; r++) {
                        var s = e.edgeList[r];
                        i.push(s.getStartPoint()), o.push(s.getEndPoint())
                    }
                    i.push(t.getStartPoint()), o.push(t.getEndPoint()), this._calculateMeetPoints(i, o, n, a);
                    for (var l = d(n, a), r = 0; r < i.length; r++)l += d(i[r], n) + d(o[r], a);
                    return l
                }, _calculateMeetPoints: function () {
                    var e = l(), t = l();
                    return function (n, a, i, o) {
                        s.set(e, 0, 0), s.set(t, 0, 0);
                        for (var r = n.length, l = 0; r > l; l++)s.add(e, e, n[l]);
                        s.scale(e, e, 1 / r), r = a.length;
                        for (var l = 0; r > l; l++)s.add(t, t, a[l]);
                        s.scale(t, t, 1 / r), this._limitTurningAngle(n, e, t, i), this._limitTurningAngle(a, t, e, o)
                    }
                }(), _limitTurningAngle: function () {
                    var e = l(), t = l(), n = l(), a = l();
                    return function (i, o, r, l) {
                        var c = Math.cos(this.maxTurningAngle), p = Math.tan(this.maxTurningAngle);
                        s.sub(e, o, r), s.normalize(e, e), s.copy(l, o);
                        for (var m = 0, u = 0; u < i.length; u++) {
                            var V = i[u];
                            s.sub(t, V, o);
                            var U = s.len(t);
                            s.scale(t, t, 1 / U);
                            var f = s.dot(t, e);
                            if (c > f) {
                                s.scaleAndAdd(n, o, e, U * f);
                                var _ = d(n, V), g = _ / p;
                                s.scaleAndAdd(a, n, e, -g);
                                var y = h(a, o);
                                y > m && (m = y, s.copy(l, a))
                            }
                        }
                    }
                }()
            }, o
        }), n("zrender/shape/Star", ["require", "../tool/math", "./Base", "../tool/util"], function (e) {
            var t = e("../tool/math"), n = t.sin, a = t.cos, i = Math.PI, o = e("./Base"), r = function (e) {
                o.call(this, e)
            };
            return r.prototype = {
                type: "star", buildPath: function (e, t) {
                    var o = t.n;
                    if (o && !(2 > o)) {
                        var r = t.x, s = t.y, l = t.r, h = t.r0;
                        null == h && (h = o > 4 ? l * a(2 * i / o) / a(i / o) : l / 3);
                        var d = i / o, c = -i / 2, p = r + l * a(c), m = s + l * n(c);
                        c += d;
                        var u = t.pointList = [];
                        u.push([p, m]);
                        for (var V, U = 0, f = 2 * o - 1; f > U; U++)V = U % 2 === 0 ? h : l, u.push([r + V * a(c), s + V * n(c)]), c += d;
                        u.push([p, m]), e.moveTo(u[0][0], u[0][1]);
                        for (var U = 0; U < u.length; U++)e.lineTo(u[U][0], u[U][1]);
                        e.closePath()
                    }
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t;
                    return t = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0, e.__rect = {
                        x: Math.round(e.x - e.r - t / 2),
                        y: Math.round(e.y - e.r - t / 2),
                        width: 2 * e.r + t,
                        height: 2 * e.r + t
                    }, e.__rect
                }
            }, e("../tool/util").inherits(r, o), r
        }), n("zrender/shape/Heart", ["require", "./Base", "./util/PathProxy", "../tool/area", "../tool/util"], function (e) {
            "use strict";
            var t = e("./Base"), n = e("./util/PathProxy"), a = e("../tool/area"), i = function (e) {
                t.call(this, e), this._pathProxy = new n
            };
            return i.prototype = {
                type: "heart", buildPath: function (e, t) {
                    var a = this._pathProxy || new n;
                    a.begin(e), a.moveTo(t.x, t.y), a.bezierCurveTo(t.x + t.a / 2, t.y - 2 * t.b / 3, t.x + 2 * t.a, t.y + t.b / 3, t.x, t.y + t.b), a.bezierCurveTo(t.x - 2 * t.a, t.y + t.b / 3, t.x - t.a / 2, t.y - 2 * t.b / 3, t.x, t.y), a.closePath()
                }, getRect: function (e) {
                    return e.__rect ? e.__rect : (this._pathProxy.isEmpty() || this.buildPath(null, e), this._pathProxy.fastBoundingRect())
                }, isCover: function (e, t) {
                    var n = this.transformCoordToLocal(e, t);
                    return e = n[0], t = n[1], this.isCoverRect(e, t) ? a.isInsidePath(this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, e, t) : void 0
                }
            }, e("../tool/util").inherits(i, t), i
        }), n("zrender/shape/Droplet", ["require", "./Base", "./util/PathProxy", "../tool/area", "../tool/util"], function (e) {
            "use strict";
            var t = e("./Base"), n = e("./util/PathProxy"), a = e("../tool/area"), i = function (e) {
                t.call(this, e), this._pathProxy = new n
            };
            return i.prototype = {
                type: "droplet", buildPath: function (e, t) {
                    var a = this._pathProxy || new n;
                    a.begin(e), a.moveTo(t.x, t.y + t.a), a.bezierCurveTo(t.x + t.a, t.y + t.a, t.x + 3 * t.a / 2, t.y - t.a / 3, t.x, t.y - t.b), a.bezierCurveTo(t.x - 3 * t.a / 2, t.y - t.a / 3, t.x - t.a, t.y + t.a, t.x, t.y + t.a), a.closePath()
                }, getRect: function (e) {
                    return e.__rect ? e.__rect : (this._pathProxy.isEmpty() || this.buildPath(null, e), this._pathProxy.fastBoundingRect())
                }, isCover: function (e, t) {
                    var n = this.transformCoordToLocal(e, t);
                    return e = n[0], t = n[1], this.isCoverRect(e, t) ? a.isInsidePath(this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, e, t) : void 0
                }
            }, e("../tool/util").inherits(i, t), i
        }), n("zrender/tool/math", [], function () {
            function e(e, t) {
                return Math.sin(t ? e * i : e)
            }

            function t(e, t) {
                return Math.cos(t ? e * i : e)
            }

            function n(e) {
                return e * i
            }

            function a(e) {
                return e / i
            }

            var i = Math.PI / 180;
            return {sin: e, cos: t, degreeToRadian: n, radianToDegree: a}
        }), n("zrender/shape/util/PathProxy", ["require", "../../tool/vector"], function (e) {
            var t = e("../../tool/vector"), n = function (e, t) {
                this.command = e, this.points = t || null
            }, a = function () {
                this.pathCommands = [], this._ctx = null, this._min = [], this._max = []
            };
            return a.prototype.fastBoundingRect = function () {
                var e = this._min, n = this._max;
                e[0] = e[1] = 1 / 0, n[0] = n[1] = -(1 / 0);
                for (var a = 0; a < this.pathCommands.length; a++) {
                    var i = this.pathCommands[a], o = i.points;
                    switch (i.command) {
                        case"M":
                            t.min(e, e, o), t.max(n, n, o);
                            break;
                        case"L":
                            t.min(e, e, o), t.max(n, n, o);
                            break;
                        case"C":
                            for (var r = 0; 6 > r; r += 2)e[0] = Math.min(e[0], e[0], o[r]), e[1] = Math.min(e[1], e[1], o[r + 1]), n[0] = Math.max(n[0], n[0], o[r]), n[1] = Math.max(n[1], n[1], o[r + 1]);
                            break;
                        case"Q":
                            for (var r = 0; 4 > r; r += 2)e[0] = Math.min(e[0], e[0], o[r]), e[1] = Math.min(e[1], e[1], o[r + 1]), n[0] = Math.max(n[0], n[0], o[r]), n[1] = Math.max(n[1], n[1], o[r + 1]);
                            break;
                        case"A":
                            var s = o[0], l = o[1], h = o[2], d = o[3];
                            e[0] = Math.min(e[0], e[0], s - h), e[1] = Math.min(e[1], e[1], l - d), n[0] = Math.max(n[0], n[0], s + h), n[1] = Math.max(n[1], n[1], l + d)
                    }
                }
                return {x: e[0], y: e[1], width: n[0] - e[0], height: n[1] - e[1]}
            }, a.prototype.begin = function (e) {
                return this._ctx = e || null, this.pathCommands.length = 0, this
            }, a.prototype.moveTo = function (e, t) {
                return this.pathCommands.push(new n("M", [e, t])), this._ctx && this._ctx.moveTo(e, t), this
            }, a.prototype.lineTo = function (e, t) {
                return this.pathCommands.push(new n("L", [e, t])), this._ctx && this._ctx.lineTo(e, t), this
            }, a.prototype.bezierCurveTo = function (e, t, a, i, o, r) {
                return this.pathCommands.push(new n("C", [e, t, a, i, o, r])), this._ctx && this._ctx.bezierCurveTo(e, t, a, i, o, r), this
            }, a.prototype.quadraticCurveTo = function (e, t, a, i) {
                return this.pathCommands.push(new n("Q", [e, t, a, i])), this._ctx && this._ctx.quadraticCurveTo(e, t, a, i), this
            }, a.prototype.arc = function (e, t, a, i, o, r) {
                return this.pathCommands.push(new n("A", [e, t, a, a, i, o - i, 0, r ? 0 : 1])), this._ctx && this._ctx.arc(e, t, a, i, o, r), this
            }, a.prototype.arcTo = function (e, t, n, a, i) {
                return this._ctx && this._ctx.arcTo(e, t, n, a, i), this
            }, a.prototype.rect = function (e, t, n, a) {
                return this._ctx && this._ctx.rect(e, t, n, a), this
            }, a.prototype.closePath = function () {
                return this.pathCommands.push(new n("z")), this._ctx && this._ctx.closePath(), this
            }, a.prototype.isEmpty = function () {
                return 0 === this.pathCommands.length
            }, a.PathSegment = n, a
        }), n("zrender/shape/Line", ["require", "./Base", "./util/dashedLineTo", "../tool/util"], function (e) {
            var t = e("./Base"), n = e("./util/dashedLineTo"), a = function (e) {
                this.brushTypeOnly = "stroke", this.textPosition = "end", t.call(this, e)
            };
            return a.prototype = {
                type: "line", buildPath: function (e, t) {
                    if (t.lineType && "solid" != t.lineType) {
                        if ("dashed" == t.lineType || "dotted" == t.lineType) {
                            var a = (t.lineWidth || 1) * ("dashed" == t.lineType ? 5 : 1);
                            n(e, t.xStart, t.yStart, t.xEnd, t.yEnd, a)
                        }
                    } else e.moveTo(t.xStart, t.yStart), e.lineTo(t.xEnd, t.yEnd)
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t = e.lineWidth || 1;
                    return e.__rect = {
                        x: Math.min(e.xStart, e.xEnd) - t,
                        y: Math.min(e.yStart, e.yEnd) - t,
                        width: Math.abs(e.xStart - e.xEnd) + t,
                        height: Math.abs(e.yStart - e.yEnd) + t
                    }, e.__rect
                }
            }, e("../tool/util").inherits(a, t), a
        }), n("zrender/shape/BezierCurve", ["require", "./Base", "../tool/util"], function (e) {
            "use strict";
            var t = e("./Base"), n = function (e) {
                this.brushTypeOnly = "stroke", this.textPosition = "end", t.call(this, e)
            };
            return n.prototype = {
                type: "bezier-curve", buildPath: function (e, t) {
                    e.moveTo(t.xStart, t.yStart), "undefined" != typeof t.cpX2 && "undefined" != typeof t.cpY2 ? e.bezierCurveTo(t.cpX1, t.cpY1, t.cpX2, t.cpY2, t.xEnd, t.yEnd) : e.quadraticCurveTo(t.cpX1, t.cpY1, t.xEnd, t.yEnd)
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t = Math.min(e.xStart, e.xEnd, e.cpX1), n = Math.min(e.yStart, e.yEnd, e.cpY1), a = Math.max(e.xStart, e.xEnd, e.cpX1), i = Math.max(e.yStart, e.yEnd, e.cpY1), o = e.cpX2, r = e.cpY2;
                    "undefined" != typeof o && "undefined" != typeof r && (t = Math.min(t, o), n = Math.min(n, r), a = Math.max(a, o), i = Math.max(i, r));
                    var s = e.lineWidth || 1;
                    return e.__rect = {x: t - s, y: n - s, width: a - t + s, height: i - n + s}, e.__rect
                }
            }, e("../tool/util").inherits(n, t), n
        }), n("zrender/shape/util/dashedLineTo", [], function () {
            var e = [5, 5];
            return function (t, n, a, i, o, r) {
                if (t.setLineDash)return e[0] = e[1] = r, t.setLineDash(e), t.moveTo(n, a), void t.lineTo(i, o);
                r = "number" != typeof r ? 5 : r;
                var s = i - n, l = o - a, h = Math.floor(Math.sqrt(s * s + l * l) / r);
                s /= h, l /= h;
                for (var d = !0, c = 0; h > c; ++c)d ? t.moveTo(n, a) : t.lineTo(n, a), d = !d, n += s, a += l;
                t.lineTo(i, o)
            }
        }), n("zrender/shape/Polygon", ["require", "./Base", "./util/smoothSpline", "./util/smoothBezier", "./util/dashedLineTo", "../tool/util"], function (e) {
            var t = e("./Base"), n = e("./util/smoothSpline"), a = e("./util/smoothBezier"), i = e("./util/dashedLineTo"), o = function (e) {
                t.call(this, e)
            };
            return o.prototype = {
                type: "polygon", buildPath: function (e, t) {
                    var o = t.pointList;
                    if (!(o.length < 2)) {
                        if (t.smooth && "spline" !== t.smooth) {
                            var r = a(o, t.smooth, !0, t.smoothConstraint);
                            e.moveTo(o[0][0], o[0][1]);
                            for (var s, l, h, d = o.length, c = 0; d > c; c++)s = r[2 * c], l = r[2 * c + 1], h = o[(c + 1) % d], e.bezierCurveTo(s[0], s[1], l[0], l[1], h[0], h[1])
                        } else if ("spline" === t.smooth && (o = n(o, !0)), t.lineType && "solid" != t.lineType) {
                            if ("dashed" == t.lineType || "dotted" == t.lineType) {
                                var p = t._dashLength || (t.lineWidth || 1) * ("dashed" == t.lineType ? 5 : 1);
                                t._dashLength = p, e.moveTo(o[0][0], o[0][1]);
                                for (var c = 1, m = o.length; m > c; c++)i(e, o[c - 1][0], o[c - 1][1], o[c][0], o[c][1], p);
                                i(e, o[o.length - 1][0], o[o.length - 1][1], o[0][0], o[0][1], p)
                            }
                        } else {
                            e.moveTo(o[0][0], o[0][1]);
                            for (var c = 1, m = o.length; m > c; c++)e.lineTo(o[c][0], o[c][1]);
                            e.lineTo(o[0][0], o[0][1])
                        }
                        e.closePath()
                    }
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    for (var t = Number.MAX_VALUE, n = Number.MIN_VALUE, a = Number.MAX_VALUE, i = Number.MIN_VALUE, o = e.pointList, r = 0, s = o.length; s > r; r++)o[r][0] < t && (t = o[r][0]), o[r][0] > n && (n = o[r][0]), o[r][1] < a && (a = o[r][1]), o[r][1] > i && (i = o[r][1]);
                    var l;
                    return l = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0, e.__rect = {
                        x: Math.round(t - l / 2),
                        y: Math.round(a - l / 2),
                        width: n - t + l,
                        height: i - a + l
                    }, e.__rect
                }
            }, e("../tool/util").inherits(o, t), o
        }), n("echarts/util/shape/normalIsCover", [], function () {
            return function (e, t) {
                var n = this.transformCoordToLocal(e, t);
                return e = n[0], t = n[1], this.isCoverRect(e, t)
            }
        }), n("zrender/shape/util/smoothSpline", ["require", "../../tool/vector"], function (e) {
            function t(e, t, n, a, i, o, r) {
                var s = .5 * (n - e), l = .5 * (a - t);
                return (2 * (t - n) + s + l) * r + (-3 * (t - n) - 2 * s - l) * o + s * i + t
            }

            var n = e("../../tool/vector");
            return function (e, a) {
                for (var i = e.length, o = [], r = 0, s = 1; i > s; s++)r += n.distance(e[s - 1], e[s]);
                var l = r / 5;
                l = i > l ? i : l;
                for (var s = 0; l > s; s++) {
                    var h, d, c, p = s / (l - 1) * (a ? i : i - 1), m = Math.floor(p), u = p - m, V = e[m % i];
                    a ? (h = e[(m - 1 + i) % i], d = e[(m + 1) % i], c = e[(m + 2) % i]) : (h = e[0 === m ? m : m - 1], d = e[m > i - 2 ? i - 1 : m + 1], c = e[m > i - 3 ? i - 1 : m + 2]);
                    var U = u * u, f = u * U;
                    o.push([t(h[0], V[0], d[0], c[0], u, U, f), t(h[1], V[1], d[1], c[1], u, U, f)])
                }
                return o
            }
        }), n("zrender/shape/util/smoothBezier", ["require", "../../tool/vector"], function (e) {
            var t = e("../../tool/vector");
            return function (e, n, a, i) {
                var o, r, s, l, h = [], d = [], c = [], p = [], m = !!i;
                if (m) {
                    s = [1 / 0, 1 / 0], l = [-(1 / 0), -(1 / 0)];
                    for (var u = 0, V = e.length; V > u; u++)t.min(s, s, e[u]), t.max(l, l, e[u]);
                    t.min(s, s, i[0]), t.max(l, l, i[1])
                }
                for (var u = 0, V = e.length; V > u; u++) {
                    var o, r, U = e[u];
                    if (a)o = e[u ? u - 1 : V - 1], r = e[(u + 1) % V]; else {
                        if (0 === u || u === V - 1) {
                            h.push(t.clone(e[u]));
                            continue
                        }
                        o = e[u - 1], r = e[u + 1]
                    }
                    t.sub(d, r, o), t.scale(d, d, n);
                    var f = t.distance(U, o), _ = t.distance(U, r), g = f + _;
                    0 !== g && (f /= g, _ /= g), t.scale(c, d, -f), t.scale(p, d, _);
                    var y = t.add([], U, c), b = t.add([], U, p);
                    m && (t.max(y, y, s), t.min(y, y, l), t.max(b, b, s), t.min(b, b, l)), h.push(y), h.push(b)
                }
                return a && h.push(t.clone(h.shift())), h
            }
        }), n("echarts/util/ecQuery", ["require", "zrender/tool/util"], function (e) {
            function t(e, t) {
                if ("undefined" != typeof e) {
                    if (!t)return e;
                    t = t.split(".");
                    for (var n = t.length, a = 0; n > a;) {
                        if (e = e[t[a]], "undefined" == typeof e)return;
                        a++
                    }
                    return e
                }
            }

            function n(e, n) {
                for (var a, i = 0, o = e.length; o > i; i++)if (a = t(e[i], n), "undefined" != typeof a)return a
            }

            function a(e, n) {
                for (var a, o = e.length; o--;) {
                    var r = t(e[o], n);
                    "undefined" != typeof r && ("undefined" == typeof a ? a = i.clone(r) : i.merge(a, r, !0))
                }
                return a
            }

            var i = e("zrender/tool/util");
            return {query: t, deepQuery: n, deepMerge: a}
        }), n("echarts/util/number", [], function () {
            function e(e) {
                return e.replace(/^\s+/, "").replace(/\s+$/, "")
            }

            function t(t, n) {
                return "string" == typeof t ? e(t).match(/%$/) ? parseFloat(t) / 100 * n : parseFloat(t) : t
            }

            function n(e, n) {
                return [t(n[0], e.getWidth()), t(n[1], e.getHeight())]
            }

            function a(e, n) {
                n instanceof Array || (n = [0, n]);
                var a = Math.min(e.getWidth(), e.getHeight()) / 2;
                return [t(n[0], a), t(n[1], a)]
            }

            function i(e) {
                return isNaN(e) ? "-" : (e = (e + "").split("."), e[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (e.length > 1 ? "." + e[1] : ""))
            }

            function o(e) {
                for (var t = 1, n = 0; Math.round(e * t) / t !== e;)t *= 10, n++;
                return n
            }

            return {parsePercent: t, parseCenter: n, parseRadius: a, addCommas: i, getPrecision: o}
        }), n("echarts/data/KDTree", ["require", "./quickSelect"], function (e) {
            function t(e, t) {
                this.left = null, this.right = null, this.axis = e, this.data = t
            }

            var n = e("./quickSelect"), a = function (e, t) {
                e.length && (t || (t = e[0].array.length), this.dimension = t, this.root = this._buildTree(e, 0, e.length - 1, 0), this._stack = [], this._nearstNList = [])
            };
            return a.prototype._buildTree = function (e, a, i, o) {
                if (a > i)return null;
                var r = Math.floor((a + i) / 2);
                r = n(e, a, i, r, function (e, t) {
                    return e.array[o] - t.array[o]
                });
                var s = e[r], l = new t(o, s);
                return o = (o + 1) % this.dimension, i > a && (l.left = this._buildTree(e, a, r - 1, o), l.right = this._buildTree(e, r + 1, i, o)), l
            }, a.prototype.nearest = function (e, t) {
                var n = this.root, a = this._stack, i = 0, o = 1 / 0, r = null;
                for (n.data !== e && (o = t(n.data, e), r = n), e.array[n.axis] < n.data.array[n.axis] ? (n.right && (a[i++] = n.right), n.left && (a[i++] = n.left)) : (n.left && (a[i++] = n.left), n.right && (a[i++] = n.right)); i--;) {
                    n = a[i];
                    var s = e.array[n.axis] - n.data.array[n.axis], l = 0 > s, h = !1;
                    s *= s, o > s && (s = t(n.data, e), o > s && n.data !== e && (o = s, r = n), h = !0), l ? (h && n.right && (a[i++] = n.right), n.left && (a[i++] = n.left)) : (h && n.left && (a[i++] = n.left), n.right && (a[i++] = n.right))
                }
                return r.data
            }, a.prototype._addNearest = function (e, t, n) {
                for (var a = this._nearstNList, i = e - 1; i > 0 && !(t >= a[i - 1].dist); i--)a[i].dist = a[i - 1].dist, a[i].node = a[i - 1].node;
                a[i].dist = t, a[i].node = n
            }, a.prototype.nearestN = function (e, t, n, a) {
                if (0 >= t)return a.length = 0, a;
                for (var i = this.root, o = this._stack, r = 0, s = this._nearstNList, l = 0; t > l; l++)s[l] || (s[l] = {}), s[l].dist = 0, s[l].node = null;
                var h = n(i.data, e), d = 0;
                for (i.data !== e && (d++, this._addNearest(d, h, i)), e.array[i.axis] < i.data.array[i.axis] ? (i.right && (o[r++] = i.right), i.left && (o[r++] = i.left)) : (i.left && (o[r++] = i.left), i.right && (o[r++] = i.right)); r--;) {
                    i = o[r];
                    var h = e.array[i.axis] - i.data.array[i.axis], c = 0 > h, p = !1;
                    h *= h, (t > d || h < s[d - 1].dist) && (h = n(i.data, e), (t > d || h < s[d - 1].dist) && i.data !== e && (t > d && d++, this._addNearest(d, h, i)), p = !0), c ? (p && i.right && (o[r++] = i.right), i.left && (o[r++] = i.left)) : (p && i.left && (o[r++] = i.left), i.right && (o[r++] = i.right))
                }
                for (var l = 0; d > l; l++)a[l] = s[l].node.data;
                return a.length = d, a
            }, a
        }), n("echarts/data/quickSelect", ["require"], function () {
            function e(e, t) {
                return e - t
            }

            function t(e, t, n) {
                var a = e[t];
                e[t] = e[n], e[n] = a
            }

            function n(e, n, a, i, o) {
                for (var r = n; a > n;) {
                    var r = Math.round((a + n) / 2), s = e[r];
                    t(e, r, a), r = n;
                    for (var l = n; a - 1 >= l; l++)o(s, e[l]) >= 0 && (t(e, l, r), r++);
                    if (t(e, a, r), r === i)return r;
                    i > r ? n = r + 1 : a = r - 1
                }
                return n
            }

            function a(t, a, i, o, r) {
                return arguments.length <= 3 && (o = a, r = 2 == arguments.length ? e : i, a = 0, i = t.length - 1), n(t, a, i, o, r)
            }

            return a
        }), n("echarts/component/dataView", ["require", "./base", "../config", "zrender/tool/util", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.dom = o.dom, this._tDom = document.createElement("div"), this._textArea = document.createElement("textArea"), this._buttonRefresh = document.createElement("button"), this._buttonRefresh.setAttribute("type", "button"),
                    this._buttonClose = document.createElement("button"), this._buttonClose.setAttribute("type", "button"), this._hasShow = !1, this._zrHeight = a.getHeight(), this._zrWidth = a.getWidth(), this._tDom.className = "echarts-dataview", this.hide(), this.dom.firstChild.appendChild(this._tDom), window.addEventListener ? (this._tDom.addEventListener("click", this._stop), this._tDom.addEventListener("mousewheel", this._stop), this._tDom.addEventListener("mousemove", this._stop), this._tDom.addEventListener("mousedown", this._stop), this._tDom.addEventListener("mouseup", this._stop), this._tDom.addEventListener("touchstart", this._stop), this._tDom.addEventListener("touchmove", this._stop), this._tDom.addEventListener("touchend", this._stop)) : (this._tDom.attachEvent("onclick", this._stop), this._tDom.attachEvent("onmousewheel", this._stop), this._tDom.attachEvent("onmousemove", this._stop), this._tDom.attachEvent("onmousedown", this._stop), this._tDom.attachEvent("onmouseup", this._stop))
            }

            var n = e("./base"), a = e("../config"), i = e("zrender/tool/util");
            return t.prototype = {
                type: a.COMPONENT_TYPE_DATAVIEW,
                _lang: ["Data View", "close", "refresh"],
                _gCssText: "position:absolute;display:block;overflow:hidden;transition:height 0.8s,background-color 1s;-moz-transition:height 0.8s,background-color 1s;-webkit-transition:height 0.8s,background-color 1s;-o-transition:height 0.8s,background-color 1s;z-index:1;left:0;top:0;",
                hide: function () {
                    this._sizeCssText = "width:" + this._zrWidth + "px;height:0px;background-color:#f0ffff;", this._tDom.style.cssText = this._gCssText + this._sizeCssText
                },
                show: function (e) {
                    this._hasShow = !0;
                    var t = this.query(this.option, "toolbox.feature.dataView.lang") || this._lang;
                    this.option = e, this._tDom.innerHTML = '<p style="padding:8px 0;margin:0 0 10px 0;border-bottom:1px solid #eee">' + (t[0] || this._lang[0]) + "</p>";
                    var n = this.query(this.option, "toolbox.feature.dataView.optionToContent");
                    "function" != typeof n ? this._textArea.value = this._optionToContent() : (this._textArea = document.createElement("div"), this._textArea.innerHTML = n(this.option)), this._textArea.style.cssText = "display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;width:100%;height:" + (this._zrHeight - 100) + "px;", this._tDom.appendChild(this._textArea), this._buttonClose.style.cssText = "float:right;padding:1px 6px;", this._buttonClose.innerHTML = t[1] || this._lang[1];
                    var a = this;
                    this._buttonClose.onclick = function () {
                        a.hide()
                    }, this._tDom.appendChild(this._buttonClose), this.query(this.option, "toolbox.feature.dataView.readOnly") === !1 ? (this._buttonRefresh.style.cssText = "float:right;margin-right:10px;padding:1px 6px;", this._buttonRefresh.innerHTML = t[2] || this._lang[2], this._buttonRefresh.onclick = function () {
                        a._save()
                    }, this._textArea.readOnly = !1, this._textArea.style.cursor = "default") : (this._buttonRefresh.style.cssText = "display:none", this._textArea.readOnly = !0, this._textArea.style.cursor = "text"), this._tDom.appendChild(this._buttonRefresh), this._sizeCssText = "width:" + this._zrWidth + "px;height:" + this._zrHeight + "px;background-color:#fff;", this._tDom.style.cssText = this._gCssText + this._sizeCssText
                },
                _optionToContent: function () {
                    var e, t, n, i, o, r, s = [], l = "";
                    if (this.option.xAxis)for (s = this.option.xAxis instanceof Array ? this.option.xAxis : [this.option.xAxis], e = 0, i = s.length; i > e; e++)if ("category" == (s[e].type || "category")) {
                        for (r = [], t = 0, n = s[e].data.length; n > t; t++)r.push(this.getDataFromOption(s[e].data[t]));
                        l += r.join(", ") + "\n\n"
                    }
                    if (this.option.yAxis)for (s = this.option.yAxis instanceof Array ? this.option.yAxis : [this.option.yAxis], e = 0, i = s.length; i > e; e++)if ("category" == s[e].type) {
                        for (r = [], t = 0, n = s[e].data.length; n > t; t++)r.push(this.getDataFromOption(s[e].data[t]));
                        l += r.join(", ") + "\n\n"
                    }
                    var h, d = this.option.series;
                    for (e = 0, i = d.length; i > e; e++) {
                        for (r = [], t = 0, n = d[e].data.length; n > t; t++)o = d[e].data[t], h = d[e].type == a.CHART_TYPE_PIE || d[e].type == a.CHART_TYPE_MAP ? (o.name || "-") + ":" : "", d[e].type == a.CHART_TYPE_SCATTER && (o = this.getDataFromOption(o).join(", ")), r.push(h + this.getDataFromOption(o));
                        l += (d[e].name || "-") + " : \n", l += r.join(d[e].type == a.CHART_TYPE_SCATTER ? "\n" : ", "), l += "\n\n"
                    }
                    return l
                },
                _save: function () {
                    var e = this.query(this.option, "toolbox.feature.dataView.contentToOption");
                    if ("function" != typeof e) {
                        for (var t = this._textArea.value.split("\n"), n = [], i = 0, o = t.length; o > i; i++)t[i] = this._trim(t[i]), "" !== t[i] && n.push(t[i]);
                        this._contentToOption(n)
                    } else e(this._textArea, this.option);
                    this.hide();
                    var r = this;
                    setTimeout(function () {
                        r.messageCenter && r.messageCenter.dispatch(a.EVENT.DATA_VIEW_CHANGED, null, {option: r.option}, r.myChart)
                    }, r.canvasSupported ? 800 : 100)
                },
                _contentToOption: function (e) {
                    var t, n, i, o, r, s, l, h = [], d = 0;
                    if (this.option.xAxis)for (h = this.option.xAxis instanceof Array ? this.option.xAxis : [this.option.xAxis], t = 0, o = h.length; o > t; t++)if ("category" == (h[t].type || "category")) {
                        for (s = e[d].split(","), n = 0, i = h[t].data.length; i > n; n++)l = this._trim(s[n] || ""), r = h[t].data[n], "undefined" != typeof h[t].data[n].value ? h[t].data[n].value = l : h[t].data[n] = l;
                        d++
                    }
                    if (this.option.yAxis)for (h = this.option.yAxis instanceof Array ? this.option.yAxis : [this.option.yAxis], t = 0, o = h.length; o > t; t++)if ("category" == h[t].type) {
                        for (s = e[d].split(","), n = 0, i = h[t].data.length; i > n; n++)l = this._trim(s[n] || ""), r = h[t].data[n], "undefined" != typeof h[t].data[n].value ? h[t].data[n].value = l : h[t].data[n] = l;
                        d++
                    }
                    var c = this.option.series;
                    for (t = 0, o = c.length; o > t; t++)if (d++, c[t].type == a.CHART_TYPE_SCATTER)for (var n = 0, i = c[t].data.length; i > n; n++)s = e[d], l = s.replace(" ", "").split(","), "undefined" != typeof c[t].data[n].value ? c[t].data[n].value = l : c[t].data[n] = l, d++; else {
                        s = e[d].split(",");
                        for (var n = 0, i = c[t].data.length; i > n; n++)l = (s[n] || "").replace(/.*:/, ""), l = this._trim(l), l = "-" != l && "" !== l ? l - 0 : "-", "undefined" != typeof c[t].data[n].value ? c[t].data[n].value = l : c[t].data[n] = l;
                        d++
                    }
                },
                _trim: function (e) {
                    var t = new RegExp("(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+$)", "g");
                    return e.replace(t, "")
                },
                _stop: function (e) {
                    e = e || window.event, e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0
                },
                resize: function () {
                    this._zrHeight = this.zr.getHeight(), this._zrWidth = this.zr.getWidth(), this._tDom.offsetHeight > 10 && (this._sizeCssText = "width:" + this._zrWidth + "px;height:" + this._zrHeight + "px;background-color:#fff;", this._tDom.style.cssText = this._gCssText + this._sizeCssText, this._textArea.style.cssText = "display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;width:100%;height:" + (this._zrHeight - 100) + "px;")
                },
                dispose: function () {
                    window.removeEventListener ? (this._tDom.removeEventListener("click", this._stop), this._tDom.removeEventListener("mousewheel", this._stop), this._tDom.removeEventListener("mousemove", this._stop), this._tDom.removeEventListener("mousedown", this._stop), this._tDom.removeEventListener("mouseup", this._stop), this._tDom.removeEventListener("touchstart", this._stop), this._tDom.removeEventListener("touchmove", this._stop), this._tDom.removeEventListener("touchend", this._stop)) : (this._tDom.detachEvent("onclick", this._stop), this._tDom.detachEvent("onmousewheel", this._stop), this._tDom.detachEvent("onmousemove", this._stop), this._tDom.detachEvent("onmousedown", this._stop), this._tDom.detachEvent("onmouseup", this._stop)), this._buttonRefresh.onclick = null, this._buttonClose.onclick = null, this._hasShow && (this._tDom.removeChild(this._textArea), this._tDom.removeChild(this._buttonRefresh), this._tDom.removeChild(this._buttonClose)), this._textArea = null, this._buttonRefresh = null, this._buttonClose = null, this.dom.firstChild.removeChild(this._tDom), this._tDom = null
                }
            }, i.inherits(t, n), e("../component").define("dataView", t), t
        }), n("echarts/util/shape/Cross", ["require", "zrender/shape/Base", "zrender/shape/Line", "zrender/tool/util", "./normalIsCover"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("zrender/shape/Line"), i = e("zrender/tool/util");
            return t.prototype = {
                type: "cross", buildPath: function (e, t) {
                    var n = t.rect;
                    t.xStart = n.x, t.xEnd = n.x + n.width, t.yStart = t.yEnd = t.y, a.prototype.buildPath(e, t), t.xStart = t.xEnd = t.x, t.yStart = n.y, t.yEnd = n.y + n.height, a.prototype.buildPath(e, t)
                }, getRect: function (e) {
                    return e.rect
                }, isCover: e("./normalIsCover")
            }, i.inherits(t, n), t
        }), n("zrender/shape/Sector", ["require", "../tool/math", "../tool/computeBoundingBox", "../tool/vector", "./Base", "../tool/util"], function (e) {
            var t = e("../tool/math"), n = e("../tool/computeBoundingBox"), a = e("../tool/vector"), i = e("./Base"), o = a.create(), r = a.create(), s = a.create(), l = a.create(), h = function (e) {
                i.call(this, e)
            };
            return h.prototype = {
                type: "sector", buildPath: function (e, n) {
                    var a = n.x, i = n.y, o = n.r0 || 0, r = n.r, s = n.startAngle, l = n.endAngle, h = n.clockWise || !1;
                    s = t.degreeToRadian(s), l = t.degreeToRadian(l), h || (s = -s, l = -l);
                    var d = t.cos(s), c = t.sin(s);
                    e.moveTo(d * o + a, c * o + i), e.lineTo(d * r + a, c * r + i), e.arc(a, i, r, s, l, !h), e.lineTo(t.cos(l) * o + a, t.sin(l) * o + i), 0 !== o && e.arc(a, i, o, l, s, h), e.closePath()
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var i = e.x, h = e.y, d = e.r0 || 0, c = e.r, p = t.degreeToRadian(e.startAngle), m = t.degreeToRadian(e.endAngle), u = e.clockWise;
                    return u || (p = -p, m = -m), d > 1 ? n.arc(i, h, d, p, m, !u, o, s) : (o[0] = s[0] = i, o[1] = s[1] = h), n.arc(i, h, c, p, m, !u, r, l), a.min(o, o, r), a.max(s, s, l), e.__rect = {
                        x: o[0],
                        y: o[1],
                        width: s[0] - o[0],
                        height: s[1] - o[1]
                    }, e.__rect
                }
            }, e("../tool/util").inherits(h, i), h
        }), n("echarts/util/shape/Candle", ["require", "zrender/shape/Base", "zrender/tool/util", "./normalIsCover"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("zrender/tool/util");
            return t.prototype = {
                type: "candle", _numberOrder: function (e, t) {
                    return t - e
                }, buildPath: function (e, t) {
                    var n = a.clone(t.y).sort(this._numberOrder);
                    e.moveTo(t.x, n[3]), e.lineTo(t.x, n[2]), e.moveTo(t.x - t.width / 2, n[2]), e.rect(t.x - t.width / 2, n[2], t.width, n[1] - n[2]), e.moveTo(t.x, n[1]), e.lineTo(t.x, n[0])
                }, getRect: function (e) {
                    if (!e.__rect) {
                        var t = 0;
                        ("stroke" == e.brushType || "fill" == e.brushType) && (t = e.lineWidth || 1);
                        var n = a.clone(e.y).sort(this._numberOrder);
                        e.__rect = {
                            x: Math.round(e.x - e.width / 2 - t / 2),
                            y: Math.round(n[3] - t / 2),
                            width: e.width + t,
                            height: n[0] - n[3] + t
                        }
                    }
                    return e.__rect
                }, isCover: e("./normalIsCover")
            }, a.inherits(t, n), t
        }), n("zrender/tool/computeBoundingBox", ["require", "./vector", "./curve"], function (e) {
            function t(e, t, n) {
                if (0 !== e.length) {
                    for (var a = e[0][0], i = e[0][0], o = e[0][1], r = e[0][1], s = 1; s < e.length; s++) {
                        var l = e[s];
                        l[0] < a && (a = l[0]), l[0] > i && (i = l[0]), l[1] < o && (o = l[1]), l[1] > r && (r = l[1])
                    }
                    t[0] = a, t[1] = o, n[0] = i, n[1] = r
                }
            }

            function n(e, t, n, a, i, r) {
                var s = [];
                o.cubicExtrema(e[0], t[0], n[0], a[0], s);
                for (var l = 0; l < s.length; l++)s[l] = o.cubicAt(e[0], t[0], n[0], a[0], s[l]);
                var h = [];
                o.cubicExtrema(e[1], t[1], n[1], a[1], h);
                for (var l = 0; l < h.length; l++)h[l] = o.cubicAt(e[1], t[1], n[1], a[1], h[l]);
                s.push(e[0], a[0]), h.push(e[1], a[1]);
                var d = Math.min.apply(null, s), c = Math.max.apply(null, s), p = Math.min.apply(null, h), m = Math.max.apply(null, h);
                i[0] = d, i[1] = p, r[0] = c, r[1] = m
            }

            function a(e, t, n, a, i) {
                var r = o.quadraticExtremum(e[0], t[0], n[0]), s = o.quadraticExtremum(e[1], t[1], n[1]);
                r = Math.max(Math.min(r, 1), 0), s = Math.max(Math.min(s, 1), 0);
                var l = 1 - r, h = 1 - s, d = l * l * e[0] + 2 * l * r * t[0] + r * r * n[0], c = l * l * e[1] + 2 * l * r * t[1] + r * r * n[1], p = h * h * e[0] + 2 * h * s * t[0] + s * s * n[0], m = h * h * e[1] + 2 * h * s * t[1] + s * s * n[1];
                a[0] = Math.min(e[0], n[0], d, p), a[1] = Math.min(e[1], n[1], c, m), i[0] = Math.max(e[0], n[0], d, p), i[1] = Math.max(e[1], n[1], c, m)
            }

            var i = e("./vector"), o = e("./curve"), r = i.create(), s = i.create(), l = i.create(), h = function (e, t, n, a, o, h, d, c) {
                if (Math.abs(a - o) >= 2 * Math.PI)return d[0] = e - n, d[1] = t - n, c[0] = e + n, void(c[1] = t + n);
                if (r[0] = Math.cos(a) * n + e, r[1] = Math.sin(a) * n + t, s[0] = Math.cos(o) * n + e, s[1] = Math.sin(o) * n + t, i.min(d, r, s), i.max(c, r, s), a %= 2 * Math.PI, 0 > a && (a += 2 * Math.PI), o %= 2 * Math.PI, 0 > o && (o += 2 * Math.PI), a > o && !h ? o += 2 * Math.PI : o > a && h && (a += 2 * Math.PI), h) {
                    var p = o;
                    o = a, a = p
                }
                for (var m = 0; o > m; m += Math.PI / 2)m > a && (l[0] = Math.cos(m) * n + e, l[1] = Math.sin(m) * n + t, i.min(d, l, d), i.max(c, l, c))
            };
            return t.cubeBezier = n, t.quadraticBezier = a, t.arc = h, t
        }), n("echarts/util/shape/Chain", ["require", "zrender/shape/Base", "./Icon", "zrender/shape/util/dashedLineTo", "zrender/tool/util", "zrender/tool/matrix"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("./Icon"), i = e("zrender/shape/util/dashedLineTo"), o = e("zrender/tool/util"), r = e("zrender/tool/matrix");
            return t.prototype = {
                type: "chain", brush: function (e, t) {
                    var n = this.style;
                    t && (n = this.getHighlightStyle(n, this.highlightStyle || {})), e.save(), this.setContext(e, n), this.setTransform(e), e.save(), e.beginPath(), this.buildLinePath(e, n), e.stroke(), e.restore(), this.brushSymbol(e, n), e.restore()
                }, buildLinePath: function (e, t) {
                    var n = t.x, a = t.y + 5, o = t.width, r = t.height / 2 - 10;
                    if (e.moveTo(n, a), e.lineTo(n, a + r), e.moveTo(n + o, a), e.lineTo(n + o, a + r), e.moveTo(n, a + r / 2), t.lineType && "solid" != t.lineType) {
                        if ("dashed" == t.lineType || "dotted" == t.lineType) {
                            var s = (t.lineWidth || 1) * ("dashed" == t.lineType ? 5 : 1);
                            i(e, n, a + r / 2, n + o, a + r / 2, s)
                        }
                    } else e.lineTo(n + o, a + r / 2)
                }, brushSymbol: function (e, t) {
                    var n = t.y + t.height / 4;
                    e.save();
                    for (var i, o = t.chainPoint, r = 0, s = o.length; s > r; r++) {
                        if (i = o[r], "none" != i.symbol) {
                            e.beginPath();
                            var l = i.symbolSize;
                            a.prototype.buildPath(e, {
                                iconType: i.symbol,
                                x: i.x - l,
                                y: n - l,
                                width: 2 * l,
                                height: 2 * l,
                                n: i.n
                            }), e.fillStyle = i.isEmpty ? "#fff" : t.strokeColor, e.closePath(), e.fill(), e.stroke()
                        }
                        i.showLabel && (e.font = i.textFont, e.fillStyle = i.textColor, e.textAlign = i.textAlign, e.textBaseline = i.textBaseline, i.rotation ? (e.save(), this._updateTextTransform(e, i.rotation), e.fillText(i.name, i.textX, i.textY), e.restore()) : e.fillText(i.name, i.textX, i.textY))
                    }
                    e.restore()
                }, _updateTextTransform: function (e, t) {
                    var n = r.create();
                    if (r.identity(n), 0 !== t[0]) {
                        var a = t[1] || 0, i = t[2] || 0;
                        (a || i) && r.translate(n, n, [-a, -i]), r.rotate(n, n, t[0]), (a || i) && r.translate(n, n, [a, i])
                    }
                    e.transform.apply(e, n)
                }, isCover: function (e, t) {
                    var n = this.style;
                    return e >= n.x && e <= n.x + n.width && t >= n.y && t <= n.y + n.height ? !0 : !1
                }
            }, o.inherits(t, n), t
        }), n("zrender/shape/Ring", ["require", "./Base", "../tool/util"], function (e) {
            var t = e("./Base"), n = function (e) {
                t.call(this, e)
            };
            return n.prototype = {
                type: "ring", buildPath: function (e, t) {
                    e.arc(t.x, t.y, t.r, 0, 2 * Math.PI, !1), e.moveTo(t.x + t.r0, t.y), e.arc(t.x, t.y, t.r0, 0, 2 * Math.PI, !0)
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t;
                    return t = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0, e.__rect = {
                        x: Math.round(e.x - e.r - t / 2),
                        y: Math.round(e.y - e.r - t / 2),
                        width: 2 * e.r + t,
                        height: 2 * e.r + t
                    }, e.__rect
                }
            }, e("../tool/util").inherits(n, t), n
        }), n("echarts/component/axis", ["require", "./base", "zrender/shape/Line", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "./categoryAxis", "./valueAxis", "../component"], function (e) {
            function t(e, t, a, i, o, r) {
                n.call(this, e, t, a, i, o), this.axisType = r, this._axisList = [], this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Line"), i = e("../config"), o = e("../util/ecData"), r = e("zrender/tool/util"), s = e("zrender/tool/color");
            return t.prototype = {
                type: i.COMPONENT_TYPE_AXIS, axisBase: {
                    _buildAxisLine: function () {
                        var e = this.option.axisLine.lineStyle.width, t = e / 2, n = {
                            _axisShape: "axisLine",
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 3,
                            hoverable: !1
                        }, i = this.grid;
                        switch (this.option.position) {
                            case"left":
                                n.style = {
                                    xStart: i.getX() - t,
                                    yStart: i.getYend(),
                                    xEnd: i.getX() - t,
                                    yEnd: i.getY(),
                                    lineCap: "round"
                                };
                                break;
                            case"right":
                                n.style = {
                                    xStart: i.getXend() + t,
                                    yStart: i.getYend(),
                                    xEnd: i.getXend() + t,
                                    yEnd: i.getY(),
                                    lineCap: "round"
                                };
                                break;
                            case"bottom":
                                n.style = {
                                    xStart: i.getX(),
                                    yStart: i.getYend() + t,
                                    xEnd: i.getXend(),
                                    yEnd: i.getYend() + t,
                                    lineCap: "round"
                                };
                                break;
                            case"top":
                                n.style = {
                                    xStart: i.getX(),
                                    yStart: i.getY() - t,
                                    xEnd: i.getXend(),
                                    yEnd: i.getY() - t,
                                    lineCap: "round"
                                }
                        }
                        var o = n.style;
                        "" !== this.option.name && (o.text = this.option.name, o.textPosition = this.option.nameLocation, o.textFont = this.getFont(this.option.nameTextStyle), this.option.nameTextStyle.align && (o.textAlign = this.option.nameTextStyle.align), this.option.nameTextStyle.baseline && (o.textBaseline = this.option.nameTextStyle.baseline), this.option.nameTextStyle.color && (o.textColor = this.option.nameTextStyle.color)), o.strokeColor = this.option.axisLine.lineStyle.color, o.lineWidth = e, this.isHorizontal() ? o.yStart = o.yEnd = this.subPixelOptimize(o.yEnd, e) : o.xStart = o.xEnd = this.subPixelOptimize(o.xEnd, e), o.lineType = this.option.axisLine.lineStyle.type, n = new a(n), this.shapeList.push(n)
                    }, _axisLabelClickable: function (e, t) {
                        return e ? (o.pack(t, void 0, -1, void 0, -1, t.style.text), t.hoverable = !0, t.clickable = !0, t.highlightStyle = {
                            color: s.lift(t.style.color, 1),
                            brushType: "fill"
                        }, t) : t
                    }, refixAxisShape: function (e, t) {
                        if (this.option.axisLine.onZero) {
                            var n;
                            if (this.isHorizontal() && null != t)for (var a = 0, i = this.shapeList.length; i > a; a++)"axisLine" === this.shapeList[a]._axisShape ? (this.shapeList[a].style.yStart = this.shapeList[a].style.yEnd = this.subPixelOptimize(t, this.shapeList[a].stylelineWidth), this.zr.modShape(this.shapeList[a].id)) : "axisTick" === this.shapeList[a]._axisShape && (n = this.shapeList[a].style.yEnd - this.shapeList[a].style.yStart, this.shapeList[a].style.yStart = t - n, this.shapeList[a].style.yEnd = t, this.zr.modShape(this.shapeList[a].id));
                            if (!this.isHorizontal() && null != e)for (var a = 0, i = this.shapeList.length; i > a; a++)"axisLine" === this.shapeList[a]._axisShape ? (this.shapeList[a].style.xStart = this.shapeList[a].style.xEnd = this.subPixelOptimize(e, this.shapeList[a].stylelineWidth), this.zr.modShape(this.shapeList[a].id)) : "axisTick" === this.shapeList[a]._axisShape && (n = this.shapeList[a].style.xEnd - this.shapeList[a].style.xStart, this.shapeList[a].style.xStart = e, this.shapeList[a].style.xEnd = e + n, this.zr.modShape(this.shapeList[a].id))
                        }
                    }, getPosition: function () {
                        return this.option.position
                    }, isHorizontal: function () {
                        return "bottom" === this.option.position || "top" === this.option.position
                    }
                }, reformOption: function (e) {
                    if (!e || e instanceof Array && 0 === e.length ? e = [{type: i.COMPONENT_TYPE_AXIS_VALUE}] : e instanceof Array || (e = [e]), e.length > 2 && (e = [e[0], e[1]]), "xAxis" === this.axisType) {
                        (!e[0].position || "bottom" != e[0].position && "top" != e[0].position) && (e[0].position = "bottom"), e.length > 1 && (e[1].position = "bottom" === e[0].position ? "top" : "bottom");
                        for (var t = 0, n = e.length; n > t; t++)e[t].type = e[t].type || "category", e[t].xAxisIndex = t, e[t].yAxisIndex = -1
                    } else {
                        (!e[0].position || "left" != e[0].position && "right" != e[0].position) && (e[0].position = "left"), e.length > 1 && (e[1].position = "left" === e[0].position ? "right" : "left");
                        for (var t = 0, n = e.length; n > t; t++)e[t].type = e[t].type || "value", e[t].xAxisIndex = -1, e[t].yAxisIndex = t
                    }
                    return e
                }, refresh: function (t) {
                    var n;
                    t && (this.option = t, "xAxis" === this.axisType ? (this.option.xAxis = this.reformOption(t.xAxis), n = this.option.xAxis) : (this.option.yAxis = this.reformOption(t.yAxis), n = this.option.yAxis), this.series = t.series);
                    for (var a = e("./categoryAxis"), i = e("./valueAxis"), o = Math.max(n && n.length || 0, this._axisList.length), r = 0; o > r; r++)!this._axisList[r] || !t || n[r] && this._axisList[r].type == n[r].type || (this._axisList[r].dispose && this._axisList[r].dispose(), this._axisList[r] = !1), this._axisList[r] ? this._axisList[r].refresh && this._axisList[r].refresh(n ? n[r] : !1, this.series) : n && n[r] && (this._axisList[r] = "category" === n[r].type ? new a(this.ecTheme, this.messageCenter, this.zr, n[r], this.myChart, this.axisBase) : new i(this.ecTheme, this.messageCenter, this.zr, n[r], this.myChart, this.axisBase, this.series))
                }, getAxis: function (e) {
                    return this._axisList[e]
                }, getAxisCount: function () {
                    return this._axisList.length
                }, clear: function () {
                    for (var e = 0, t = this._axisList.length; t > e; e++)this._axisList[e].dispose && this._axisList[e].dispose();
                    this._axisList = []
                }
            }, r.inherits(t, n), e("../component").define("axis", t), t
        }), n("echarts/component/grid", ["require", "./base", "zrender/shape/Rectangle", "../config", "zrender/tool/util", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Rectangle"), i = e("../config");
            i.grid = {
                zlevel: 0,
                z: 0,
                x: 80,
                y: 60,
                x2: 80,
                y2: 60,
                backgroundColor: "rgba(0,0,0,0)",
                borderWidth: 1,
                borderColor: "#ccc"
            };
            var o = e("zrender/tool/util");
            return t.prototype = {
                type: i.COMPONENT_TYPE_GRID, getX: function () {
                    return this._x
                }, getY: function () {
                    return this._y
                }, getWidth: function () {
                    return this._width
                }, getHeight: function () {
                    return this._height
                }, getXend: function () {
                    return this._x + this._width
                }, getYend: function () {
                    return this._y + this._height
                }, getArea: function () {
                    return {x: this._x, y: this._y, width: this._width, height: this._height}
                }, getBbox: function () {
                    return [[this._x, this._y], [this.getXend(), this.getYend()]]
                }, refixAxisShape: function (e) {
                    for (var t, n, a, o = e.xAxis._axisList.concat(e.yAxis ? e.yAxis._axisList : []), r = o.length; r--;)a = o[r], a.type == i.COMPONENT_TYPE_AXIS_VALUE && a._min < 0 && a._max >= 0 && (a.isHorizontal() ? t = a.getCoord(0) : n = a.getCoord(0));
                    if ("undefined" != typeof t || "undefined" != typeof n)for (r = o.length; r--;)o[r].refixAxisShape(t, n)
                }, refresh: function (e) {
                    if (e || this._zrWidth != this.zr.getWidth() || this._zrHeight != this.zr.getHeight()) {
                        this.clear(), this.option = e || this.option, this.option.grid = this.reformOption(this.option.grid);
                        var t = this.option.grid;
                        this._zrWidth = this.zr.getWidth(), this._zrHeight = this.zr.getHeight(), this._x = this.parsePercent(t.x, this._zrWidth), this._y = this.parsePercent(t.y, this._zrHeight);
                        var n = this.parsePercent(t.x2, this._zrWidth), i = this.parsePercent(t.y2, this._zrHeight);
                        this._width = "undefined" == typeof t.width ? this._zrWidth - this._x - n : this.parsePercent(t.width, this._zrWidth), this._width = this._width <= 0 ? 10 : this._width, this._height = "undefined" == typeof t.height ? this._zrHeight - this._y - i : this.parsePercent(t.height, this._zrHeight), this._height = this._height <= 0 ? 10 : this._height, this._x = this.subPixelOptimize(this._x, t.borderWidth), this._y = this.subPixelOptimize(this._y, t.borderWidth), this.shapeList.push(new a({
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            hoverable: !1,
                            style: {
                                x: this._x,
                                y: this._y,
                                width: this._width,
                                height: this._height,
                                brushType: t.borderWidth > 0 ? "both" : "fill",
                                color: t.backgroundColor,
                                strokeColor: t.borderColor,
                                lineWidth: t.borderWidth
                            }
                        })), this.zr.addShape(this.shapeList[0])
                    }
                }
            }, o.inherits(t, n), e("../component").define("grid", t), t
        }), n("echarts/component/dataZoom", ["require", "./base", "zrender/shape/Rectangle", "zrender/shape/Polygon", "../util/shape/Icon", "../config", "../util/date", "zrender/tool/util", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o);
                var r = this;
                r._ondrift = function (e, t) {
                    return r.__ondrift(this, e, t)
                }, r._ondragend = function () {
                    return r.__ondragend()
                }, this._fillerSize = 30, this._isSilence = !1, this._zoom = {}, this.option.dataZoom = this.reformOption(this.option.dataZoom), this.zoomOption = this.option.dataZoom, this._handleSize = this.zoomOption.handleSize, this.myChart.canvasSupported || (this.zoomOption.realtime = !1), this._location = this._getLocation(), this._zoom = this._getZoom(), this._backupData(), this.option.dataZoom.show && this._buildShape(), this._syncData()
            }

            var n = e("./base"), a = e("zrender/shape/Rectangle"), i = e("zrender/shape/Polygon"), o = e("../util/shape/Icon"), r = e("../config");
            r.dataZoom = {
                zlevel: 0,
                z: 4,
                show: !1,
                orient: "horizontal",
                backgroundColor: "rgba(0,0,0,0)",
                dataBackgroundColor: "#eee",
                fillerColor: "rgba(144,197,237,0.2)",
                handleColor: "rgba(70,130,180,0.8)",
                handleSize: 8,
                showDetail: !0,
                realtime: !0
            };
            var s = e("../util/date"), l = e("zrender/tool/util");
            return t.prototype = {
                type: r.COMPONENT_TYPE_DATAZOOM, _buildShape: function () {
                    this._buildBackground(), this._buildFiller(), this._buildHandle(), this._buildFrame();
                    for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e]);
                    this._syncFrameShape()
                }, _getLocation: function () {
                    var e, t, n, a, i = this.component.grid;
                    return "horizontal" == this.zoomOption.orient ? (n = this.zoomOption.width || i.getWidth(), a = this.zoomOption.height || this._fillerSize, e = null != this.zoomOption.x ? this.zoomOption.x : i.getX(), t = null != this.zoomOption.y ? this.zoomOption.y : this.zr.getHeight() - a - 2) : (n = this.zoomOption.width || this._fillerSize, a = this.zoomOption.height || i.getHeight(), e = null != this.zoomOption.x ? this.zoomOption.x : 2, t = null != this.zoomOption.y ? this.zoomOption.y : i.getY()), {
                        x: e,
                        y: t,
                        width: n,
                        height: a
                    }
                }, _getZoom: function () {
                    var e = this.option.series, t = this.option.xAxis;
                    !t || t instanceof Array || (t = [t], this.option.xAxis = t);
                    var n = this.option.yAxis;
                    !n || n instanceof Array || (n = [n], this.option.yAxis = n);
                    var a, i, o = [], s = this.zoomOption.xAxisIndex;
                    if (t && null == s) {
                        a = [];
                        for (var l = 0, h = t.length; h > l; l++)("category" == t[l].type || null == t[l].type) && a.push(l)
                    } else a = s instanceof Array ? s : null != s ? [s] : [];
                    if (s = this.zoomOption.yAxisIndex, n && null == s) {
                        i = [];
                        for (var l = 0, h = n.length; h > l; l++)"category" == n[l].type && i.push(l)
                    } else i = s instanceof Array ? s : null != s ? [s] : [];
                    for (var d, l = 0, h = e.length; h > l; l++)if (d = e[l], d.type == r.CHART_TYPE_LINE || d.type == r.CHART_TYPE_BAR || d.type == r.CHART_TYPE_SCATTER || d.type == r.CHART_TYPE_K) {
                        for (var c = 0, p = a.length; p > c; c++)if (a[c] == (d.xAxisIndex || 0)) {
                            o.push(l);
                            break
                        }
                        for (var c = 0, p = i.length; p > c; c++)if (i[c] == (d.yAxisIndex || 0)) {
                            o.push(l);
                            break
                        }
                        null == this.zoomOption.xAxisIndex && null == this.zoomOption.yAxisIndex && d.data && this.getDataFromOption(d.data[0])instanceof Array && (d.type == r.CHART_TYPE_SCATTER || d.type == r.CHART_TYPE_LINE || d.type == r.CHART_TYPE_BAR) && o.push(l)
                    }
                    var m = null != this._zoom.start ? this._zoom.start : null != this.zoomOption.start ? this.zoomOption.start : 0, u = null != this._zoom.end ? this._zoom.end : null != this.zoomOption.end ? this.zoomOption.end : 100;
                    m > u && (m += u, u = m - u, m -= u);
                    var V = Math.round((u - m) / 100 * ("horizontal" == this.zoomOption.orient ? this._location.width : this._location.height));
                    return {
                        start: m,
                        end: u,
                        start2: 0,
                        end2: 100,
                        size: V,
                        xAxisIndex: a,
                        yAxisIndex: i,
                        seriesIndex: o,
                        scatterMap: this._zoom.scatterMap || {}
                    }
                }, _backupData: function () {
                    this._originalData = {xAxis: {}, yAxis: {}, series: {}};
                    for (var e = this.option.xAxis, t = this._zoom.xAxisIndex, n = 0, a = t.length; a > n; n++)this._originalData.xAxis[t[n]] = e[t[n]].data;
                    for (var i = this.option.yAxis, o = this._zoom.yAxisIndex, n = 0, a = o.length; a > n; n++)this._originalData.yAxis[o[n]] = i[o[n]].data;
                    for (var s, l = this.option.series, h = this._zoom.seriesIndex, n = 0, a = h.length; a > n; n++)s = l[h[n]], this._originalData.series[h[n]] = s.data, s.data && this.getDataFromOption(s.data[0])instanceof Array && (s.type == r.CHART_TYPE_SCATTER || s.type == r.CHART_TYPE_LINE || s.type == r.CHART_TYPE_BAR) && (this._backupScale(), this._calculScatterMap(h[n]))
                }, _calculScatterMap: function (t) {
                    this._zoom.scatterMap = this._zoom.scatterMap || {}, this._zoom.scatterMap[t] = this._zoom.scatterMap[t] || {};
                    var n = e("../component"), a = n.get("axis"), i = l.clone(this.option.xAxis);
                    "category" == i[0].type && (i[0].type = "value"), i[1] && "category" == i[1].type && (i[1].type = "value");
                    var o = new a(this.ecTheme, null, !1, {
                        xAxis: i,
                        series: this.option.series
                    }, this, "xAxis"), r = this.option.series[t].xAxisIndex || 0;
                    this._zoom.scatterMap[t].x = o.getAxis(r).getExtremum(), o.dispose(), i = l.clone(this.option.yAxis), "category" == i[0].type && (i[0].type = "value"), i[1] && "category" == i[1].type && (i[1].type = "value"), o = new a(this.ecTheme, null, !1, {
                        yAxis: i,
                        series: this.option.series
                    }, this, "yAxis"), r = this.option.series[t].yAxisIndex || 0, this._zoom.scatterMap[t].y = o.getAxis(r).getExtremum(), o.dispose()
                }, _buildBackground: function () {
                    var e = this._location.width, t = this._location.height;
                    this.shapeList.push(new a({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._location.x,
                            y: this._location.y,
                            width: e,
                            height: t,
                            color: this.zoomOption.backgroundColor
                        }
                    }));
                    for (var n = 0, o = this._originalData.xAxis, s = this._zoom.xAxisIndex, l = 0, h = s.length; h > l; l++)n = Math.max(n, o[s[l]].length);
                    for (var d = this._originalData.yAxis, c = this._zoom.yAxisIndex, l = 0, h = c.length; h > l; l++)n = Math.max(n, d[c[l]].length);
                    for (var p, m = this._zoom.seriesIndex[0], u = this._originalData.series[m], V = Number.MIN_VALUE, U = Number.MAX_VALUE, l = 0, h = u.length; h > l; l++)p = this.getDataFromOption(u[l], 0), this.option.series[m].type == r.CHART_TYPE_K && (p = p[1]), isNaN(p) && (p = 0), V = Math.max(V, p), U = Math.min(U, p);
                    var f = V - U, _ = [], g = e / (n - (n > 1 ? 1 : 0)), y = t / (n - (n > 1 ? 1 : 0)), b = 1;
                    "horizontal" == this.zoomOption.orient && 1 > g ? b = Math.floor(3 * n / e) : "vertical" == this.zoomOption.orient && 1 > y && (b = Math.floor(3 * n / t));
                    for (var l = 0, h = n; h > l; l += b)p = this.getDataFromOption(u[l], 0), this.option.series[m].type == r.CHART_TYPE_K && (p = p[1]), isNaN(p) && (p = 0), _.push("horizontal" == this.zoomOption.orient ? [this._location.x + g * l, this._location.y + t - 1 - Math.round((p - U) / f * (t - 10))] : [this._location.x + 1 + Math.round((p - U) / f * (e - 10)), this._location.y + y * (h - l - 1)]);
                    "horizontal" == this.zoomOption.orient ? (_.push([this._location.x + e, this._location.y + t]), _.push([this._location.x, this._location.y + t])) : (_.push([this._location.x, this._location.y]), _.push([this._location.x, this._location.y + t])), this.shapeList.push(new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {pointList: _, color: this.zoomOption.dataBackgroundColor},
                        hoverable: !1
                    }))
                }, _buildFiller: function () {
                    this._fillerShae = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        draggable: !0,
                        ondrift: this._ondrift,
                        ondragend: this._ondragend,
                        _type: "filler"
                    }, this._fillerShae.style = "horizontal" == this.zoomOption.orient ? {
                        x: this._location.x + Math.round(this._zoom.start / 100 * this._location.width) + this._handleSize,
                        y: this._location.y,
                        width: this._zoom.size - 2 * this._handleSize,
                        height: this._location.height,
                        color: this.zoomOption.fillerColor,
                        text: ":::",
                        textPosition: "inside"
                    } : {
                        x: this._location.x,
                        y: this._location.y + Math.round(this._zoom.start / 100 * this._location.height) + this._handleSize,
                        width: this._location.width,
                        height: this._zoom.size - 2 * this._handleSize,
                        color: this.zoomOption.fillerColor,
                        text: "::",
                        textPosition: "inside"
                    }, this._fillerShae.highlightStyle = {
                        brushType: "fill",
                        color: "rgba(0,0,0,0)"
                    }, this._fillerShae = new a(this._fillerShae), this.shapeList.push(this._fillerShae)
                }, _buildHandle: function () {
                    var e = this.zoomOption.showDetail ? this._getDetail() : {start: "", end: ""};
                    this._startShape = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        draggable: !0,
                        style: {
                            iconType: "rectangle",
                            x: this._location.x,
                            y: this._location.y,
                            width: this._handleSize,
                            height: this._handleSize,
                            color: this.zoomOption.handleColor,
                            text: "=",
                            textPosition: "inside"
                        },
                        highlightStyle: {text: e.start, brushType: "fill", textPosition: "left"},
                        ondrift: this._ondrift,
                        ondragend: this._ondragend
                    }, "horizontal" == this.zoomOption.orient ? (this._startShape.style.height = this._location.height, this._endShape = l.clone(this._startShape), this._startShape.style.x = this._fillerShae.style.x - this._handleSize, this._endShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width, this._endShape.highlightStyle.text = e.end, this._endShape.highlightStyle.textPosition = "right") : (this._startShape.style.width = this._location.width, this._endShape = l.clone(this._startShape), this._startShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height, this._startShape.highlightStyle.textPosition = "bottom", this._endShape.style.y = this._fillerShae.style.y - this._handleSize, this._endShape.highlightStyle.text = e.end, this._endShape.highlightStyle.textPosition = "top"), this._startShape = new o(this._startShape), this._endShape = new o(this._endShape), this.shapeList.push(this._startShape), this.shapeList.push(this._endShape)
                }, _buildFrame: function () {
                    var e = this.subPixelOptimize(this._location.x, 1), t = this.subPixelOptimize(this._location.y, 1);
                    this._startFrameShape = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: e,
                            y: t,
                            width: this._location.width - (e > this._location.x ? 1 : 0),
                            height: this._location.height - (t > this._location.y ? 1 : 0),
                            lineWidth: 1,
                            brushType: "stroke",
                            strokeColor: this.zoomOption.handleColor
                        }
                    }, this._endFrameShape = l.clone(this._startFrameShape), this._startFrameShape = new a(this._startFrameShape), this._endFrameShape = new a(this._endFrameShape), this.shapeList.push(this._startFrameShape), this.shapeList.push(this._endFrameShape)
                }, _syncHandleShape: function () {
                    "horizontal" == this.zoomOption.orient ? (this._startShape.style.x = this._fillerShae.style.x - this._handleSize, this._endShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width, this._zoom.start = (this._startShape.style.x - this._location.x) / this._location.width * 100, this._zoom.end = (this._endShape.style.x + this._handleSize - this._location.x) / this._location.width * 100) : (this._startShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height, this._endShape.style.y = this._fillerShae.style.y - this._handleSize, this._zoom.start = (this._location.y + this._location.height - this._startShape.style.y) / this._location.height * 100, this._zoom.end = (this._location.y + this._location.height - this._endShape.style.y - this._handleSize) / this._location.height * 100), this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this._syncFrameShape(), this.zr.refreshNextFrame()
                }, _syncFillerShape: function () {
                    var e, t;
                    "horizontal" == this.zoomOption.orient ? (e = this._startShape.style.x, t = this._endShape.style.x, this._fillerShae.style.x = Math.min(e, t) + this._handleSize, this._fillerShae.style.width = Math.abs(e - t) - this._handleSize, this._zoom.start = (Math.min(e, t) - this._location.x) / this._location.width * 100, this._zoom.end = (Math.max(e, t) + this._handleSize - this._location.x) / this._location.width * 100) : (e = this._startShape.style.y, t = this._endShape.style.y, this._fillerShae.style.y = Math.min(e, t) + this._handleSize,
                        this._fillerShae.style.height = Math.abs(e - t) - this._handleSize, this._zoom.start = (this._location.y + this._location.height - Math.max(e, t)) / this._location.height * 100, this._zoom.end = (this._location.y + this._location.height - Math.min(e, t) - this._handleSize) / this._location.height * 100), this.zr.modShape(this._fillerShae.id), this._syncFrameShape(), this.zr.refreshNextFrame()
                }, _syncFrameShape: function () {
                    "horizontal" == this.zoomOption.orient ? (this._startFrameShape.style.width = this._fillerShae.style.x - this._location.x, this._endFrameShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width, this._endFrameShape.style.width = this._location.x + this._location.width - this._endFrameShape.style.x) : (this._startFrameShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height, this._startFrameShape.style.height = this._location.y + this._location.height - this._startFrameShape.style.y, this._endFrameShape.style.height = this._fillerShae.style.y - this._location.y), this.zr.modShape(this._startFrameShape.id), this.zr.modShape(this._endFrameShape.id)
                }, _syncShape: function () {
                    this.zoomOption.show && ("horizontal" == this.zoomOption.orient ? (this._startShape.style.x = this._location.x + this._zoom.start / 100 * this._location.width, this._endShape.style.x = this._location.x + this._zoom.end / 100 * this._location.width - this._handleSize, this._fillerShae.style.x = this._startShape.style.x + this._handleSize, this._fillerShae.style.width = this._endShape.style.x - this._startShape.style.x - this._handleSize) : (this._startShape.style.y = this._location.y + this._location.height - this._zoom.start / 100 * this._location.height, this._endShape.style.y = this._location.y + this._location.height - this._zoom.end / 100 * this._location.height - this._handleSize, this._fillerShae.style.y = this._endShape.style.y + this._handleSize, this._fillerShae.style.height = this._startShape.style.y - this._endShape.style.y - this._handleSize), this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this.zr.modShape(this._fillerShae.id), this._syncFrameShape(), this.zr.refresh())
                }, _syncData: function (e) {
                    var t, n, a, i, o;
                    for (var s in this._originalData) {
                        t = this._originalData[s];
                        for (var l in t)o = t[l], null != o && (i = o.length, n = Math.floor(this._zoom.start / 100 * i), a = Math.ceil(this._zoom.end / 100 * i), this.getDataFromOption(o[0])instanceof Array && this.option[s][l].type != r.CHART_TYPE_K ? (this._setScale(), this.option[s][l].data = this._synScatterData(l, o)) : this.option[s][l].data = o.slice(n, a))
                    }
                    this._isSilence || !this.zoomOption.realtime && !e || this.messageCenter.dispatch(r.EVENT.DATA_ZOOM, null, {zoom: this._zoom}, this.myChart)
                }, _synScatterData: function (e, t) {
                    if (0 === this._zoom.start && 100 == this._zoom.end && 0 === this._zoom.start2 && 100 == this._zoom.end2)return t;
                    var n, a, i, o, r, s = [], l = this._zoom.scatterMap[e];
                    "horizontal" == this.zoomOption.orient ? (n = l.x.max - l.x.min, a = this._zoom.start / 100 * n + l.x.min, i = this._zoom.end / 100 * n + l.x.min, n = l.y.max - l.y.min, o = this._zoom.start2 / 100 * n + l.y.min, r = this._zoom.end2 / 100 * n + l.y.min) : (n = l.x.max - l.x.min, a = this._zoom.start2 / 100 * n + l.x.min, i = this._zoom.end2 / 100 * n + l.x.min, n = l.y.max - l.y.min, o = this._zoom.start / 100 * n + l.y.min, r = this._zoom.end / 100 * n + l.y.min);
                    var h;
                    (h = l.x.dataMappingMethods) && (a = h.coord2Value(a), i = h.coord2Value(i)), (h = l.y.dataMappingMethods) && (o = h.coord2Value(o), r = h.coord2Value(r));
                    for (var d, c = 0, p = t.length; p > c; c++)d = t[c].value || t[c], d[0] >= a && d[0] <= i && d[1] >= o && d[1] <= r && s.push(t[c]);
                    return s
                }, _setScale: function () {
                    var e = 0 !== this._zoom.start || 100 !== this._zoom.end || 0 !== this._zoom.start2 || 100 !== this._zoom.end2, t = {
                        xAxis: this.option.xAxis,
                        yAxis: this.option.yAxis
                    };
                    for (var n in t)for (var a = 0, i = t[n].length; i > a; a++)t[n][a].scale = e || t[n][a]._scale
                }, _backupScale: function () {
                    var e = {xAxis: this.option.xAxis, yAxis: this.option.yAxis};
                    for (var t in e)for (var n = 0, a = e[t].length; a > n; n++)e[t][n]._scale = e[t][n].scale
                }, _getDetail: function () {
                    for (var e = ["xAxis", "yAxis"], t = 0, n = e.length; n > t; t++) {
                        var a = this._originalData[e[t]];
                        for (var i in a) {
                            var o = a[i];
                            if (null != o) {
                                var r = o.length, l = Math.floor(this._zoom.start / 100 * r), h = Math.ceil(this._zoom.end / 100 * r);
                                return h -= h > 0 ? 1 : 0, {
                                    start: this.getDataFromOption(o[l]),
                                    end: this.getDataFromOption(o[h])
                                }
                            }
                        }
                    }
                    e = "horizontal" == this.zoomOption.orient ? "xAxis" : "yAxis";
                    var d = this._zoom.seriesIndex[0], c = this.option.series[d][e + "Index"] || 0, p = this.option[e][c].type, m = this._zoom.scatterMap[d][e.charAt(0)].min, u = this._zoom.scatterMap[d][e.charAt(0)].max, V = u - m;
                    if ("value" == p)return {start: m + V * this._zoom.start / 100, end: m + V * this._zoom.end / 100};
                    if ("time" == p) {
                        u = m + V * this._zoom.end / 100, m += V * this._zoom.start / 100;
                        var U = s.getAutoFormatter(m, u).formatter;
                        return {start: s.format(U, m), end: s.format(U, u)}
                    }
                    return {start: "", end: ""}
                }, __ondrift: function (e, t, n) {
                    this.zoomOption.zoomLock && (e = this._fillerShae);
                    var a = "filler" == e._type ? this._handleSize : 0;
                    if ("horizontal" == this.zoomOption.orient ? e.style.x + t - a <= this._location.x ? e.style.x = this._location.x + a : e.style.x + t + e.style.width + a >= this._location.x + this._location.width ? e.style.x = this._location.x + this._location.width - e.style.width - a : e.style.x += t : e.style.y + n - a <= this._location.y ? e.style.y = this._location.y + a : e.style.y + n + e.style.height + a >= this._location.y + this._location.height ? e.style.y = this._location.y + this._location.height - e.style.height - a : e.style.y += n, "filler" == e._type ? this._syncHandleShape() : this._syncFillerShape(), this.zoomOption.realtime && this._syncData(), this.zoomOption.showDetail) {
                        var i = this._getDetail();
                        this._startShape.style.text = this._startShape.highlightStyle.text = i.start, this._endShape.style.text = this._endShape.highlightStyle.text = i.end, this._startShape.style.textPosition = this._startShape.highlightStyle.textPosition, this._endShape.style.textPosition = this._endShape.highlightStyle.textPosition
                    }
                    return !0
                }, __ondragend: function () {
                    this.zoomOption.showDetail && (this._startShape.style.text = this._endShape.style.text = "=", this._startShape.style.textPosition = this._endShape.style.textPosition = "inside", this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this.zr.refreshNextFrame()), this.isDragend = !0
                }, ondragend: function (e, t) {
                    this.isDragend && e.target && (!this.zoomOption.realtime && this._syncData(), t.dragOut = !0, t.dragIn = !0, this._isSilence || this.zoomOption.realtime || this.messageCenter.dispatch(r.EVENT.DATA_ZOOM, null, {zoom: this._zoom}, this.myChart), t.needRefresh = !1, this.isDragend = !1)
                }, ondataZoom: function (e, t) {
                    t.needRefresh = !0
                }, absoluteZoom: function (e) {
                    this._zoom.start = e.start, this._zoom.end = e.end, this._zoom.start2 = e.start2, this._zoom.end2 = e.end2, this._syncShape(), this._syncData(!0)
                }, rectZoom: function (e) {
                    if (!e)return this._zoom.start = this._zoom.start2 = 0, this._zoom.end = this._zoom.end2 = 100, this._syncShape(), this._syncData(!0), this._zoom;
                    var t = this.component.grid.getArea(), n = {x: e.x, y: e.y, width: e.width, height: e.height};
                    if (n.width < 0 && (n.x += n.width, n.width = -n.width), n.height < 0 && (n.y += n.height, n.height = -n.height), n.x > t.x + t.width || n.y > t.y + t.height)return !1;
                    n.x < t.x && (n.x = t.x), n.x + n.width > t.x + t.width && (n.width = t.x + t.width - n.x), n.y + n.height > t.y + t.height && (n.height = t.y + t.height - n.y);
                    var a, i = (n.x - t.x) / t.width, o = 1 - (n.x + n.width - t.x) / t.width, r = 1 - (n.y + n.height - t.y) / t.height, s = (n.y - t.y) / t.height;
                    return "horizontal" == this.zoomOption.orient ? (a = this._zoom.end - this._zoom.start, this._zoom.start += a * i, this._zoom.end -= a * o, a = this._zoom.end2 - this._zoom.start2, this._zoom.start2 += a * r, this._zoom.end2 -= a * s) : (a = this._zoom.end - this._zoom.start, this._zoom.start += a * r, this._zoom.end -= a * s, a = this._zoom.end2 - this._zoom.start2, this._zoom.start2 += a * i, this._zoom.end2 -= a * o), this._syncShape(), this._syncData(!0), this._zoom
                }, syncBackupData: function (e) {
                    for (var t, n, a = this._originalData.series, i = e.series, o = 0, r = i.length; r > o; o++) {
                        n = i[o].data || i[o].eventList, t = a[o] ? Math.floor(this._zoom.start / 100 * a[o].length) : 0;
                        for (var s = 0, l = n.length; l > s; s++)a[o] && (a[o][s + t] = n[s])
                    }
                }, syncOption: function (e) {
                    this.silence(!0), this.option = e, this.option.dataZoom = this.reformOption(this.option.dataZoom), this.zoomOption = this.option.dataZoom, this.myChart.canvasSupported || (this.zoomOption.realtime = !1), this.clear(), this._location = this._getLocation(), this._zoom = this._getZoom(), this._backupData(), this.option.dataZoom && this.option.dataZoom.show && this._buildShape(), this._syncData(), this.silence(!1)
                }, silence: function (e) {
                    this._isSilence = e
                }, getRealDataIndex: function (e, t) {
                    if (!this._originalData || 0 === this._zoom.start && 100 == this._zoom.end)return t;
                    var n = this._originalData.series;
                    return n[e] ? Math.floor(this._zoom.start / 100 * n[e].length) + t : -1
                }, resize: function () {
                    this.clear(), this._location = this._getLocation(), this._zoom = this._getZoom(), this.option.dataZoom.show && this._buildShape()
                }
            }, l.inherits(t, n), e("../component").define("dataZoom", t), t
        }), n("echarts/component/categoryAxis", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Rectangle", "../config", "zrender/tool/util", "zrender/tool/area", "../component"], function (e) {
            function t(e, t, a, i, o, r) {
                if (i.data.length < 1)return void console.error("option.data.length < 1.");
                n.call(this, e, t, a, i, o), this.grid = this.component.grid;
                for (var s in r)this[s] = r[s];
                this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Line"), o = e("zrender/shape/Rectangle"), r = e("../config");
            r.categoryAxis = {
                zlevel: 0,
                z: 0,
                show: !0,
                position: "bottom",
                name: "",
                nameLocation: "end",
                nameTextStyle: {},
                boundaryGap: !0,
                axisLine: {show: !0, onZero: !0, lineStyle: {color: "#48b", width: 2, type: "solid"}},
                axisTick: {show: !0, interval: "auto", inside: !1, length: 5, lineStyle: {color: "#333", width: 1}},
                axisLabel: {show: !0, interval: "auto", rotate: 0, margin: 8, textStyle: {color: "#333"}},
                splitLine: {show: !0, lineStyle: {color: ["#ccc"], width: 1, type: "solid"}},
                splitArea: {show: !1, areaStyle: {color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]}}
            };
            var s = e("zrender/tool/util"), l = e("zrender/tool/area");
            return t.prototype = {
                type: r.COMPONENT_TYPE_AXIS_CATEGORY, _getReformedLabel: function (e) {
                    var t = this.getDataFromOption(this.option.data[e]), n = this.option.data[e].formatter || this.option.axisLabel.formatter;
                    return n && ("function" == typeof n ? t = n.call(this.myChart, t) : "string" == typeof n && (t = n.replace("{value}", t))), t
                }, _getInterval: function () {
                    var e = this.option.axisLabel.interval;
                    if ("auto" == e) {
                        var t = this.option.axisLabel.textStyle.fontSize, n = this.option.data, a = this.option.data.length;
                        if (this.isHorizontal())if (a > 3) {
                            var i, o, r = this.getGap(), h = !1, d = Math.floor(.5 / r);
                            for (d = 1 > d ? 1 : d, e = Math.floor(15 / r); !h && a > e;) {
                                e += d, h = !0, i = Math.floor(r * e);
                                for (var c = Math.floor((a - 1) / e) * e; c >= 0; c -= e) {
                                    if (0 !== this.option.axisLabel.rotate)o = t; else if (n[c].textStyle)o = l.getTextWidth(this._getReformedLabel(c), this.getFont(s.merge(n[c].textStyle, this.option.axisLabel.textStyle))); else {
                                        var p = this._getReformedLabel(c) + "", m = (p.match(/\w/g) || "").length, u = p.length - m;
                                        o = m * t * 2 / 3 + u * t
                                    }
                                    if (o > i) {
                                        h = !1;
                                        break
                                    }
                                }
                            }
                        } else e = 1; else if (a > 3) {
                            var r = this.getGap();
                            for (e = Math.floor(11 / r); t > r * e - 6 && a > e;)e++
                        } else e = 1
                    } else e = "function" == typeof e ? 1 : e - 0 + 1;
                    return e
                }, _buildShape: function () {
                    if (this._interval = this._getInterval(), this.option.show) {
                        this.option.splitArea.show && this._buildSplitArea(), this.option.splitLine.show && this._buildSplitLine(), this.option.axisLine.show && this._buildAxisLine(), this.option.axisTick.show && this._buildAxisTick(), this.option.axisLabel.show && this._buildAxisLabel();
                        for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e])
                    }
                }, _buildAxisTick: function () {
                    var e, t = this.option.data, n = this.option.data.length, a = this.option.axisTick, o = a.length, r = a.lineStyle.color, s = a.lineStyle.width, l = "function" == typeof a.interval ? a.interval : "auto" == a.interval && "function" == typeof this.option.axisLabel.interval ? this.option.axisLabel.interval : !1, h = l ? 1 : "auto" == a.interval ? this._interval : a.interval - 0 + 1, d = a.onGap, c = d ? this.getGap() / 2 : "undefined" == typeof d && this.option.boundaryGap ? this.getGap() / 2 : 0, p = c > 0 ? -h : 0;
                    if (this.isHorizontal())for (var m, u = "bottom" == this.option.position ? a.inside ? this.grid.getYend() - o - 1 : this.grid.getYend() + 1 : a.inside ? this.grid.getY() + 1 : this.grid.getY() - o - 1, V = p; n > V; V += h)(!l || l(V, t[V])) && (m = this.subPixelOptimize(this.getCoordByIndex(V) + (V >= 0 ? c : 0), s), e = {
                        _axisShape: "axisTick",
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {xStart: m, yStart: u, xEnd: m, yEnd: u + o, strokeColor: r, lineWidth: s}
                    }, this.shapeList.push(new i(e))); else for (var U, f = "left" == this.option.position ? a.inside ? this.grid.getX() + 1 : this.grid.getX() - o - 1 : a.inside ? this.grid.getXend() - o - 1 : this.grid.getXend() + 1, V = p; n > V; V += h)(!l || l(V, t[V])) && (U = this.subPixelOptimize(this.getCoordByIndex(V) - (V >= 0 ? c : 0), s), e = {
                        _axisShape: "axisTick",
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {xStart: f, yStart: U, xEnd: f + o, yEnd: U, strokeColor: r, lineWidth: s}
                    }, this.shapeList.push(new i(e)))
                }, _buildAxisLabel: function () {
                    var e, t, n = this.option.data, i = this.option.data.length, o = this.option.axisLabel, r = o.rotate, l = o.margin, h = o.clickable, d = o.textStyle, c = "function" == typeof o.interval ? o.interval : !1;
                    if (this.isHorizontal()) {
                        var p, m;
                        "bottom" == this.option.position ? (p = this.grid.getYend() + l, m = "top") : (p = this.grid.getY() - l, m = "bottom");
                        for (var u = 0; i > u; u += this._interval)c && !c(u, n[u]) || "" === this._getReformedLabel(u) || (t = s.merge(n[u].textStyle || {}, d), e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 3,
                            hoverable: !1,
                            style: {
                                x: this.getCoordByIndex(u),
                                y: p,
                                color: t.color,
                                text: this._getReformedLabel(u),
                                textFont: this.getFont(t),
                                textAlign: t.align || "center",
                                textBaseline: t.baseline || m
                            }
                        }, r && (e.style.textAlign = r > 0 ? "bottom" == this.option.position ? "right" : "left" : "bottom" == this.option.position ? "left" : "right", e.rotation = [r * Math.PI / 180, e.style.x, e.style.y]), this.shapeList.push(new a(this._axisLabelClickable(h, e))))
                    } else {
                        var V, U;
                        "left" == this.option.position ? (V = this.grid.getX() - l, U = "right") : (V = this.grid.getXend() + l, U = "left");
                        for (var u = 0; i > u; u += this._interval)c && !c(u, n[u]) || "" === this._getReformedLabel(u) || (t = s.merge(n[u].textStyle || {}, d), e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 3,
                            hoverable: !1,
                            style: {
                                x: V,
                                y: this.getCoordByIndex(u),
                                color: t.color,
                                text: this._getReformedLabel(u),
                                textFont: this.getFont(t),
                                textAlign: t.align || U,
                                textBaseline: t.baseline || 0 === u && "" !== this.option.name ? "bottom" : u == i - 1 && "" !== this.option.name ? "top" : "middle"
                            }
                        }, r && (e.rotation = [r * Math.PI / 180, e.style.x, e.style.y]), this.shapeList.push(new a(this._axisLabelClickable(h, e))))
                    }
                }, _buildSplitLine: function () {
                    var e, t = this.option.data, n = this.option.data.length, a = this.option.splitLine, o = a.lineStyle.type, r = a.lineStyle.width, s = a.lineStyle.color;
                    s = s instanceof Array ? s : [s];
                    var l = s.length, h = "function" == typeof this.option.axisLabel.interval ? this.option.axisLabel.interval : !1, d = a.onGap, c = d ? this.getGap() / 2 : "undefined" == typeof d && this.option.boundaryGap ? this.getGap() / 2 : 0;
                    if (n -= d || "undefined" == typeof d && this.option.boundaryGap ? 1 : 0, this.isHorizontal())for (var p, m = this.grid.getY(), u = this.grid.getYend(), V = 0; n > V; V += this._interval)(!h || h(V, t[V])) && (p = this.subPixelOptimize(this.getCoordByIndex(V) + c, r), e = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            xStart: p,
                            yStart: m,
                            xEnd: p,
                            yEnd: u,
                            strokeColor: s[V / this._interval % l],
                            lineType: o,
                            lineWidth: r
                        }
                    }, this.shapeList.push(new i(e))); else for (var U, f = this.grid.getX(), _ = this.grid.getXend(), V = 0; n > V; V += this._interval)(!h || h(V, t[V])) && (U = this.subPixelOptimize(this.getCoordByIndex(V) - c, r), e = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            xStart: f,
                            yStart: U,
                            xEnd: _,
                            yEnd: U,
                            strokeColor: s[V / this._interval % l],
                            lineType: o,
                            lineWidth: r
                        }
                    }, this.shapeList.push(new i(e)))
                }, _buildSplitArea: function () {
                    var e, t = this.option.data, n = this.option.splitArea, a = n.areaStyle.color;
                    if (a instanceof Array) {
                        var i = a.length, r = this.option.data.length, s = "function" == typeof this.option.axisLabel.interval ? this.option.axisLabel.interval : !1, l = n.onGap, h = l ? this.getGap() / 2 : "undefined" == typeof l && this.option.boundaryGap ? this.getGap() / 2 : 0;
                        if (this.isHorizontal())for (var d, c = this.grid.getY(), p = this.grid.getHeight(), m = this.grid.getX(), u = 0; r >= u; u += this._interval)s && !s(u, t[u]) && r > u || (d = r > u ? this.getCoordByIndex(u) + h : this.grid.getXend(), e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            hoverable: !1,
                            style: {x: m, y: c, width: d - m, height: p, color: a[u / this._interval % i]}
                        }, this.shapeList.push(new o(e)), m = d); else for (var V, U = this.grid.getX(), f = this.grid.getWidth(), _ = this.grid.getYend(), u = 0; r >= u; u += this._interval)s && !s(u, t[u]) && r > u || (V = r > u ? this.getCoordByIndex(u) - h : this.grid.getY(), e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            hoverable: !1,
                            style: {x: U, y: V, width: f, height: _ - V, color: a[u / this._interval % i]}
                        }, this.shapeList.push(new o(e)), _ = V)
                    } else e = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this.grid.getX(),
                            y: this.grid.getY(),
                            width: this.grid.getWidth(),
                            height: this.grid.getHeight(),
                            color: a
                        }
                    }, this.shapeList.push(new o(e))
                }, refresh: function (e) {
                    e && (this.option = this.reformOption(e), this.option.axisLabel.textStyle = this.getTextStyle(this.option.axisLabel.textStyle)), this.clear(), this._buildShape()
                }, getGap: function () {
                    var e = this.option.data.length, t = this.isHorizontal() ? this.grid.getWidth() : this.grid.getHeight();
                    return this.option.boundaryGap ? t / e : t / (e > 1 ? e - 1 : 1)
                }, getCoord: function (e) {
                    for (var t = this.option.data, n = t.length, a = this.getGap(), i = this.option.boundaryGap ? a / 2 : 0, o = 0; n > o; o++) {
                        if (this.getDataFromOption(t[o]) == e)return i = this.isHorizontal() ? this.grid.getX() + i : this.grid.getYend() - i;
                        i += a
                    }
                }, getCoordByIndex: function (e) {
                    if (0 > e)return this.isHorizontal() ? this.grid.getX() : this.grid.getYend();
                    if (e > this.option.data.length - 1)return this.isHorizontal() ? this.grid.getXend() : this.grid.getY();
                    var t = this.getGap(), n = this.option.boundaryGap ? t / 2 : 0;
                    return n += e * t, n = this.isHorizontal() ? this.grid.getX() + n : this.grid.getYend() - n
                }, getNameByIndex: function (e) {
                    return this.getDataFromOption(this.option.data[e])
                }, getIndexByName: function (e) {
                    for (var t = this.option.data, n = t.length, a = 0; n > a; a++)if (this.getDataFromOption(t[a]) == e)return a;
                    return -1
                }, getValueFromCoord: function () {
                    return ""
                }, isMainAxis: function (e) {
                    return e % this._interval === 0
                }
            }, s.inherits(t, n), e("../component").define("categoryAxis", t), t
        }), n("echarts/component/valueAxis", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Rectangle", "../config", "../util/date", "zrender/tool/util", "../util/smartSteps", "../util/accMath", "../util/smartLogSteps", "../component"], function (e) {
            function t(e, t, a, i, o, r, s) {
                if (!s || 0 === s.length)return void console.err("option.series.length == 0.");
                n.call(this, e, t, a, i, o), this.series = s, this.grid = this.component.grid;
                for (var l in r)this[l] = r[l];
                this.refresh(i, s)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Line"), o = e("zrender/shape/Rectangle"), r = e("../config");
            r.valueAxis = {
                zlevel: 0,
                z: 0,
                show: !0,
                position: "left",
                name: "",
                nameLocation: "end",
                nameTextStyle: {},
                boundaryGap: [0, 0],
                axisLine: {show: !0, onZero: !0, lineStyle: {color: "#48b", width: 2, type: "solid"}},
                axisTick: {show: !1, inside: !1, length: 5, lineStyle: {color: "#333", width: 1}},
                axisLabel: {show: !0, rotate: 0, margin: 8, textStyle: {color: "#333"}},
                splitLine: {show: !0, lineStyle: {color: ["#ccc"], width: 1, type: "solid"}},
                splitArea: {show: !1, areaStyle: {color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]}}
            };
            var s = e("../util/date"), l = e("zrender/tool/util");
            return t.prototype = {
                type: r.COMPONENT_TYPE_AXIS_VALUE, _buildShape: function () {
                    if (this._hasData = !1, this._calculateValue(), this._hasData && this.option.show) {
                        this.option.splitArea.show && this._buildSplitArea(), this.option.splitLine.show && this._buildSplitLine(), this.option.axisLine.show && this._buildAxisLine(), this.option.axisTick.show && this._buildAxisTick(), this.option.axisLabel.show && this._buildAxisLabel();
                        for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e])
                    }
                }, _buildAxisTick: function () {
                    var e, t = this._valueList, n = this._valueList.length, a = this.option.axisTick, o = a.length, r = a.lineStyle.color, s = a.lineStyle.width;
                    if (this.isHorizontal())for (var l, h = "bottom" === this.option.position ? a.inside ? this.grid.getYend() - o - 1 : this.grid.getYend() + 1 : a.inside ? this.grid.getY() + 1 : this.grid.getY() - o - 1, d = 0; n > d; d++)l = this.subPixelOptimize(this.getCoord(t[d]), s), e = {
                        _axisShape: "axisTick",
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {xStart: l, yStart: h, xEnd: l, yEnd: h + o, strokeColor: r, lineWidth: s}
                    }, this.shapeList.push(new i(e)); else for (var c, p = "left" === this.option.position ? a.inside ? this.grid.getX() + 1 : this.grid.getX() - o - 1 : a.inside ? this.grid.getXend() - o - 1 : this.grid.getXend() + 1, d = 0; n > d; d++)c = this.subPixelOptimize(this.getCoord(t[d]), s), e = {
                        _axisShape: "axisTick",
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {xStart: p, yStart: c, xEnd: p + o, yEnd: c, strokeColor: r, lineWidth: s}
                    }, this.shapeList.push(new i(e))
                }, _buildAxisLabel: function () {
                    var e, t = this._valueList, n = this._valueList.length, i = this.option.axisLabel.rotate, o = this.option.axisLabel.margin, r = this.option.axisLabel.clickable, s = this.option.axisLabel.textStyle;
                    if (this.isHorizontal()) {
                        var l, h;
                        "bottom" === this.option.position ? (l = this.grid.getYend() + o, h = "top") : (l = this.grid.getY() - o, h = "bottom");
                        for (var d = 0; n > d; d++)e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 3,
                            hoverable: !1,
                            style: {
                                x: this.getCoord(t[d]),
                                y: l,
                                color: "function" == typeof s.color ? s.color(t[d]) : s.color,
                                text: this._valueLabel[d],
                                textFont: this.getFont(s),
                                textAlign: s.align || "center",
                                textBaseline: s.baseline || h
                            }
                        }, i && (e.style.textAlign = i > 0 ? "bottom" === this.option.position ? "right" : "left" : "bottom" === this.option.position ? "left" : "right", e.rotation = [i * Math.PI / 180, e.style.x, e.style.y]), this.shapeList.push(new a(this._axisLabelClickable(r, e)))
                    } else {
                        var c, p;
                        "left" === this.option.position ? (c = this.grid.getX() - o, p = "right") : (c = this.grid.getXend() + o, p = "left");
                        for (var d = 0; n > d; d++)e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 3,
                            hoverable: !1,
                            style: {
                                x: c,
                                y: this.getCoord(t[d]),
                                color: "function" == typeof s.color ? s.color(t[d]) : s.color,
                                text: this._valueLabel[d],
                                textFont: this.getFont(s),
                                textAlign: s.align || p,
                                textBaseline: s.baseline || (0 === d && "" !== this.option.name ? "bottom" : d === n - 1 && "" !== this.option.name ? "top" : "middle")
                            }
                        }, i && (e.rotation = [i * Math.PI / 180, e.style.x, e.style.y]), this.shapeList.push(new a(this._axisLabelClickable(r, e)))
                    }
                }, _buildSplitLine: function () {
                    var e, t = this._valueList, n = this._valueList.length, a = this.option.splitLine, o = a.lineStyle.type, r = a.lineStyle.width, s = a.lineStyle.color;
                    s = s instanceof Array ? s : [s];
                    var l = s.length;
                    if (this.isHorizontal())for (var h, d = this.grid.getY(), c = this.grid.getYend(), p = 0; n > p; p++)h = this.subPixelOptimize(this.getCoord(t[p]), r), e = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            xStart: h,
                            yStart: d,
                            xEnd: h,
                            yEnd: c,
                            strokeColor: s[p % l],
                            lineType: o,
                            lineWidth: r
                        }
                    }, this.shapeList.push(new i(e)); else for (var m, u = this.grid.getX(), V = this.grid.getXend(), p = 0; n > p; p++)m = this.subPixelOptimize(this.getCoord(t[p]), r), e = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            xStart: u,
                            yStart: m,
                            xEnd: V,
                            yEnd: m,
                            strokeColor: s[p % l],
                            lineType: o,
                            lineWidth: r
                        }
                    }, this.shapeList.push(new i(e))
                }, _buildSplitArea: function () {
                    var e, t = this.option.splitArea.areaStyle.color;
                    if (t instanceof Array) {
                        var n = t.length, a = this._valueList, i = this._valueList.length;
                        if (this.isHorizontal())for (var r, s = this.grid.getY(), l = this.grid.getHeight(), h = this.grid.getX(), d = 0; i >= d; d++)r = i > d ? this.getCoord(a[d]) : this.grid.getXend(), e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            hoverable: !1,
                            style: {x: h, y: s, width: r - h, height: l, color: t[d % n]}
                        }, this.shapeList.push(new o(e)), h = r; else for (var c, p = this.grid.getX(), m = this.grid.getWidth(), u = this.grid.getYend(), d = 0; i >= d; d++)c = i > d ? this.getCoord(a[d]) : this.grid.getY(), e = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            hoverable: !1,
                            style: {x: p, y: c, width: m, height: u - c, color: t[d % n]}
                        }, this.shapeList.push(new o(e)), u = c
                    } else e = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this.grid.getX(),
                            y: this.grid.getY(),
                            width: this.grid.getWidth(),
                            height: this.grid.getHeight(),
                            color: t
                        }
                    }, this.shapeList.push(new o(e))
                }, _calculateValue: function () {
                    if (isNaN(this.option.min - 0) || isNaN(this.option.max - 0)) {
                        for (var e, t, n = {}, a = this.component.legend, i = 0, o = this.series.length; o > i; i++)!(this.series[i].type != r.CHART_TYPE_LINE && this.series[i].type != r.CHART_TYPE_BAR && this.series[i].type != r.CHART_TYPE_SCATTER && this.series[i].type != r.CHART_TYPE_K && this.series[i].type != r.CHART_TYPE_EVENTRIVER || a && !a.isSelected(this.series[i].name) || (e = this.series[i].xAxisIndex || 0, t = this.series[i].yAxisIndex || 0, this.option.xAxisIndex != e && this.option.yAxisIndex != t || !this._calculSum(n, i)));
                        var s;
                        for (var i in n) {
                            s = n[i];
                            for (var l = 0, h = s.length; h > l; l++)if (!isNaN(s[l])) {
                                this._hasData = !0, this._min = s[l], this._max = s[l];
                                break
                            }
                            if (this._hasData)break
                        }
                        for (var i in n) {
                            s = n[i];
                            for (var l = 0, h = s.length; h > l; l++)isNaN(s[l]) || (this._min = Math.min(this._min, s[l]), this._max = Math.max(this._max, s[l]))
                        }
                        var d = "log" !== this.option.type ? this.option.boundaryGap : [0, 0], c = Math.abs(this._max - this._min);
                        this._min = isNaN(this.option.min - 0) ? this._min - Math.abs(c * d[0]) : this.option.min - 0, this._max = isNaN(this.option.max - 0) ? this._max + Math.abs(c * d[1]) : this.option.max - 0, this._min === this._max && (0 === this._max ? this._max = 1 : this._max > 0 ? this._min = this._max / this.option.splitNumber != null ? this.option.splitNumber : 5 : this._max = this._max / this.option.splitNumber != null ? this.option.splitNumber : 5), "time" === this.option.type ? this._reformTimeValue() : "log" === this.option.type ? this._reformLogValue() : this._reformValue(this.option.scale)
                    } else this._hasData = !0, this._min = this.option.min - 0, this._max = this.option.max - 0, "time" === this.option.type ? this._reformTimeValue() : "log" === this.option.type ? this._reformLogValue() : this._customerValue()
                }, _calculSum: function (e, t) {
                    var n, a, i = this.series[t].name || "kener";
                    if (this.series[t].stack) {
                        var o = "__Magic_Key_Positive__" + this.series[t].stack, l = "__Magic_Key_Negative__" + this.series[t].stack;
                        e[o] = e[o] || [], e[l] = e[l] || [], e[i] = e[i] || [], a = this.series[t].data;
                        for (var h = 0, d = a.length; d > h; h++)n = this.getDataFromOption(a[h]), "-" !== n && (n -= 0, n >= 0 ? null != e[o][h] ? e[o][h] += n : e[o][h] = n : null != e[l][h] ? e[l][h] += n : e[l][h] = n, this.option.scale && e[i].push(n))
                    } else if (e[i] = e[i] || [], this.series[t].type != r.CHART_TYPE_EVENTRIVER) {
                        a = this.series[t].data;
                        for (var h = 0, d = a.length; d > h; h++)n = this.getDataFromOption(a[h]), this.series[t].type === r.CHART_TYPE_K ? (e[i].push(n[0]), e[i].push(n[1]), e[i].push(n[2]), e[i].push(n[3])) : n instanceof Array ? (-1 != this.option.xAxisIndex && e[i].push("time" != this.option.type ? n[0] : s.getNewDate(n[0])), -1 != this.option.yAxisIndex && e[i].push("time" != this.option.type ? n[1] : s.getNewDate(n[1]))) : e[i].push(n)
                    } else {
                        a = this.series[t].data;
                        for (var h = 0, d = a.length; d > h; h++)for (var c = a[h].evolution, p = 0, m = c.length; m > p; p++)e[i].push(s.getNewDate(c[p].time))
                    }
                }, _reformValue: function (t) {
                    var n = e("../util/smartSteps"), a = this.option.splitNumber;
                    !t && this._min >= 0 && this._max >= 0 && (this._min = 0), !t && this._min <= 0 && this._max <= 0 && (this._max = 0);
                    var i = n(this._min, this._max, a);
                    a = null != a ? a : i.secs, this._min = i.min, this._max = i.max, this._valueList = i.pnts, this._reformLabelData()
                }, _reformTimeValue: function () {
                    var e = null != this.option.splitNumber ? this.option.splitNumber : 5, t = s.getAutoFormatter(this._min, this._max, e), n = t.formatter, a = t.gapValue;
                    this._valueList = [s.getNewDate(this._min)];
                    var i;
                    switch (n) {
                        case"week":
                            i = s.nextMonday(this._min);
                            break;
                        case"month":
                            i = s.nextNthOnMonth(this._min, 1);
                            break;
                        case"quarter":
                            i = s.nextNthOnQuarterYear(this._min, 1);
                            break;
                        case"half-year":
                            i = s.nextNthOnHalfYear(this._min, 1);
                            break;
                        case"year":
                            i = s.nextNthOnYear(this._min, 1);
                            break;
                        default:
                            72e5 >= a ? i = (Math.floor(this._min / a) + 1) * a : (i = s.getNewDate(this._min - -a), i.setHours(6 * Math.round(i.getHours() / 6)), i.setMinutes(0), i.setSeconds(0))
                    }
                    for (i - this._min < a / 2 && (i -= -a), t = s.getNewDate(i), e *= 1.5; e-- >= 0 && (("month" == n || "quarter" == n || "half-year" == n || "year" == n) && t.setDate(1), !(this._max - t < a / 2));)this._valueList.push(t), t = s.getNewDate(t - -a);
                    this._valueList.push(s.getNewDate(this._max)), this._reformLabelData(function (e) {
                        return function (t) {
                            return s.format(e, t)
                        }
                    }(n))
                }, _customerValue: function () {
                    var t = e("../util/accMath"), n = null != this.option.splitNumber ? this.option.splitNumber : 5, a = (this._max - this._min) / n;
                    this._valueList = [];
                    for (var i = 0; n >= i; i++)this._valueList.push(t.accAdd(this._min, t.accMul(a, i)));
                    this._reformLabelData()
                }, _reformLogValue: function () {
                    var t = this.option, n = e("../util/smartLogSteps")({
                        dataMin: this._min,
                        dataMax: this._max,
                        logPositive: t.logPositive,
                        logLabelBase: t.logLabelBase,
                        splitNumber: t.splitNumber
                    });
                    this._min = n.dataMin, this._max = n.dataMax, this._valueList = n.tickList, this._dataMappingMethods = n.dataMappingMethods, this._reformLabelData(n.labelFormatter)
                }, _reformLabelData: function (e) {
                    this._valueLabel = [];
                    var t = this.option.axisLabel.formatter;
                    if (t)for (var n = 0, a = this._valueList.length; a > n; n++)"function" == typeof t ? this._valueLabel.push(e ? t.call(this.myChart, this._valueList[n], e) : t.call(this.myChart, this._valueList[n])) : "string" == typeof t && this._valueLabel.push(e ? s.format(t, this._valueList[n]) : t.replace("{value}", this._valueList[n])); else for (var n = 0, a = this._valueList.length; a > n; n++)this._valueLabel.push(e ? e(this._valueList[n]) : this.numAddCommas(this._valueList[n]))
                }, getExtremum: function () {
                    this._calculateValue();
                    var e = this._dataMappingMethods;
                    return {min: this._min, max: this._max, dataMappingMethods: e ? l.merge({}, e) : null}
                }, refresh: function (e, t) {
                    e && (this.option = this.reformOption(e), this.option.axisLabel.textStyle = l.merge(this.option.axisLabel.textStyle || {}, this.ecTheme.textStyle), this.series = t), this.zr && (this.clear(), this._buildShape())
                }, getCoord: function (e) {
                    this._dataMappingMethods && (e = this._dataMappingMethods.value2Coord(e)), e = e < this._min ? this._min : e, e = e > this._max ? this._max : e;
                    var t;
                    return t = this.isHorizontal() ? this.grid.getX() + (e - this._min) / (this._max - this._min) * this.grid.getWidth() : this.grid.getYend() - (e - this._min) / (this._max - this._min) * this.grid.getHeight()
                }, getCoordSize: function (e) {
                    return Math.abs(this.isHorizontal() ? e / (this._max - this._min) * this.grid.getWidth() : e / (this._max - this._min) * this.grid.getHeight())
                }, getValueFromCoord: function (e) {
                    var t;
                    return this.isHorizontal() ? (e = e < this.grid.getX() ? this.grid.getX() : e, e = e > this.grid.getXend() ? this.grid.getXend() : e, t = this._min + (e - this.grid.getX()) / this.grid.getWidth() * (this._max - this._min)) : (e = e < this.grid.getY() ? this.grid.getY() : e, e = e > this.grid.getYend() ? this.grid.getYend() : e, t = this._max - (e - this.grid.getY()) / this.grid.getHeight() * (this._max - this._min)), this._dataMappingMethods && (t = this._dataMappingMethods.coord2Value(t)), t.toFixed(2) - 0
                }, isMaindAxis: function (e) {
                    for (var t = 0, n = this._valueList.length; n > t; t++)if (this._valueList[t] === e)return !0;
                    return !1
                }
            }, l.inherits(t, n), e("../component").define("valueAxis", t), t
        }), n("echarts/util/date", [], function () {
            function e(e, t, n) {
                n = n > 1 ? n : 2;
                for (var a, i, o, r, s = 0, l = d.length; l > s; s++)if (a = d[s].value, i = Math.ceil(t / a) * a - Math.floor(e / a) * a, Math.round(i / a) <= 1.2 * n) {
                    o = d[s].formatter, r = d[s].value;
                    break
                }
                return null == o && (o = "year", a = 317088e5, i = Math.ceil(t / a) * a - Math.floor(e / a) * a, r = Math.round(i / (n - 1) / a) * a), {
                    formatter: o,
                    gapValue: r
                }
            }

            function t(e) {
                return 10 > e ? "0" + e : e
            }

            function n(e, n) {
                ("week" == e || "month" == e || "quarter" == e || "half-year" == e || "year" == e) && (e = "MM - dd\nyyyy");
                var a = h(n), i = a.getFullYear(), o = a.getMonth() + 1, r = a.getDate(), s = a.getHours(), l = a.getMinutes(), d = a.getSeconds();
                return e = e.replace("MM", t(o)), e = e.toLowerCase(), e = e.replace("yyyy", i), e = e.replace("yy", i % 100), e = e.replace("dd", t(r)), e = e.replace("d", r), e = e.replace("hh", t(s)), e = e.replace("h", s), e = e.replace("mm", t(l)), e = e.replace("m", l), e = e.replace("ss", t(d)), e = e.replace("s", d)
            }

            function a(e) {
                return e = h(e), e.setDate(e.getDate() + 8 - e.getDay()), e
            }

            function i(e, t, n) {
                return e = h(e), e.setMonth(Math.ceil((e.getMonth() + 1) / n) * n), e.setDate(t), e
            }

            function o(e, t) {
                return i(e, t, 1)
            }

            function r(e, t) {
                return i(e, t, 3)
            }

            function s(e, t) {
                return i(e, t, 6)
            }

            function l(e, t) {
                return i(e, t, 12)
            }

            function h(e) {
                return e instanceof Date ? e : new Date("string" == typeof e ? e.replace(/-/g, "/") : e)
            }

            var d = [{formatter: "hh : mm : ss", value: 1e3}, {
                formatter: "hh : mm : ss",
                value: 5e3
            }, {formatter: "hh : mm : ss", value: 1e4}, {
                formatter: "hh : mm : ss",
                value: 15e3
            }, {formatter: "hh : mm : ss", value: 3e4}, {
                formatter: "hh : mm\nMM - dd",
                value: 6e4
            }, {formatter: "hh : mm\nMM - dd", value: 3e5}, {
                formatter: "hh : mm\nMM - dd",
                value: 6e5
            }, {formatter: "hh : mm\nMM - dd", value: 9e5}, {
                formatter: "hh : mm\nMM - dd",
                value: 18e5
            }, {formatter: "hh : mm\nMM - dd", value: 36e5}, {
                formatter: "hh : mm\nMM - dd",
                value: 72e5
            }, {formatter: "hh : mm\nMM - dd", value: 216e5}, {
                formatter: "hh : mm\nMM - dd",
                value: 432e5
            }, {formatter: "MM - dd\nyyyy", value: 864e5}, {formatter: "week", value: 6048e5}, {
                formatter: "month",
                value: 26784e5
            }, {formatter: "quarter", value: 8208e6}, {formatter: "half-year", value: 16416e6}, {
                formatter: "year",
                value: 32832e6
            }];
            return {
                getAutoFormatter: e, getNewDate: h, format: n, nextMonday: a, nextNthPerNmonth: i, nextNthOnMonth: o,
                nextNthOnQuarterYear: r, nextNthOnHalfYear: s, nextNthOnYear: l
            }
        }), n("echarts/util/smartSteps", [], function () {
            function e(e) {
                return w.log(K(e)) / w.LN10
            }

            function t(e) {
                return w.pow(10, e)
            }

            function n(e) {
                return e === X(e)
            }

            function a(e, t, a, i) {
                g = i || {}, y = g.steps || v, b = g.secs || L, a = W(+a || 0) % 99, e = +e || 0, t = +t || 0, k = x = 0, "min"in g && (e = +g.min || 0, k = 1), "max"in g && (t = +g.max || 0, x = 1), e > t && (t = [e, e = t][0]);
                var o = t - e;
                if (k && x)return _(e, t, a);
                if ((a || 5) > o) {
                    if (n(e) && n(t))return m(e, t, a);
                    if (0 === o)return u(e, t, a)
                }
                return h(e, t, a)
            }

            function i(e, n, a, i) {
                i = i || 0;
                var s = o((n - e) / a, -1), l = o(e, -1, 1), h = o(n, -1), d = w.min(s.e, l.e, h.e);
                0 === l.c ? d = w.min(s.e, h.e) : 0 === h.c && (d = w.min(s.e, l.e)), r(s, {
                    c: 0,
                    e: d
                }), r(l, s, 1), r(h, s), i += d, e = l.c, n = h.c;
                for (var c = (n - e) / a, p = t(i), m = 0, u = [], V = a + 1; V--;)u[V] = (e + c * V) * p;
                if (0 > i) {
                    m = U(p), c = +(c * p).toFixed(m), e = +(e * p).toFixed(m), n = +(n * p).toFixed(m);
                    for (var V = u.length; V--;)u[V] = u[V].toFixed(m), 0 === +u[V] && (u[V] = "0")
                } else e *= p, n *= p, c *= p;
                return b = 0, y = 0, g = 0, {min: e, max: n, secs: a, step: c, fix: m, exp: i, pnts: u}
            }

            function o(a, i, o) {
                i = W(i % 10) || 2, 0 > i && (n(a) ? i = ("" + K(a)).replace(/0+$/, "").length || 1 : (a = a.toFixed(15).replace(/0+$/, ""), i = a.replace(".", "").replace(/^[-0]+/, "").length, a = +a));
                var r = X(e(a)) - i + 1, s = +(a * t(-r)).toFixed(15) || 0;
                return s = o ? X(s) : I(s), !s && (r = 0), ("" + K(s)).length > i && (r += 1, s /= 10), {c: s, e: r}
            }

            function r(e, n, a) {
                var i = n.e - e.e;
                i && (e.e += i, e.c *= t(-i), e.c = a ? X(e.c) : I(e.c))
            }

            function s(e, t, n) {
                e.e < t.e ? r(t, e, n) : r(e, t, n)
            }

            function l(e, t) {
                t = t || v, e = o(e);
                for (var n = e.c, a = 0; n > t[a];)a++;
                if (!t[a])for (n /= 10, e.e += 1, a = 0; n > t[a];)a++;
                return e.c = t[a], e
            }

            function h(e, t, a) {
                var s, h = a || +b.slice(-1), u = l((t - e) / h, y), U = o(t - e), _ = o(e, -1, 1), g = o(t, -1);
                if (r(U, u), r(_, u, 1), r(g, u), a ? s = c(_, g, h) : h = d(_, g), n(e) && n(t) && e * t >= 0) {
                    if (h > t - e)return m(e, t, h);
                    h = p(e, t, a, _, g, h)
                }
                var v = V(e, t, _.c, g.c);
                return _.c = v[0], g.c = v[1], (k || x) && f(e, t, _, g), i(_.c, g.c, h, g.e)
            }

            function d(e, n) {
                for (var a, i, o, r, s = [], h = b.length; h--;)a = b[h], i = l((n.c - e.c) / a, y), i = i.c * t(i.e), o = X(e.c / i) * i, r = I(n.c / i) * i, s[h] = {
                    min: o,
                    max: r,
                    step: i,
                    span: r - o
                };
                return s.sort(function (e, t) {
                    var n = e.span - t.span;
                    return 0 === n && (n = e.step - t.step), n
                }), s = s[0], a = s.span / s.step, e.c = s.min, n.c = s.max, 3 > a ? 2 * a : a
            }

            function c(e, n, a) {
                for (var i, o, r = n.c, s = (n.c - e.c) / a - 1; r > e.c;)s = l(s + 1, y), s = s.c * t(s.e), i = s * a, o = I(n.c / s) * s, r = o - i;
                var h = e.c - r, d = o - n.c, c = h - d;
                return c > 1.1 * s && (c = W(c / s / 2) * s, r += c, o += c), e.c = r, n.c = o, s
            }

            function p(e, a, i, o, r, s) {
                var l = r.c - o.c, h = l / s * t(r.e);
                if (!n(h) && (h = X(h), l = h * s, a - e > l && (h += 1, l = h * s, !i && h * (s - 1) >= a - e && (s -= 1, l = h * s)), l >= a - e)) {
                    var d = l - (a - e);
                    o.c = W(e - d / 2), r.c = W(a + d / 2), o.e = 0, r.e = 0
                }
                return s
            }

            function m(e, t, n) {
                if (n = n || 5, k)t = e + n; else if (x)e = t - n; else {
                    var a = n - (t - e), o = W(e - a / 2), r = W(t + a / 2), s = V(e, t, o, r);
                    e = s[0], t = s[1]
                }
                return i(e, t, n)
            }

            function u(e, t, n) {
                n = n || 5;
                var a = w.min(K(t / n), n) / 2.1;
                return k ? t = e + a : x ? e = t - a : (e -= a, t += a), h(e, t, n)
            }

            function V(e, t, n, a) {
                return e >= 0 && 0 > n ? (a -= n, n = 0) : 0 >= t && a > 0 && (n -= a, a = 0), [n, a]
            }

            function U(e) {
                return e = (+e).toFixed(15).split("."), e.pop().replace(/0+$/, "").length
            }

            function f(e, t, n, a) {
                if (k) {
                    var i = o(e, 4, 1);
                    n.e - i.e > 6 && (i = {c: 0, e: n.e}), s(n, i), s(a, i), a.c += i.c - n.c, n.c = i.c
                } else if (x) {
                    var r = o(t, 4);
                    a.e - r.e > 6 && (r = {c: 0, e: a.e}), s(n, r), s(a, r), n.c += r.c - a.c, a.c = r.c
                }
            }

            function _(e, t, n) {
                var a = n ? [n] : b, s = t - e;
                if (0 === s)return t = o(t, 3), n = a[0], t.c = W(t.c + n / 2), i(t.c - n, t.c, n, t.e);
                K(t / s) < 1e-6 && (t = 0), K(e / s) < 1e-6 && (e = 0);
                var l, h, d, c = [[5, 10], [10, 2], [50, 10], [100, 2]], p = [], m = [], u = o(t - e, 3), V = o(e, -1, 1), U = o(t, -1);
                r(V, u, 1), r(U, u), s = U.c - V.c, u.c = s;
                for (var f = a.length; f--;) {
                    n = a[f], l = I(s / n), h = l * n - s, d = 3 * (h + 3), d += 2 * (n - a[0] + 2), n % 5 === 0 && (d -= 10);
                    for (var _ = c.length; _--;)l % c[_][0] === 0 && (d /= c[_][1]);
                    m[f] = [n, l, h, d].join(), p[f] = {secs: n, step: l, delta: h, score: d}
                }
                return p.sort(function (e, t) {
                    return e.score - t.score
                }), p = p[0], V.c = W(V.c - p.delta / 2), U.c = W(U.c + p.delta / 2), i(V.c, U.c, p.secs, u.e)
            }

            var g, y, b, k, x, v = [10, 20, 25, 50], L = [4, 5, 6], w = Math, W = w.round, X = w.floor, I = w.ceil, K = w.abs;
            return a
        }), n("echarts/util/smartLogSteps", ["require", "./number"], function (e) {
            function t(e) {
                return n(), U = e || {}, a(), i(), [o(), n()][0]
            }

            function n() {
                p = U = _ = V = g = y = f = b = m = u = null
            }

            function a() {
                m = U.logLabelBase, null == m ? (u = "plain", m = 10, V = K) : (m = +m, 1 > m && (m = 10), u = "exponent", V = v(m)), f = U.splitNumber, null == f && (f = J);
                var e = parseFloat(U.dataMin), t = parseFloat(U.dataMax);
                isFinite(e) || isFinite(t) ? isFinite(e) ? isFinite(t) ? e > t && (t = [e, e = t][0]) : t = e : e = t : e = t = 1, p = U.logPositive, null == p && (p = t > 0 || 0 === e), g = p ? e : -t, y = p ? t : -e, E > g && (g = E), E > y && (y = E)
            }

            function i() {
                function e() {
                    f > d && (f = d);
                    var e = X(l(d / f)), t = W(l(d / e)), n = e * t, a = (n - p) / 2, i = X(l(r - a));
                    c(i - r) && (i -= 1), _ = -i * V;
                    for (var s = i; o >= s - e; s += e)b.push(L(m, s))
                }

                function t() {
                    for (var e = n(h, 0), t = e + 2; t > e && i(e + 1) + a(e + 1) * C < r;)e++;
                    for (var l = n(s, 0), t = l - 2; l > t && i(l - 1) + a(l - 1) * C > o;)l--;
                    _ = -(i(e) * K + a(e) * S);
                    for (var d = e; l >= d; d++) {
                        var c = i(d), p = a(d);
                        b.push(L(10, c) * L(2, p))
                    }
                }

                function n(e, t) {
                    return 3 * e + t
                }

                function a(e) {
                    return e - 3 * i(e)
                }

                function i(e) {
                    return X(l(e / 3))
                }

                b = [];
                var o = l(v(y) / V), r = l(v(g) / V), s = W(o), h = X(r), d = s - h, p = o - r;
                "exponent" === u ? e() : T >= d && f > T ? t() : e()
            }

            function o() {
                for (var e = [], t = 0, n = b.length; n > t; t++)e[t] = (p ? 1 : -1) * b[t];
                !p && e.reverse();
                var a = s(), i = a.value2Coord, o = i(e[0]), l = i(e[e.length - 1]);
                return o === l && (o -= 1, l += 1), {
                    dataMin: o,
                    dataMax: l,
                    tickList: e,
                    logPositive: p,
                    labelFormatter: r(),
                    dataMappingMethods: a
                }
            }

            function r() {
                if ("exponent" === u) {
                    var e = m, t = V;
                    return function (n) {
                        if (!isFinite(parseFloat(n)))return "";
                        var a = "";
                        return 0 > n && (n = -n, a = "-"), a + e + d(v(n) / t)
                    }
                }
                return function (e) {
                    return isFinite(parseFloat(e)) ? k.addCommas(h(e)) : ""
                }
            }

            function s() {
                var e = p, t = _;
                return {
                    value2Coord: function (n) {
                        return null == n || isNaN(n) || !isFinite(n) ? n : (n = parseFloat(n), isFinite(n) ? e && E > n ? n = E : !e && n > -E && (n = -E) : n = E, n = w(n), (e ? 1 : -1) * (v(n) + t))
                    }, coord2Value: function (n) {
                        return null == n || isNaN(n) || !isFinite(n) ? n : (n = parseFloat(n), isFinite(n) || (n = E), e ? L(I, n - t) : -L(I, -n + t))
                    }
                }
            }

            function l(e) {
                return +Number(+e).toFixed(14)
            }

            function h(e) {
                return Number(e).toFixed(15).replace(/\.?0*$/, "")
            }

            function d(e) {
                e = h(Math.round(e));
                for (var t = [], n = 0, a = e.length; a > n; n++) {
                    var i = e.charAt(n);
                    t.push(M[i] || "")
                }
                return t.join("")
            }

            function c(e) {
                return e > -E && E > e
            }

            var p, m, u, V, U, f, _, g, y, b, k = e("./number"), x = Math, v = x.log, L = x.pow, w = x.abs, W = x.ceil, X = x.floor, I = x.E, K = x.LN10, S = x.LN2, C = S / K, E = 1e-9, J = 5, T = 2, M = {
                0: "⁰",
                1: "¹",
                2: "²",
                3: "³",
                4: "⁴",
                5: "⁵",
                6: "⁶",
                7: "⁷",
                8: "⁸",
                9: "⁹",
                "-": "⁻"
            };
            return t
        }), n("echarts/chart/line", ["require", "./base", "zrender/shape/Polyline", "../util/shape/Icon", "../util/shape/HalfSmoothPolygon", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, n, i, o) {
                a.call(this, e, t, n, i, o), this.refresh(i)
            }

            function n(e, t, n) {
                var a = t.x, i = t.y, r = t.width, s = t.height, l = s / 2;
                t.symbol.match("empty") && (e.fillStyle = "#fff"), t.brushType = "both";
                var h = t.symbol.replace("empty", "").toLowerCase();
                h.match("star") ? (l = h.replace("star", "") - 0 || 5, i -= 1, h = "star") : ("rectangle" === h || "arrow" === h) && (a += (r - s) / 2, r = s);
                var d = "";
                if (h.match("image") && (d = h.replace(new RegExp("^image:\\/\\/"), ""), h = "image", a += Math.round((r - s) / 2) - 1, r = s += 2), h = o.prototype.iconLibrary[h]) {
                    var c = t.x, p = t.y;
                    e.moveTo(c, p + l), e.lineTo(c + 5, p + l), e.moveTo(c + t.width - 5, p + l), e.lineTo(c + t.width, p + l);
                    var m = this;
                    h(e, {x: a + 4, y: i + 4, width: r - 8, height: s - 8, n: l, image: d}, function () {
                        m.modSelf(), n()
                    })
                } else e.moveTo(a, i + l), e.lineTo(a + r, i + l)
            }

            var a = e("./base"), i = e("zrender/shape/Polyline"), o = e("../util/shape/Icon"), r = e("../util/shape/HalfSmoothPolygon");
            e("../component/axis"), e("../component/grid"), e("../component/dataZoom");
            var s = e("../config");
            s.line = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                xAxisIndex: 0,
                yAxisIndex: 0,
                dataFilter: "nearest",
                itemStyle: {
                    normal: {
                        label: {show: !1},
                        lineStyle: {
                            width: 2,
                            type: "solid",
                            shadowColor: "rgba(0,0,0,0)",
                            shadowBlur: 0,
                            shadowOffsetX: 0,
                            shadowOffsetY: 0
                        }
                    }, emphasis: {label: {show: !1}}
                },
                symbolSize: 2,
                showAllSymbol: !1
            };
            var l = e("../util/ecData"), h = e("zrender/tool/util"), d = e("zrender/tool/color");
            return t.prototype = {
                type: s.CHART_TYPE_LINE, _buildShape: function () {
                    this.finalPLMap = {}, this._buildPosition()
                }, _buildHorizontal: function (e, t, n, a) {
                    for (var i, o, r, s, l, h, d, c, p, m = this.series, u = n[0][0], V = m[u], U = this.component.xAxis.getAxis(V.xAxisIndex || 0), f = {}, _ = 0, g = t; g > _ && null != U.getNameByIndex(_); _++) {
                        o = U.getCoordByIndex(_);
                        for (var y = 0, b = n.length; b > y; y++) {
                            i = this.component.yAxis.getAxis(m[n[y][0]].yAxisIndex || 0), l = s = d = h = i.getCoord(0);
                            for (var k = 0, x = n[y].length; x > k; k++)u = n[y][k], V = m[u], c = V.data[_], p = this.getDataFromOption(c, "-"), f[u] = f[u] || [], a[u] = a[u] || {
                                min: Number.POSITIVE_INFINITY,
                                max: Number.NEGATIVE_INFINITY,
                                sum: 0,
                                counter: 0,
                                average: 0
                            }, "-" !== p ? (p >= 0 ? (s -= k > 0 ? i.getCoordSize(p) : l - i.getCoord(p), r = s) : 0 > p && (h += k > 0 ? i.getCoordSize(p) : i.getCoord(p) - d, r = h), f[u].push([o, r, _, U.getNameByIndex(_), o, l]), a[u].min > p && (a[u].min = p, a[u].minY = r, a[u].minX = o), a[u].max < p && (a[u].max = p, a[u].maxY = r, a[u].maxX = o), a[u].sum += p, a[u].counter++) : f[u].length > 0 && (this.finalPLMap[u] = this.finalPLMap[u] || [], this.finalPLMap[u].push(f[u]), f[u] = [])
                        }
                        s = this.component.grid.getY();
                        for (var v, y = 0, b = n.length; b > y; y++)for (var k = 0, x = n[y].length; x > k; k++)u = n[y][k], V = m[u], c = V.data[_], p = this.getDataFromOption(c, "-"), "-" == p && this.deepQuery([c, V, this.option], "calculable") && (v = this.deepQuery([c, V], "symbolSize"), s += 2 * v + 5, r = s, this.shapeList.push(this._getCalculableItem(u, _, U.getNameByIndex(_), o, r, "horizontal")))
                    }
                    for (var L in f)f[L].length > 0 && (this.finalPLMap[L] = this.finalPLMap[L] || [], this.finalPLMap[L].push(f[L]), f[L] = []);
                    this._calculMarkMapXY(a, n, "y"), this._buildBorkenLine(e, this.finalPLMap, U, "horizontal")
                }, _buildVertical: function (e, t, n, a) {
                    for (var i, o, r, s, l, h, d, c, p, m = this.series, u = n[0][0], V = m[u], U = this.component.yAxis.getAxis(V.yAxisIndex || 0), f = {}, _ = 0, g = t; g > _ && null != U.getNameByIndex(_); _++) {
                        r = U.getCoordByIndex(_);
                        for (var y = 0, b = n.length; b > y; y++) {
                            i = this.component.xAxis.getAxis(m[n[y][0]].xAxisIndex || 0), l = s = d = h = i.getCoord(0);
                            for (var k = 0, x = n[y].length; x > k; k++)u = n[y][k], V = m[u], c = V.data[_], p = this.getDataFromOption(c, "-"), f[u] = f[u] || [], a[u] = a[u] || {
                                min: Number.POSITIVE_INFINITY,
                                max: Number.NEGATIVE_INFINITY,
                                sum: 0,
                                counter: 0,
                                average: 0
                            }, "-" !== p ? (p >= 0 ? (s += k > 0 ? i.getCoordSize(p) : i.getCoord(p) - l, o = s) : 0 > p && (h -= k > 0 ? i.getCoordSize(p) : d - i.getCoord(p), o = h), f[u].push([o, r, _, U.getNameByIndex(_), l, r]), a[u].min > p && (a[u].min = p, a[u].minX = o, a[u].minY = r), a[u].max < p && (a[u].max = p, a[u].maxX = o, a[u].maxY = r), a[u].sum += p, a[u].counter++) : f[u].length > 0 && (this.finalPLMap[u] = this.finalPLMap[u] || [], this.finalPLMap[u].push(f[u]), f[u] = [])
                        }
                        s = this.component.grid.getXend();
                        for (var v, y = 0, b = n.length; b > y; y++)for (var k = 0, x = n[y].length; x > k; k++)u = n[y][k], V = m[u], c = V.data[_], p = this.getDataFromOption(c, "-"), "-" == p && this.deepQuery([c, V, this.option], "calculable") && (v = this.deepQuery([c, V], "symbolSize"), s -= 2 * v + 5, o = s, this.shapeList.push(this._getCalculableItem(u, _, U.getNameByIndex(_), o, r, "vertical")))
                    }
                    for (var L in f)f[L].length > 0 && (this.finalPLMap[L] = this.finalPLMap[L] || [], this.finalPLMap[L].push(f[L]), f[L] = []);
                    this._calculMarkMapXY(a, n, "x"), this._buildBorkenLine(e, this.finalPLMap, U, "vertical")
                }, _buildOther: function (e, t, n, a) {
                    for (var i, o = this.series, r = {}, s = 0, l = n.length; l > s; s++)for (var h = 0, d = n[s].length; d > h; h++) {
                        var c = n[s][h], p = o[c];
                        i = this.component.xAxis.getAxis(p.xAxisIndex || 0);
                        var m = this.component.yAxis.getAxis(p.yAxisIndex || 0), u = m.getCoord(0);
                        r[c] = r[c] || [], a[c] = a[c] || {
                            min0: Number.POSITIVE_INFINITY,
                            min1: Number.POSITIVE_INFINITY,
                            max0: Number.NEGATIVE_INFINITY,
                            max1: Number.NEGATIVE_INFINITY,
                            sum0: 0,
                            sum1: 0,
                            counter0: 0,
                            counter1: 0,
                            average0: 0,
                            average1: 0
                        };
                        for (var V = 0, U = p.data.length; U > V; V++) {
                            var f = p.data[V], _ = this.getDataFromOption(f, "-");
                            if (_ instanceof Array) {
                                var g = i.getCoord(_[0]), y = m.getCoord(_[1]);
                                r[c].push([g, y, V, _[0], g, u]), a[c].min0 > _[0] && (a[c].min0 = _[0], a[c].minY0 = y, a[c].minX0 = g), a[c].max0 < _[0] && (a[c].max0 = _[0], a[c].maxY0 = y, a[c].maxX0 = g), a[c].sum0 += _[0], a[c].counter0++, a[c].min1 > _[1] && (a[c].min1 = _[1], a[c].minY1 = y, a[c].minX1 = g), a[c].max1 < _[1] && (a[c].max1 = _[1], a[c].maxY1 = y, a[c].maxX1 = g), a[c].sum1 += _[1], a[c].counter1++
                            }
                        }
                    }
                    for (var b in r)r[b].length > 0 && (this.finalPLMap[b] = this.finalPLMap[b] || [], this.finalPLMap[b].push(r[b]), r[b] = []);
                    this._calculMarkMapXY(a, n, "xy"), this._buildBorkenLine(e, this.finalPLMap, i, "other")
                }, _buildBorkenLine: function (e, t, n, a) {
                    for (var o, s = "other" == a ? "horizontal" : a, c = this.series, p = e.length - 1; p >= 0; p--) {
                        var m = e[p], u = c[m], V = t[m];
                        if (u.type === this.type && null != V)for (var U = this._getBbox(m, s), f = this._sIndex2ColorMap[m], _ = this.query(u, "itemStyle.normal.lineStyle.width"), g = this.query(u, "itemStyle.normal.lineStyle.type"), y = this.query(u, "itemStyle.normal.lineStyle.color"), b = this.getItemStyleColor(this.query(u, "itemStyle.normal.color"), m, -1), k = null != this.query(u, "itemStyle.normal.areaStyle"), x = this.query(u, "itemStyle.normal.areaStyle.color"), v = 0, L = V.length; L > v; v++) {
                            var w = V[v], W = "other" != a && this._isLarge(s, w);
                            if (W)w = this._getLargePointList(s, w, u.dataFilter); else for (var X = 0, I = w.length; I > X; X++)o = u.data[w[X][2]], (this.deepQuery([o, u, this.option], "calculable") || this.deepQuery([o, u], "showAllSymbol") || "categoryAxis" === n.type && n.isMainAxis(w[X][2]) && "none" != this.deepQuery([o, u], "symbol")) && this.shapeList.push(this._getSymbol(m, w[X][2], w[X][3], w[X][0], w[X][1], s));
                            var K = new i({
                                zlevel: u.zlevel,
                                z: u.z,
                                style: {
                                    miterLimit: _,
                                    pointList: w,
                                    strokeColor: y || b || f,
                                    lineWidth: _,
                                    lineType: g,
                                    smooth: this._getSmooth(u.smooth),
                                    smoothConstraint: U,
                                    shadowColor: this.query(u, "itemStyle.normal.lineStyle.shadowColor"),
                                    shadowBlur: this.query(u, "itemStyle.normal.lineStyle.shadowBlur"),
                                    shadowOffsetX: this.query(u, "itemStyle.normal.lineStyle.shadowOffsetX"),
                                    shadowOffsetY: this.query(u, "itemStyle.normal.lineStyle.shadowOffsetY")
                                },
                                hoverable: !1,
                                _main: !0,
                                _seriesIndex: m,
                                _orient: s
                            });
                            if (l.pack(K, c[m], m, 0, v, c[m].name), this.shapeList.push(K), k) {
                                var S = new r({
                                    zlevel: u.zlevel,
                                    z: u.z,
                                    style: {
                                        miterLimit: _,
                                        pointList: h.clone(w).concat([[w[w.length - 1][4], w[w.length - 1][5]], [w[0][4], w[0][5]]]),
                                        brushType: "fill",
                                        smooth: this._getSmooth(u.smooth),
                                        smoothConstraint: U,
                                        color: x ? x : d.alpha(f, .5)
                                    },
                                    highlightStyle: {brushType: "fill"},
                                    hoverable: !1,
                                    _main: !0,
                                    _seriesIndex: m,
                                    _orient: s
                                });
                                l.pack(S, c[m], m, 0, v, c[m].name), this.shapeList.push(S)
                            }
                        }
                    }
                }, _getBbox: function (e, t) {
                    var n = this.component.grid.getBbox(), a = this.xMarkMap[e];
                    return null != a.minX0 ? [[Math.min(a.minX0, a.maxX0, a.minX1, a.maxX1), Math.min(a.minY0, a.maxY0, a.minY1, a.maxY1)], [Math.max(a.minX0, a.maxX0, a.minX1, a.maxX1), Math.max(a.minY0, a.maxY0, a.minY1, a.maxY1)]] : ("horizontal" === t ? (n[0][1] = Math.min(a.minY, a.maxY), n[1][1] = Math.max(a.minY, a.maxY)) : (n[0][0] = Math.min(a.minX, a.maxX), n[1][0] = Math.max(a.minX, a.maxX)), n)
                }, _isLarge: function (e, t) {
                    return t.length < 2 ? !1 : "horizontal" === e ? Math.abs(t[0][0] - t[1][0]) < .5 : Math.abs(t[0][1] - t[1][1]) < .5
                }, _getLargePointList: function (e, t, n) {
                    var a;
                    a = "horizontal" === e ? this.component.grid.getWidth() : this.component.grid.getHeight();
                    var i = t.length, o = [];
                    if ("function" != typeof n)switch (n) {
                        case"min":
                            n = function (e) {
                                return Math.max.apply(null, e)
                            };
                            break;
                        case"max":
                            n = function (e) {
                                return Math.min.apply(null, e)
                            };
                            break;
                        case"average":
                            n = function (e) {
                                for (var t = 0, n = 0; n < e.length; n++)t += e[n];
                                return t / e.length
                            };
                            break;
                        default:
                            n = function (e) {
                                return e[0]
                            }
                    }
                    for (var r = [], s = 0; a > s; s++) {
                        var l = Math.floor(i / a * s), h = Math.min(Math.floor(i / a * (s + 1)), i);
                        if (!(l >= h)) {
                            for (var d = l; h > d; d++)r[d - l] = "horizontal" === e ? t[d][1] : t[d][0];
                            r.length = h - l;
                            for (var c = n(r), p = -1, m = 1 / 0, d = l; h > d; d++) {
                                var u = "horizontal" === e ? t[d][1] : t[d][0], V = Math.abs(u - c);
                                m > V && (p = d, m = V)
                            }
                            var U = t[p].slice();
                            "horizontal" === e ? U[1] = c : U[0] = c, o.push(U)
                        }
                    }
                    return o
                }, _getSmooth: function (e) {
                    return e ? .3 : 0
                }, _getCalculableItem: function (e, t, n, a, i, o) {
                    var r = this.series, l = r[e].calculableHolderColor || this.ecTheme.calculableHolderColor || s.calculableHolderColor, h = this._getSymbol(e, t, n, a, i, o);
                    return h.style.color = l, h.style.strokeColor = l, h.rotation = [0, 0], h.hoverable = !1, h.draggable = !1, h.style.text = void 0, h
                }, _getSymbol: function (e, t, n, a, i, o) {
                    var r = this.series, s = r[e], l = s.data[t], h = this.getSymbolShape(s, e, l, t, n, a, i, this._sIndex2ShapeMap[e], this._sIndex2ColorMap[e], "#fff", "vertical" === o ? "horizontal" : "vertical");
                    return h.zlevel = s.zlevel, h.z = s.z + 1, this.deepQuery([l, s, this.option], "calculable") && (this.setCalculable(h), h.draggable = !0), h
                }, getMarkCoord: function (e, t) {
                    var n = this.series[e], a = this.xMarkMap[e], i = this.component.xAxis.getAxis(n.xAxisIndex), o = this.component.yAxis.getAxis(n.yAxisIndex);
                    if (t.type && ("max" === t.type || "min" === t.type || "average" === t.type)) {
                        var r = null != t.valueIndex ? t.valueIndex : null != a.maxX0 ? "1" : "";
                        return [a[t.type + "X" + r], a[t.type + "Y" + r], a[t.type + "Line" + r], a[t.type + r]]
                    }
                    return ["string" != typeof t.xAxis && i.getCoordByIndex ? i.getCoordByIndex(t.xAxis || 0) : i.getCoord(t.xAxis || 0), "string" != typeof t.yAxis && o.getCoordByIndex ? o.getCoordByIndex(t.yAxis || 0) : o.getCoord(t.yAxis || 0)]
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }, ontooltipHover: function (e, t) {
                    for (var n, a, i = e.seriesIndex, o = e.dataIndex, r = i.length; r--;)if (n = this.finalPLMap[i[r]])for (var s = 0, l = n.length; l > s; s++) {
                        a = n[s];
                        for (var h = 0, d = a.length; d > h; h++)o === a[h][2] && t.push(this._getSymbol(i[r], a[h][2], a[h][3], a[h][0], a[h][1], "horizontal"))
                    }
                }, addDataAnimation: function (e, t) {
                    function n() {
                        V--, 0 === V && t && t()
                    }

                    function a(e) {
                        e.style.controlPointList = null
                    }

                    for (var i = this.series, o = {}, r = 0, s = e.length; s > r; r++)o[e[r][0]] = e[r];
                    for (var l, h, d, c, p, m, u, V = 0, r = this.shapeList.length - 1; r >= 0; r--)if (p = this.shapeList[r]._seriesIndex, o[p] && !o[p][3]) {
                        if (this.shapeList[r]._main && this.shapeList[r].style.pointList.length > 1) {
                            if (m = this.shapeList[r].style.pointList, h = Math.abs(m[0][0] - m[1][0]), c = Math.abs(m[0][1] - m[1][1]), u = "horizontal" === this.shapeList[r]._orient, o[p][2]) {
                                if ("half-smooth-polygon" === this.shapeList[r].type) {
                                    var U = m.length;
                                    this.shapeList[r].style.pointList[U - 3] = m[U - 2], this.shapeList[r].style.pointList[U - 3][u ? 0 : 1] = m[U - 4][u ? 0 : 1], this.shapeList[r].style.pointList[U - 2] = m[U - 1]
                                }
                                this.shapeList[r].style.pointList.pop(), u ? (l = h, d = 0) : (l = 0, d = -c)
                            } else {
                                if (this.shapeList[r].style.pointList.shift(), "half-smooth-polygon" === this.shapeList[r].type) {
                                    var f = this.shapeList[r].style.pointList.pop();
                                    u ? f[0] = m[0][0] : f[1] = m[0][1], this.shapeList[r].style.pointList.push(f)
                                }
                                u ? (l = -h, d = 0) : (l = 0, d = c)
                            }
                            this.shapeList[r].style.controlPointList = null, this.zr.modShape(this.shapeList[r])
                        } else {
                            if (o[p][2] && this.shapeList[r]._dataIndex === i[p].data.length - 1) {
                                this.zr.delShape(this.shapeList[r].id);
                                continue
                            }
                            if (!o[p][2] && 0 === this.shapeList[r]._dataIndex) {
                                this.zr.delShape(this.shapeList[r].id);
                                continue
                            }
                        }
                        this.shapeList[r].position = [0, 0], V++, this.zr.animate(this.shapeList[r].id, "").when(this.query(this.option, "animationDurationUpdate"), {position: [l, d]}).during(a).done(n).start()
                    }
                    V || t && t()
                }
            }, o.prototype.iconLibrary.legendLineIcon = n, h.inherits(t, a), e("../chart").define("line", t), t
        }), n("echarts/util/shape/HalfSmoothPolygon", ["require", "zrender/shape/Base", "zrender/shape/util/smoothBezier", "zrender/tool/util", "zrender/shape/Polygon"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("zrender/shape/util/smoothBezier"), i = e("zrender/tool/util");
            return t.prototype = {
                type: "half-smooth-polygon", buildPath: function (t, n) {
                    var i = n.pointList;
                    if (!(i.length < 2))if (n.smooth) {
                        var o = a(i.slice(0, -2), n.smooth, !1, n.smoothConstraint);
                        t.moveTo(i[0][0], i[0][1]);
                        for (var r, s, l, h = i.length, d = 0; h - 3 > d; d++)r = o[2 * d], s = o[2 * d + 1], l = i[d + 1], t.bezierCurveTo(r[0], r[1], s[0], s[1], l[0], l[1]);
                        t.lineTo(i[h - 2][0], i[h - 2][1]), t.lineTo(i[h - 1][0], i[h - 1][1]), t.lineTo(i[0][0], i[0][1])
                    } else e("zrender/shape/Polygon").prototype.buildPath(t, n)
                }
            }, i.inherits(t, n), t
        }), n("echarts/chart/bar", ["require", "./base", "zrender/shape/Rectangle", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Rectangle");
            e("../component/axis"), e("../component/grid"), e("../component/dataZoom");
            var i = e("../config");
            i.bar = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                xAxisIndex: 0,
                yAxisIndex: 0,
                barMinHeight: 0,
                barGap: "30%",
                barCategoryGap: "20%",
                itemStyle: {
                    normal: {barBorderColor: "#fff", barBorderRadius: 0, barBorderWidth: 0, label: {show: !1}},
                    emphasis: {barBorderColor: "#fff", barBorderRadius: 0, barBorderWidth: 0, label: {show: !1}}
                }
            };
            var o = e("../util/ecData"), r = e("zrender/tool/util"), s = e("zrender/tool/color");
            return t.prototype = {
                type: i.CHART_TYPE_BAR, _buildShape: function () {
                    this._buildPosition()
                }, _buildNormal: function (e, t, n, o, r) {
                    for (var s, l, h, d, c, p, m, u, V, U, f, _, g = this.series, y = n[0][0], b = g[y], k = "horizontal" == r, x = this.component.xAxis, v = this.component.yAxis, L = k ? x.getAxis(b.xAxisIndex) : v.getAxis(b.yAxisIndex), w = this._mapSize(L, n), W = w.gap, X = w.barGap, I = w.barWidthMap, K = w.barMaxWidthMap, S = w.barWidth, C = w.barMinHeightMap, E = w.interval, J = this.deepQuery([this.ecTheme, i], "island.r"), T = 0, M = t; M > T && null != L.getNameByIndex(T); T++) {
                        k ? d = L.getCoordByIndex(T) - W / 2 : c = L.getCoordByIndex(T) + W / 2;
                        for (var A = 0, F = n.length; F > A; A++) {
                            var z = g[n[A][0]].yAxisIndex || 0, O = g[n[A][0]].xAxisIndex || 0;
                            s = k ? v.getAxis(z) : x.getAxis(O), m = p = V = u = s.getCoord(0);
                            for (var P = 0, D = n[A].length; D > P; P++)y = n[A][P], b = g[y], f = b.data[T], _ = this.getDataFromOption(f, "-"), o[y] = o[y] || {
                                min: Number.POSITIVE_INFINITY,
                                max: Number.NEGATIVE_INFINITY,
                                sum: 0,
                                counter: 0,
                                average: 0
                            }, h = Math.min(K[y] || Number.MAX_VALUE, I[y] || S), "-" !== _ && (_ > 0 ? (l = P > 0 ? s.getCoordSize(_) : k ? m - s.getCoord(_) : s.getCoord(_) - m, 1 === D && C[y] > l && (l = C[y]), k ? (p -= l, c = p) : (d = p, p += l)) : 0 > _ ? (l = P > 0 ? s.getCoordSize(_) : k ? s.getCoord(_) - V : V - s.getCoord(_), 1 === D && C[y] > l && (l = C[y]), k ? (c = u, u += l) : (u -= l, d = u)) : (l = 0, k ? (p -= l, c = p) : (d = p, p += l)), o[y][T] = k ? d + h / 2 : c - h / 2, o[y].min > _ && (o[y].min = _, k ? (o[y].minY = c, o[y].minX = o[y][T]) : (o[y].minX = d + l, o[y].minY = o[y][T])), o[y].max < _ && (o[y].max = _, k ? (o[y].maxY = c, o[y].maxX = o[y][T]) : (o[y].maxX = d + l, o[y].maxY = o[y][T])), o[y].sum += _, o[y].counter++, T % E === 0 && (U = this._getBarItem(y, T, L.getNameByIndex(T), d, c - (k ? 0 : h), k ? h : l, k ? l : h, k ? "vertical" : "horizontal"), this.shapeList.push(new a(U))));
                            for (var P = 0, D = n[A].length; D > P; P++)y = n[A][P], b = g[y], f = b.data[T], _ = this.getDataFromOption(f, "-"), h = Math.min(K[y] || Number.MAX_VALUE, I[y] || S), "-" == _ && this.deepQuery([f, b, this.option], "calculable") && (k ? (p -= J, c = p) : (d = p, p += J), U = this._getBarItem(y, T, L.getNameByIndex(T), d, c - (k ? 0 : h), k ? h : J, k ? J : h, k ? "vertical" : "horizontal"), U.hoverable = !1, U.draggable = !1, U.style.lineWidth = 1, U.style.brushType = "stroke", U.style.strokeColor = b.calculableHolderColor || this.ecTheme.calculableHolderColor || i.calculableHolderColor, this.shapeList.push(new a(U)));
                            k ? d += h + X : c -= h + X
                        }
                    }
                    this._calculMarkMapXY(o, n, k ? "y" : "x")
                }, _buildHorizontal: function (e, t, n, a) {
                    return this._buildNormal(e, t, n, a, "horizontal")
                }, _buildVertical: function (e, t, n, a) {
                    return this._buildNormal(e, t, n, a, "vertical")
                }, _buildOther: function (e, t, n, i) {
                    for (var o = this.series, r = 0, s = n.length; s > r; r++)for (var l = 0, h = n[r].length; h > l; l++) {
                        var d = n[r][l], c = o[d], p = c.xAxisIndex || 0, m = this.component.xAxis.getAxis(p), u = m.getCoord(0), V = c.yAxisIndex || 0, U = this.component.yAxis.getAxis(V), f = U.getCoord(0);
                        i[d] = i[d] || {
                            min0: Number.POSITIVE_INFINITY,
                            min1: Number.POSITIVE_INFINITY,
                            max0: Number.NEGATIVE_INFINITY,
                            max1: Number.NEGATIVE_INFINITY,
                            sum0: 0,
                            sum1: 0,
                            counter0: 0,
                            counter1: 0,
                            average0: 0,
                            average1: 0
                        };
                        for (var _ = 0, g = c.data.length; g > _; _++) {
                            var y = c.data[_], b = this.getDataFromOption(y, "-");
                            if (b instanceof Array) {
                                var k, x, v = m.getCoord(b[0]), L = U.getCoord(b[1]), w = [y, c], W = this.deepQuery(w, "barWidth") || 10, X = this.deepQuery(w, "barHeight");
                                null != X ? (k = "horizontal", b[0] > 0 ? (W = v - u, v -= W) : W = b[0] < 0 ? u - v : 0, x = this._getBarItem(d, _, b[0], v, L - X / 2, W, X, k)) : (k = "vertical", b[1] > 0 ? X = f - L : b[1] < 0 ? (X = L - f, L -= X) : X = 0, x = this._getBarItem(d, _, b[0], v - W / 2, L, W, X, k)), this.shapeList.push(new a(x)), v = m.getCoord(b[0]), L = U.getCoord(b[1]), i[d].min0 > b[0] && (i[d].min0 = b[0], i[d].minY0 = L, i[d].minX0 = v), i[d].max0 < b[0] && (i[d].max0 = b[0], i[d].maxY0 = L, i[d].maxX0 = v), i[d].sum0 += b[0], i[d].counter0++, i[d].min1 > b[1] && (i[d].min1 = b[1], i[d].minY1 = L, i[d].minX1 = v), i[d].max1 < b[1] && (i[d].max1 = b[1], i[d].maxY1 = L, i[d].maxX1 = v), i[d].sum1 += b[1], i[d].counter1++
                            }
                        }
                    }
                    this._calculMarkMapXY(i, n, "xy")
                }, _mapSize: function (e, t, n) {
                    var a, i, o = this._findSpecialBarSzie(t, n), r = o.barWidthMap, s = o.barMaxWidthMap, l = o.barMinHeightMap, h = o.sBarWidthCounter, d = o.sBarWidthTotal, c = o.barGap, p = o.barCategoryGap, m = 1;
                    if (t.length != h) {
                        if (n)a = e.getGap(), c = 0, i = +(a / t.length).toFixed(2), 0 >= i && (m = Math.floor(t.length / a), i = 1); else if (a = "string" == typeof p && p.match(/%$/) ? (e.getGap() * (100 - parseFloat(p)) / 100).toFixed(2) - 0 : e.getGap() - p, "string" == typeof c && c.match(/%$/) ? (c = parseFloat(c) / 100, i = +((a - d) / ((t.length - 1) * c + t.length - h)).toFixed(2), c = i * c) : (c = parseFloat(c), i = +((a - d - c * (t.length - 1)) / (t.length - h)).toFixed(2)), 0 >= i)return this._mapSize(e, t, !0)
                    } else if (a = h > 1 ? "string" == typeof p && p.match(/%$/) ? +(e.getGap() * (100 - parseFloat(p)) / 100).toFixed(2) : e.getGap() - p : d, i = 0, c = h > 1 ? +((a - d) / (h - 1)).toFixed(2) : 0, 0 > c)return this._mapSize(e, t, !0);
                    return this._recheckBarMaxWidth(t, r, s, l, a, i, c, m)
                }, _findSpecialBarSzie: function (e, t) {
                    for (var n, a, i, o, r = this.series, s = {}, l = {}, h = {}, d = 0, c = 0, p = 0, m = e.length; m > p; p++)for (var u = {
                        barWidth: !1,
                        barMaxWidth: !1
                    }, V = 0, U = e[p].length; U > V; V++) {
                        var f = e[p][V], _ = r[f];
                        if (!t) {
                            if (u.barWidth)s[f] = n; else if (n = this.query(_, "barWidth"), null != n) {
                                s[f] = n, c += n, d++, u.barWidth = !0;
                                for (var g = 0, y = V; y > g; g++) {
                                    var b = e[p][g];
                                    s[b] = n
                                }
                            }
                            if (u.barMaxWidth)l[f] = a; else if (a = this.query(_, "barMaxWidth"), null != a) {
                                l[f] = a, u.barMaxWidth = !0;
                                for (var g = 0, y = V; y > g; g++) {
                                    var b = e[p][g];
                                    l[b] = a
                                }
                            }
                        }
                        h[f] = this.query(_, "barMinHeight"), i = null != i ? i : this.query(_, "barGap"), o = null != o ? o : this.query(_, "barCategoryGap")
                    }
                    return {
                        barWidthMap: s,
                        barMaxWidthMap: l,
                        barMinHeightMap: h,
                        sBarWidth: n,
                        sBarMaxWidth: a,
                        sBarWidthCounter: d,
                        sBarWidthTotal: c,
                        barGap: i,
                        barCategoryGap: o
                    }
                }, _recheckBarMaxWidth: function (e, t, n, a, i, o, r, s) {
                    for (var l = 0, h = e.length; h > l; l++) {
                        var d = e[l][0];
                        n[d] && n[d] < o && (i -= o - n[d])
                    }
                    return {
                        barWidthMap: t,
                        barMaxWidthMap: n,
                        barMinHeightMap: a,
                        gap: i,
                        barWidth: o,
                        barGap: r,
                        interval: s
                    }
                }, _getBarItem: function (e, t, n, a, i, r, l, h) {
                    var d, c = this.series, p = c[e], m = p.data[t], u = this._sIndex2ColorMap[e], V = [m, p], U = this.deepMerge(V, "itemStyle.normal"), f = this.deepMerge(V, "itemStyle.emphasis"), _ = U.barBorderWidth;
                    d = {
                        zlevel: p.zlevel,
                        z: p.z,
                        clickable: this.deepQuery(V, "clickable"),
                        style: {
                            x: a,
                            y: i,
                            width: r,
                            height: l,
                            brushType: "both",
                            color: this.getItemStyleColor(this.deepQuery(V, "itemStyle.normal.color") || u, e, t, m),
                            radius: U.barBorderRadius,
                            lineWidth: _,
                            strokeColor: U.barBorderColor
                        },
                        highlightStyle: {
                            color: this.getItemStyleColor(this.deepQuery(V, "itemStyle.emphasis.color"), e, t, m),
                            radius: f.barBorderRadius,
                            lineWidth: f.barBorderWidth,
                            strokeColor: f.barBorderColor
                        },
                        _orient: h
                    };
                    var g = d.style;
                    d.highlightStyle.color = d.highlightStyle.color || ("string" == typeof g.color ? s.lift(g.color, -.3) : g.color), g.x = Math.floor(g.x), g.y = Math.floor(g.y), g.height = Math.ceil(g.height), g.width = Math.ceil(g.width), _ > 0 && g.height > _ && g.width > _ ? (g.y += _ / 2, g.height -= _, g.x += _ / 2, g.width -= _) : g.brushType = "fill", d.highlightStyle.textColor = d.highlightStyle.color, d = this.addLabel(d, p, m, n, h);
                    for (var y = [g, d.highlightStyle], b = 0, k = y.length; k > b; b++) {
                        var x = y[b].textPosition;
                        if ("insideLeft" === x || "insideRight" === x || "insideTop" === x || "insideBottom" === x) {
                            var v = 5;
                            switch (x) {
                                case"insideLeft":
                                    y[b].textX = g.x + v, y[b].textY = g.y + g.height / 2, y[b].textAlign = "left", y[b].textBaseline = "middle";
                                    break;
                                case"insideRight":
                                    y[b].textX = g.x + g.width - v, y[b].textY = g.y + g.height / 2, y[b].textAlign = "right", y[b].textBaseline = "middle";
                                    break;
                                case"insideTop":
                                    y[b].textX = g.x + g.width / 2, y[b].textY = g.y + v / 2, y[b].textAlign = "center", y[b].textBaseline = "top";
                                    break;
                                case"insideBottom":
                                    y[b].textX = g.x + g.width / 2, y[b].textY = g.y + g.height - v / 2, y[b].textAlign = "center", y[b].textBaseline = "bottom"
                            }
                            y[b].textPosition = "specific", y[b].textColor = y[b].textColor || "#fff"
                        }
                    }
                    return this.deepQuery([m, p, this.option], "calculable") && (this.setCalculable(d), d.draggable = !0), o.pack(d, c[e], e, c[e].data[t], t, n), d
                }, getMarkCoord: function (e, t) {
                    var n, a, i = this.series[e], o = this.xMarkMap[e], r = this.component.xAxis.getAxis(i.xAxisIndex), s = this.component.yAxis.getAxis(i.yAxisIndex);
                    if (!t.type || "max" !== t.type && "min" !== t.type && "average" !== t.type)if (o.isHorizontal) {
                        n = "string" == typeof t.xAxis && r.getIndexByName ? r.getIndexByName(t.xAxis) : t.xAxis || 0;
                        var l = o[n];
                        l = null != l ? l : "string" != typeof t.xAxis && r.getCoordByIndex ? r.getCoordByIndex(t.xAxis || 0) : r.getCoord(t.xAxis || 0), a = [l, s.getCoord(t.yAxis || 0)]
                    } else {
                        n = "string" == typeof t.yAxis && s.getIndexByName ? s.getIndexByName(t.yAxis) : t.yAxis || 0;
                        var h = o[n];
                        h = null != h ? h : "string" != typeof t.yAxis && s.getCoordByIndex ? s.getCoordByIndex(t.yAxis || 0) : s.getCoord(t.yAxis || 0), a = [r.getCoord(t.xAxis || 0), h]
                    } else {
                        var d = null != t.valueIndex ? t.valueIndex : null != o.maxX0 ? "1" : "";
                        a = [o[t.type + "X" + d], o[t.type + "Y" + d], o[t.type + "Line" + d], o[t.type + d]]
                    }
                    return a
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }, addDataAnimation: function (e, t) {
                    function n() {
                        V--, 0 === V && t && t()
                    }

                    for (var a = this.series, i = {}, r = 0, s = e.length; s > r; r++)i[e[r][0]] = e[r];
                    for (var l, h, d, c, p, m, u, V = 0, r = this.shapeList.length - 1; r >= 0; r--)if (m = o.get(this.shapeList[r], "seriesIndex"), i[m] && !i[m][3] && "rectangle" === this.shapeList[r].type) {
                        if (u = o.get(this.shapeList[r], "dataIndex"), p = a[m], i[m][2] && u === p.data.length - 1) {
                            this.zr.delShape(this.shapeList[r].id);
                            continue
                        }
                        if (!i[m][2] && 0 === u) {
                            this.zr.delShape(this.shapeList[r].id);
                            continue
                        }
                        "horizontal" === this.shapeList[r]._orient ? (c = this.component.yAxis.getAxis(p.yAxisIndex || 0).getGap(), d = i[m][2] ? -c : c, l = 0) : (h = this.component.xAxis.getAxis(p.xAxisIndex || 0).getGap(), l = i[m][2] ? h : -h, d = 0), this.shapeList[r].position = [0, 0], V++, this.zr.animate(this.shapeList[r].id, "").when(this.query(this.option, "animationDurationUpdate"), {position: [l, d]}).done(n).start()
                    }
                    V || t && t()
                }
            }, r.inherits(t, n), e("../chart").define("bar", t), t
        }), n("echarts/chart/scatter", ["require", "./base", "../util/shape/Symbol", "../component/axis", "../component/grid", "../component/dataZoom", "../component/dataRange", "../config", "zrender/tool/util", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("../util/shape/Symbol");
            e("../component/axis"), e("../component/grid"), e("../component/dataZoom"), e("../component/dataRange");
            var i = e("../config");
            i.scatter = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                xAxisIndex: 0,
                yAxisIndex: 0,
                symbolSize: 4,
                large: !1,
                largeThreshold: 2e3,
                itemStyle: {normal: {label: {show: !1}}, emphasis: {label: {show: !1}}}
            };
            var o = e("zrender/tool/util"), r = e("zrender/tool/color");
            return t.prototype = {
                type: i.CHART_TYPE_SCATTER, _buildShape: function () {
                    var e = this.series;
                    this._sIndex2ColorMap = {}, this._symbol = this.option.symbolList, this._sIndex2ShapeMap = {}, this.selectedMap = {}, this.xMarkMap = {};
                    for (var t, n, a, o, s = this.component.legend, l = [], h = 0, d = e.length; d > h; h++)if (t = e[h], n = t.name, t.type === i.CHART_TYPE_SCATTER) {
                        if (e[h] = this.reformOption(e[h]), this.legendHoverLink = e[h].legendHoverLink || this.legendHoverLink, this._sIndex2ShapeMap[h] = this.query(t, "symbol") || this._symbol[h % this._symbol.length], s) {
                            if (this.selectedMap[n] = s.isSelected(n), this._sIndex2ColorMap[h] = r.alpha(s.getColor(n), .5), a = s.getItemShape(n)) {
                                var o = this._sIndex2ShapeMap[h];
                                a.style.brushType = o.match("empty") ? "stroke" : "both", o = o.replace("empty", "").toLowerCase(), o.match("rectangle") && (a.style.x += Math.round((a.style.width - a.style.height) / 2), a.style.width = a.style.height), o.match("star") && (a.style.n = o.replace("star", "") - 0 || 5, o = "star"), o.match("image") && (a.style.image = o.replace(new RegExp("^image:\\/\\/"), ""), a.style.x += Math.round((a.style.width - a.style.height) / 2), a.style.width = a.style.height, o = "image"), a.style.iconType = o, s.setItemShape(n, a)
                            }
                        } else this.selectedMap[n] = !0, this._sIndex2ColorMap[h] = r.alpha(this.zr.getColor(h), .5);
                        this.selectedMap[n] && l.push(h)
                    }
                    this._buildSeries(l), this.addShapeList()
                }, _buildSeries: function (e) {
                    if (0 !== e.length) {
                        for (var t, n, a, i, o, r, s, l, h = this.series, d = {}, c = 0, p = e.length; p > c; c++)if (t = e[c], n = h[t], 0 !== n.data.length) {
                            o = this.component.xAxis.getAxis(n.xAxisIndex || 0), r = this.component.yAxis.getAxis(n.yAxisIndex || 0), d[t] = [];
                            for (var m = 0, u = n.data.length; u > m; m++)a = n.data[m], i = this.getDataFromOption(a, "-"), "-" === i || i.length < 2 || (s = o.getCoord(i[0]), l = r.getCoord(i[1]), d[t].push([s, l, m, a.name || ""]));
                            this.xMarkMap[t] = this._markMap(o, r, n.data, d[t]), this.buildMark(t)
                        }
                        this._buildPointList(d)
                    }
                }, _markMap: function (e, t, n, a) {
                    for (var i, o = {
                        min0: Number.POSITIVE_INFINITY,
                        max0: Number.NEGATIVE_INFINITY,
                        sum0: 0,
                        counter0: 0,
                        average0: 0,
                        min1: Number.POSITIVE_INFINITY,
                        max1: Number.NEGATIVE_INFINITY,
                        sum1: 0,
                        counter1: 0,
                        average1: 0
                    }, r = 0, s = a.length; s > r; r++)i = n[a[r][2]].value || n[a[r][2]], o.min0 > i[0] && (o.min0 = i[0], o.minY0 = a[r][1], o.minX0 = a[r][0]), o.max0 < i[0] && (o.max0 = i[0], o.maxY0 = a[r][1], o.maxX0 = a[r][0]), o.sum0 += i[0], o.counter0++, o.min1 > i[1] && (o.min1 = i[1], o.minY1 = a[r][1], o.minX1 = a[r][0]), o.max1 < i[1] && (o.max1 = i[1], o.maxY1 = a[r][1], o.maxX1 = a[r][0]), o.sum1 += i[1], o.counter1++;
                    var l = this.component.grid.getX(), h = this.component.grid.getXend(), d = this.component.grid.getY(), c = this.component.grid.getYend();
                    o.average0 = o.sum0 / o.counter0;
                    var p = e.getCoord(o.average0);
                    o.averageLine0 = [[p, c], [p, d]], o.minLine0 = [[o.minX0, c], [o.minX0, d]], o.maxLine0 = [[o.maxX0, c], [o.maxX0, d]], o.average1 = o.sum1 / o.counter1;
                    var m = t.getCoord(o.average1);
                    return o.averageLine1 = [[l, m], [h, m]], o.minLine1 = [[l, o.minY1], [h, o.minY1]], o.maxLine1 = [[l, o.maxY1], [h, o.maxY1]], o
                }, _buildPointList: function (e) {
                    var t, n, a, i, o = this.series;
                    for (var r in e)if (t = o[r], n = e[r], t.large && t.data.length > t.largeThreshold)this.shapeList.push(this._getLargeSymbol(t, n, this.getItemStyleColor(this.query(t, "itemStyle.normal.color"), r, -1) || this._sIndex2ColorMap[r])); else for (var s = 0, l = n.length; l > s; s++)a = n[s], i = this._getSymbol(r, a[2], a[3], a[0], a[1]), i && this.shapeList.push(i)
                }, _getSymbol: function (e, t, n, a, i) {
                    var o, r = this.series, s = r[e], l = s.data[t], h = this.component.dataRange;
                    if (h) {
                        if (o = isNaN(l[2]) ? this._sIndex2ColorMap[e] : h.getColor(l[2]), !o)return null
                    } else o = this._sIndex2ColorMap[e];
                    var d = this.getSymbolShape(s, e, l, t, n, a, i, this._sIndex2ShapeMap[e], o, "rgba(0,0,0,0)", "vertical");
                    return d.zlevel = s.zlevel, d.z = s.z, d._main = !0, d
                }, _getLargeSymbol: function (e, t, n) {
                    return new a({
                        zlevel: e.zlevel,
                        z: e.z,
                        _main: !0,
                        hoverable: !1,
                        style: {pointList: t, color: n, strokeColor: n},
                        highlightStyle: {pointList: []}
                    })
                }, getMarkCoord: function (e, t) {
                    var n, a = this.series[e], i = this.xMarkMap[e], o = this.component.xAxis.getAxis(a.xAxisIndex), r = this.component.yAxis.getAxis(a.yAxisIndex);
                    if (!t.type || "max" !== t.type && "min" !== t.type && "average" !== t.type)n = ["string" != typeof t.xAxis && o.getCoordByIndex ? o.getCoordByIndex(t.xAxis || 0) : o.getCoord(t.xAxis || 0), "string" != typeof t.yAxis && r.getCoordByIndex ? r.getCoordByIndex(t.yAxis || 0) : r.getCoord(t.yAxis || 0)]; else {
                        var s = null != t.valueIndex ? t.valueIndex : 1;
                        n = [i[t.type + "X" + s], i[t.type + "Y" + s], i[t.type + "Line" + s], i[t.type + s]]
                    }
                    return n
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }, ondataRange: function (e, t) {
                    this.component.dataRange && (this.refresh(), t.needRefresh = !0)
                }
            }, o.inherits(t, n), e("../chart").define("scatter", t), t
        }), n("echarts/component/dataRange", ["require", "./base", "zrender/shape/Text", "zrender/shape/Rectangle", "../util/shape/HandlePolygon", "../config", "zrender/tool/util", "zrender/tool/event", "zrender/tool/area", "zrender/tool/color", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o);
                var s = this;
                s._ondrift = function (e, t) {
                    return s.__ondrift(this, e, t)
                }, s._ondragend = function () {
                    return s.__ondragend()
                }, s._dataRangeSelected = function (e) {
                    return s.__dataRangeSelected(e)
                }, s._dispatchHoverLink = function (e) {
                    return s.__dispatchHoverLink(e)
                }, s._onhoverlink = function (e) {
                    return s.__onhoverlink(e)
                }, this._selectedMap = {}, this._range = {}, this.refresh(i), t.bind(r.EVENT.HOVER, this._onhoverlink)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Rectangle"), o = e("../util/shape/HandlePolygon"), r = e("../config");
            r.dataRange = {
                zlevel: 0,
                z: 4,
                show: !0,
                orient: "vertical",
                x: "left",
                y: "bottom",
                backgroundColor: "rgba(0,0,0,0)",
                borderColor: "#ccc",
                borderWidth: 0,
                padding: 5,
                itemGap: 10,
                itemWidth: 20,
                itemHeight: 14,
                precision: 0,
                splitNumber: 5,
                splitList: null,
                calculable: !1,
                selectedMode: !0,
                hoverLink: !0,
                realtime: !0,
                color: ["#006edd", "#e0ffff"],
                textStyle: {color: "#333"}
            };
            var s = e("zrender/tool/util"), l = e("zrender/tool/event"), h = e("zrender/tool/area"), d = e("zrender/tool/color");
            return t.prototype = {
                type: r.COMPONENT_TYPE_DATARANGE, _textGap: 10, _buildShape: function () {
                    if (this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._isContinuity() ? this._buildGradient() : this._buildItem(), this.dataRangeOption.show)for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e]);
                    this._syncShapeFromRange()
                }, _buildItem: function () {
                    var e, t, n, o, r = this._valueTextList, s = r.length, l = this.getFont(this.dataRangeOption.textStyle), d = this._itemGroupLocation.x, c = this._itemGroupLocation.y, p = this.dataRangeOption.itemWidth, m = this.dataRangeOption.itemHeight, u = this.dataRangeOption.itemGap, V = h.getTextHeight("国", l);
                    "vertical" == this.dataRangeOption.orient && "right" == this.dataRangeOption.x && (d = this._itemGroupLocation.x + this._itemGroupLocation.width - p);
                    var U = !0;
                    this.dataRangeOption.text && (U = !1, this.dataRangeOption.text[0] && (n = this._getTextShape(d, c, this.dataRangeOption.text[0]), "horizontal" == this.dataRangeOption.orient ? d += h.getTextWidth(this.dataRangeOption.text[0], l) + this._textGap : (c += V + this._textGap, n.style.y += V / 2 + this._textGap, n.style.textBaseline = "bottom"), this.shapeList.push(new a(n))));
                    for (var f = 0; s > f; f++)e = r[f], o = this.getColorByIndex(f), t = this._getItemShape(d, c, p, m, this._selectedMap[f] ? o : "#ccc"), t._idx = f, t.onmousemove = this._dispatchHoverLink, this.dataRangeOption.selectedMode && (t.clickable = !0, t.onclick = this._dataRangeSelected), this.shapeList.push(new i(t)), U && (n = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            x: d + p + 5,
                            y: c,
                            color: this._selectedMap[f] ? this.dataRangeOption.textStyle.color : "#ccc",
                            text: r[f],
                            textFont: l,
                            textBaseline: "top"
                        },
                        highlightStyle: {brushType: "fill"}
                    }, "vertical" == this.dataRangeOption.orient && "right" == this.dataRangeOption.x && (n.style.x -= p + 10, n.style.textAlign = "right"), n._idx = f, n.onmousemove = this._dispatchHoverLink, this.dataRangeOption.selectedMode && (n.clickable = !0, n.onclick = this._dataRangeSelected), this.shapeList.push(new a(n))), "horizontal" == this.dataRangeOption.orient ? d += p + (U ? 5 : 0) + (U ? h.getTextWidth(e, l) : 0) + u : c += m + u;
                    !U && this.dataRangeOption.text[1] && ("horizontal" == this.dataRangeOption.orient ? d = d - u + this._textGap : c = c - u + this._textGap, n = this._getTextShape(d, c, this.dataRangeOption.text[1]), "horizontal" != this.dataRangeOption.orient && (n.style.y -= 5, n.style.textBaseline = "top"), this.shapeList.push(new a(n)))
                }, _buildGradient: function () {
                    var t, n, o = this.getFont(this.dataRangeOption.textStyle), r = this._itemGroupLocation.x, s = this._itemGroupLocation.y, l = this.dataRangeOption.itemWidth, d = this.dataRangeOption.itemHeight, c = h.getTextHeight("国", o), p = 10, m = !0;
                    this.dataRangeOption.text && (m = !1, this.dataRangeOption.text[0] && (n = this._getTextShape(r, s, this.dataRangeOption.text[0]), "horizontal" == this.dataRangeOption.orient ? r += h.getTextWidth(this.dataRangeOption.text[0], o) + this._textGap : (s += c + this._textGap, n.style.y += c / 2 + this._textGap, n.style.textBaseline = "bottom"), this.shapeList.push(new a(n))));
                    for (var u = e("zrender/tool/color"), V = 1 / (this.dataRangeOption.color.length - 1), U = [], f = 0, _ = this.dataRangeOption.color.length; _ > f; f++)U.push([f * V, this.dataRangeOption.color[f]]);
                    "horizontal" == this.dataRangeOption.orient ? (t = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {x: r, y: s, width: l * p, height: d, color: u.getLinearGradient(r, s, r + l * p, s, U)},
                        hoverable: !1
                    }, r += l * p + this._textGap) : (t = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {x: r, y: s, width: l, height: d * p, color: u.getLinearGradient(r, s, r, s + d * p, U)},
                        hoverable: !1
                    }, s += d * p + this._textGap), this.shapeList.push(new i(t)), this._calculableLocation = t.style, this.dataRangeOption.calculable && (this._buildFiller(), this._bulidMask(), this._bulidHandle()), this._buildIndicator(), !m && this.dataRangeOption.text[1] && (n = this._getTextShape(r, s, this.dataRangeOption.text[1]), this.shapeList.push(new a(n)))
                }, _buildIndicator: function () {
                    var e, t, n = this._calculableLocation.x, a = this._calculableLocation.y, i = this._calculableLocation.width, r = this._calculableLocation.height, s = 5;
                    "horizontal" == this.dataRangeOption.orient ? "bottom" != this.dataRangeOption.y ? (e = [[n, a + r], [n - s, a + r + s], [n + s, a + r + s]], t = "bottom") : (e = [[n, a], [n - s, a - s], [n + s, a - s]], t = "top") : "right" != this.dataRangeOption.x ? (e = [[n + i, a], [n + i + s, a - s], [n + i + s, a + s]], t = "right") : (e = [[n, a], [n - s, a - s], [n - s, a + s]], t = "left"), this._indicatorShape = {
                        style: {
                            pointList: e,
                            color: "#fff",
                            __rect: {
                                x: Math.min(e[0][0], e[1][0]),
                                y: Math.min(e[0][1], e[1][1]),
                                width: s * ("horizontal" == this.dataRangeOption.orient ? 2 : 1),
                                height: s * ("horizontal" == this.dataRangeOption.orient ? 1 : 2)
                            }
                        },
                        highlightStyle: {
                            brushType: "fill",
                            textPosition: t,
                            textColor: this.dataRangeOption.textStyle.color
                        },
                        hoverable: !1
                    }, this._indicatorShape = new o(this._indicatorShape)
                }, _buildFiller: function () {
                    this._fillerShape = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase() + 1,
                        style: {
                            x: this._calculableLocation.x,
                            y: this._calculableLocation.y,
                            width: this._calculableLocation.width,
                            height: this._calculableLocation.height,
                            color: "rgba(255,255,255,0)"
                        },
                        highlightStyle: {strokeColor: "rgba(255,255,255,0.5)", lineWidth: 1},
                        draggable: !0,
                        ondrift: this._ondrift,
                        ondragend: this._ondragend,
                        onmousemove: this._dispatchHoverLink,
                        _type: "filler"
                    }, this._fillerShape = new i(this._fillerShape), this.shapeList.push(this._fillerShape)
                }, _bulidHandle: function () {
                    var e, t, n, a, i, r, s, l, d = this._calculableLocation.x, c = this._calculableLocation.y, p = this._calculableLocation.width, m = this._calculableLocation.height, u = this.getFont(this.dataRangeOption.textStyle), V = h.getTextHeight("国", u), U = Math.max(h.getTextWidth(this._textFormat(this.dataRangeOption.max), u), h.getTextWidth(this._textFormat(this.dataRangeOption.min), u)) + 2;
                    "horizontal" == this.dataRangeOption.orient ? "bottom" != this.dataRangeOption.y ? (e = [[d, c], [d, c + m + V], [d - V, c + m + V], [d - 1, c + m], [d - 1, c]], t = d - U / 2 - V, n = c + m + V / 2 + 2, a = {
                        x: d - U - V,
                        y: c + m,
                        width: U + V,
                        height: V
                    }, i = [[d + p, c], [d + p, c + m + V], [d + p + V, c + m + V], [d + p + 1, c + m], [d + p + 1, c]], r = d + p + U / 2 + V, s = n, l = {
                        x: d + p,
                        y: c + m,
                        width: U + V,
                        height: V
                    }) : (e = [[d, c + m], [d, c - V], [d - V, c - V], [d - 1, c], [d - 1, c + m]], t = d - U / 2 - V, n = c - V / 2 - 2, a = {
                        x: d - U - V,
                        y: c - V,
                        width: U + V,
                        height: V
                    }, i = [[d + p, c + m], [d + p, c - V], [d + p + V, c - V], [d + p + 1, c], [d + p + 1, c + m]], r = d + p + U / 2 + V, s = n, l = {
                        x: d + p,
                        y: c - V,
                        width: U + V,
                        height: V
                    }) : (U += V, "right" != this.dataRangeOption.x ? (e = [[d, c], [d + p + V, c], [d + p + V, c - V], [d + p, c - 1], [d, c - 1]], t = d + p + U / 2 + V / 2, n = c - V / 2, a = {
                        x: d + p,
                        y: c - V,
                        width: U + V,
                        height: V
                    }, i = [[d, c + m], [d + p + V, c + m], [d + p + V, c + V + m], [d + p, c + 1 + m], [d, c + m + 1]], r = t, s = c + m + V / 2, l = {
                        x: d + p,
                        y: c + m,
                        width: U + V,
                        height: V
                    }) : (e = [[d + p, c], [d - V, c], [d - V, c - V], [d, c - 1], [d + p, c - 1]], t = d - U / 2 - V / 2, n = c - V / 2, a = {
                        x: d - U - V,
                        y: c - V,
                        width: U + V,
                        height: V
                    }, i = [[d + p, c + m], [d - V, c + m], [d - V, c + V + m], [d, c + 1 + m], [d + p, c + m + 1]], r = t, s = c + m + V / 2, l = {
                        x: d - U - V,
                        y: c + m,
                        width: U + V,
                        height: V
                    })), this._startShape = {
                        style: {
                            pointList: e,
                            text: this._textFormat(this.dataRangeOption.max),
                            textX: t,
                            textY: n,
                            textFont: u,
                            color: this.getColor(this.dataRangeOption.max),
                            rect: a,
                            x: e[0][0],
                            y: e[0][1],
                            _x: e[0][0],
                            _y: e[0][1]
                        }
                    }, this._startShape.highlightStyle = {
                        strokeColor: this._startShape.style.color,
                        lineWidth: 1
                    }, this._endShape = {
                        style: {
                            pointList: i,
                            text: this._textFormat(this.dataRangeOption.min),
                            textX: r,
                            textY: s,
                            textFont: u,
                            color: this.getColor(this.dataRangeOption.min),
                            rect: l,
                            x: i[0][0],
                            y: i[0][1],
                            _x: i[0][0],
                            _y: i[0][1]
                        }
                    }, this._endShape.highlightStyle = {
                        strokeColor: this._endShape.style.color,
                        lineWidth: 1
                    }, this._startShape.zlevel = this._endShape.zlevel = this.getZlevelBase(), this._startShape.z = this._endShape.z = this.getZBase() + 1, this._startShape.draggable = this._endShape.draggable = !0, this._startShape.ondrift = this._endShape.ondrift = this._ondrift, this._startShape.ondragend = this._endShape.ondragend = this._ondragend, this._startShape.style.textColor = this._endShape.style.textColor = this.dataRangeOption.textStyle.color, this._startShape.style.textAlign = this._endShape.style.textAlign = "center", this._startShape.style.textPosition = this._endShape.style.textPosition = "specific", this._startShape.style.textBaseline = this._endShape.style.textBaseline = "middle", this._startShape.style.width = this._endShape.style.width = 0, this._startShape.style.height = this._endShape.style.height = 0, this._startShape.style.textPosition = this._endShape.style.textPosition = "specific", this._startShape = new o(this._startShape), this._endShape = new o(this._endShape), this.shapeList.push(this._startShape), this.shapeList.push(this._endShape)
                }, _bulidMask: function () {
                    var e = this._calculableLocation.x, t = this._calculableLocation.y, n = this._calculableLocation.width, a = this._calculableLocation.height;
                    this._startMask = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase() + 1,
                        style: {
                            x: e,
                            y: t,
                            width: "horizontal" == this.dataRangeOption.orient ? 0 : n,
                            height: "horizontal" == this.dataRangeOption.orient ? a : 0,
                            color: "#ccc"
                        },
                        hoverable: !1
                    }, this._endMask = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase() + 1,
                        style: {
                            x: "horizontal" == this.dataRangeOption.orient ? e + n : e,
                            y: "horizontal" == this.dataRangeOption.orient ? t : t + a,
                            width: "horizontal" == this.dataRangeOption.orient ? 0 : n,
                            height: "horizontal" == this.dataRangeOption.orient ? a : 0,
                            color: "#ccc"
                        },
                        hoverable: !1
                    }, this._startMask = new i(this._startMask), this._endMask = new i(this._endMask), this.shapeList.push(this._startMask), this.shapeList.push(this._endMask)
                }, _buildBackground: function () {
                    var e = this.reformCssArray(this.dataRangeOption.padding);
                    this.shapeList.push(new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._itemGroupLocation.x - e[3],
                            y: this._itemGroupLocation.y - e[0],
                            width: this._itemGroupLocation.width + e[3] + e[1],
                            height: this._itemGroupLocation.height + e[0] + e[2],
                            brushType: 0 === this.dataRangeOption.borderWidth ? "fill" : "both",
                            color: this.dataRangeOption.backgroundColor,
                            strokeColor: this.dataRangeOption.borderColor,
                            lineWidth: this.dataRangeOption.borderWidth
                        }
                    }))
                }, _getItemGroupLocation: function () {
                    var e = this._valueTextList, t = e.length, n = this.dataRangeOption.itemGap, a = this.dataRangeOption.itemWidth, i = this.dataRangeOption.itemHeight, o = 0, r = 0, s = this.getFont(this.dataRangeOption.textStyle), l = h.getTextHeight("国", s), d = 10;
                    if ("horizontal" == this.dataRangeOption.orient) {
                        if (this.dataRangeOption.text || this._isContinuity())o = (this._isContinuity() ? a * d + n : t * (a + n)) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[0] ? h.getTextWidth(this.dataRangeOption.text[0], s) + this._textGap : 0) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[1] ? h.getTextWidth(this.dataRangeOption.text[1], s) + this._textGap : 0); else {
                            a += 5;
                            for (var c = 0; t > c; c++)o += a + h.getTextWidth(e[c], s) + n
                        }
                        o -= n, r = Math.max(l, i)
                    } else {
                        var p;
                        if (this.dataRangeOption.text || this._isContinuity())r = (this._isContinuity() ? i * d + n : t * (i + n)) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[0] ? this._textGap + l : 0) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[1] ? this._textGap + l : 0), p = Math.max(h.getTextWidth(this.dataRangeOption.text && this.dataRangeOption.text[0] || "", s), h.getTextWidth(this.dataRangeOption.text && this.dataRangeOption.text[1] || "", s)), o = Math.max(a, p); else {
                            r = (i + n) * t, a += 5, p = 0;
                            for (var c = 0; t > c; c++)p = Math.max(p, h.getTextWidth(e[c], s));
                            o = a + p
                        }
                        r -= n
                    }
                    var m, u = this.reformCssArray(this.dataRangeOption.padding), V = this.zr.getWidth();
                    switch (this.dataRangeOption.x) {
                        case"center":
                            m = Math.floor((V - o) / 2);
                            break;
                        case"left":
                            m = u[3] + this.dataRangeOption.borderWidth;
                            break;
                        case"right":
                            m = V - o - u[1] - this.dataRangeOption.borderWidth;
                            break;
                        default:
                            m = this.parsePercent(this.dataRangeOption.x, V), m = isNaN(m) ? 0 : m
                    }
                    var U, f = this.zr.getHeight();
                    switch (this.dataRangeOption.y) {
                        case"top":
                            U = u[0] + this.dataRangeOption.borderWidth;
                            break;
                        case"bottom":
                            U = f - r - u[2] - this.dataRangeOption.borderWidth;
                            break;
                        case"center":
                            U = Math.floor((f - r) / 2);
                            break;
                        default:
                            U = this.parsePercent(this.dataRangeOption.y, f), U = isNaN(U) ? 0 : U
                    }
                    if (this.dataRangeOption.calculable) {
                        var _ = Math.max(h.getTextWidth(this.dataRangeOption.max, s), h.getTextWidth(this.dataRangeOption.min, s)) + l;
                        "horizontal" == this.dataRangeOption.orient ? (_ > m && (m = _), m + o + _ > V && (m -= _)) : (l > U && (U = l), U + r + l > f && (U -= l))
                    }
                    return {x: m, y: U, width: o, height: r}
                }, _getTextShape: function (e, t, n) {
                    return {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            x: "horizontal" == this.dataRangeOption.orient ? e : this._itemGroupLocation.x + this._itemGroupLocation.width / 2,
                            y: "horizontal" == this.dataRangeOption.orient ? this._itemGroupLocation.y + this._itemGroupLocation.height / 2 : t,
                            color: this.dataRangeOption.textStyle.color,
                            text: n,
                            textFont: this.getFont(this.dataRangeOption.textStyle),
                            textBaseline: "horizontal" == this.dataRangeOption.orient ? "middle" : "top",
                            textAlign: "horizontal" == this.dataRangeOption.orient ? "left" : "center"
                        },
                        hoverable: !1
                    }
                }, _getItemShape: function (e, t, n, a, i) {
                    return {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {x: e, y: t + 1, width: n, height: a - 2, color: i},
                        highlightStyle: {strokeColor: i, lineWidth: 1}
                    }
                }, __ondrift: function (e, t, n) {
                    var a = this._calculableLocation.x, i = this._calculableLocation.y, o = this._calculableLocation.width, r = this._calculableLocation.height;
                    return "horizontal" == this.dataRangeOption.orient ? e.style.x + t <= a ? e.style.x = a : e.style.x + t + e.style.width >= a + o ? e.style.x = a + o - e.style.width : e.style.x += t : e.style.y + n <= i ? e.style.y = i : e.style.y + n + e.style.height >= i + r ? e.style.y = i + r - e.style.height : e.style.y += n, "filler" == e._type ? this._syncHandleShape() : this._syncFillerShape(e), this.dataRangeOption.realtime && this._dispatchDataRange(), !0
                }, __ondragend: function () {
                    this.isDragend = !0
                }, ondragend: function (e, t) {
                    this.isDragend && e.target && (t.dragOut = !0, t.dragIn = !0, this.dataRangeOption.realtime || this._dispatchDataRange(), t.needRefresh = !1, this.isDragend = !1)
                }, _syncShapeFromRange: function () {
                    var e = this.dataRangeOption.range || {}, t = e.start, n = e.end;
                    if (t > n && (t = [n, n = t][0]), this._range.end = null != t ? t : null != this._range.end ? this._range.end : 0, this._range.start = null != n ? n : null != this._range.start ? this._range.start : 100, 100 != this._range.start || 0 !== this._range.end) {
                        if ("horizontal" == this.dataRangeOption.orient) {
                            var a = this._fillerShape.style.width;
                            this._fillerShape.style.x += a * (100 - this._range.start) / 100, this._fillerShape.style.width = a * (this._range.start - this._range.end) / 100
                        } else {
                            var i = this._fillerShape.style.height;
                            this._fillerShape.style.y += i * (100 - this._range.start) / 100, this._fillerShape.style.height = i * (this._range.start - this._range.end) / 100
                        }
                        this.zr.modShape(this._fillerShape.id), this._syncHandleShape()
                    }
                }, _syncHandleShape: function () {
                    var e = this._calculableLocation.x, t = this._calculableLocation.y, n = this._calculableLocation.width, a = this._calculableLocation.height;
                    "horizontal" == this.dataRangeOption.orient ? (this._startShape.style.x = this._fillerShape.style.x, this._startMask.style.width = this._startShape.style.x - e, this._endShape.style.x = this._fillerShape.style.x + this._fillerShape.style.width, this._endMask.style.x = this._endShape.style.x, this._endMask.style.width = e + n - this._endShape.style.x, this._range.start = Math.ceil(100 - (this._startShape.style.x - e) / n * 100), this._range.end = Math.floor(100 - (this._endShape.style.x - e) / n * 100)) : (this._startShape.style.y = this._fillerShape.style.y, this._startMask.style.height = this._startShape.style.y - t, this._endShape.style.y = this._fillerShape.style.y + this._fillerShape.style.height, this._endMask.style.y = this._endShape.style.y, this._endMask.style.height = t + a - this._endShape.style.y, this._range.start = Math.ceil(100 - (this._startShape.style.y - t) / a * 100), this._range.end = Math.floor(100 - (this._endShape.style.y - t) / a * 100)), this._syncShape()
                }, _syncFillerShape: function (e) {
                    var t, n, a = this._calculableLocation.x, i = this._calculableLocation.y, o = this._calculableLocation.width, r = this._calculableLocation.height;
                    "horizontal" == this.dataRangeOption.orient ? (t = this._startShape.style.x, n = this._endShape.style.x, e.id == this._startShape.id && t >= n ? (n = t, this._endShape.style.x = t) : e.id == this._endShape.id && t >= n && (t = n, this._startShape.style.x = t), this._fillerShape.style.x = t, this._fillerShape.style.width = n - t, this._startMask.style.width = t - a, this._endMask.style.x = n, this._endMask.style.width = a + o - n, this._range.start = Math.ceil(100 - (t - a) / o * 100), this._range.end = Math.floor(100 - (n - a) / o * 100)) : (t = this._startShape.style.y, n = this._endShape.style.y, e.id == this._startShape.id && t >= n ? (n = t, this._endShape.style.y = t) : e.id == this._endShape.id && t >= n && (t = n, this._startShape.style.y = t), this._fillerShape.style.y = t, this._fillerShape.style.height = n - t, this._startMask.style.height = t - i, this._endMask.style.y = n, this._endMask.style.height = i + r - n, this._range.start = Math.ceil(100 - (t - i) / r * 100), this._range.end = Math.floor(100 - (n - i) / r * 100)), this._syncShape()
                }, _syncShape: function () {
                    this._startShape.position = [this._startShape.style.x - this._startShape.style._x, this._startShape.style.y - this._startShape.style._y], this._startShape.style.text = this._textFormat(this._gap * this._range.start + this.dataRangeOption.min), this._startShape.style.color = this._startShape.highlightStyle.strokeColor = this.getColor(this._gap * this._range.start + this.dataRangeOption.min), this._endShape.position = [this._endShape.style.x - this._endShape.style._x, this._endShape.style.y - this._endShape.style._y], this._endShape.style.text = this._textFormat(this._gap * this._range.end + this.dataRangeOption.min), this._endShape.style.color = this._endShape.highlightStyle.strokeColor = this.getColor(this._gap * this._range.end + this.dataRangeOption.min), this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this.zr.modShape(this._startMask.id), this.zr.modShape(this._endMask.id), this.zr.modShape(this._fillerShape.id), this.zr.refreshNextFrame()
                }, _dispatchDataRange: function () {
                    this.messageCenter.dispatch(r.EVENT.DATA_RANGE, null, {
                        range: {
                            start: this._range.end,
                            end: this._range.start
                        }
                    }, this.myChart)
                }, __dataRangeSelected: function (e) {
                    if ("single" === this.dataRangeOption.selectedMode)for (var t in this._selectedMap)this._selectedMap[t] = !1;
                    var n = e.target._idx;
                    this._selectedMap[n] = !this._selectedMap[n];
                    var a, i;
                    this._useCustomizedSplit() ? (a = this._splitList[n].max, i = this._splitList[n].min) : (a = (this._colorList.length - n) * this._gap + this.dataRangeOption.min, i = a - this._gap), this.messageCenter.dispatch(r.EVENT.DATA_RANGE_SELECTED, e.event, {
                        selected: this._selectedMap,
                        target: n,
                        valueMax: a,
                        valueMin: i
                    }, this.myChart), this.messageCenter.dispatch(r.EVENT.REFRESH, null, null, this.myChart)
                }, __dispatchHoverLink: function (e) {
                    var t, n;
                    if (this.dataRangeOption.calculable) {
                        var a, i = this.dataRangeOption.max - this.dataRangeOption.min;
                        a = "horizontal" == this.dataRangeOption.orient ? (1 - (l.getX(e.event) - this._calculableLocation.x) / this._calculableLocation.width) * i : (1 - (l.getY(e.event) - this._calculableLocation.y) / this._calculableLocation.height) * i, t = a - .05 * i, n = a + .05 * i
                    } else if (this._useCustomizedSplit()) {
                        var o = e.target._idx;
                        n = this._splitList[o].max, t = this._splitList[o].min
                    } else {
                        var o = e.target._idx;
                        n = (this._colorList.length - o) * this._gap + this.dataRangeOption.min, t = n - this._gap
                    }
                    this.messageCenter.dispatch(r.EVENT.DATA_RANGE_HOVERLINK, e.event, {
                        valueMin: t,
                        valueMax: n
                    }, this.myChart)
                }, __onhoverlink: function (e) {
                    if (this.dataRangeOption.show && this.dataRangeOption.hoverLink && this._indicatorShape && e && null != e.seriesIndex && null != e.dataIndex) {
                        var t = e.value;
                        if ("" === t || isNaN(t))return;
                        t < this.dataRangeOption.min ? t = this.dataRangeOption.min : t > this.dataRangeOption.max && (t = this.dataRangeOption.max), this._indicatorShape.position = "horizontal" == this.dataRangeOption.orient ? [(this.dataRangeOption.max - t) / (this.dataRangeOption.max - this.dataRangeOption.min) * this._calculableLocation.width, 0] : [0, (this.dataRangeOption.max - t) / (this.dataRangeOption.max - this.dataRangeOption.min) * this._calculableLocation.height], this._indicatorShape.style.text = this._textFormat(e.value), this._indicatorShape.style.color = this.getColor(t), this.zr.addHoverShape(this._indicatorShape)
                    }
                }, _textFormat: function (e, t) {
                    var n = this.dataRangeOption;
                    if (e !== -Number.MAX_VALUE && (e = (+e).toFixed(n.precision)), null != t && t !== Number.MAX_VALUE && (t = (+t).toFixed(n.precision)), n.formatter) {
                        if ("string" == typeof n.formatter)return n.formatter.replace("{value}", e === -Number.MAX_VALUE ? "min" : e).replace("{value2}", t === Number.MAX_VALUE ? "max" : t);
                        if ("function" == typeof n.formatter)return n.formatter.call(this.myChart, e, t)
                    }
                    return null == t ? e : e === -Number.MAX_VALUE ? "< " + t : t === Number.MAX_VALUE ? "> " + e : e + " - " + t
                }, _isContinuity: function () {
                    var e = this.dataRangeOption;
                    return !(e.splitList ? e.splitList.length > 0 : e.splitNumber > 0) || e.calculable
                }, _useCustomizedSplit: function () {
                    var e = this.dataRangeOption;
                    return e.splitList && e.splitList.length > 0
                }, _buildColorList: function (e) {
                    if (this._colorList = d.getGradientColors(this.dataRangeOption.color, Math.max((e - this.dataRangeOption.color.length) / (this.dataRangeOption.color.length - 1), 0) + 1), this._colorList.length > e) {
                        for (var t = this._colorList.length, n = [this._colorList[0]], a = t / (e - 1), i = 1; e - 1 > i; i++)n.push(this._colorList[Math.floor(i * a)]);
                        n.push(this._colorList[t - 1]), this._colorList = n
                    }
                    if (this._useCustomizedSplit())for (var o = this._splitList, i = 0, t = o.length; t > i; i++)o[i].color && (this._colorList[i] = o[i].color)
                }, _buildGap: function (e) {
                    if (!this._useCustomizedSplit()) {
                        var t = this.dataRangeOption.precision;
                        for (this._gap = (this.dataRangeOption.max - this.dataRangeOption.min) / e; this._gap.toFixed(t) - 0 != this._gap && 5 > t;)t++;
                        this.dataRangeOption.precision = t, this._gap = ((this.dataRangeOption.max - this.dataRangeOption.min) / e).toFixed(t) - 0
                    }
                }, _buildDataList: function (e) {
                    for (var t = this._valueTextList = [], n = this.dataRangeOption, a = this._useCustomizedSplit(), i = 0; e > i; i++) {
                        this._selectedMap[i] = !0;
                        var o = "";
                        if (a) {
                            var r = this._splitList[e - 1 - i];
                            o = null != r.label ? r.label : null != r.single ? this._textFormat(r.single) : this._textFormat(r.min, r.max)
                        } else o = this._textFormat(i * this._gap + n.min, (i + 1) * this._gap + n.min);
                        t.unshift(o)
                    }
                }, _buildSplitList: function () {
                    if (this._useCustomizedSplit())for (var e = this.dataRangeOption.splitList, t = this._splitList = [], n = 0, a = e.length; a > n; n++) {
                        var i = e[n];
                        if (!i || null == i.start && null == i.end)throw new Error("Empty item exists in splitList!");
                        var o = {label: i.label, color: i.color};
                        o.min = i.start, o.max = i.end, o.min > o.max && (o.min = [o.max, o.max = o.min][0]), o.min === o.max && (o.single = o.max), null == o.min && (o.min = -Number.MAX_VALUE), null == o.max && (o.max = Number.MAX_VALUE), t.push(o)
                    }
                }, refresh: function (e) {
                    if (e) {
                        this.option = e, this.option.dataRange = this.reformOption(this.option.dataRange);
                        var t = this.dataRangeOption = this.option.dataRange;
                        if (!this._useCustomizedSplit() && (null == t.min || null == t.max))throw new Error("option.dataRange.min or option.dataRange.max has not been defined.");
                        this.myChart.canvasSupported || (t.realtime = !1);
                        var n = this._isContinuity() ? 100 : this._useCustomizedSplit() ? t.splitList.length : t.splitNumber;
                        this._buildSplitList(), this._buildColorList(n), this._buildGap(n), this._buildDataList(n)
                    }
                    this.clear(), this._buildShape()
                }, getColor: function (e) {
                    if (isNaN(e))return null;
                    var t;
                    if (this._useCustomizedSplit()) {
                        for (var n = this._splitList, a = 0, i = n.length; i > a; a++)if (n[a].min <= e && n[a].max >= e) {
                            t = a;
                            break
                        }
                    } else {
                        if (this.dataRangeOption.min == this.dataRangeOption.max)return this._colorList[0];
                        if (e < this.dataRangeOption.min ? e = this.dataRangeOption.min : e > this.dataRangeOption.max && (e = this.dataRangeOption.max), this.dataRangeOption.calculable && (e - (this._gap * this._range.start + this.dataRangeOption.min) > 5e-5 || e - (this._gap * this._range.end + this.dataRangeOption.min) < -5e-5))return null;
                        t = this._colorList.length - Math.ceil((e - this.dataRangeOption.min) / (this.dataRangeOption.max - this.dataRangeOption.min) * this._colorList.length), t == this._colorList.length && t--
                    }
                    return this._selectedMap[t] ? this._colorList[t] : null
                }, getColorByIndex: function (e) {
                    return e >= this._colorList.length ? e = this._colorList.length - 1 : 0 > e && (e = 0), this._colorList[e]
                }, onbeforDispose: function () {
                    this.messageCenter.unbind(r.EVENT.HOVER, this._onhoverlink)
                }
            }, s.inherits(t, n), e("../component").define("dataRange", t), t
        }), n("echarts/util/shape/HandlePolygon", ["require", "zrender/shape/Base", "zrender/shape/Polygon", "zrender/tool/util"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("zrender/shape/Polygon"), i = e("zrender/tool/util");
            return t.prototype = {
                type: "handle-polygon", buildPath: function (e, t) {
                    a.prototype.buildPath(e, t)
                }, isCover: function (e, t) {
                    var n = this.transformCoordToLocal(e, t);
                    e = n[0], t = n[1];
                    var a = this.style.rect;
                    return e >= a.x && e <= a.x + a.width && t >= a.y && t <= a.y + a.height ? !0 : !1
                }
            }, i.inherits(t, n), t
        }), n("echarts/chart/k", ["require", "./base", "../util/shape/Candle", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "zrender/tool/util", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("../util/shape/Candle");
            e("../component/axis"), e("../component/grid"), e("../component/dataZoom");
            var i = e("../config");
            i.k = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                hoverable: !0,
                legendHoverLink: !1,
                xAxisIndex: 0,
                yAxisIndex: 0,
                itemStyle: {
                    normal: {
                        color: "#fff",
                        color0: "#00aa11",
                        lineStyle: {width: 1, color: "#ff3200", color0: "#00aa11"},
                        label: {show: !1}
                    }, emphasis: {label: {show: !1}}
                }
            };
            var o = e("../util/ecData"), r = e("zrender/tool/util");
            return t.prototype = {
                type: i.CHART_TYPE_K, _buildShape: function () {
                    var e = this.series;
                    this.selectedMap = {};
                    for (var t, n = {
                        top: [],
                        bottom: []
                    }, a = 0, o = e.length; o > a; a++)e[a].type === i.CHART_TYPE_K && (e[a] = this.reformOption(e[a]), this.legendHoverLink = e[a].legendHoverLink || this.legendHoverLink, t = this.component.xAxis.getAxis(e[a].xAxisIndex), t.type === i.COMPONENT_TYPE_AXIS_CATEGORY && n[t.getPosition()].push(a));
                    for (var r in n)n[r].length > 0 && this._buildSinglePosition(r, n[r]);
                    this.addShapeList()
                }, _buildSinglePosition: function (e, t) {
                    var n = this._mapData(t), a = n.locationMap, i = n.maxDataLength;
                    if (0 !== i && 0 !== a.length) {
                        this._buildHorizontal(t, i, a);
                        for (var o = 0, r = t.length; r > o; o++)this.buildMark(t[o])
                    }
                }, _mapData: function (e) {
                    for (var t, n, a = this.series, i = this.component.legend, o = [], r = 0, s = 0, l = e.length; l > s; s++)t = a[e[s]], n = t.name, this.selectedMap[n] = i ? i.isSelected(n) : !0, this.selectedMap[n] && o.push(e[s]), r = Math.max(r, t.data.length);
                    return {locationMap: o, maxDataLength: r}
                }, _buildHorizontal: function (e, t, n) {
                    for (var a, i, o, r, s, l, h, d, c, p, m = this.series, u = {}, V = 0, U = n.length; U > V; V++) {
                        a = n[V], i = m[a], o = i.xAxisIndex || 0, r = this.component.xAxis.getAxis(o), h = i.barWidth || Math.floor(r.getGap() / 2), p = i.barMaxWidth, p && h > p && (h = p), s = i.yAxisIndex || 0, l = this.component.yAxis.getAxis(s), u[a] = [];
                        for (var f = 0, _ = t; _ > f && null != r.getNameByIndex(f); f++)d = i.data[f], c = this.getDataFromOption(d, "-"), "-" !== c && 4 == c.length && u[a].push([r.getCoordByIndex(f), h, l.getCoord(c[0]), l.getCoord(c[1]), l.getCoord(c[2]), l.getCoord(c[3]), f, r.getNameByIndex(f)])
                    }
                    this._buildKLine(e, u)
                }, _buildKLine: function (e, t) {
                    for (var n, a, o, r, s, l, h, d, c, p, m, u, V, U, f, _, g, y = this.series, b = 0, k = e.length; k > b; b++)if (g = e[b], m = y[g], U = t[g], this._isLarge(U) && (U = this._getLargePointList(U)), m.type === i.CHART_TYPE_K && null != U) {
                        u = m, n = this.query(u, "itemStyle.normal.lineStyle.width"), a = this.query(u, "itemStyle.normal.lineStyle.color"), o = this.query(u, "itemStyle.normal.lineStyle.color0"), r = this.query(u, "itemStyle.normal.color"), s = this.query(u, "itemStyle.normal.color0"), l = this.query(u, "itemStyle.emphasis.lineStyle.width"), h = this.query(u, "itemStyle.emphasis.lineStyle.color"), d = this.query(u, "itemStyle.emphasis.lineStyle.color0"), c = this.query(u, "itemStyle.emphasis.color"), p = this.query(u, "itemStyle.emphasis.color0");
                        for (var x = 0, v = U.length; v > x; x++)f = U[x], V = m.data[f[6]], u = V, _ = f[3] < f[2], this.shapeList.push(this._getCandle(g, f[6], f[7], f[0], f[1], f[2], f[3], f[4], f[5], _ ? this.query(u, "itemStyle.normal.color") || r : this.query(u, "itemStyle.normal.color0") || s, this.query(u, "itemStyle.normal.lineStyle.width") || n, _ ? this.query(u, "itemStyle.normal.lineStyle.color") || a : this.query(u, "itemStyle.normal.lineStyle.color0") || o, _ ? this.query(u, "itemStyle.emphasis.color") || c || r : this.query(u, "itemStyle.emphasis.color0") || p || s, this.query(u, "itemStyle.emphasis.lineStyle.width") || l || n, _ ? this.query(u, "itemStyle.emphasis.lineStyle.color") || h || a : this.query(u, "itemStyle.emphasis.lineStyle.color0") || d || o))
                    }
                }, _isLarge: function (e) {
                    return e[0][1] < .5
                }, _getLargePointList: function (e) {
                    for (var t = this.component.grid.getWidth(), n = e.length, a = [], i = 0; t > i; i++)a[i] = e[Math.floor(n / t * i)];
                    return a
                }, _getCandle: function (e, t, n, i, r, s, l, h, d, c, p, m, u, V, U) {
                    var f = this.series, _ = f[e], g = _.data[t], y = [g, _], b = {
                        zlevel: _.zlevel,
                        z: _.z,
                        clickable: this.deepQuery(y, "clickable"),
                        hoverable: this.deepQuery(y, "hoverable"),
                        style: {
                            x: i,
                            y: [s, l, h, d],
                            width: r,
                            color: c,
                            strokeColor: m,
                            lineWidth: p,
                            brushType: "both"
                        },
                        highlightStyle: {color: u, strokeColor: U, lineWidth: V},
                        _seriesIndex: e
                    };
                    return b = this.addLabel(b, _, g, n), o.pack(b, _, e, g, t, n), b = new a(b)
                }, getMarkCoord: function (e, t) {
                    var n = this.series[e], a = this.component.xAxis.getAxis(n.xAxisIndex), i = this.component.yAxis.getAxis(n.yAxisIndex);
                    return ["string" != typeof t.xAxis && a.getCoordByIndex ? a.getCoordByIndex(t.xAxis || 0) : a.getCoord(t.xAxis || 0), "string" != typeof t.yAxis && i.getCoordByIndex ? i.getCoordByIndex(t.yAxis || 0) : i.getCoord(t.yAxis || 0)]
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }, addDataAnimation: function (e, t) {
                    function n() {
                        u--, 0 === u && t && t()
                    }

                    for (var a = this.series, i = {}, r = 0, s = e.length; s > r; r++)i[e[r][0]] = e[r];
                    for (var l, h, d, c, p, m, u = 0, r = 0, s = this.shapeList.length; s > r; r++)if (p = this.shapeList[r]._seriesIndex, i[p] && !i[p][3] && "candle" === this.shapeList[r].type) {
                        if (m = o.get(this.shapeList[r], "dataIndex"), c = a[p], i[p][2] && m === c.data.length - 1) {
                            this.zr.delShape(this.shapeList[r].id);
                            continue
                        }
                        if (!i[p][2] && 0 === m) {
                            this.zr.delShape(this.shapeList[r].id);
                            continue
                        }
                        h = this.component.xAxis.getAxis(c.xAxisIndex || 0).getGap(), l = i[p][2] ? h : -h, d = 0, u++, this.zr.animate(this.shapeList[r].id, "").when(this.query(this.option, "animationDurationUpdate"), {
                            position: [l, d]
                        }).done(n).start()
                    }
                    u || t && t()
                }
            }, r.inherits(t, n), e("../chart").define("k", t), t
        }), n("echarts/chart/pie", ["require", "./base", "zrender/shape/Text", "zrender/shape/Ring", "zrender/shape/Circle", "zrender/shape/Sector", "zrender/shape/Polyline", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/math", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o);
                var r = this;
                r.shapeHandler.onmouseover = function (e) {
                    var t = e.target, n = h.get(t, "seriesIndex"), a = h.get(t, "dataIndex"), i = h.get(t, "special"), o = [t.style.x, t.style.y], s = t.style.startAngle, l = t.style.endAngle, d = ((l + s) / 2 + 360) % 360, c = t.highlightStyle.color, p = r.getLabel(n, a, i, o, d, c, !0);
                    p && r.zr.addHoverShape(p);
                    var m = r.getLabelLine(n, a, o, t.style.r0, t.style.r, d, c, !0);
                    m && r.zr.addHoverShape(m)
                }, this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Ring"), o = e("zrender/shape/Circle"), r = e("zrender/shape/Sector"), s = e("zrender/shape/Polyline"), l = e("../config");
            l.pie = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                center: ["50%", "50%"],
                radius: [0, "75%"],
                clockWise: !0,
                startAngle: 90,
                minAngle: 0,
                selectedOffset: 10,
                itemStyle: {
                    normal: {
                        borderColor: "rgba(0,0,0,0)",
                        borderWidth: 1,
                        label: {show: !0, position: "outer"},
                        labelLine: {show: !0, length: 20, lineStyle: {width: 1, type: "solid"}}
                    },
                    emphasis: {
                        borderColor: "rgba(0,0,0,0)",
                        borderWidth: 1,
                        label: {show: !1},
                        labelLine: {show: !1, length: 20, lineStyle: {width: 1, type: "solid"}}
                    }
                }
            };
            var h = e("../util/ecData"), d = e("zrender/tool/util"), c = e("zrender/tool/math"), p = e("zrender/tool/color");
            return t.prototype = {
                type: l.CHART_TYPE_PIE, _buildShape: function () {
                    var e = this.series, t = this.component.legend;
                    this.selectedMap = {}, this._selected = {};
                    var n, a, r;
                    this._selectedMode = !1;
                    for (var s, d = 0, c = e.length; c > d; d++)if (e[d].type === l.CHART_TYPE_PIE) {
                        if (e[d] = this.reformOption(e[d]), this.legendHoverLink = e[d].legendHoverLink || this.legendHoverLink, s = e[d].name || "", this.selectedMap[s] = t ? t.isSelected(s) : !0, !this.selectedMap[s])continue;
                        n = this.parseCenter(this.zr, e[d].center), a = this.parseRadius(this.zr, e[d].radius), this._selectedMode = this._selectedMode || e[d].selectedMode, this._selected[d] = [], this.deepQuery([e[d], this.option], "calculable") && (r = {
                            zlevel: e[d].zlevel,
                            z: e[d].z,
                            hoverable: !1,
                            style: {
                                x: n[0],
                                y: n[1],
                                r0: a[0] <= 10 ? 0 : a[0] - 10,
                                r: a[1] + 10,
                                brushType: "stroke",
                                lineWidth: 1,
                                strokeColor: e[d].calculableHolderColor || this.ecTheme.calculableHolderColor || l.calculableHolderColor
                            }
                        }, h.pack(r, e[d], d, void 0, -1), this.setCalculable(r), r = a[0] <= 10 ? new o(r) : new i(r), this.shapeList.push(r)), this._buildSinglePie(d), this.buildMark(d)
                    }
                    this.addShapeList()
                }, _buildSinglePie: function (e) {
                    for (var t, n = this.series, a = n[e], i = a.data, o = this.component.legend, r = 0, s = 0, l = 0, h = Number.NEGATIVE_INFINITY, d = [], c = 0, p = i.length; p > c; c++)t = i[c].name, this.selectedMap[t] = o ? o.isSelected(t) : !0, this.selectedMap[t] && !isNaN(i[c].value) && (0 !== +i[c].value ? r++ : s++, l += +i[c].value, h = Math.max(h, +i[c].value));
                    if (0 !== l) {
                        for (var m, u, V, U, f, _, g = 100, y = a.clockWise, b = (a.startAngle.toFixed(2) - 0 + 360) % 360, k = a.minAngle || .01, x = 360 - k * r - .01 * s, v = a.roseType, c = 0, p = i.length; p > c; c++)if (t = i[c].name, this.selectedMap[t] && !isNaN(i[c].value)) {
                            if (u = o ? o.getColor(t) : this.zr.getColor(c), g = i[c].value / l, m = "area" != v ? y ? b - g * x - (0 !== g ? k : .01) : g * x + b + (0 !== g ? k : .01) : y ? b - 360 / p : 360 / p + b, m = m.toFixed(2) - 0, g = (100 * g).toFixed(2), V = this.parseCenter(this.zr, a.center), U = this.parseRadius(this.zr, a.radius), f = +U[0], _ = +U[1], "radius" === v ? _ = i[c].value / h * (_ - f) * .8 + .2 * (_ - f) + f : "area" === v && (_ = Math.sqrt(i[c].value / h) * (_ - f) + f), y) {
                                var L;
                                L = b, b = m, m = L
                            }
                            this._buildItem(d, e, c, g, i[c].selected, V, f, _, b, m, u), y || (b = m)
                        }
                        this._autoLabelLayout(d, V, _);
                        for (var c = 0, p = d.length; p > c; c++)this.shapeList.push(d[c]);
                        d = null
                    }
                }, _buildItem: function (e, t, n, a, i, o, r, s, l, d, c) {
                    var p = this.series, m = ((d + l) / 2 + 360) % 360, u = this.getSector(t, n, a, i, o, r, s, l, d, c);
                    h.pack(u, p[t], t, p[t].data[n], n, p[t].data[n].name, a), e.push(u);
                    var V = this.getLabel(t, n, a, o, m, c, !1), U = this.getLabelLine(t, n, o, r, s, m, c, !1);
                    U && (h.pack(U, p[t], t, p[t].data[n], n, p[t].data[n].name, a), e.push(U)), V && (h.pack(V, p[t], t, p[t].data[n], n, p[t].data[n].name, a), V._labelLine = U, e.push(V))
                }, getSector: function (e, t, n, a, i, o, s, l, h, d) {
                    var m = this.series, u = m[e], V = u.data[t], U = [V, u], f = this.deepMerge(U, "itemStyle.normal") || {}, _ = this.deepMerge(U, "itemStyle.emphasis") || {}, g = this.getItemStyleColor(f.color, e, t, V) || d, y = this.getItemStyleColor(_.color, e, t, V) || ("string" == typeof g ? p.lift(g, -.2) : g), b = {
                        zlevel: u.zlevel,
                        z: u.z,
                        clickable: this.deepQuery(U, "clickable"),
                        style: {
                            x: i[0],
                            y: i[1],
                            r0: o,
                            r: s,
                            startAngle: l,
                            endAngle: h,
                            brushType: "both",
                            color: g,
                            lineWidth: f.borderWidth,
                            strokeColor: f.borderColor,
                            lineJoin: "round"
                        },
                        highlightStyle: {
                            color: y,
                            lineWidth: _.borderWidth,
                            strokeColor: _.borderColor,
                            lineJoin: "round"
                        },
                        _seriesIndex: e,
                        _dataIndex: t
                    };
                    if (a) {
                        var k = ((b.style.startAngle + b.style.endAngle) / 2).toFixed(2) - 0;
                        b.style._hasSelected = !0, b.style._x = b.style.x, b.style._y = b.style.y;
                        var x = this.query(u, "selectedOffset");
                        b.style.x += c.cos(k, !0) * x, b.style.y -= c.sin(k, !0) * x, this._selected[e][t] = !0
                    } else this._selected[e][t] = !1;
                    return this._selectedMode && (b.onclick = this.shapeHandler.onclick), this.deepQuery([V, u, this.option], "calculable") && (this.setCalculable(b), b.draggable = !0), (this._needLabel(u, V, !0) || this._needLabelLine(u, V, !0)) && (b.onmouseover = this.shapeHandler.onmouseover), b = new r(b)
                }, getLabel: function (e, t, n, i, o, r, s) {
                    var l = this.series, h = l[e], p = h.data[t];
                    if (this._needLabel(h, p, s)) {
                        var m, u, V, U = s ? "emphasis" : "normal", f = d.merge(d.clone(p.itemStyle) || {}, h.itemStyle), _ = f[U].label, g = _.textStyle || {}, y = i[0], b = i[1], k = this.parseRadius(this.zr, h.radius), x = "middle";
                        _.position = _.position || f.normal.label.position, "center" === _.position ? (m = y, u = b, V = "center") : "inner" === _.position || "inside" === _.position ? (k = (k[0] + k[1]) * (_.distance || .5), m = Math.round(y + k * c.cos(o, !0)), u = Math.round(b - k * c.sin(o, !0)), r = "#fff", V = "center") : (k = k[1] - -f[U].labelLine.length, m = Math.round(y + k * c.cos(o, !0)), u = Math.round(b - k * c.sin(o, !0)), V = o >= 90 && 270 >= o ? "right" : "left"), "center" != _.position && "inner" != _.position && "inside" != _.position && (m += "left" === V ? 20 : -20), p.__labelX = m - ("left" === V ? 5 : -5), p.__labelY = u;
                        var v = new a({
                            zlevel: h.zlevel,
                            z: h.z + 1,
                            hoverable: !1,
                            style: {
                                x: m,
                                y: u,
                                color: g.color || r,
                                text: this.getLabelText(e, t, n, U),
                                textAlign: g.align || V,
                                textBaseline: g.baseline || x,
                                textFont: this.getFont(g)
                            },
                            highlightStyle: {brushType: "fill"}
                        });
                        return v._radius = k, v._labelPosition = _.position || "outer", v._rect = v.getRect(v.style), v._seriesIndex = e, v._dataIndex = t, v
                    }
                }, getLabelText: function (e, t, n, a) {
                    var i = this.series, o = i[e], r = o.data[t], s = this.deepQuery([r, o], "itemStyle." + a + ".label.formatter");
                    return s ? "function" == typeof s ? s.call(this.myChart, {
                        seriesIndex: e,
                        seriesName: o.name || "",
                        series: o,
                        dataIndex: t,
                        data: r,
                        name: r.name,
                        value: r.value,
                        percent: n
                    }) : "string" == typeof s ? (s = s.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{d}", "{d0}"), s = s.replace("{a0}", o.name).replace("{b0}", r.name).replace("{c0}", r.value).replace("{d0}", n)) : void 0 : r.name
                }, getLabelLine: function (e, t, n, a, i, o, r, l) {
                    var h = this.series, p = h[e], m = p.data[t];
                    if (this._needLabelLine(p, m, l)) {
                        var u = l ? "emphasis" : "normal", V = d.merge(d.clone(m.itemStyle) || {}, p.itemStyle), U = V[u].labelLine, f = U.lineStyle || {}, _ = n[0], g = n[1], y = i, b = this.parseRadius(this.zr, p.radius)[1] - -U.length, k = c.cos(o, !0), x = c.sin(o, !0);
                        return new s({
                            zlevel: p.zlevel,
                            z: p.z + 1,
                            hoverable: !1,
                            style: {
                                pointList: [[_ + y * k, g - y * x], [_ + b * k, g - b * x], [m.__labelX, m.__labelY]],
                                strokeColor: f.color || r,
                                lineType: f.type,
                                lineWidth: f.width
                            },
                            _seriesIndex: e,
                            _dataIndex: t
                        })
                    }
                }, _needLabel: function (e, t, n) {
                    return this.deepQuery([t, e], "itemStyle." + (n ? "emphasis" : "normal") + ".label.show")
                }, _needLabelLine: function (e, t, n) {
                    return this.deepQuery([t, e], "itemStyle." + (n ? "emphasis" : "normal") + ".labelLine.show")
                }, _autoLabelLayout: function (e, t, n) {
                    for (var a = [], i = [], o = 0, r = e.length; r > o; o++)("outer" === e[o]._labelPosition || "outside" === e[o]._labelPosition) && (e[o]._rect._y = e[o]._rect.y, e[o]._rect.x < t[0] ? a.push(e[o]) : i.push(e[o]));
                    this._layoutCalculate(a, t, n, -1), this._layoutCalculate(i, t, n, 1)
                }, _layoutCalculate: function (e, t, n, a) {
                    function i(t, n, a) {
                        for (var i = t; n > i; i++)if (e[i]._rect.y += a, e[i].style.y += a, e[i]._labelLine && (e[i]._labelLine.style.pointList[1][1] += a, e[i]._labelLine.style.pointList[2][1] += a), i > t && n > i + 1 && e[i + 1]._rect.y > e[i]._rect.y + e[i]._rect.height)return void o(i, a / 2);
                        o(n - 1, a / 2)
                    }

                    function o(t, n) {
                        for (var a = t; a >= 0 && (e[a]._rect.y -= n, e[a].style.y -= n, e[a]._labelLine && (e[a]._labelLine.style.pointList[1][1] -= n, e[a]._labelLine.style.pointList[2][1] -= n), !(a > 0 && e[a]._rect.y > e[a - 1]._rect.y + e[a - 1]._rect.height)); a--);
                    }

                    function r(e, t, n, a, i) {
                        for (var o, r, s, l = n[0], h = n[1], d = i > 0 ? t ? Number.MAX_VALUE : 0 : t ? Number.MAX_VALUE : 0, c = 0, p = e.length; p > c; c++)r = Math.abs(e[c]._rect.y - h), s = e[c]._radius - a, o = a + s > r ? Math.sqrt((a + s + 20) * (a + s + 20) - Math.pow(e[c]._rect.y - h, 2)) : Math.abs(e[c]._rect.x + (i > 0 ? 0 : e[c]._rect.width) - l), t && o >= d && (o = d - 10), !t && d >= o && (o = d + 10), e[c]._rect.x = e[c].style.x = l + o * i, e[c]._labelLine && (e[c]._labelLine.style.pointList[2][0] = l + (o - 5) * i, e[c]._labelLine.style.pointList[1][0] = l + (o - 20) * i), d = o
                    }

                    e.sort(function (e, t) {
                        return e._rect.y - t._rect.y
                    });
                    for (var s, l = 0, h = e.length, d = [], c = [], p = 0; h > p; p++)s = e[p]._rect.y - l, 0 > s && i(p, h, -s, a), l = e[p]._rect.y + e[p]._rect.height;
                    this.zr.getHeight() - l < 0 && o(h - 1, l - this.zr.getHeight());
                    for (var p = 0; h > p; p++)e[p]._rect.y >= t[1] ? c.push(e[p]) : d.push(e[p]);
                    r(c, !0, t, n, a), r(d, !1, t, n, a)
                }, reformOption: function (e) {
                    var t = d.merge;
                    return e = t(t(e || {}, d.clone(this.ecTheme.pie || {})), d.clone(l.pie)), e.itemStyle.normal.label.textStyle = this.getTextStyle(e.itemStyle.normal.label.textStyle), e.itemStyle.emphasis.label.textStyle = this.getTextStyle(e.itemStyle.emphasis.label.textStyle), this.z = e.z, this.zlevel = e.zlevel, e
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }, addDataAnimation: function (e, t) {
                    function n() {
                        s--, 0 === s && t && t()
                    }

                    for (var a = this.series, i = {}, o = 0, r = e.length; r > o; o++)i[e[o][0]] = e[o];
                    var s = 0, h = {}, d = {}, c = {}, p = this.shapeList;
                    this.shapeList = [];
                    for (var m, u, V, U = {}, o = 0, r = e.length; r > o; o++)m = e[o][0], u = e[o][2], V = e[o][3], a[m] && a[m].type === l.CHART_TYPE_PIE && (u ? (V || (h[m + "_" + a[m].data.length] = "delete"), U[m] = 1) : V ? U[m] = 0 : (h[m + "_-1"] = "delete", U[m] = -1), this._buildSinglePie(m));
                    for (var f, _, o = 0, r = this.shapeList.length; r > o; o++)switch (m = this.shapeList[o]._seriesIndex, f = this.shapeList[o]._dataIndex, _ = m + "_" + f, this.shapeList[o].type) {
                        case"sector":
                            h[_] = this.shapeList[o];
                            break;
                        case"text":
                            d[_] = this.shapeList[o];
                            break;
                        case"polyline":
                            c[_] = this.shapeList[o]
                    }
                    this.shapeList = [];
                    for (var g, o = 0, r = p.length; r > o; o++)if (m = p[o]._seriesIndex, i[m]) {
                        if (f = p[o]._dataIndex + U[m], _ = m + "_" + f, g = h[_], !g)continue;
                        if ("sector" === p[o].type)"delete" != g ? (s++, this.zr.animate(p[o].id, "style").when(400, {
                            startAngle: g.style.startAngle,
                            endAngle: g.style.endAngle
                        }).done(n).start()) : (s++, this.zr.animate(p[o].id, "style").when(400, U[m] < 0 ? {startAngle: p[o].style.startAngle} : {endAngle: p[o].style.endAngle}).done(n).start()); else if ("text" === p[o].type || "polyline" === p[o].type)if ("delete" === g)this.zr.delShape(p[o].id); else switch (p[o].type) {
                            case"text":
                                s++, g = d[_], this.zr.animate(p[o].id, "style").when(400, {
                                    x: g.style.x,
                                    y: g.style.y
                                }).done(n).start();
                                break;
                            case"polyline":
                                s++, g = c[_], this.zr.animate(p[o].id, "style").when(400, {pointList: g.style.pointList}).done(n).start()
                        }
                    }
                    this.shapeList = p, s || t && t()
                }, onclick: function (e) {
                    var t = this.series;
                    if (this.isClick && e.target) {
                        this.isClick = !1;
                        for (var n, a = e.target, i = a.style, o = h.get(a, "seriesIndex"), r = h.get(a, "dataIndex"), s = 0, d = this.shapeList.length; d > s; s++)if (this.shapeList[s].id === a.id) {
                            if (o = h.get(a, "seriesIndex"), r = h.get(a, "dataIndex"), i._hasSelected)a.style.x = a.style._x, a.style.y = a.style._y, a.style._hasSelected = !1, this._selected[o][r] = !1; else {
                                var p = ((i.startAngle + i.endAngle) / 2).toFixed(2) - 0;
                                a.style._hasSelected = !0, this._selected[o][r] = !0, a.style._x = a.style.x, a.style._y = a.style.y, n = this.query(t[o], "selectedOffset"), a.style.x += c.cos(p, !0) * n, a.style.y -= c.sin(p, !0) * n
                            }
                            this.zr.modShape(a.id)
                        } else this.shapeList[s].style._hasSelected && "single" === this._selectedMode && (o = h.get(this.shapeList[s], "seriesIndex"), r = h.get(this.shapeList[s], "dataIndex"), this.shapeList[s].style.x = this.shapeList[s].style._x, this.shapeList[s].style.y = this.shapeList[s].style._y, this.shapeList[s].style._hasSelected = !1, this._selected[o][r] = !1, this.zr.modShape(this.shapeList[s].id));
                        this.messageCenter.dispatch(l.EVENT.PIE_SELECTED, e.event, {
                            selected: this._selected,
                            target: h.get(a, "name")
                        }, this.myChart), this.zr.refreshNextFrame()
                    }
                }
            }, d.inherits(t, n), e("../chart").define("pie", t), t
        }),n("echarts/chart/radar", ["require", "./base", "zrender/shape/Polygon", "../component/polar", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../util/accMath", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Polygon");
            e("../component/polar");
            var i = e("../config");
            i.radar = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                polarIndex: 0,
                itemStyle: {
                    normal: {label: {show: !1}, lineStyle: {width: 2, type: "solid"}},
                    emphasis: {label: {show: !1}}
                },
                symbolSize: 2
            };
            var o = e("../util/ecData"), r = e("zrender/tool/util"), s = e("zrender/tool/color");
            return t.prototype = {
                type: i.CHART_TYPE_RADAR, _buildShape: function () {
                    this.selectedMap = {}, this._symbol = this.option.symbolList, this._queryTarget, this._dropBoxList = [], this._radarDataCounter = 0;
                    for (var e, t = this.series, n = this.component.legend, a = 0, o = t.length; o > a; a++)t[a].type === i.CHART_TYPE_RADAR && (this.serie = this.reformOption(t[a]), this.legendHoverLink = t[a].legendHoverLink || this.legendHoverLink, e = this.serie.name || "", this.selectedMap[e] = n ? n.isSelected(e) : !0, this.selectedMap[e] && (this._queryTarget = [this.serie, this.option], this.deepQuery(this._queryTarget, "calculable") && this._addDropBox(a), this._buildSingleRadar(a), this.buildMark(a)));
                    this.addShapeList()
                }, _buildSingleRadar: function (e) {
                    for (var t, n, a, i, o = this.component.legend, r = this.serie.data, s = this.deepQuery(this._queryTarget, "calculable"), l = 0; l < r.length; l++)a = r[l].name || "", this.selectedMap[a] = o ? o.isSelected(a) : !0, this.selectedMap[a] && (o ? (n = o.getColor(a), t = o.getItemShape(a), t && (t.style.brushType = this.deepQuery([r[l], this.serie], "itemStyle.normal.areaStyle") ? "both" : "stroke", o.setItemShape(a, t))) : n = this.zr.getColor(l), i = this._getPointList(this.serie.polarIndex, r[l]), this._addSymbol(i, n, l, e, this.serie.polarIndex), this._addDataShape(i, n, r[l], e, l, s), this._radarDataCounter++)
                }, _getPointList: function (e, t) {
                    for (var n, a, i = [], o = this.component.polar, r = 0, s = t.value.length; s > r; r++)a = this.getDataFromOption(t.value[r]), n = "-" != a ? o.getVector(e, r, a) : !1, n && i.push(n);
                    return i
                }, _addSymbol: function (e, t, n, a, i) {
                    for (var r, s = this.series, l = this.component.polar, h = 0, d = e.length; d > h; h++)r = this.getSymbolShape(this.deepMerge([s[a].data[n], s[a]]), a, s[a].data[n].value[h], h, l.getIndicatorText(i, h), e[h][0], e[h][1], this._symbol[this._radarDataCounter % this._symbol.length], t, "#fff", "vertical"), r.zlevel = this.getZlevelBase(), r.z = this.getZBase() + 1, o.set(r, "data", s[a].data[n]), o.set(r, "value", s[a].data[n].value), o.set(r, "dataIndex", n), o.set(r, "special", h), this.shapeList.push(r)
                }, _addDataShape: function (e, t, n, i, r, l) {
                    var h = this.series, d = [n, this.serie], c = this.getItemStyleColor(this.deepQuery(d, "itemStyle.normal.color"), i, r, n), p = this.deepQuery(d, "itemStyle.normal.lineStyle.width"), m = this.deepQuery(d, "itemStyle.normal.lineStyle.type"), u = this.deepQuery(d, "itemStyle.normal.areaStyle.color"), V = this.deepQuery(d, "itemStyle.normal.areaStyle"), U = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            pointList: e,
                            brushType: V ? "both" : "stroke",
                            color: u || c || ("string" == typeof t ? s.alpha(t, .5) : t),
                            strokeColor: c || t,
                            lineWidth: p,
                            lineType: m
                        },
                        highlightStyle: {
                            brushType: this.deepQuery(d, "itemStyle.emphasis.areaStyle") || V ? "both" : "stroke",
                            color: this.deepQuery(d, "itemStyle.emphasis.areaStyle.color") || u || c || ("string" == typeof t ? s.alpha(t, .5) : t),
                            strokeColor: this.getItemStyleColor(this.deepQuery(d, "itemStyle.emphasis.color"), i, r, n) || c || t,
                            lineWidth: this.deepQuery(d, "itemStyle.emphasis.lineStyle.width") || p,
                            lineType: this.deepQuery(d, "itemStyle.emphasis.lineStyle.type") || m
                        }
                    };
                    o.pack(U, h[i], i, n, r, n.name, this.component.polar.getIndicator(h[i].polarIndex)), l && (U.draggable = !0, this.setCalculable(U)), U = new a(U), this.shapeList.push(U)
                }, _addDropBox: function (e) {
                    var t = this.series, n = this.deepQuery(this._queryTarget, "polarIndex");
                    if (!this._dropBoxList[n]) {
                        var a = this.component.polar.getDropBox(n);
                        a.zlevel = this.getZlevelBase(), a.z = this.getZBase(), this.setCalculable(a), o.pack(a, t, e, void 0, -1), this.shapeList.push(a), this._dropBoxList[n] = !0
                    }
                }, ondragend: function (e, t) {
                    var n = this.series;
                    if (this.isDragend && e.target) {
                        var a = e.target, i = o.get(a, "seriesIndex"), r = o.get(a, "dataIndex");
                        this.component.legend && this.component.legend.del(n[i].data[r].name), n[i].data.splice(r, 1), t.dragOut = !0, t.needRefresh = !0, this.isDragend = !1
                    }
                }, ondrop: function (t, n) {
                    var a = this.series;
                    if (this.isDrop && t.target) {
                        var i, r, s = t.target, l = t.dragged, h = o.get(s, "seriesIndex"), d = o.get(s, "dataIndex"), c = this.component.legend;
                        if (-1 === d)i = {
                            value: o.get(l, "value"),
                            name: o.get(l, "name")
                        }, a[h].data.push(i), c && c.add(i.name, l.style.color || l.style.strokeColor); else {
                            var p = e("../util/accMath");
                            i = a[h].data[d], c && c.del(i.name), i.name += this.option.nameConnector + o.get(l, "name"), r = o.get(l, "value");
                            for (var m = 0; m < r.length; m++)i.value[m] = p.accAdd(i.value[m], r[m]);
                            c && c.add(i.name, l.style.color || l.style.strokeColor)
                        }
                        n.dragIn = n.dragIn || !0, this.isDrop = !1
                    }
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }
            }, r.inherits(t, n), e("../chart").define("radar", t), t
        }),n("echarts/component/polar", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Polygon", "zrender/shape/Circle", "zrender/shape/Ring", "../config", "zrender/tool/util", "../util/coordinates", "../util/accMath", "../util/smartSteps", "../component"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Line"), o = e("zrender/shape/Polygon"), r = e("zrender/shape/Circle"), s = e("zrender/shape/Ring"), l = e("../config");
            l.polar = {
                zlevel: 0,
                z: 0,
                center: ["50%", "50%"],
                radius: "75%",
                startAngle: 90,
                boundaryGap: [0, 0],
                splitNumber: 5,
                name: {show: !0, textStyle: {color: "#333"}},
                axisLine: {show: !0, lineStyle: {color: "#ccc", width: 1, type: "solid"}},
                axisLabel: {show: !1, textStyle: {color: "#333"}},
                splitArea: {show: !0, areaStyle: {color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]}},
                splitLine: {show: !0, lineStyle: {width: 1, color: "#ccc"}},
                type: "polygon"
            };
            var h = e("zrender/tool/util"), d = e("../util/coordinates");
            return t.prototype = {
                type: l.COMPONENT_TYPE_POLAR, _buildShape: function () {
                    for (var e = 0; e < this.polar.length; e++)this._index = e, this.reformOption(this.polar[e]), this._queryTarget = [this.polar[e], this.option], this._createVector(e), this._buildSpiderWeb(e), this._buildText(e), this._adjustIndicatorValue(e), this._addAxisLabel(e);
                    for (var e = 0; e < this.shapeList.length; e++)this.zr.addShape(this.shapeList[e])
                }, _createVector: function (e) {
                    for (var t, n = this.polar[e], a = this.deepQuery(this._queryTarget, "indicator"), i = a.length, o = n.startAngle, r = 2 * Math.PI / i, s = this._getRadius(), l = n.__ecIndicator = [], h = 0; i > h; h++)t = d.polar2cartesian(s, o * Math.PI / 180 + r * h), l.push({vector: [t[1], -t[0]]})
                }, _getRadius: function () {
                    var e = this.polar[this._index];
                    return this.parsePercent(e.radius, Math.min(this.zr.getWidth(), this.zr.getHeight()) / 2)
                }, _buildSpiderWeb: function (e) {
                    var t = this.polar[e], n = t.__ecIndicator, a = t.splitArea, i = t.splitLine, o = this.getCenter(e), r = t.splitNumber, s = i.lineStyle.color, l = i.lineStyle.width, h = i.show, d = this.deepQuery(this._queryTarget, "axisLine");
                    this._addArea(n, r, o, a, s, l, h), d.show && this._addLine(n, o, d)
                }, _addAxisLabel: function (t) {
                    for (var n, i, o, r, i, s, l, d, c, p, m = e("../util/accMath"), u = this.polar[t], V = this.deepQuery(this._queryTarget, "indicator"), U = u.__ecIndicator, f = this.deepQuery(this._queryTarget, "splitNumber"), _ = this.getCenter(t), g = 0; g < V.length; g++)if (n = this.deepQuery([V[g], u, this.option], "axisLabel"), n.show) {
                        var y = this.deepQuery([n, u, this.option], "textStyle"), b = this.deepQuery([n, u], "formatter");
                        if (o = {}, o.textFont = this.getFont(y), o.color = y.color, o = h.merge(o, n), o.lineWidth = o.width, i = U[g].vector, s = U[g].value, d = g / V.length * 2 * Math.PI, c = n.offset || 10, p = n.interval || 0, !s)return;
                        for (var k = 1; f >= k; k += p + 1)r = h.merge({}, o), l = m.accAdd(s.min, m.accMul(s.step, k)), l = "function" == typeof b ? b(l) : "string" == typeof b ? b.replace("{a}", "{a0}").replace("{a0}", l) : this.numAddCommas(l), r.text = l, r.x = k * i[0] / f + Math.cos(d) * c + _[0], r.y = k * i[1] / f + Math.sin(d) * c + _[1], this.shapeList.push(new a({
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            style: r,
                            draggable: !1,
                            hoverable: !1
                        }))
                    }
                }, _buildText: function (e) {
                    for (var t, n, i, o, r, s, l, h = this.polar[e], d = h.__ecIndicator, c = this.deepQuery(this._queryTarget, "indicator"), p = this.getCenter(e), m = 0, u = 0, V = 0; V < c.length; V++)o = this.deepQuery([c[V], h, this.option], "name"), o.show && (l = this.deepQuery([o, h, this.option], "textStyle"), n = {}, n.textFont = this.getFont(l), n.color = l.color, n.text = "function" == typeof o.formatter ? o.formatter.call(this.myChart, c[V].text, V) : "string" == typeof o.formatter ? o.formatter.replace("{value}", c[V].text) : c[V].text, d[V].text = n.text, t = d[V].vector, i = Math.round(t[0]) > 0 ? "left" : Math.round(t[0]) < 0 ? "right" : "center", null == o.margin ? t = this._mapVector(t, p, 1.1) : (s = o.margin, m = t[0] > 0 ? s : -s, u = t[1] > 0 ? s : -s, m = 0 === t[0] ? 0 : m, u = 0 === t[1] ? 0 : u, t = this._mapVector(t, p, 1)), n.textAlign = i, n.x = t[0] + m, n.y = t[1] + u, r = o.rotate ? [o.rotate / 180 * Math.PI, t[0], t[1]] : [0, 0, 0], this.shapeList.push(new a({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: n,
                        draggable: !1,
                        hoverable: !1,
                        rotation: r
                    })))
                }, getIndicatorText: function (e, t) {
                    return this.polar[e] && this.polar[e].__ecIndicator[t] && this.polar[e].__ecIndicator[t].text
                }, getDropBox: function (e) {
                    var t, n, e = e || 0, a = this.polar[e], i = this.getCenter(e), o = a.__ecIndicator, r = o.length, s = [], l = a.type;
                    if ("polygon" == l) {
                        for (var h = 0; r > h; h++)t = o[h].vector, s.push(this._mapVector(t, i, 1.2));
                        n = this._getShape(s, "fill", "rgba(0,0,0,0)", "", 1)
                    } else"circle" == l && (n = this._getCircle("", 1, 1.2, i, "fill", "rgba(0,0,0,0)"));
                    return n
                }, _addArea: function (e, t, n, a, i, o, r) {
                    for (var s, l, h, d, c = this.deepQuery(this._queryTarget, "type"), p = 0; t > p; p++)l = (t - p) / t, r && ("polygon" == c ? (d = this._getPointList(e, l, n), s = this._getShape(d, "stroke", "", i, o)) : "circle" == c && (s = this._getCircle(i, o, l, n, "stroke")), this.shapeList.push(s)), a.show && (h = (t - p - 1) / t, this._addSplitArea(e, a, l, h, n, p))
                }, _getCircle: function (e, t, n, a, i, o) {
                    var s = this._getRadius();
                    return new r({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {x: a[0], y: a[1], r: s * n, brushType: i, strokeColor: e, lineWidth: t, color: o},
                        hoverable: !1,
                        draggable: !1
                    })
                }, _getRing: function (e, t, n, a) {
                    var i = this._getRadius();
                    return new s({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {x: a[0], y: a[1], r: t * i, r0: n * i, color: e, brushType: "fill"},
                        hoverable: !1,
                        draggable: !1
                    })
                }, _getPointList: function (e, t, n) {
                    for (var a, i = [], o = e.length, r = 0; o > r; r++)a = e[r].vector, i.push(this._mapVector(a, n, t));
                    return i
                }, _getShape: function (e, t, n, a, i) {
                    return new o({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {pointList: e, brushType: t, color: n, strokeColor: a, lineWidth: i},
                        hoverable: !1,
                        draggable: !1
                    })
                }, _addSplitArea: function (e, t, n, a, i, o) {
                    var r, s, l, h, d, c = e.length, p = t.areaStyle.color, m = [], c = e.length, u = this.deepQuery(this._queryTarget, "type");
                    if ("string" == typeof p && (p = [p]), s = p.length, r = p[o % s], "polygon" == u)for (var V = 0; c > V; V++)m = [], l = e[V].vector, h = e[(V + 1) % c].vector, m.push(this._mapVector(l, i, n)), m.push(this._mapVector(l, i, a)), m.push(this._mapVector(h, i, a)), m.push(this._mapVector(h, i, n)), d = this._getShape(m, "fill", r, "", 1), this.shapeList.push(d); else"circle" == u && (d = this._getRing(r, n, a, i), this.shapeList.push(d))
                }, _mapVector: function (e, t, n) {
                    return [e[0] * n + t[0], e[1] * n + t[1]]
                }, getCenter: function (e) {
                    var e = e || 0;
                    return this.parseCenter(this.zr, this.polar[e].center)
                }, _addLine: function (e, t, n) {
                    for (var a, i, o = e.length, r = n.lineStyle, s = r.color, l = r.width, h = r.type, d = 0; o > d; d++)i = e[d].vector, a = this._getLine(t[0], t[1], i[0] + t[0], i[1] + t[1], s, l, h), this.shapeList.push(a)
                }, _getLine: function (e, t, n, a, o, r, s) {
                    return new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {xStart: e, yStart: t, xEnd: n, yEnd: a, strokeColor: o, lineWidth: r, lineType: s},
                        hoverable: !1
                    })
                }, _adjustIndicatorValue: function (t) {
                    for (var n, a, i, o = this.polar[t], r = this.deepQuery(this._queryTarget, "indicator"), s = r.length, l = o.__ecIndicator, h = this._getSeriesData(t), d = o.boundaryGap, c = o.splitNumber, p = o.scale, m = e("../util/smartSteps"), u = 0; s > u; u++) {
                        if ("number" == typeof r[u].max)n = r[u].max, a = r[u].min || 0, i = {max: n, min: a}; else {
                            var V = this._findValue(h, u, c, d);
                            a = V.min, n = V.max
                        }
                        !p && a >= 0 && n >= 0 && (a = 0), !p && 0 >= a && 0 >= n && (n = 0);
                        var U = m(a, n, c, i);
                        l[u].value = {min: U.min, max: U.max, step: U.step}
                    }
                }, _getSeriesData: function (e) {
                    for (var t, n, a, i = [], o = this.component.legend, r = 0; r < this.series.length; r++)if (t = this.series[r], t.type == l.CHART_TYPE_RADAR) {
                        n = t.data || [];
                        for (var s = 0; s < n.length; s++)a = this.deepQuery([n[s], t, this.option], "polarIndex") || 0, a != e || o && !o.isSelected(n[s].name) || i.push(n[s])
                    }
                    return i
                }, _findValue: function (e, t, n, a) {
                    function i(e) {
                        (e > o || void 0 === o) && (o = e), (r > e || void 0 === r) && (r = e)
                    }

                    var o, r, s;
                    if (e && 0 !== e.length) {
                        if (1 == e.length && (r = 0), 1 != e.length)for (var l = 0; l < e.length; l++)i(this.getDataFromOption(e[l].value[t])); else {
                            s = e[0];
                            for (var l = 0; l < s.value.length; l++)i(this.getDataFromOption(s.value[l]))
                        }
                        var h = Math.abs(o - r);
                        return r -= Math.abs(h * a[0]), o += Math.abs(h * a[1]), r === o && (0 === o ? o = 1 : o > 0 ? r = o / n : o /= n), {
                            max: o,
                            min: r
                        }
                    }
                }, getVector: function (e, t, n) {
                    e = e || 0, t = t || 0;
                    var a = this.polar[e].__ecIndicator;
                    if (!(t >= a.length)) {
                        var i, o = this.polar[e].__ecIndicator[t], r = this.getCenter(e), s = o.vector, l = o.value.max, h = o.value.min;
                        if ("undefined" == typeof n)return r;
                        switch (n) {
                            case"min":
                                n = h;
                                break;
                            case"max":
                                n = l;
                                break;
                            case"center":
                                n = (l + h) / 2
                        }
                        return i = l != h ? (n - h) / (l - h) : .5, this._mapVector(s, r, i)
                    }
                }, isInside: function (e) {
                    var t = this.getNearestIndex(e);
                    return t ? t.polarIndex : -1
                }, getNearestIndex: function (e) {
                    for (var t, n, a, i, o, r, s, l, h, c = 0; c < this.polar.length; c++) {
                        if (t = this.polar[c], n = this.getCenter(c), e[0] == n[0] && e[1] == n[1])return {
                            polarIndex: c,
                            valueIndex: 0
                        };
                        if (a = this._getRadius(), o = t.startAngle, r = t.indicator, s = r.length, l = 2 * Math.PI / s, i = d.cartesian2polar(e[0] - n[0], n[1] - e[1]), e[0] - n[0] < 0 && (i[1] += Math.PI), i[1] < 0 && (i[1] += 2 * Math.PI), h = i[1] - o / 180 * Math.PI + 2 * Math.PI, Math.abs(Math.cos(h % (l / 2))) * a > i[0])return {
                            polarIndex: c,
                            valueIndex: Math.floor((h + l / 2) / l) % s
                        }
                    }
                }, getIndicator: function (e) {
                    var e = e || 0;
                    return this.polar[e].indicator
                }, refresh: function (e) {
                    e && (this.option = e, this.polar = this.option.polar, this.series = this.option.series), this.clear(), this._buildShape()
                }
            }, h.inherits(t, n), e("../component").define("polar", t), t
        }),n("echarts/util/coordinates", ["require", "zrender/tool/math"], function (e) {
            function t(e, t) {
                return [e * a.sin(t), e * a.cos(t)]
            }

            function n(e, t) {
                return [Math.sqrt(e * e + t * t), Math.atan(t / e)]
            }

            var a = e("zrender/tool/math");
            return {polar2cartesian: t, cartesian2polar: n}
        }),n("echarts/chart/chord", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Sector", "../util/shape/Ribbon", "../util/shape/Icon", "zrender/shape/BezierCurve", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/vector", "../data/Graph", "../layout/Chord", "../chart"], function (e) {
            "use strict";
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.scaleLineLength = 4, this.scaleUnitAngle = 4, this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Line"), o = e("zrender/shape/Sector"), r = e("../util/shape/Ribbon"), s = e("../util/shape/Icon"), l = e("zrender/shape/BezierCurve"), h = e("../config");
            h.chord = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                radius: ["65%", "75%"],
                center: ["50%", "50%"],
                padding: 2,
                sort: "none",
                sortSub: "none",
                startAngle: 90,
                clockWise: !0,
                ribbonType: !0,
                minRadius: 10,
                maxRadius: 20,
                symbol: "circle",
                showScale: !1,
                showScaleText: !1,
                itemStyle: {
                    normal: {
                        borderWidth: 0,
                        borderColor: "#000",
                        label: {show: !0, rotate: !1, distance: 5},
                        chordStyle: {width: 1, color: "black", borderWidth: 1, borderColor: "#999", opacity: .5}
                    },
                    emphasis: {
                        borderWidth: 0,
                        borderColor: "#000",
                        chordStyle: {width: 1, color: "black", borderWidth: 1, borderColor: "#999"}
                    }
                }
            };
            var d = e("../util/ecData"), c = e("zrender/tool/util"), p = e("zrender/tool/vector"), m = e("../data/Graph"), u = e("../layout/Chord");
            return t.prototype = {
                type: h.CHART_TYPE_CHORD, _init: function () {
                    var e = this.series;
                    this.selectedMap = {};
                    for (var t = {}, n = {}, a = 0, i = e.length; i > a; a++)if (e[a].type === this.type) {
                        var o = this.isSelected(e[a].name);
                        this.selectedMap[e[a].name] = o, o && this.buildMark(a), this.reformOption(e[a]), t[e[a].name] = e[a]
                    }
                    for (var a = 0, i = e.length; i > a; a++)if (e[a].type === this.type)if (e[a].insertToSerie) {
                        var r = t[e[a].insertToSerie];
                        e[a]._referenceSerie = r
                    } else n[e[a].name] = [e[a]];
                    for (var a = 0, i = e.length; i > a; a++)if (e[a].type === this.type && e[a].insertToSerie) {
                        for (var s = e[a]._referenceSerie; s && s._referenceSerie;)s = s._referenceSerie;
                        n[s.name] && this.selectedMap[e[a].name] && n[s.name].push(e[a])
                    }
                    for (var l in n)this._buildChords(n[l]);
                    this.addShapeList()
                }, _getNodeCategory: function (e, t) {
                    return e.categories && e.categories[t.category || 0]
                }, _getNodeQueryTarget: function (e, t) {
                    var n = this._getNodeCategory(e, t);
                    return [t, n, e]
                }, _getEdgeQueryTarget: function (e, t, n) {
                    return n = n || "normal", [t.itemStyle && t.itemStyle[n], e.itemStyle[n].chordStyle]
                }, _buildChords: function (e) {
                    for (var t = [], n = e[0], a = function (e) {
                        return e.layout.size > 0
                    }, i = function (e) {
                        return function (t) {
                            return e.getEdge(t.node2, t.node1)
                        }
                    }, o = 0; o < e.length; o++) {
                        var r = e[o];
                        if (this.selectedMap[r.name]) {
                            var s;
                            r.matrix ? s = this._getSerieGraphFromDataMatrix(r, n) : r.links && (s = this._getSerieGraphFromNodeLinks(r, n)), s.filterNode(a, this), r.ribbonType && s.filterEdge(i(s)), t.push(s), s.__serie = r
                        }
                    }
                    if (t.length) {
                        var l = t[0];
                        if (!n.ribbonType) {
                            var h = n.minRadius, d = n.maxRadius, c = 1 / 0, p = -(1 / 0);
                            l.eachNode(function (e) {
                                p = Math.max(e.layout.size, p), c = Math.min(e.layout.size, c)
                            });
                            var m = (d - h) / (p - c);
                            l.eachNode(function (e) {
                                var t = this._getNodeQueryTarget(n, e), a = this.query(t, "symbolSize");
                                e.layout.size = p === c ? a || c : a || (e.layout.size - c) * m + h
                            }, this)
                        }
                        var V = new u;
                        V.clockWise = n.clockWise, V.startAngle = n.startAngle * Math.PI / 180, V.clockWise || (V.startAngle = -V.startAngle), V.padding = n.padding * Math.PI / 180, V.sort = n.sort, V.sortSub = n.sortSub, V.directed = n.ribbonType, V.run(t);
                        var U = this.query(n, "itemStyle.normal.label.show");
                        if (n.ribbonType) {
                            this._buildSectors(n, 0, l, n, t), U && this._buildLabels(n, 0, l, n, t);
                            for (var o = 0, f = 0; o < e.length; o++)this.selectedMap[e[o].name] && this._buildRibbons(e, o, t[f++], n);
                            n.showScale && this._buildScales(n, 0, l)
                        } else {
                            this._buildNodeIcons(n, 0, l, n, t), U && this._buildLabels(n, 0, l, n, t);
                            for (var o = 0, f = 0; o < e.length; o++)this.selectedMap[e[o].name] && this._buildEdgeCurves(e, o, t[f++], n, l)
                        }
                        this._initHoverHandler(e, t)
                    }
                }, _getSerieGraphFromDataMatrix: function (e, t) {
                    for (var n = [], a = 0, i = [], o = 0; o < e.matrix.length; o++)i[o] = e.matrix[o].slice();
                    for (var r = e.data || e.nodes, o = 0; o < r.length; o++) {
                        var s = {}, l = r[o];
                        l.rawIndex = o;
                        for (var h in l)"name" === h ? s.id = l.name : s[h] = l[h];
                        var d = this._getNodeCategory(t, l), c = d ? d.name : l.name;
                        if (this.selectedMap[c] = this.isSelected(c), this.selectedMap[c])n.push(s), a++; else {
                            i.splice(a, 1);
                            for (var p = 0; p < i.length; p++)i[p].splice(a, 1)
                        }
                    }
                    var u = m.fromMatrix(n, i, !0);
                    return u.eachNode(function (e) {
                        e.layout = {size: e.data.outValue}, e.rawIndex = e.data.rawIndex
                    }), u.eachEdge(function (e) {
                        e.layout = {weight: e.data.weight}
                    }), u
                }, _getSerieGraphFromNodeLinks: function (e, t) {
                    for (var n = new m(!0), a = e.data || e.nodes, i = 0, o = a.length; o > i; i++) {
                        var r = a[i];
                        if (r && !r.ignore) {
                            var s = this._getNodeCategory(t, r), l = s ? s.name : r.name;
                            if (this.selectedMap[l] = this.isSelected(l), this.selectedMap[l]) {
                                var h = n.addNode(r.name, r);
                                h.rawIndex = i
                            }
                        }
                    }
                    for (var i = 0, o = e.links.length; o > i; i++) {
                        var d = e.links[i], c = d.source, p = d.target;
                        "number" == typeof c && (c = a[c], c && (c = c.name)), "number" == typeof p && (p = a[p], p && (p = p.name));
                        var u = n.addEdge(c, p, d);
                        u && (u.rawIndex = i)
                    }
                    return n.eachNode(function (e) {
                        var n = e.data.value;
                        if (null == n)if (n = 0, t.ribbonType)for (var a = 0; a < e.outEdges.length; a++)n += e.outEdges[a].data.weight || 0; else for (var a = 0; a < e.edges.length; a++)n += e.edges[a].data.weight || 0;
                        e.layout = {size: n}
                    }), n.eachEdge(function (e) {
                        e.layout = {weight: null == e.data.weight ? 1 : e.data.weight}
                    }), n
                }, _initHoverHandler: function (e, t) {
                    var n = e[0], a = t[0], i = this;
                    a.eachNode(function (e) {
                        e.shape.onmouseover = function () {
                            a.eachNode(function (e) {
                                e.shape.style.opacity = .1, e.labelShape && (e.labelShape.style.opacity = .1, e.labelShape.modSelf()), e.shape.modSelf()
                            });
                            for (var n = 0; n < t.length; n++)for (var o = 0; o < t[n].edges.length; o++) {
                                var r = t[n].edges[o], s = i._getEdgeQueryTarget(t[n].__serie, r.data);
                                r.shape.style.opacity = .1 * i.deepQuery(s, "opacity"), r.shape.modSelf()
                            }
                            e.shape.style.opacity = 1, e.labelShape && (e.labelShape.style.opacity = 1);
                            for (var n = 0; n < t.length; n++) {
                                var l = t[n].getNodeById(e.id);
                                if (l)for (var o = 0; o < l.outEdges.length; o++) {
                                    var r = l.outEdges[o], s = i._getEdgeQueryTarget(t[n].__serie, r.data);
                                    r.shape.style.opacity = i.deepQuery(s, "opacity");
                                    var h = t[0].getNodeById(r.node2.id);
                                    h && (h.shape && (h.shape.style.opacity = 1), h.labelShape && (h.labelShape.style.opacity = 1))
                                }
                            }
                            i.zr.refreshNextFrame()
                        }, e.shape.onmouseout = function () {
                            a.eachNode(function (e) {
                                e.shape.style.opacity = 1, e.labelShape && (e.labelShape.style.opacity = 1, e.labelShape.modSelf()), e.shape.modSelf()
                            });
                            for (var e = 0; e < t.length; e++)for (var o = 0; o < t[e].edges.length; o++) {
                                var r = t[e].edges[o], s = [r.data, n];
                                r.shape.style.opacity = i.deepQuery(s, "itemStyle.normal.chordStyle.opacity"), r.shape.modSelf()
                            }
                            i.zr.refreshNextFrame()
                        }
                    })
                }, _buildSectors: function (e, t, n, a) {
                    var i = this.parseCenter(this.zr, a.center), r = this.parseRadius(this.zr, a.radius), s = a.clockWise, l = s ? 1 : -1;
                    n.eachNode(function (n) {
                        var h = this._getNodeCategory(a, n.data), c = this.getColor(h ? h.name : n.id), p = n.layout.startAngle / Math.PI * 180 * l, m = n.layout.endAngle / Math.PI * 180 * l, u = new o({
                            zlevel: e.zlevel,
                            z: e.z,
                            style: {
                                x: i[0],
                                y: i[1],
                                r0: r[0],
                                r: r[1],
                                startAngle: p,
                                endAngle: m,
                                brushType: "fill",
                                opacity: 1,
                                color: c,
                                clockWise: s
                            },
                            clickable: a.clickable,
                            highlightStyle: {brushType: "fill"}
                        });
                        u.style.lineWidth = this.deepQuery([n.data, a], "itemStyle.normal.borderWidth"), u.highlightStyle.lineWidth = this.deepQuery([n.data, a], "itemStyle.emphasis.borderWidth"), u.style.strokeColor = this.deepQuery([n.data, a], "itemStyle.normal.borderColor"), u.highlightStyle.strokeColor = this.deepQuery([n.data, a], "itemStyle.emphasis.borderColor"), u.style.lineWidth > 0 && (u.style.brushType = "both"), u.highlightStyle.lineWidth > 0 && (u.highlightStyle.brushType = "both"), d.pack(u, e, t, n.data, n.rawIndex, n.id, n.category), this.shapeList.push(u), n.shape = u
                    }, this)
                }, _buildNodeIcons: function (e, t, n, a) {
                    var i = this.parseCenter(this.zr, a.center), o = this.parseRadius(this.zr, a.radius), r = o[1];
                    n.eachNode(function (n) {
                        var o = n.layout.startAngle, l = n.layout.endAngle, h = (o + l) / 2, c = r * Math.cos(h), p = r * Math.sin(h), m = this._getNodeQueryTarget(a, n.data), u = this._getNodeCategory(a, n.data), V = this.deepQuery(m, "itemStyle.normal.color");
                        V || (V = this.getColor(u ? u.name : n.id));
                        var U = new s({
                            zlevel: e.zlevel,
                            z: e.z + 1,
                            style: {
                                x: -n.layout.size,
                                y: -n.layout.size,
                                width: 2 * n.layout.size,
                                height: 2 * n.layout.size,
                                iconType: this.deepQuery(m, "symbol"),
                                color: V,
                                brushType: "both",
                                lineWidth: this.deepQuery(m, "itemStyle.normal.borderWidth"),
                                strokeColor: this.deepQuery(m, "itemStyle.normal.borderColor")
                            },
                            highlightStyle: {
                                color: this.deepQuery(m, "itemStyle.emphasis.color"),
                                lineWidth: this.deepQuery(m, "itemStyle.emphasis.borderWidth"),
                                strokeColor: this.deepQuery(m, "itemStyle.emphasis.borderColor")
                            },
                            clickable: a.clickable,
                            position: [c + i[0], p + i[1]]
                        });
                        d.pack(U, e, t, n.data, n.rawIndex, n.id, n.category), this.shapeList.push(U), n.shape = U
                    }, this)
                }, _buildLabels: function (e, t, n, i) {
                    var o = this.query(i, "itemStyle.normal.label.rotate"), r = this.query(i, "itemStyle.normal.label.distance"), s = this.parseCenter(this.zr, i.center), l = this.parseRadius(this.zr, i.radius), h = i.clockWise, d = h ? 1 : -1;
                    n.eachNode(function (t) {
                        var n = t.layout.startAngle / Math.PI * 180 * d, h = t.layout.endAngle / Math.PI * 180 * d, c = (n * -d + h * -d) / 2;
                        c %= 360, 0 > c && (c += 360);
                        var m = 90 >= c || c >= 270;
                        c = c * Math.PI / 180;
                        var u = [Math.cos(c), -Math.sin(c)], V = 0;
                        V = i.ribbonType ? i.showScaleText ? 35 + r : r : r + t.layout.size;
                        var U = p.scale([], u, l[1] + V);
                        p.add(U, U, s);
                        var f = {
                            zlevel: e.zlevel,
                            z: e.z + 1,
                            hoverable: !1,
                            style: {text: null == t.data.label ? t.id : t.data.label, textAlign: m ? "left" : "right"}
                        };
                        o ? (f.rotation = m ? c : Math.PI + c, f.style.x = m ? l[1] + V : -l[1] - V, f.style.y = 0, f.position = s.slice()) : (f.style.x = U[0], f.style.y = U[1]), f.style.color = this.deepQuery([t.data, i], "itemStyle.normal.label.textStyle.color") || "#000000", f.style.textFont = this.getFont(this.deepQuery([t.data, i], "itemStyle.normal.label.textStyle")), f = new a(f), this.shapeList.push(f), t.labelShape = f
                    }, this)
                }, _buildRibbons: function (e, t, n, a) {
                    var i = e[t], o = this.parseCenter(this.zr, a.center), s = this.parseRadius(this.zr, a.radius);
                    n.eachEdge(function (l, h) {
                        var c, p = n.getEdge(l.node2, l.node1);
                        if (p && !l.shape) {
                            if (p.shape)return void(l.shape = p.shape);
                            var m = l.layout.startAngle / Math.PI * 180, u = l.layout.endAngle / Math.PI * 180, V = p.layout.startAngle / Math.PI * 180, U = p.layout.endAngle / Math.PI * 180;
                            c = this.getColor(1 === e.length ? l.layout.weight <= p.layout.weight ? l.node1.id : l.node2.id : i.name);
                            var f, _, g = this._getEdgeQueryTarget(i, l.data), y = this._getEdgeQueryTarget(i, l.data, "emphasis"), b = new r({
                                zlevel: i.zlevel,
                                z: i.z,
                                style: {
                                    x: o[0],
                                    y: o[1],
                                    r: s[0],
                                    source0: m,
                                    source1: u,
                                    target0: V,
                                    target1: U,
                                    brushType: "both",
                                    opacity: this.deepQuery(g, "opacity"),
                                    color: c,
                                    lineWidth: this.deepQuery(g, "borderWidth"),
                                    strokeColor: this.deepQuery(g, "borderColor"),
                                    clockWise: a.clockWise
                                },
                                clickable: a.clickable,
                                highlightStyle: {
                                    brushType: "both",
                                    opacity: this.deepQuery(y, "opacity"),
                                    lineWidth: this.deepQuery(y, "borderWidth"),
                                    strokeColor: this.deepQuery(y, "borderColor")
                                }
                            });
                            l.layout.weight <= p.layout.weight ? (f = p.node1, _ = p.node2) : (f = l.node1, _ = l.node2), d.pack(b, i, t, l.data, null == l.rawIndex ? h : l.rawIndex, l.data.name || f.id + "-" + _.id, f.id, _.id), this.shapeList.push(b), l.shape = b
                        }
                    }, this)
                }, _buildEdgeCurves: function (e, t, n, a, i) {
                    var o = e[t], r = this.parseCenter(this.zr, a.center);
                    n.eachEdge(function (e, n) {
                        var a = i.getNodeById(e.node1.id), s = i.getNodeById(e.node2.id), h = a.shape, c = s.shape, p = this._getEdgeQueryTarget(o, e.data), m = this._getEdgeQueryTarget(o, e.data, "emphasis"), u = new l({
                            zlevel: o.zlevel,
                            z: o.z,
                            style: {
                                xStart: h.position[0],
                                yStart: h.position[1],
                                xEnd: c.position[0],
                                yEnd: c.position[1],
                                cpX1: r[0],
                                cpY1: r[1],
                                lineWidth: this.deepQuery(p, "width"),
                                strokeColor: this.deepQuery(p, "color"),
                                opacity: this.deepQuery(p, "opacity")
                            },
                            highlightStyle: {
                                lineWidth: this.deepQuery(m, "width"),
                                strokeColor: this.deepQuery(m, "color"),
                                opacity: this.deepQuery(m, "opacity")
                            }
                        });
                        d.pack(u, o, t, e.data, null == e.rawIndex ? n : e.rawIndex, e.data.name || e.node1.id + "-" + e.node2.id, e.node1.id, e.node2.id), this.shapeList.push(u), e.shape = u
                    }, this)
                }, _buildScales: function (e, t, n) {
                    var o, r, s = e.clockWise, l = this.parseCenter(this.zr, e.center), h = this.parseRadius(this.zr, e.radius), d = s ? 1 : -1, c = 0, m = -(1 / 0);
                    e.showScaleText && (n.eachNode(function (e) {
                        var t = e.data.value;
                        t > m && (m = t), c += t
                    }), m > 1e10 ? (o = "b", r = 1e-9) : m > 1e7 ? (o = "m", r = 1e-6) : m > 1e4 ? (o = "k", r = .001) : (o = "", r = 1));
                    var u = c / (360 - e.padding);
                    n.eachNode(function (t) {
                        for (var n = t.layout.startAngle / Math.PI * 180, c = t.layout.endAngle / Math.PI * 180, m = n; ;) {
                            if (s && m > c || !s && c > m)break;
                            var V = m / 180 * Math.PI, U = [Math.cos(V), Math.sin(V)], f = p.scale([], U, h[1] + 1);
                            p.add(f, f, l);
                            var _ = p.scale([], U, h[1] + this.scaleLineLength);
                            p.add(_, _, l);
                            var g = new i({
                                zlevel: e.zlevel,
                                z: e.z - 1,
                                hoverable: !1,
                                style: {
                                    xStart: f[0],
                                    yStart: f[1],
                                    xEnd: _[0],
                                    yEnd: _[1],
                                    lineCap: "round",
                                    brushType: "stroke",
                                    strokeColor: "#666",
                                    lineWidth: 1
                                }
                            });
                            this.shapeList.push(g), m += d * this.scaleUnitAngle
                        }
                        if (e.showScaleText)for (var y = n, b = 5 * u * this.scaleUnitAngle, k = 0; ;) {
                            if (s && y > c || !s && c > y)break;
                            var V = y;
                            V %= 360, 0 > V && (V += 360);
                            var x = 90 >= V || V >= 270, v = new a({
                                zlevel: e.zlevel,
                                z: e.z - 1,
                                hoverable: !1,
                                style: {
                                    x: x ? h[1] + this.scaleLineLength + 4 : -h[1] - this.scaleLineLength - 4,
                                    y: 0,
                                    text: Math.round(10 * k) / 10 + o,
                                    textAlign: x ? "left" : "right"
                                },
                                position: l.slice(),
                                rotation: x ? [-V / 180 * Math.PI, 0, 0] : [-(V + 180) / 180 * Math.PI, 0, 0]
                            });
                            this.shapeList.push(v), k += b * r, y += d * this.scaleUnitAngle * 5
                        }
                    }, this)
                }, refresh: function (e) {
                    if (e && (this.option = e, this.series = e.series), this.legend = this.component.legend, this.legend)this.getColor = function (e) {
                        return this.legend.getColor(e)
                    }, this.isSelected = function (e) {
                        return this.legend.isSelected(e)
                    }; else {
                        var t = {}, n = 0;
                        this.getColor = function (e) {
                            return t[e] ? t[e] : (t[e] || (t[e] = this.zr.getColor(n++)), t[e])
                        }, this.isSelected = function () {
                            return !0
                        }
                    }
                    this.backupShapeList(), this._init()
                }, reformOption: function (e) {
                    var t = c.merge;
                    e = t(t(e || {}, this.ecTheme.chord), h.chord), e.itemStyle.normal.label.textStyle = this.getTextStyle(e.itemStyle.normal.label.textStyle), this.z = e.z, this.zlevel = e.zlevel
                }
            }, c.inherits(t, n), e("../chart").define("chord", t), t
        }),n("echarts/util/shape/Ribbon", ["require", "zrender/shape/Base", "zrender/shape/util/PathProxy", "zrender/tool/util", "zrender/tool/area"], function (e) {
            function t(e) {
                n.call(this, e), this._pathProxy = new a
            }

            var n = e("zrender/shape/Base"), a = e("zrender/shape/util/PathProxy"), i = e("zrender/tool/util"), o = e("zrender/tool/area");
            return t.prototype = {
                type: "ribbon", buildPath: function (e, t) {
                    var n = t.clockWise || !1, a = this._pathProxy;
                    a.begin(e);
                    var i = t.x, o = t.y, r = t.r, s = t.source0 / 180 * Math.PI, l = t.source1 / 180 * Math.PI, h = t.target0 / 180 * Math.PI, d = t.target1 / 180 * Math.PI, c = i + Math.cos(s) * r, p = o + Math.sin(s) * r, m = i + Math.cos(l) * r, u = o + Math.sin(l) * r, V = i + Math.cos(h) * r, U = o + Math.sin(h) * r, f = i + Math.cos(d) * r, _ = o + Math.sin(d) * r;
                    a.moveTo(c, p), a.arc(i, o, t.r, s, l, !n), a.bezierCurveTo(.7 * (i - m) + m, .7 * (o - u) + u, .7 * (i - V) + V, .7 * (o - U) + U, V, U), (t.source0 !== t.target0 || t.source1 !== t.target1) && (a.arc(i, o, t.r, h, d, !n), a.bezierCurveTo(.7 * (i - f) + f, .7 * (o - _) + _, .7 * (i - c) + c, .7 * (o - p) + p, c, p))
                }, getRect: function (e) {
                    return e.__rect ? e.__rect : (this._pathProxy.isEmpty() || this.buildPath(null, e), this._pathProxy.fastBoundingRect())
                }, isCover: function (e, t) {
                    var n = this.getRect(this.style);
                    return e >= n.x && e <= n.x + n.width && t >= n.y && t <= n.y + n.height ? o.isInsidePath(this._pathProxy.pathCommands, 0, "fill", e, t) : void 0
                }
            }, i.inherits(t, n), t
        }),n("echarts/data/Graph", ["require", "zrender/tool/util"], function (e) {
            var t = e("zrender/tool/util"), n = function (e) {
                this._directed = e || !1, this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}
            };
            n.prototype.isDirected = function () {
                return this._directed
            }, n.prototype.addNode = function (e, t) {
                if (this._nodesMap[e])return this._nodesMap[e];
                var a = new n.Node(e, t);
                return this.nodes.push(a), this._nodesMap[e] = a, a
            }, n.prototype.getNodeById = function (e) {
                return this._nodesMap[e]
            }, n.prototype.addEdge = function (e, t, a) {
                if ("string" == typeof e && (e = this._nodesMap[e]), "string" == typeof t && (t = this._nodesMap[t]), e && t) {
                    var i = e.id + "-" + t.id;
                    if (this._edgesMap[i])return this._edgesMap[i];
                    var o = new n.Edge(e, t, a);
                    return this._directed && (e.outEdges.push(o), t.inEdges.push(o)), e.edges.push(o), e !== t && t.edges.push(o), this.edges.push(o), this._edgesMap[i] = o, o
                }
            }, n.prototype.removeEdge = function (e) {
                var n = e.node1, a = e.node2, i = n.id + "-" + a.id;
                this._directed && (n.outEdges.splice(t.indexOf(n.outEdges, e), 1), a.inEdges.splice(t.indexOf(a.inEdges, e), 1)), n.edges.splice(t.indexOf(n.edges, e), 1), n !== a && a.edges.splice(t.indexOf(a.edges, e), 1), delete this._edgesMap[i], this.edges.splice(t.indexOf(this.edges, e), 1)
            }, n.prototype.getEdge = function (e, t) {
                return "string" != typeof e && (e = e.id), "string" != typeof t && (t = t.id), this._directed ? this._edgesMap[e + "-" + t] : this._edgesMap[e + "-" + t] || this._edgesMap[t + "-" + e]
            }, n.prototype.removeNode = function (e) {
                if ("string" != typeof e || (e = this._nodesMap[e])) {
                    delete this._nodesMap[e.id], this.nodes.splice(t.indexOf(this.nodes, e), 1);
                    for (var n = 0; n < this.edges.length;) {
                        var a = this.edges[n];
                        a.node1 === e || a.node2 === e ? this.removeEdge(a) : n++
                    }
                }
            }, n.prototype.filterNode = function (e, t) {
                for (var n = this.nodes.length, a = 0; n > a;)e.call(t, this.nodes[a], a) ? a++ : (this.removeNode(this.nodes[a]), n--)
            }, n.prototype.filterEdge = function (e, t) {
                for (var n = this.edges.length, a = 0; n > a;)e.call(t, this.edges[a], a) ? a++ : (this.removeEdge(this.edges[a]), n--)
            }, n.prototype.eachNode = function (e, t) {
                for (var n = this.nodes.length, a = 0; n > a; a++)this.nodes[a] && e.call(t, this.nodes[a], a)
            }, n.prototype.eachEdge = function (e, t) {
                for (var n = this.edges.length, a = 0; n > a; a++)this.edges[a] && e.call(t, this.edges[a], a)
            }, n.prototype.clear = function () {
                this.nodes.length = 0, this.edges.length = 0, this._nodesMap = {}, this._edgesMap = {}
            }, n.prototype.breadthFirstTraverse = function (e, t, n, a) {
                if ("string" == typeof t && (t = this._nodesMap[t]), t) {
                    var i = "edges";
                    "out" === n ? i = "outEdges" : "in" === n && (i = "inEdges");
                    for (var o = 0; o < this.nodes.length; o++)this.nodes[o].__visited = !1;
                    if (!e.call(a, t, null))for (var r = [t]; r.length;)for (var s = r.shift(), l = s[i], o = 0; o < l.length; o++) {
                        var h = l[o], d = h.node1 === s ? h.node2 : h.node1;
                        if (!d.__visited) {
                            if (e.call(d, d, s))return;
                            r.push(d), d.__visited = !0
                        }
                    }
                }
            }, n.prototype.clone = function () {
                for (var e = new n(this._directed), t = 0; t < this.nodes.length; t++)e.addNode(this.nodes[t].id, this.nodes[t].data);
                for (var t = 0; t < this.edges.length; t++) {
                    var a = this.edges[t];
                    e.addEdge(a.node1.id, a.node2.id, a.data)
                }
                return e
            };
            var a = function (e, t) {
                this.id = e, this.data = t || null, this.inEdges = [], this.outEdges = [], this.edges = []
            };
            a.prototype.degree = function () {
                return this.edges.length
            }, a.prototype.inDegree = function () {
                return this.inEdges.length
            }, a.prototype.outDegree = function () {
                return this.outEdges.length
            };
            var i = function (e, t, n) {
                this.node1 = e, this.node2 = t, this.data = n || null
            };
            return n.Node = a, n.Edge = i, n.fromMatrix = function (e, t, a) {
                if (t && t.length && t[0].length === t.length && e.length === t.length) {
                    for (var i = t.length, o = new n(a), r = 0; i > r; r++) {
                        var s = o.addNode(e[r].id, e[r]);
                        s.data.value = 0, a && (s.data.outValue = s.data.inValue = 0)
                    }
                    for (var r = 0; i > r; r++)for (var l = 0; i > l; l++) {
                        var h = t[r][l];
                        a && (o.nodes[r].data.outValue += h, o.nodes[l].data.inValue += h), o.nodes[r].data.value += h, o.nodes[l].data.value += h
                    }
                    for (var r = 0; i > r; r++)for (var l = r; i > l; l++) {
                        var h = t[r][l];
                        if (0 !== h) {
                            var d = o.nodes[r], c = o.nodes[l], p = o.addEdge(d, c, {});
                            if (p.data.weight = h, r !== l && a && t[l][r]) {
                                var m = o.addEdge(c, d, {});
                                m.data.weight = t[l][r]
                            }
                        }
                    }
                    return o
                }
            }, n
        }),n("echarts/layout/Chord", ["require"], function () {
            var e = function (e) {
                e = e || {}, this.sort = e.sort || null, this.sortSub = e.sortSub || null, this.padding = .05, this.startAngle = e.startAngle || 0, this.clockWise = null == e.clockWise ? !1 : e.clockWise, this.center = e.center || [0, 0], this.directed = !0
            };
            e.prototype.run = function (e) {
                e instanceof Array || (e = [e]);
                var a = e.length;
                if (a) {
                    for (var i = e[0], o = i.nodes.length, r = [], s = 0, l = 0; o > l; l++) {
                        var h = i.nodes[l], d = {size: 0, subGroups: [], node: h};
                        r.push(d);
                        for (var c = 0, p = 0; p < e.length; p++) {
                            var m = e[p], u = m.getNodeById(h.id);
                            if (u) {
                                d.size += u.layout.size;
                                for (var V = this.directed ? u.outEdges : u.edges, U = 0; U < V.length; U++) {
                                    var f = V[U], _ = f.layout.weight;
                                    d.subGroups.push({weight: _, edge: f, graph: m}), c += _
                                }
                            }
                        }
                        s += d.size;
                        for (var g = d.size / c, U = 0; U < d.subGroups.length; U++)d.subGroups[U].weight *= g;
                        "ascending" === this.sortSub ? d.subGroups.sort(t) : "descending" === this.sort && (d.subGroups.sort(t), d.subGroups.reverse())
                    }
                    "ascending" === this.sort ? r.sort(n) : "descending" === this.sort && (r.sort(n), r.reverse());
                    for (var g = (2 * Math.PI - this.padding * o) / s, y = this.startAngle, b = this.clockWise ? 1 : -1, l = 0; o > l; l++) {
                        var d = r[l];
                        d.node.layout.startAngle = y, d.node.layout.endAngle = y + b * d.size * g, d.node.layout.subGroups = [];
                        for (var U = 0; U < d.subGroups.length; U++) {
                            var k = d.subGroups[U];
                            k.edge.layout.startAngle = y, y += b * k.weight * g, k.edge.layout.endAngle = y
                        }
                        y = d.node.layout.endAngle + b * this.padding
                    }
                }
            };
            var t = function (e, t) {
                return e.weight - t.weight
            }, n = function (e, t) {
                return e.size - t.size
            };
            return e
        }),n("echarts/chart/force", ["require", "./base", "../data/Graph", "../layout/Force", "zrender/shape/Line", "zrender/shape/BezierCurve", "zrender/shape/Image", "../util/shape/Icon", "../config", "../util/ecData", "zrender/tool/util", "zrender/config", "zrender/tool/vector", "../chart"], function (e) {
            "use strict";
            function t(e, t, o, h, d) {
                var c = this;
                r.call(this, e, t, o, h, d), this.__nodePositionMap = {}, this._graph = new s(!0), this._layout = new l, this._layout.onupdate = function () {
                    c._step()
                }, this._steps = 1, this.ondragstart = function () {
                    n.apply(c, arguments)
                }, this.ondragend = function () {
                    i.apply(c, arguments)
                }, this.ondrop = function () {
                }, this.shapeHandler.ondragstart = function () {
                    c.isDragstart = !0
                }, this.onmousemove = function () {
                    a.apply(c, arguments)
                }, this.refresh(h)
            }

            function n(e) {
                if (this.isDragstart && e.target) {
                    var t = e.target;
                    t.fixed = !0, this.isDragstart = !1, this.zr.on(U.EVENT.MOUSEMOVE, this.onmousemove)
                }
            }

            function a() {
                this._layout.temperature = .8, this._step()
            }

            function i(e, t) {
                if (this.isDragend && e.target) {
                    var n = e.target;
                    n.fixed = !1, t.dragIn = !0, t.needRefresh = !1, this.isDragend = !1, this.zr.un(U.EVENT.MOUSEMOVE, this.onmousemove)
                }
            }

            function o(e, t, n) {
                var a = f.create();
                return a[0] = (Math.random() - .5) * n + e, a[1] = (Math.random() - .5) * n + t, a
            }

            var r = e("./base"), s = e("../data/Graph"), l = e("../layout/Force"), h = e("zrender/shape/Line"), d = e("zrender/shape/BezierCurve"), c = e("zrender/shape/Image"), p = e("../util/shape/Icon"), m = e("../config");
            m.force = {
                zlevel: 1,
                z: 2,
                center: ["50%", "50%"],
                size: "100%",
                preventOverlap: !1,
                coolDown: .99,
                minRadius: 10,
                maxRadius: 20,
                ratioScaling: !1,
                large: !1,
                useWorker: !1,
                steps: 1,
                scaling: 1,
                gravity: 1,
                symbol: "circle",
                symbolSize: 0,
                linkSymbol: null,
                linkSymbolSize: [10, 15],
                draggable: !0,
                clickable: !0,
                roam: !1,
                itemStyle: {
                    normal: {
                        label: {show: !1, position: "inside"},
                        nodeStyle: {brushType: "both", borderColor: "#5182ab", borderWidth: 1},
                        linkStyle: {color: "#5182ab", width: 1, type: "line"}
                    }, emphasis: {label: {show: !1}, nodeStyle: {}, linkStyle: {opacity: 0}}
                }
            };
            var u = e("../util/ecData"), V = e("zrender/tool/util"), U = e("zrender/config"), f = e("zrender/tool/vector");
            return t.prototype = {
                constructor: t, type: m.CHART_TYPE_FORCE, _init: function () {
                    this.selectedMap = {};
                    var e, t = this.component.legend, n = this.series;
                    this.clear();
                    for (var a = 0, i = n.length; i > a; a++) {
                        var o = n[a];
                        if (o.type === m.CHART_TYPE_FORCE) {
                            if (n[a] = this.reformOption(n[a]), e = n[a].name || "", this.selectedMap[e] = t ? t.isSelected(e) : !0, !this.selectedMap[e])continue;
                            this.buildMark(a), this._initSerie(o, a);
                            break
                        }
                    }
                    this.animationEffect()
                }, _getNodeCategory: function (e, t) {
                    return e.categories && e.categories[t.category || 0]
                }, _getNodeQueryTarget: function (e, t, n) {
                    n = n || "normal";
                    var a = this._getNodeCategory(e, t) || {};
                    return [t.itemStyle && t.itemStyle[n], a && a.itemStyle && a.itemStyle[n], e.itemStyle[n].nodeStyle]
                }, _getEdgeQueryTarget: function (e, t, n) {
                    return n = n || "normal", [t.itemStyle && t.itemStyle[n], e.itemStyle[n].linkStyle]
                }, _initSerie: function (e, t) {
                    this._temperature = 1, e.matrix ? this._graph = this._getSerieGraphFromDataMatrix(e) : e.links && (this._graph = this._getSerieGraphFromNodeLinks(e)), this._buildLinkShapes(e, t), this._buildNodeShapes(e, t);
                    var n = e.roam === !0 || "move" === e.roam, a = e.roam === !0 || "scale" === e.roam;
                    this.zr.modLayer(this.getZlevelBase(), {
                        panable: n,
                        zoomable: a
                    }), (this.query("markPoint.effect.show") || this.query("markLine.effect.show")) && this.zr.modLayer(m.EFFECT_ZLEVEL, {
                        panable: n,
                        zoomable: a
                    }), this._initLayout(e), this._step()
                }, _getSerieGraphFromDataMatrix: function (e) {
                    for (var t = [], n = 0, a = [], i = 0; i < e.matrix.length; i++)a[i] = e.matrix[i].slice();
                    for (var o = e.data || e.nodes, i = 0; i < o.length; i++) {
                        var r = {}, l = o[i];
                        for (var h in l)"name" === h ? r.id = l.name : r[h] = l[h];
                        var d = this._getNodeCategory(e, l), c = d ? d.name : l.name;
                        if (this.selectedMap[c] = this.isSelected(c), this.selectedMap[c])t.push(r), n++; else {
                            a.splice(n, 1);
                            for (var p = 0; p < a.length; p++)a[p].splice(n, 1)
                        }
                    }
                    var m = s.fromMatrix(t, a, !0);
                    return m.eachNode(function (e, t) {
                        e.layout = {size: e.data.value, mass: 0}, e.rawIndex = t
                    }), m.eachEdge(function (e) {
                        e.layout = {weight: e.data.weight}
                    }), m
                }, _getSerieGraphFromNodeLinks: function (e) {
                    for (var t = new s(!0), n = e.data || e.nodes, a = 0, i = n.length; i > a; a++) {
                        var o = n[a];
                        if (o && !o.ignore) {
                            var r = this._getNodeCategory(e, o), l = r ? r.name : o.name;
                            if (this.selectedMap[l] = this.isSelected(l), this.selectedMap[l]) {
                                var h = t.addNode(o.name, o);
                                h.rawIndex = a
                            }
                        }
                    }
                    for (var a = 0, i = e.links.length; i > a; a++) {
                        var d = e.links[a], c = d.source, p = d.target;
                        "number" == typeof c && (c = n[c], c && (c = c.name)), "number" == typeof p && (p = n[p], p && (p = p.name));
                        var m = t.addEdge(c, p, d);
                        m && (m.rawIndex = a)
                    }
                    return t.eachNode(function (e) {
                        var t = e.data.value;
                        if (null == t) {
                            t = 0;
                            for (var n = 0; n < e.edges.length; n++)t += e.edges[n].data.weight || 0
                        }
                        e.layout = {size: t, mass: 0}
                    }), t.eachEdge(function (e) {
                        e.layout = {weight: null == e.data.weight ? 1 : e.data.weight}
                    }), t
                }, _initLayout: function (e) {
                    var t = this._graph, n = t.nodes.length, a = this.query(e, "minRadius"), i = this.query(e, "maxRadius");
                    this._steps = e.steps || 1;
                    var r = this._layout;
                    r.center = this.parseCenter(this.zr, e.center), r.width = this.parsePercent(e.size, this.zr.getWidth()), r.height = this.parsePercent(e.size, this.zr.getHeight()), r.large = e.large, r.scaling = e.scaling, r.ratioScaling = e.ratioScaling, r.gravity = e.gravity, r.temperature = 1, r.coolDown = e.coolDown, r.preventNodeEdgeOverlap = e.preventOverlap, r.preventNodeOverlap = e.preventOverlap;
                    for (var s = 1 / 0, l = -(1 / 0), h = 0; n > h; h++) {
                        var d = t.nodes[h];
                        l = Math.max(d.layout.size, l), s = Math.min(d.layout.size, s)
                    }
                    for (var c = l - s, h = 0; n > h; h++) {
                        var d = t.nodes[h];
                        c > 0 ? (d.layout.size = (d.layout.size - s) * (i - a) / c + a, d.layout.mass = d.layout.size / i) : (d.layout.size = (i - a) / 2, d.layout.mass = .5)
                    }
                    for (var h = 0; n > h; h++) {
                        var d = t.nodes[h];
                        if ("undefined" != typeof this.__nodePositionMap[d.id])d.layout.position = f.create(), f.copy(d.layout.position, this.__nodePositionMap[d.id]); else if ("undefined" != typeof d.data.initial)d.layout.position = f.create(), f.copy(d.layout.position, d.data.initial); else {
                            var p = this._layout.center, m = Math.min(this._layout.width, this._layout.height);
                            d.layout.position = o(p[0], p[1], .8 * m)
                        }
                        var u = d.shape.style, V = d.layout.size;
                        u.width = u.width || 2 * V, u.height = u.height || 2 * V, u.x = -u.width / 2, u.y = -u.height / 2, f.copy(d.shape.position, d.layout.position)
                    }
                    n = t.edges.length, l = -(1 / 0);
                    for (var h = 0; n > h; h++) {
                        var U = t.edges[h];
                        U.layout.weight > l && (l = U.layout.weight)
                    }
                    for (var h = 0; n > h; h++) {
                        var U = t.edges[h];
                        U.layout.weight /= l
                    }
                    this._layout.init(t, e.useWorker)
                }, _buildNodeShapes: function (e, t) {
                    var n = this._graph, a = this.query(e, "categories");
                    n.eachNode(function (n) {
                        var i = this._getNodeCategory(e, n.data), o = [n.data, i, e], r = this._getNodeQueryTarget(e, n.data), s = this._getNodeQueryTarget(e, n.data, "emphasis"), l = new p({
                            style: {
                                x: 0,
                                y: 0,
                                color: this.deepQuery(r, "color"),
                                brushType: "both",
                                strokeColor: this.deepQuery(r, "strokeColor") || this.deepQuery(r, "borderColor"),
                                lineWidth: this.deepQuery(r, "lineWidth") || this.deepQuery(r, "borderWidth")
                            },
                            highlightStyle: {
                                color: this.deepQuery(s, "color"),
                                strokeColor: this.deepQuery(s, "strokeColor") || this.deepQuery(s, "borderColor"),
                                lineWidth: this.deepQuery(s, "lineWidth") || this.deepQuery(s, "borderWidth")
                            },
                            clickable: e.clickable,
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase()
                        });
                        l.style.color || (l.style.color = this.getColor(i ? i.name : n.id)), l.style.iconType = this.deepQuery(o, "symbol");
                        var h = this.deepQuery(o, "symbolSize") || 0;
                        "number" == typeof h && (h = [h, h]), l.style.width = 2 * h[0], l.style.height = 2 * h[1], l.style.iconType.match("image") && (l.style.image = l.style.iconType.replace(new RegExp("^image:\\/\\/"), ""), l = new c({
                            style: l.style,
                            highlightStyle: l.highlightStyle,
                            clickable: l.clickable,
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase()
                        })), this.deepQuery(o, "itemStyle.normal.label.show") && (l.style.text = null == n.data.label ? n.id : n.data.label, l.style.textPosition = this.deepQuery(o, "itemStyle.normal.label.position"), l.style.textColor = this.deepQuery(o, "itemStyle.normal.label.textStyle.color"), l.style.textFont = this.getFont(this.deepQuery(o, "itemStyle.normal.label.textStyle") || {})), this.deepQuery(o, "itemStyle.emphasis.label.show") && (l.highlightStyle.textPosition = this.deepQuery(o, "itemStyle.emphasis.label.position"), l.highlightStyle.textColor = this.deepQuery(o, "itemStyle.emphasis.label.textStyle.color"), l.highlightStyle.textFont = this.getFont(this.deepQuery(o, "itemStyle.emphasis.label.textStyle") || {})), this.deepQuery(o, "draggable") && (this.setCalculable(l), l.dragEnableTime = 0, l.draggable = !0, l.ondragstart = this.shapeHandler.ondragstart, l.ondragover = null);
                        var d = "";
                        if ("undefined" != typeof n.category) {
                            var i = a[n.category];
                            d = i && i.name || ""
                        }
                        u.pack(l, e, t, n.data, n.rawIndex, n.data.name || "", n.category), this.shapeList.push(l), this.zr.addShape(l), n.shape = l
                    }, this)
                }, _buildLinkShapes: function (e, t) {
                    for (var n = this._graph, a = n.edges.length, i = 0; a > i; i++) {
                        var o = n.edges[i], r = o.data, s = o.node1, l = o.node2, c = n.getEdge(l, s), m = this._getEdgeQueryTarget(e, r), U = this.deepQuery(m, "type");
                        e.linkSymbol && "none" !== e.linkSymbol && (U = "line");
                        var f = "line" === U ? h : d, _ = new f({
                            style: {xStart: 0, yStart: 0, xEnd: 0, yEnd: 0},
                            clickable: this.query(e, "clickable"),
                            highlightStyle: {},
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase()
                        });
                        if (c && c.shape && (_.style.offset = 4, c.shape.style.offset = 4), V.merge(_.style, this.query(e, "itemStyle.normal.linkStyle"), !0), V.merge(_.highlightStyle, this.query(e, "itemStyle.emphasis.linkStyle"), !0), "undefined" != typeof r.itemStyle && (r.itemStyle.normal && V.merge(_.style, r.itemStyle.normal, !0), r.itemStyle.emphasis && V.merge(_.highlightStyle, r.itemStyle.emphasis, !0)), _.style.lineWidth = _.style.lineWidth || _.style.width, _.style.strokeColor = _.style.strokeColor || _.style.color, _.highlightStyle.lineWidth = _.highlightStyle.lineWidth || _.highlightStyle.width, _.highlightStyle.strokeColor = _.highlightStyle.strokeColor || _.highlightStyle.color, u.pack(_, e, t, o.data, null == o.rawIndex ? i : o.rawIndex, o.data.name || s.id + " - " + l.id, s.id, l.id), this.shapeList.push(_), this.zr.addShape(_), o.shape = _, e.linkSymbol && "none" !== e.linkSymbol) {
                            var g = new p({
                                style: {
                                    x: -5,
                                    y: 0,
                                    width: e.linkSymbolSize[0],
                                    height: e.linkSymbolSize[1],
                                    iconType: e.linkSymbol,
                                    brushType: "fill",
                                    color: _.style.strokeColor
                                },
                                highlightStyle: {brushType: "fill"},
                                position: [0, 0],
                                rotation: 0,
                                zlevel: this.getZlevelBase(),
                                z: this.getZBase()
                            });
                            _._symbolShape = g, this.shapeList.push(g), this.zr.addShape(g)
                        }
                    }
                }, _updateLinkShapes: function () {
                    for (var e = f.create(), t = f.create(), n = f.create(), a = f.create(), i = this._graph.edges, o = 0, r = i.length; r > o; o++) {
                        var s = i[o], l = s.node1.shape, h = s.node2.shape;
                        f.copy(n, l.position), f.copy(a, h.position);
                        var d = s.shape.style;
                        if (f.sub(e, n, a), f.normalize(e, e), d.offset ? (t[0] = e[1], t[1] = -e[0], f.scaleAndAdd(n, n, t, d.offset), f.scaleAndAdd(a, a, t, d.offset)) : "bezier-curve" === s.shape.type && (d.cpX1 = (n[0] + a[0]) / 2 - (a[1] - n[1]) / 4, d.cpY1 = (n[1] + a[1]) / 2 - (n[0] - a[0]) / 4), d.xStart = n[0], d.yStart = n[1], d.xEnd = a[0], d.yEnd = a[1], s.shape.modSelf(), s.shape._symbolShape) {
                            var c = s.shape._symbolShape;
                            f.copy(c.position, a), f.scaleAndAdd(c.position, c.position, e, h.style.width / 2 + 2);
                            var p = Math.atan2(e[1], e[0]);
                            c.rotation = Math.PI / 2 - p, c.modSelf()
                        }
                    }
                }, _syncNodePositions: function () {
                    for (var e = this._graph, t = 0; t < e.nodes.length; t++) {
                        var n = e.nodes[t], a = n.layout.position, i = n.data, o = n.shape, r = o.fixed || i.fixX, s = o.fixed || i.fixY;
                        r === !0 ? r = 1 : isNaN(r) && (r = 0), s === !0 ? s = 1 : isNaN(s) && (s = 0), o.position[0] += (a[0] - o.position[0]) * (1 - r), o.position[1] += (a[1] - o.position[1]) * (1 - s), f.copy(a, o.position);
                        var l = i.name;
                        if (l) {
                            var h = this.__nodePositionMap[l];
                            h || (h = this.__nodePositionMap[l] = f.create()), f.copy(h, a)
                        }
                        o.modSelf()
                    }
                }, _step: function () {
                    this._syncNodePositions(), this._updateLinkShapes(), this.zr.refreshNextFrame(), this._layout.temperature > .01 ? this._layout.step(this._steps) : this.messageCenter.dispatch(m.EVENT.FORCE_LAYOUT_END, {}, {}, this.myChart)
                }, refresh: function (e) {
                    if (e && (this.option = e, this.series = this.option.series), this.legend = this.component.legend, this.legend)this.getColor = function (e) {
                        return this.legend.getColor(e)
                    }, this.isSelected = function (e) {
                        return this.legend.isSelected(e)
                    }; else {
                        var t = {}, n = 0;
                        this.getColor = function (e) {
                            return t[e] ? t[e] : (t[e] || (t[e] = this.zr.getColor(n++)), t[e])
                        }, this.isSelected = function () {
                            return !0
                        }
                    }
                    this._init()
                }, dispose: function () {
                    this.clear(), this.shapeList = null, this.effectList = null, this._layout.dispose(), this._layout = null, this.__nodePositionMap = {}
                }, getPosition: function () {
                    var e = [];
                    return this._graph.eachNode(function (t) {
                        t.layout && e.push({name: t.data.name, position: Array.prototype.slice.call(t.layout.position)})
                    }), e
                }
            }, V.inherits(t, r), e("../chart").define("force", t), t
        }),n("echarts/layout/Force", ["require", "./forceLayoutWorker", "zrender/tool/vector"], function (e) {
            function t() {
                if ("undefined" != typeof Worker && "undefined" != typeof Blob)try {
                    var e = new Blob([a.getWorkerCode()]);
                    n = window.URL.createObjectURL(e)
                } catch (t) {
                    n = ""
                }
                return n
            }

            var n, a = e("./forceLayoutWorker"), i = e("zrender/tool/vector"), o = window.requestAnimationFrame || window.msRequestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (e) {
                    setTimeout(e, 16)
                }, r = "undefined" == typeof Float32Array ? Array : Float32Array, s = function (e) {
                "undefined" == typeof n && t(), e = e || {}, this.width = e.width || 500, this.height = e.height || 500, this.center = e.center || [this.width / 2, this.height / 2], this.ratioScaling = e.ratioScaling || !1, this.scaling = e.scaling || 1, this.gravity = "undefined" != typeof e.gravity ? e.gravity : 1, this.large = e.large || !1, this.preventNodeOverlap = e.preventNodeOverlap || !1, this.preventNodeEdgeOverlap = e.preventNodeEdgeOverlap || !1, this.maxSpeedIncrease = e.maxSpeedIncrease || 1, this.onupdate = e.onupdate || function () {
                }, this.temperature = e.temperature || 1, this.coolDown = e.coolDown || .99, this._layout = null, this._layoutWorker = null;
                var a = this, i = this._$onupdate;
                this._$onupdate = function (e) {
                    i.call(a, e)
                }
            };
            return s.prototype.updateConfig = function () {
                var e = this.width, t = this.height, n = Math.min(e, t), a = {
                    center: this.center,
                    width: this.ratioScaling ? e : n,
                    height: this.ratioScaling ? t : n,
                    scaling: this.scaling || 1,
                    gravity: this.gravity || 1,
                    barnesHutOptimize: this.large,
                    preventNodeOverlap: this.preventNodeOverlap,
                    preventNodeEdgeOverlap: this.preventNodeEdgeOverlap,
                    maxSpeedIncrease: this.maxSpeedIncrease
                };
                if (this._layoutWorker)this._layoutWorker.postMessage({
                    cmd: "updateConfig",
                    config: a
                }); else for (var i in a)this._layout[i] = a[i]
            }, s.prototype.init = function (e, t) {
                if (this._layoutWorker && (this._layoutWorker.terminate(), this._layoutWorker = null), n && t)try {
                    this._layoutWorker || (this._layoutWorker = new Worker(n), this._layoutWorker.onmessage = this._$onupdate), this._layout = null
                } catch (i) {
                    this._layoutWorker = null, this._layout || (this._layout = new a)
                } else this._layout || (this._layout = new a);
                this.temperature = 1, this.graph = e;
                for (var o = e.nodes.length, s = new r(2 * o), l = new r(o), h = new r(o), d = 0; o > d; d++) {
                    var c = e.nodes[d];
                    s[2 * d] = c.layout.position[0], s[2 * d + 1] = c.layout.position[1], l[d] = "undefined" == typeof c.layout.mass ? 1 : c.layout.mass, h[d] = "undefined" == typeof c.layout.size ? 1 : c.layout.size, c.layout.__index = d
                }
                o = e.edges.length;
                for (var p = new r(2 * o), m = new r(o), d = 0; o > d; d++) {
                    var u = e.edges[d];
                    p[2 * d] = u.node1.layout.__index, p[2 * d + 1] = u.node2.layout.__index, m[d] = u.layout.weight || 1
                }
                this._layoutWorker ? this._layoutWorker.postMessage({
                    cmd: "init",
                    nodesPosition: s,
                    nodesMass: l,
                    nodesSize: h,
                    edges: p,
                    edgesWeight: m
                }) : (this._layout.initNodes(s, l, h), this._layout.initEdges(p, m)), this.updateConfig()
            }, s.prototype.step = function (e) {
                var t = this.graph.nodes;
                if (this._layoutWorker) {
                    for (var n = new r(2 * t.length), a = 0; a < t.length; a++) {
                        var s = t[a];
                        n[2 * a] = s.layout.position[0], n[2 * a + 1] = s.layout.position[1]
                    }
                    this._layoutWorker.postMessage(n.buffer, [n.buffer]), this._layoutWorker.postMessage({
                        cmd: "update",
                        steps: e,
                        temperature: this.temperature,
                        coolDown: this.coolDown
                    });
                    for (var a = 0; e > a; a++)this.temperature *= this.coolDown
                } else {
                    o(this._$onupdate);
                    for (var a = 0; a < t.length; a++) {
                        var s = t[a];
                        i.copy(this._layout.nodes[a].position, s.layout.position)
                    }
                    for (var a = 0; e > a; a++)this._layout.temperature = this.temperature, this._layout.update(), this.temperature *= this.coolDown
                }
            }, s.prototype._$onupdate = function (e) {
                if (this._layoutWorker) {
                    for (var t = new Float32Array(e.data), n = 0; n < this.graph.nodes.length; n++) {
                        var a = this.graph.nodes[n];
                        a.layout.position[0] = t[2 * n], a.layout.position[1] = t[2 * n + 1]
                    }
                    this.onupdate && this.onupdate()
                } else if (this._layout) {
                    for (var n = 0; n < this.graph.nodes.length; n++) {
                        var a = this.graph.nodes[n];
                        i.copy(a.layout.position, this._layout.nodes[n].position)
                    }
                    this.onupdate && this.onupdate()
                }
            }, s.prototype.dispose = function () {
                this._layoutWorker && this._layoutWorker.terminate(), this._layoutWorker = null, this._layout = null
            }, s
        }),n("echarts/layout/forceLayoutWorker", ["require", "zrender/tool/vector"], function o(e) {
            "use strict";
            function t() {
                this.subRegions = [], this.nSubRegions = 0, this.node = null, this.mass = 0, this.centerOfMass = null, this.bbox = new l(4), this.size = 0
            }

            function n() {
                this.position = r.create(), this.force = r.create(), this.forcePrev = r.create(), this.speed = r.create(), this.speedPrev = r.create(), this.mass = 1, this.inDegree = 0, this.outDegree = 0
            }

            function a(e, t) {
                this.node1 = e, this.node2 = t, this.weight = 1
            }

            function i() {
                this.barnesHutOptimize = !1, this.barnesHutTheta = 1.5, this.repulsionByDegree = !1, this.preventNodeOverlap = !1, this.preventNodeEdgeOverlap = !1, this.strongGravity = !0, this.gravity = 1, this.scaling = 1, this.edgeWeightInfluence = 1, this.center = [0, 0], this.width = 500, this.height = 500, this.maxSpeedIncrease = 1, this.nodes = [], this.edges = [], this.bbox = new l(4), this._rootRegion = new t, this._rootRegion.centerOfMass = r.create(), this._massArr = null, this._k = 0
            }

            var r, s = "undefined" == typeof window && "undefined" == typeof e;
            r = s ? {
                create: function (e, t) {
                    var n = new Float32Array(2);
                    return n[0] = e || 0, n[1] = t || 0, n
                }, dist: function (e, t) {
                    var n = t[0] - e[0], a = t[1] - e[1];
                    return Math.sqrt(n * n + a * a)
                }, len: function (e) {
                    var t = e[0], n = e[1];
                    return Math.sqrt(t * t + n * n)
                }, scaleAndAdd: function (e, t, n, a) {
                    return e[0] = t[0] + n[0] * a, e[1] = t[1] + n[1] * a, e
                }, scale: function (e, t, n) {
                    return e[0] = t[0] * n, e[1] = t[1] * n, e
                }, add: function (e, t, n) {
                    return e[0] = t[0] + n[0], e[1] = t[1] + n[1], e
                }, sub: function (e, t, n) {
                    return e[0] = t[0] - n[0], e[1] = t[1] - n[1], e
                }, dot: function (e, t) {
                    return e[0] * t[0] + e[1] * t[1]
                }, normalize: function (e, t) {
                    var n = t[0], a = t[1], i = n * n + a * a;
                    return i > 0 && (i = 1 / Math.sqrt(i), e[0] = t[0] * i, e[1] = t[1] * i), e
                }, negate: function (e, t) {
                    return e[0] = -t[0], e[1] = -t[1], e
                }, copy: function (e, t) {
                    return e[0] = t[0], e[1] = t[1], e
                }, set: function (e, t, n) {
                    return e[0] = t, e[1] = n, e
                }
            } : e("zrender/tool/vector");
            var l = "undefined" == typeof Float32Array ? Array : Float32Array;
            if (t.prototype.beforeUpdate = function () {
                    for (var e = 0; e < this.nSubRegions; e++)this.subRegions[e].beforeUpdate();
                    this.mass = 0, this.centerOfMass && (this.centerOfMass[0] = 0, this.centerOfMass[1] = 0), this.nSubRegions = 0, this.node = null
                }, t.prototype.afterUpdate = function () {
                    this.subRegions.length = this.nSubRegions;
                    for (var e = 0; e < this.nSubRegions; e++)this.subRegions[e].afterUpdate()
                }, t.prototype.addNode = function (e) {
                    if (0 === this.nSubRegions) {
                        if (null == this.node)return void(this.node = e);
                        this._addNodeToSubRegion(this.node), this.node = null
                    }
                    this._addNodeToSubRegion(e), this._updateCenterOfMass(e)
                }, t.prototype.findSubRegion = function (e, t) {
                    for (var n = 0; n < this.nSubRegions; n++) {
                        var a = this.subRegions[n];
                        if (a.contain(e, t))return a
                    }
                }, t.prototype.contain = function (e, t) {
                    return this.bbox[0] <= e && this.bbox[2] >= e && this.bbox[1] <= t && this.bbox[3] >= t
                }, t.prototype.setBBox = function (e, t, n, a) {
                    this.bbox[0] = e, this.bbox[1] = t, this.bbox[2] = n, this.bbox[3] = a, this.size = (n - e + a - t) / 2
                }, t.prototype._newSubRegion = function () {
                    var e = this.subRegions[this.nSubRegions];
                    return e || (e = new t, this.subRegions[this.nSubRegions] = e), this.nSubRegions++, e
                }, t.prototype._addNodeToSubRegion = function (e) {
                    var t = this.findSubRegion(e.position[0], e.position[1]), n = this.bbox;
                    if (!t) {
                        var a = (n[0] + n[2]) / 2, i = (n[1] + n[3]) / 2, o = (n[2] - n[0]) / 2, r = (n[3] - n[1]) / 2, s = e.position[0] >= a ? 1 : 0, l = e.position[1] >= i ? 1 : 0, t = this._newSubRegion();
                        t.setBBox(s * o + n[0], l * r + n[1], (s + 1) * o + n[0], (l + 1) * r + n[1])
                    }
                    t.addNode(e)
                }, t.prototype._updateCenterOfMass = function (e) {
                    null == this.centerOfMass && (this.centerOfMass = r.create());
                    var t = this.centerOfMass[0] * this.mass, n = this.centerOfMass[1] * this.mass;
                    t += e.position[0] * e.mass, n += e.position[1] * e.mass, this.mass += e.mass, this.centerOfMass[0] = t / this.mass, this.centerOfMass[1] = n / this.mass
                }, i.prototype.nodeToNodeRepulsionFactor = function (e, t, n) {
                    return n * n * e / t
                }, i.prototype.edgeToNodeRepulsionFactor = function (e, t, n) {
                    return n * e / t
                }, i.prototype.attractionFactor = function (e, t, n) {
                    return e * t / n
                }, i.prototype.initNodes = function (e, t, a) {
                    this.temperature = 1;
                    var i = e.length / 2;
                    this.nodes.length = 0;
                    for (var o = "undefined" != typeof a, r = 0; i > r; r++) {
                        var s = new n;
                        s.position[0] = e[2 * r], s.position[1] = e[2 * r + 1], s.mass = t[r], o && (s.size = a[r]), this.nodes.push(s)
                    }
                    this._massArr = t, o && (this._sizeArr = a)
                }, i.prototype.initEdges = function (e, t) {
                    var n = e.length / 2;
                    this.edges.length = 0;
                    for (var i = "undefined" != typeof t, o = 0; n > o; o++) {
                        var r = e[2 * o], s = e[2 * o + 1], l = this.nodes[r], h = this.nodes[s];
                        if (l && h) {
                            l.outDegree++, h.inDegree++;
                            var d = new a(l, h);
                            i && (d.weight = t[o]), this.edges.push(d)
                        }
                    }
                }, i.prototype.update = function () {
                    var e = this.nodes.length;
                    if (this.updateBBox(), this._k = .4 * this.scaling * Math.sqrt(this.width * this.height / e), this.barnesHutOptimize) {
                        this._rootRegion.setBBox(this.bbox[0], this.bbox[1], this.bbox[2], this.bbox[3]), this._rootRegion.beforeUpdate();
                        for (var t = 0; e > t; t++)this._rootRegion.addNode(this.nodes[t]);
                        this._rootRegion.afterUpdate()
                    } else {
                        var n = 0, a = this._rootRegion.centerOfMass;
                        r.set(a, 0, 0);
                        for (var t = 0; e > t; t++) {
                            var i = this.nodes[t];
                            n += i.mass, r.scaleAndAdd(a, a, i.position, i.mass)
                        }
                        n > 0 && r.scale(a, a, 1 / n)
                    }
                    this.updateForce(), this.updatePosition()
                }, i.prototype.updateForce = function () {
                    for (var e = this.nodes.length, t = 0; e > t; t++) {
                        var n = this.nodes[t];
                        r.copy(n.forcePrev, n.force), r.copy(n.speedPrev, n.speed), r.set(n.force, 0, 0)
                    }
                    this.updateNodeNodeForce(), this.gravity > 0 && this.updateGravityForce(), this.updateEdgeForce(), this.preventNodeEdgeOverlap && this.updateNodeEdgeForce()
                }, i.prototype.updatePosition = function () {
                    for (var e = this.nodes.length, t = r.create(), n = 0; e > n; n++) {
                        var a = this.nodes[n], i = a.speed;
                        r.scale(a.force, a.force, 1 / 30);
                        var o = r.len(a.force) + .1, s = Math.min(o, 500) / o;
                        r.scale(a.force, a.force, s), r.add(i, i, a.force), r.scale(i, i, this.temperature), r.sub(t, i, a.speedPrev);
                        var l = r.len(t);
                        if (l > 0) {
                            r.scale(t, t, 1 / l);
                            var h = r.len(a.speedPrev);
                            h > 0 && (l = Math.min(l / h, this.maxSpeedIncrease) * h, r.scaleAndAdd(i, a.speedPrev, t, l))
                        }
                        var d = r.len(i), s = Math.min(d, 100) / (d + .1);
                        r.scale(i, i, s), r.add(a.position, a.position, i)
                    }
                }, i.prototype.updateNodeNodeForce = function () {
                    for (var e = this.nodes.length, t = 0; e > t; t++) {
                        var n = this.nodes[t];
                        if (this.barnesHutOptimize)this.applyRegionToNodeRepulsion(this._rootRegion, n); else for (var a = t + 1; e > a; a++) {
                            var i = this.nodes[a];
                            this.applyNodeToNodeRepulsion(n, i, !1)
                        }
                    }
                }, i.prototype.updateGravityForce = function () {
                    for (var e = 0; e < this.nodes.length; e++)this.applyNodeGravity(this.nodes[e])
                }, i.prototype.updateEdgeForce = function () {
                    for (var e = 0; e < this.edges.length; e++)this.applyEdgeAttraction(this.edges[e])
                }, i.prototype.updateNodeEdgeForce = function () {
                    for (var e = 0; e < this.nodes.length; e++)for (var t = 0; t < this.edges.length; t++)this.applyEdgeToNodeRepulsion(this.edges[t], this.nodes[e])
                }, i.prototype.applyRegionToNodeRepulsion = function () {
                    var e = r.create();
                    return function (t, n) {
                        if (t.node)this.applyNodeToNodeRepulsion(t.node, n, !0); else {
                            if (0 === t.mass && 0 === n.mass)return;
                            r.sub(e, n.position, t.centerOfMass);
                            var a = e[0] * e[0] + e[1] * e[1];
                            if (a > this.barnesHutTheta * t.size * t.size) {
                                var i = this._k * this._k * (n.mass + t.mass) / (a + 1);
                                r.scaleAndAdd(n.force, n.force, e, 2 * i)
                            } else for (var o = 0; o < t.nSubRegions; o++)this.applyRegionToNodeRepulsion(t.subRegions[o], n)
                        }
                    }
                }(), i.prototype.applyNodeToNodeRepulsion = function () {
                    var e = r.create();
                    return function (t, n, a) {
                        if (t !== n && (0 !== t.mass || 0 !== n.mass)) {
                            r.sub(e, t.position, n.position);
                            var i = e[0] * e[0] + e[1] * e[1];
                            if (0 !== i) {
                                var o, s = t.mass + n.mass, l = Math.sqrt(i);
                                r.scale(e, e, 1 / l), this.preventNodeOverlap ? (l = l - t.size - n.size, l > 0 ? o = this.nodeToNodeRepulsionFactor(s, l, this._k) : 0 >= l && (o = this._k * this._k * 10 * s)) : o = this.nodeToNodeRepulsionFactor(s, l, this._k), a || r.scaleAndAdd(t.force, t.force, e, 2 * o), r.scaleAndAdd(n.force, n.force, e, 2 * -o)
                            }
                        }
                    }
                }(), i.prototype.applyEdgeAttraction = function () {
                    var e = r.create();
                    return function (t) {
                        var n = t.node1, a = t.node2;
                        r.sub(e, n.position, a.position);
                        var i, o = r.len(e);
                        i = 0 === this.edgeWeightInfluence ? 1 : 1 == this.edgeWeightInfluence ? t.weight : Math.pow(t.weight, this.edgeWeightInfluence);
                        var s;
                        if (!(this.preventOverlap && (o = o - n.size - a.size, 0 >= o))) {
                            var s = this.attractionFactor(i, o, this._k);
                            r.scaleAndAdd(n.force, n.force, e, -s), r.scaleAndAdd(a.force, a.force, e, s)
                        }
                    }
                }(), i.prototype.applyNodeGravity = function () {
                    var e = r.create();
                    return function (t) {
                        r.sub(e, this.center, t.position), this.width > this.height ? e[1] *= this.width / this.height : e[0] *= this.height / this.width;
                        var n = r.len(e) / 100;
                        this.strongGravity ? r.scaleAndAdd(t.force, t.force, e, n * this.gravity * t.mass) : r.scaleAndAdd(t.force, t.force, e, this.gravity * t.mass / (n + 1))
                    }
                }(), i.prototype.applyEdgeToNodeRepulsion = function () {
                    var e = r.create(), t = r.create(), n = r.create();
                    return function (a, i) {
                        var o = a.node1, s = a.node2;
                        if (o !== i && s !== i) {
                            r.sub(e, s.position, o.position), r.sub(t, i.position, o.position);
                            var l = r.len(e);
                            r.scale(e, e, 1 / l);
                            var h = r.dot(e, t);
                            if (!(0 > h || h > l)) {
                                r.scaleAndAdd(n, o.position, e, h);
                                var d = r.dist(n, i.position) - i.size, c = this.edgeToNodeRepulsionFactor(i.mass, Math.max(d, .1), 100);
                                r.sub(e, i.position, n), r.normalize(e, e), r.scaleAndAdd(i.force, i.force, e, c), r.scaleAndAdd(o.force, o.force, e, -c), r.scaleAndAdd(s.force, s.force, e, -c)
                            }
                        }
                    }
                }(), i.prototype.updateBBox = function () {
                    for (var e = 1 / 0, t = 1 / 0, n = -(1 / 0), a = -(1 / 0), i = 0; i < this.nodes.length; i++) {
                        var o = this.nodes[i].position;
                        e = Math.min(e, o[0]), t = Math.min(t, o[1]), n = Math.max(n, o[0]), a = Math.max(a, o[1])
                    }
                    this.bbox[0] = e, this.bbox[1] = t, this.bbox[2] = n, this.bbox[3] = a
                }, i.getWorkerCode = function () {
                    var e = o.toString();
                    return e.slice(e.indexOf("{") + 1, e.lastIndexOf("return"))
                }, s) {
                var h = null;
                self.onmessage = function (e) {
                    if (e.data instanceof ArrayBuffer) {
                        if (!h)return;
                        for (var t = new Float32Array(e.data), n = t.length / 2, a = 0; n > a; a++) {
                            var o = h.nodes[a];
                            o.position[0] = t[2 * a], o.position[1] = t[2 * a + 1]
                        }
                    } else switch (e.data.cmd) {
                        case"init":
                            h || (h = new i), h.initNodes(e.data.nodesPosition, e.data.nodesMass, e.data.nodesSize), h.initEdges(e.data.edges, e.data.edgesWeight);
                            break;
                        case"updateConfig":
                            if (h)for (var r in e.data.config)h[r] = e.data.config[r];
                            break;
                        case"update":
                            var s = e.data.steps;
                            if (h) {
                                var n = h.nodes.length, t = new Float32Array(2 * n);
                                h.temperature = e.data.temperature;
                                for (var a = 0; s > a; a++)h.update(), h.temperature *= e.data.coolDown;
                                for (var a = 0; n > a; a++) {
                                    var o = h.nodes[a];
                                    t[2 * a] = o.position[0], t[2 * a + 1] = o.position[1]
                                }
                                self.postMessage(t.buffer, [t.buffer])
                            } else {
                                var l = new Float32Array;
                                self.postMessage(l.buffer, [l.buffer])
                            }
                    }
                }
            }
            return i
        }),n("echarts/chart/map", ["require", "./base", "zrender/shape/Text", "zrender/shape/Path", "zrender/shape/Circle", "zrender/shape/Rectangle", "zrender/shape/Line", "zrender/shape/Polygon", "zrender/shape/Ellipse", "zrender/shape/Image", "../component/dataRange", "../component/roamController", "../layer/heatmap", "../config", "../util/ecData", "zrender/tool/util", "zrender/config", "zrender/tool/event", "../util/mapData/params", "../util/mapData/textFixed", "../util/mapData/geoCoord", "../util/projection/svg", "../util/projection/normal", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o);
                var r = this;
                r._onmousewheel = function (e) {
                    return r.__onmousewheel(e)
                }, r._onmousedown = function (e) {
                    return r.__onmousedown(e)
                }, r._onmousemove = function (e) {
                    return r.__onmousemove(e)
                }, r._onmouseup = function (e) {
                    return r.__onmouseup(e)
                }, r._onroamcontroller = function (e) {
                    return r.__onroamcontroller(e)
                }, r._ondrhoverlink = function (e) {
                    return r.__ondrhoverlink(e)
                }, this._isAlive = !0, this._selectedMode = {}, this._activeMapType = {}, this._clickable = {}, this._hoverable = {}, this._showLegendSymbol = {}, this._selected = {}, this._mapTypeMap = {}, this._mapDataMap = {}, this._nameMap = {}, this._specialArea = {}, this._refreshDelayTicket, this._mapDataRequireCounter, this._markAnimation = !1, this._hoverLinkMap = {}, this._roamMap = {}, this._scaleLimitMap = {}, this._mx, this._my, this._mousedown, this._justMove, this._curMapType, this.refresh(i), this.zr.on(V.EVENT.MOUSEWHEEL, this._onmousewheel), this.zr.on(V.EVENT.MOUSEDOWN, this._onmousedown), t.bind(p.EVENT.ROAMCONTROLLER, this._onroamcontroller), t.bind(p.EVENT.DATA_RANGE_HOVERLINK, this._ondrhoverlink)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Path"), o = e("zrender/shape/Circle"), r = e("zrender/shape/Rectangle"), s = e("zrender/shape/Line"), l = e("zrender/shape/Polygon"), h = e("zrender/shape/Ellipse"), d = e("zrender/shape/Image");
            e("../component/dataRange"), e("../component/roamController");
            var c = e("../layer/heatmap"), p = e("../config");
            p.map = {
                zlevel: 0,
                z: 2,
                mapType: "china",
                showLegendSymbol: !0,
                dataRangeHoverLink: !0,
                hoverable: !0,
                clickable: !0,
                itemStyle: {
                    normal: {
                        borderColor: "rgba(0,0,0,0)",
                        borderWidth: 1,
                        areaStyle: {color: "#ccc"},
                        label: {show: !1, textStyle: {color: "rgb(139,69,19)"}}
                    },
                    emphasis: {
                        borderColor: "rgba(0,0,0,0)",
                        borderWidth: 1,
                        areaStyle: {color: "rgba(255,215,0,0.8)"},
                        label: {show: !1, textStyle: {color: "rgb(100,0,0)"}}
                    }
                }
            };
            var m = e("../util/ecData"), u = e("zrender/tool/util"), V = e("zrender/config"), U = e("zrender/tool/event"), f = e("../util/mapData/params").params, _ = e("../util/mapData/textFixed"), g = e("../util/mapData/geoCoord");
            return t.prototype = {
                type: p.CHART_TYPE_MAP, _buildShape: function () {
                    var e = this.series;
                    this.selectedMap = {}, this._activeMapType = {};
                    for (var t, n, a, i, o = this.component.legend, r = {}, s = {}, l = {}, h = {}, d = 0, c = e.length; c > d; d++)if (e[d].type == p.CHART_TYPE_MAP && (e[d] = this.reformOption(e[d]), n = e[d].mapType, s[n] = s[n] || {}, s[n][d] = !0, l[n] = l[n] || e[d].mapValuePrecision, this._scaleLimitMap[n] = this._scaleLimitMap[n] || {}, e[d].scaleLimit && u.merge(this._scaleLimitMap[n], e[d].scaleLimit, !0), this._roamMap[n] = e[d].roam || this._roamMap[n], (null == this._hoverLinkMap[n] || this._hoverLinkMap[n]) && (this._hoverLinkMap[n] = e[d].dataRangeHoverLink), this._nameMap[n] = this._nameMap[n] || {}, e[d].nameMap && u.merge(this._nameMap[n], e[d].nameMap, !0), this._activeMapType[n] = !0, e[d].textFixed && u.merge(_, e[d].textFixed, !0), e[d].geoCoord && u.merge(g, e[d].geoCoord, !0), this._selectedMode[n] = this._selectedMode[n] || e[d].selectedMode, (null == this._hoverable[n] || this._hoverable[n]) && (this._hoverable[n] = e[d].hoverable), (null == this._clickable[n] || this._clickable[n]) && (this._clickable[n] = e[d].clickable), (null == this._showLegendSymbol[n] || this._showLegendSymbol[n]) && (this._showLegendSymbol[n] = e[d].showLegendSymbol), h[n] = h[n] || e[d].mapValueCalculation, t = e[d].name, this.selectedMap[t] = o ? o.isSelected(t) : !0, this.selectedMap[t])) {
                        r[n] = r[n] || {}, a = e[d].data;
                        for (var m = 0, V = a.length; V > m; m++) {
                            i = this._nameChange(n, a[m].name), r[n][i] = r[n][i] || {
                                seriesIndex: [],
                                valueMap: {},
                                precision: 0
                            };
                            for (var U in a[m])"value" != U ? r[n][i][U] = a[m][U] : isNaN(a[m].value) || (null == r[n][i].value && (r[n][i].value = 0), r[n][i].precision = Math.max(this.getPrecision(+a[m].value), r[n][i].precision), r[n][i].value += +a[m].value, r[n][i].valueMap[d] = +a[m].value);
                            r[n][i].seriesIndex.push(d)
                        }
                    }
                    this._mapDataRequireCounter = 0;
                    for (var y in r)this._mapDataRequireCounter++;
                    this._clearSelected(), 0 === this._mapDataRequireCounter && (this.clear(), this.zr && this.zr.delShape(this.lastShapeList), this.lastShapeList = []);
                    for (var y in r) {
                        for (var V in r[y]) {
                            "average" == h[y] && (r[y][V].value /= r[y][V].seriesIndex.length);
                            var b = r[y][V].value;
                            null != b && (r[y][V].value = b.toFixed(null == l[y] ? r[y][V].precision : l[y]) - 0)
                        }
                        this._mapDataMap[y] = this._mapDataMap[y] || {}, this._mapDataMap[y].mapData ? this._mapDataCallback(y, r[y], s[y])(this._mapDataMap[y].mapData) : f[y.replace(/\|.*/, "")].getGeoJson && (this._specialArea[y] = f[y.replace(/\|.*/, "")].specialArea || this._specialArea[y], f[y.replace(/\|.*/, "")].getGeoJson(this._mapDataCallback(y, r[y], s[y])))
                    }
                }, _mapDataCallback: function (t, n, a) {
                    var i = this;
                    return function (o) {
                        i._isAlive && null != i._activeMapType[t] && (-1 != t.indexOf("|") && (o = i._getSubMapData(t, o)), i._mapDataMap[t].mapData = o, o.firstChild ? (i._mapDataMap[t].rate = 1, i._mapDataMap[t].projection = e("../util/projection/svg")) : (i._mapDataMap[t].rate = .75, i._mapDataMap[t].projection = e("../util/projection/normal")), i._buildMap(t, i._getProjectionData(t, o, a), n, a), i._buildMark(t, a), --i._mapDataRequireCounter <= 0 && (i.addShapeList(), i.zr.refreshNextFrame()), i._buildHeatmap(t))
                    }
                }, _clearSelected: function () {
                    for (var e in this._selected)this._activeMapType[this._mapTypeMap[e]] || (delete this._selected[e], delete this._mapTypeMap[e])
                }, _getSubMapData: function (e, t) {
                    for (var n = e.replace(/^.*\|/, ""), a = t.features, i = 0, o = a.length; o > i; i++)if (a[i].properties && a[i].properties.name == n) {
                        a = a[i], "United States of America" == n && a.geometry.coordinates.length > 1 && (a = {
                            geometry: {
                                coordinates: a.geometry.coordinates.slice(5, 6),
                                type: a.geometry.type
                            }, id: a.id, properties: a.properties, type: a.type
                        });
                        break
                    }
                    return {type: "FeatureCollection", features: [a]}
                }, _getProjectionData: function (e, t, n) {
                    var a, i = this._mapDataMap[e].projection, o = [], r = this._mapDataMap[e].bbox || i.getBbox(t, this._specialArea[e]);
                    a = this._mapDataMap[e].hasRoam ? this._mapDataMap[e].transform : this._getTransform(r, n, this._mapDataMap[e].rate);
                    var s, l = this._mapDataMap[e].lastTransform || {scale: {}};
                    a.left != l.left || a.top != l.top || a.scale.x != l.scale.x || a.scale.y != l.scale.y ? (s = i.geoJson2Path(t, a, this._specialArea[e]), l = u.clone(a)) : (a = this._mapDataMap[e].transform, s = this._mapDataMap[e].pathArray), this._mapDataMap[e].bbox = r, this._mapDataMap[e].transform = a, this._mapDataMap[e].lastTransform = l, this._mapDataMap[e].pathArray = s;
                    for (var h = [a.left, a.top], d = 0, c = s.length; c > d; d++)o.push(this._getSingleProvince(e, s[d], h));
                    if (this._specialArea[e])for (var p in this._specialArea[e])o.push(this._getSpecialProjectionData(e, t, p, this._specialArea[e][p], h));
                    if ("china" == e) {
                        var m = this.geo2pos(e, g["南海诸岛"] || f["南海诸岛"].textCoord), V = a.scale.x / 10.5, U = [32 * V + m[0], 83 * V + m[1]];
                        _["南海诸岛"] && (U[0] += _["南海诸岛"][0], U[1] += _["南海诸岛"][1]), o.push({
                            name: this._nameChange(e, "南海诸岛"),
                            path: f["南海诸岛"].getPath(m, V),
                            position: h,
                            textX: U[0],
                            textY: U[1]
                        })
                    }
                    return o
                }, _getSpecialProjectionData: function (t, n, a, i, o) {
                    n = this._getSubMapData("x|" + a, n);
                    var r = e("../util/projection/normal"), s = r.getBbox(n), l = this.geo2pos(t, [i.left, i.top]), h = this.geo2pos(t, [i.left + i.width, i.top + i.height]), d = Math.abs(h[0] - l[0]), c = Math.abs(h[1] - l[1]), p = s.width, m = s.height, u = d / .75 / p, V = c / m;
                    u > V ? (u = .75 * V, d = p * u) : (V = u, u = .75 * V, c = m * V);
                    var U = {OffsetLeft: l[0], OffsetTop: l[1], scale: {x: u, y: V}}, f = r.geoJson2Path(n, U);
                    return this._getSingleProvince(t, f[0], o)
                }, _getSingleProvince: function (e, t, n) {
                    var a, i = t.properties.name, o = _[i] || [0, 0];
                    if (g[i])a = this.geo2pos(e, g[i]); else if (t.cp)a = [t.cp[0] + o[0], t.cp[1] + o[1]]; else {
                        var r = this._mapDataMap[e].bbox;
                        a = this.geo2pos(e, [r.left + r.width / 2, r.top + r.height / 2]), a[0] += o[0], a[1] += o[1]
                    }
                    return t.name = this._nameChange(e, i), t.position = n, t.textX = a[0], t.textY = a[1], t
                }, _getTransform: function (e, t, n) {
                    var a, i, o, r, s, l, h, d = this.series, c = this.zr.getWidth(), p = this.zr.getHeight(), m = Math.round(.02 * Math.min(c, p));
                    for (var u in t)a = d[u].mapLocation || {}, o = a.x || o, s = a.y || s, l = a.width || l, h = a.height || h;
                    i = this.parsePercent(o, c), i = isNaN(i) ? m : i, r = this.parsePercent(s, p), r = isNaN(r) ? m : r, l = null == l ? c - i - 2 * m : this.parsePercent(l, c), h = null == h ? p - r - 2 * m : this.parsePercent(h, p);
                    var V = e.width, U = e.height, f = l / n / V, _ = h / U;
                    if (f > _ ? (f = _ * n, l = V * f) : (_ = f, f = _ * n, h = U * _), isNaN(o))switch (o = o || "center", o + "") {
                        case"center":
                            i = Math.floor((c - l) / 2);
                            break;
                        case"right":
                            i = c - l
                    }
                    if (isNaN(s))switch (s = s || "center", s + "") {
                        case"center":
                            r = Math.floor((p - h) / 2);
                            break;
                        case"bottom":
                            r = p - h
                    }
                    return {left: i, top: r, width: l, height: h, baseScale: 1, scale: {x: f, y: _}}
                }, _buildMap: function (e, t, n, d) {
                    for (var c, V, U, f, _, g, y, b, k, x, v, L = this.series, w = this.component.legend, W = this.component.dataRange, X = 0, I = t.length; I > X; X++) {
                        if (b = u.clone(t[X]), k = {
                                name: b.name,
                                path: b.path,
                                position: u.clone(b.position)
                            }, V = b.name, U = n[V]) {
                            _ = [U], c = "";
                            for (var K = 0, S = U.seriesIndex.length; S > K; K++) {
                                var C = L[U.seriesIndex[K]];
                                _.push(C), c += C.name + " ", w && this._showLegendSymbol[e] && w.hasColor(C.name) && this.shapeList.push(new o({
                                    zlevel: C.zlevel,
                                    z: C.z + 1,
                                    position: u.clone(b.position),
                                    _mapType: e,
                                    style: {x: b.textX + 3 + 7 * K, y: b.textY - 10, r: 3, color: w.getColor(C.name)},
                                    hoverable: !1
                                }))
                            }
                            f = U.value
                        } else {
                            U = {name: V, value: "-"}, c = "", _ = [];
                            for (var E in d)_.push(L[E]);
                            f = "-"
                        }
                        switch (this.ecTheme.map && _.push(this.ecTheme.map), _.push(p.map), g = W && !isNaN(f) ? W.getColor(f) : null, b.color = b.color || g || this.getItemStyleColor(this.deepQuery(_, "itemStyle.normal.color"), U.seriesIndex, -1, U) || this.deepQuery(_, "itemStyle.normal.areaStyle.color"), b.strokeColor = b.strokeColor || this.deepQuery(_, "itemStyle.normal.borderColor"), b.lineWidth = b.lineWidth || this.deepQuery(_, "itemStyle.normal.borderWidth"), k.color = this.getItemStyleColor(this.deepQuery(_, "itemStyle.emphasis.color"), U.seriesIndex, -1, U) || this.deepQuery(_, "itemStyle.emphasis.areaStyle.color") || b.color, k.strokeColor = this.deepQuery(_, "itemStyle.emphasis.borderColor") || b.strokeColor, k.lineWidth = this.deepQuery(_, "itemStyle.emphasis.borderWidth") || b.lineWidth, b.brushType = k.brushType = b.brushType || "both", b.lineJoin = k.lineJoin = "round", b._name = k._name = V, y = this.deepQuery(_, "itemStyle.normal.label.textStyle"), v = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 1,
                            position: u.clone(b.position),
                            _mapType: e,
                            _geo: this.pos2geo(e, [b.textX, b.textY]),
                            style: {
                                brushType: "fill",
                                x: b.textX,
                                y: b.textY,
                                text: this.getLabelText(V, f, _, "normal"),
                                _name: V,
                                textAlign: "center",
                                color: this.deepQuery(_, "itemStyle.normal.label.show") ? this.deepQuery(_, "itemStyle.normal.label.textStyle.color") : "rgba(0,0,0,0)",
                                textFont: this.getFont(y)
                            }
                        }, v._style = u.clone(v.style), v.highlightStyle = u.clone(v.style), this.deepQuery(_, "itemStyle.emphasis.label.show") ? (v.highlightStyle.text = this.getLabelText(V, f, _, "emphasis"), v.highlightStyle.color = this.deepQuery(_, "itemStyle.emphasis.label.textStyle.color") || v.style.color, y = this.deepQuery(_, "itemStyle.emphasis.label.textStyle") || y, v.highlightStyle.textFont = this.getFont(y)) : v.highlightStyle.color = "rgba(0,0,0,0)", x = {
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            position: u.clone(b.position),
                            style: b,
                            highlightStyle: k,
                            _style: u.clone(b),
                            _mapType: e
                        }, null != b.scale && (x.scale = u.clone(b.scale)), v = new a(v), x.style.shapeType) {
                            case"rectangle":
                                x = new r(x);
                                break;
                            case"line":
                                x = new s(x);
                                break;
                            case"circle":
                                x = new o(x);
                                break;
                            case"polygon":
                                x = new l(x);
                                break;
                            case"ellipse":
                                x = new h(x);
                                break;
                            default:
                                x = new i(x), x.buildPathArray && (x.style.pathArray = x.buildPathArray(x.style.path))
                        }
                        (this._selectedMode[e] && this._selected[V] && U.selected !== !1 || U.selected === !0) && (v.style = v.highlightStyle, x.style = x.highlightStyle), v.clickable = x.clickable = this._clickable[e] && (null == U.clickable || U.clickable), this._selectedMode[e] && (this._selected[V] = null != this._selected[V] ? this._selected[V] : U.selected, this._mapTypeMap[V] = e, (null == U.selectable || U.selectable) && (x.clickable = v.clickable = !0, x.onclick = v.onclick = this.shapeHandler.onclick)), this._hoverable[e] && (null == U.hoverable || U.hoverable) ? (v.hoverable = x.hoverable = !0, x.hoverConnect = v.id, v.hoverConnect = x.id) : v.hoverable = x.hoverable = !1, m.pack(v, {
                            name: c,
                            tooltip: this.deepQuery(_, "tooltip")
                        }, 0, U, 0, V), this.shapeList.push(v), m.pack(x, {
                            name: c,
                            tooltip: this.deepQuery(_, "tooltip")
                        }, 0, U, 0, V), this.shapeList.push(x)
                    }
                }, _buildMark: function (e, t) {
                    this._seriesIndexToMapType = this._seriesIndexToMapType || {}, this.markAttachStyle = this.markAttachStyle || {};
                    var n = [this._mapDataMap[e].transform.left, this._mapDataMap[e].transform.top];
                    "none" == e && (n = [0, 0]);
                    for (var a in t)this._seriesIndexToMapType[a] = e, this.markAttachStyle[a] = {
                        position: n,
                        _mapType: e
                    }, this.buildMark(a)
                }, _buildHeatmap: function (e) {
                    for (var t = this.series, n = 0, a = t.length; a > n; n++)if (t[n].heatmap) {
                        var i = t[n].heatmap.data;
                        if (t[n].heatmap.needsTransform === !1) {
                            for (var o = [], r = 0, s = i.length; s > r; ++r)o.push([i[r][3], i[r][4], i[r][2]]);
                            var l = [0, 0]
                        } else {
                            var h = t[n].heatmap._geoData;
                            if (void 0 === h) {
                                t[n].heatmap._geoData = [];
                                for (var r = 0, s = i.length; s > r; ++r)t[n].heatmap._geoData[r] = i[r];
                                h = t[n].heatmap._geoData
                            }
                            for (var s = i.length, p = 0; s > p; ++p)i[p] = this.geo2pos(e, [h[p][0], h[p][1]]);
                            var l = [this._mapDataMap[e].transform.left, this._mapDataMap[e].transform.top]
                        }
                        var m = new c(t[n].heatmap), u = m.getCanvas(i[0][3] ? o : i, this.zr.getWidth(), this.zr.getHeight()), V = new d({
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase() + 1,
                            position: l,
                            scale: [1, 1],
                            hoverable: !1,
                            style: {x: 0, y: 0, image: u, width: u.width, height: u.height}
                        });
                        V.type = "heatmap", V._mapType = e, this.shapeList.push(V), this.zr.addShape(V)
                    }
                }, getMarkCoord: function (e, t) {
                    return t.geoCoord || g[t.name] ? this.geo2pos(this._seriesIndexToMapType[e], t.geoCoord || g[t.name]) : [0, 0]
                }, getMarkGeo: function (e) {
                    return e.geoCoord || g[e.name]
                }, _nameChange: function (e, t) {
                    return this._nameMap[e][t] || t
                }, getLabelText: function (e, t, n, a) {
                    var i = this.deepQuery(n, "itemStyle." + a + ".label.formatter");
                    return i ? "function" == typeof i ? i.call(this.myChart, e, t) : "string" == typeof i ? (i = i.replace("{a}", "{a0}").replace("{b}", "{b0}"), i = i.replace("{a0}", e).replace("{b0}", t)) : void 0 : e
                }, _findMapTypeByPos: function (e, t) {
                    var n, a, i, o, r;
                    for (var s in this._mapDataMap)if (n = this._mapDataMap[s].transform, n && this._roamMap[s] && this._activeMapType[s] && (a = n.left, i = n.top, o = n.width, r = n.height, e >= a && a + o >= e && t >= i && i + r >= t))return s
                }, __onmousewheel: function (e) {
                    function t(e, t) {
                        for (var n = 0; n < e.pointList.length; n++) {
                            var a = e.pointList[n];
                            a[0] *= t, a[1] *= t
                        }
                        var i = e.controlPointList;
                        if (i)for (var n = 0; n < i.length; n++) {
                            var a = i[n];
                            a[0] *= t, a[1] *= t
                        }
                    }

                    function n(e, t) {
                        e.xStart *= t, e.yStart *= t, e.xEnd *= t, e.yEnd *= t, null != e.cpX1 && (e.cpX1 *= t, e.cpY1 *= t)
                    }

                    if (!(this.shapeList.length <= 0)) {
                        for (var a = 0, i = this.shapeList.length; i > a; a++) {
                            var o = this.shapeList[a];
                            if (o.__animating)return
                        }
                        var r, s, l = e.event, h = U.getX(l), d = U.getY(l), c = U.getDelta(l), m = e.mapTypeControl;
                        m || (m = {}, s = this._findMapTypeByPos(h, d), s && this._roamMap[s] && "move" != this._roamMap[s] && (m[s] = !0));
                        var u = !1;
                        for (s in m)if (m[s]) {
                            u = !0;
                            var V = this._mapDataMap[s].transform, f = V.left, _ = V.top, g = V.width, y = V.height, b = this.pos2geo(s, [h - f, d - _]);
                            if (c > 0) {
                                if (r = 1.2, null != this._scaleLimitMap[s].max && V.baseScale >= this._scaleLimitMap[s].max)continue
                            } else if (r = 1 / 1.2, null != this._scaleLimitMap[s].min && V.baseScale <= this._scaleLimitMap[s].min)continue;
                            V.baseScale *= r, V.scale.x *= r, V.scale.y *= r, V.width = g * r, V.height = y * r, this._mapDataMap[s].hasRoam = !0, this._mapDataMap[s].transform = V, b = this.geo2pos(s, b), V.left -= b[0] - (h - f), V.top -= b[1] - (d - _), this._mapDataMap[s].transform = V, this.clearEffectShape(!0);
                            for (var a = 0, i = this.shapeList.length; i > a; a++) {
                                var o = this.shapeList[a];
                                if (o._mapType == s) {
                                    var k = o.type, x = o.style;
                                    switch (o.position[0] = V.left, o.position[1] = V.top, k) {
                                        case"path":
                                        case"symbol":
                                        case"circle":
                                        case"rectangle":
                                        case"polygon":
                                        case"line":
                                        case"ellipse":
                                        case"heatmap":
                                            o.scale[0] *= r, o.scale[1] *= r;
                                            break;
                                        case"mark-line":
                                            n(x, r);
                                            break;
                                        case"polyline":
                                            t(x, r);
                                            break;
                                        case"shape-bundle":
                                            for (var v = 0; v < x.shapeList.length; v++) {
                                                var L = x.shapeList[v];
                                                "mark-line" == L.type ? n(L.style, r) : "polyline" == L.type && t(L.style, r)
                                            }
                                            break;
                                        case"icon":
                                        case"image":
                                            b = this.geo2pos(s, o._geo), x.x = x._x = b[0] - x.width / 2, x.y = x._y = b[1] - x.height / 2;
                                            break;
                                        default:
                                            b = this.geo2pos(s, o._geo), x.x = b[0], x.y = b[1], "text" == k && (o._style.x = o.highlightStyle.x = b[0], o._style.y = o.highlightStyle.y = b[1])
                                    }
                                    this.zr.modShape(o.id)
                                }
                            }
                        }
                        if (u) {
                            U.stop(l), this.zr.refreshNextFrame();
                            var w = this;
                            clearTimeout(this._refreshDelayTicket), this._refreshDelayTicket = setTimeout(function () {
                                w && w.shapeList && w.animationEffect()
                            }, 100), this.messageCenter.dispatch(p.EVENT.MAP_ROAM, e.event, {type: "scale"}, this.myChart)
                        }
                    }
                }, __onmousedown: function (e) {
                    if (!(this.shapeList.length <= 0)) {
                        var t = e.target;
                        if (!t || !t.draggable) {
                            var n = e.event, a = U.getX(n), i = U.getY(n), o = this._findMapTypeByPos(a, i);
                            if (o && this._roamMap[o] && "scale" != this._roamMap[o]) {
                                this._mousedown = !0, this._mx = a, this._my = i, this._curMapType = o, this.zr.on(V.EVENT.MOUSEUP, this._onmouseup);
                                var r = this;
                                setTimeout(function () {
                                    r.zr.on(V.EVENT.MOUSEMOVE, r._onmousemove)
                                }, 100)
                            }
                        }
                    }
                }, __onmousemove: function (e) {
                    if (this._mousedown && this._isAlive) {
                        var t = e.event, n = U.getX(t), a = U.getY(t), i = this._mapDataMap[this._curMapType].transform;
                        i.hasRoam = !0, i.left -= this._mx - n, i.top -= this._my - a, this._mx = n, this._my = a, this._mapDataMap[this._curMapType].transform = i;
                        for (var o = 0, r = this.shapeList.length; r > o; o++)this.shapeList[o]._mapType == this._curMapType && (this.shapeList[o].position[0] = i.left, this.shapeList[o].position[1] = i.top, this.zr.modShape(this.shapeList[o].id));
                        this.messageCenter.dispatch(p.EVENT.MAP_ROAM, e.event, {type: "move"}, this.myChart), this.clearEffectShape(!0), this.zr.refreshNextFrame(), this._justMove = !0, U.stop(t)
                    }
                }, __onmouseup: function (e) {
                    var t = e.event;
                    this._mx = U.getX(t), this._my = U.getY(t), this._mousedown = !1;
                    var n = this;
                    setTimeout(function () {
                        n._justMove && n.animationEffect(), n._justMove = !1, n.zr.un(V.EVENT.MOUSEMOVE, n._onmousemove), n.zr.un(V.EVENT.MOUSEUP, n._onmouseup)
                    }, 120)
                }, __onroamcontroller: function (e) {
                    var t = e.event;
                    t.zrenderX = this.zr.getWidth() / 2, t.zrenderY = this.zr.getHeight() / 2;
                    var n = e.mapTypeControl, a = 0, i = 0, o = e.step;
                    switch (e.roamType) {
                        case"scaleUp":
                            return t.zrenderDelta = 1, void this.__onmousewheel({event: t, mapTypeControl: n});
                        case"scaleDown":
                            return t.zrenderDelta = -1, void this.__onmousewheel({event: t, mapTypeControl: n});
                        case"up":
                            a = -o;
                            break;
                        case"down":
                            a = o;
                            break;
                        case"left":
                            i = -o;
                            break;
                        case"right":
                            i = o
                    }
                    var r, s;
                    for (s in n)this._mapDataMap[s] && this._activeMapType[s] && (r = this._mapDataMap[s].transform, r.hasRoam = !0, r.left -= i, r.top -= a, this._mapDataMap[s].transform = r);
                    for (var l = 0, h = this.shapeList.length; h > l; l++)s = this.shapeList[l]._mapType, n[s] && this._activeMapType[s] && (r = this._mapDataMap[s].transform, this.shapeList[l].position[0] = r.left, this.shapeList[l].position[1] = r.top, this.zr.modShape(this.shapeList[l].id));
                    this.messageCenter.dispatch(p.EVENT.MAP_ROAM, e.event, {type: "move"}, this.myChart), this.clearEffectShape(!0), this.zr.refreshNextFrame(), clearTimeout(this.dircetionTimer);
                    var d = this;
                    this.dircetionTimer = setTimeout(function () {
                        d.animationEffect()
                    }, 150)
                }, __ondrhoverlink: function (e) {
                    for (var t, n, a = 0, i = this.shapeList.length; i > a; a++)t = this.shapeList[a]._mapType, this._hoverLinkMap[t] && this._activeMapType[t] && (n = m.get(this.shapeList[a], "value"), null != n && n >= e.valueMin && n <= e.valueMax && this.zr.addHoverShape(this.shapeList[a]))
                }, onclick: function (e) {
                    if (this.isClick && e.target && !this._justMove && "icon" != e.target.type) {
                        this.isClick = !1;
                        var t = e.target, n = t.style._name, a = this.shapeList.length, i = t._mapType || "";
                        if ("single" == this._selectedMode[i])for (var o in this._selected)if (this._selected[o] && this._mapTypeMap[o] == i) {
                            for (var r = 0; a > r; r++)this.shapeList[r].style._name == o && this.shapeList[r]._mapType == i && (this.shapeList[r].style = this.shapeList[r]._style, this.zr.modShape(this.shapeList[r].id));
                            o != n && (this._selected[o] = !1)
                        }
                        this._selected[n] = !this._selected[n];
                        for (var r = 0; a > r; r++)this.shapeList[r].style._name == n && this.shapeList[r]._mapType == i && (this.shapeList[r].style = this._selected[n] ? this.shapeList[r].highlightStyle : this.shapeList[r]._style, this.zr.modShape(this.shapeList[r].id));
                        this.messageCenter.dispatch(p.EVENT.MAP_SELECTED, e.event, {
                            selected: this._selected,
                            target: n
                        }, this.myChart), this.zr.refreshNextFrame();
                        var s = this;
                        setTimeout(function () {
                            s.zr.trigger(V.EVENT.MOUSEMOVE, e.event)
                        }, 100)
                    }
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this._mapDataRequireCounter > 0 ? this.clear() : this.backupShapeList(), this._buildShape(), this.zr.refreshHover()
                }, ondataRange: function (e, t) {
                    this.component.dataRange && (this.refresh(), t.needRefresh = !0)
                }, pos2geo: function (e, t) {
                    return this._mapDataMap[e].transform ? this._mapDataMap[e].projection.pos2geo(this._mapDataMap[e].transform, t) : null
                }, getGeoByPos: function (e, t) {
                    if (!this._mapDataMap[e].transform)return null;
                    var n = [this._mapDataMap[e].transform.left, this._mapDataMap[e].transform.top];
                    return t instanceof Array ? (t[0] -= n[0], t[1] -= n[1]) : (t.x -= n[0], t.y -= n[1]), this.pos2geo(e, t)
                }, geo2pos: function (e, t) {
                    return this._mapDataMap[e].transform ? this._mapDataMap[e].projection.geo2pos(this._mapDataMap[e].transform, t) : null
                }, getPosByGeo: function (e, t) {
                    if (!this._mapDataMap[e].transform)return null;
                    var n = this.geo2pos(e, t);
                    return n[0] += this._mapDataMap[e].transform.left, n[1] += this._mapDataMap[e].transform.top, n
                }, getMapPosition: function (e) {
                    return this._mapDataMap[e].transform ? [this._mapDataMap[e].transform.left, this._mapDataMap[e].transform.top] : null
                }, onbeforDispose: function () {
                    this._isAlive = !1, this.zr.un(V.EVENT.MOUSEWHEEL, this._onmousewheel), this.zr.un(V.EVENT.MOUSEDOWN, this._onmousedown), this.messageCenter.unbind(p.EVENT.ROAMCONTROLLER, this._onroamcontroller), this.messageCenter.unbind(p.EVENT.DATA_RANGE_HOVERLINK, this._ondrhoverlink)
                }
            }, u.inherits(t, n), e("../chart").define("map", t), t
        }),n("zrender/shape/Path", ["require", "./Base", "./util/PathProxy", "../tool/util"], function (e) {
            var t = e("./Base"), n = e("./util/PathProxy"), a = n.PathSegment, i = function (e) {
                return Math.sqrt(e[0] * e[0] + e[1] * e[1])
            }, o = function (e, t) {
                return (e[0] * t[0] + e[1] * t[1]) / (i(e) * i(t))
            }, r = function (e, t) {
                return (e[0] * t[1] < e[1] * t[0] ? -1 : 1) * Math.acos(o(e, t))
            }, s = function (e) {
                t.call(this, e)
            };
            return s.prototype = {
                type: "path", buildPathArray: function (e, t, n) {
                    if (!e)return [];
                    t = t || 0, n = n || 0;
                    var i = e, o = ["m", "M", "l", "L", "v", "V", "h", "H", "z", "Z", "c", "C", "q", "Q", "t", "T", "s", "S", "a", "A"];
                    i = i.replace(/-/g, " -"), i = i.replace(/  /g, " "), i = i.replace(/ /g, ","), i = i.replace(/,,/g, ",");
                    var r;
                    for (r = 0; r < o.length; r++)i = i.replace(new RegExp(o[r], "g"), "|" + o[r]);
                    var s = i.split("|"), l = [], h = 0, d = 0;
                    for (r = 1; r < s.length; r++) {
                        var c = s[r], p = c.charAt(0);
                        c = c.slice(1), c = c.replace(new RegExp("e,-", "g"), "e-");
                        var m = c.split(",");
                        m.length > 0 && "" === m[0] && m.shift();
                        for (var u = 0; u < m.length; u++)m[u] = parseFloat(m[u]);
                        for (; m.length > 0 && !isNaN(m[0]);) {
                            var V, U, f, _, g, y, b, k, x = null, v = [], L = h, w = d;
                            switch (p) {
                                case"l":
                                    h += m.shift(), d += m.shift(), x = "L", v.push(h, d);
                                    break;
                                case"L":
                                    h = m.shift(), d = m.shift(), v.push(h, d);
                                    break;
                                case"m":
                                    h += m.shift(), d += m.shift(), x = "M", v.push(h, d), p = "l";
                                    break;
                                case"M":
                                    h = m.shift(), d = m.shift(), x = "M", v.push(h, d), p = "L";
                                    break;
                                case"h":
                                    h += m.shift(), x = "L", v.push(h, d);
                                    break;
                                case"H":
                                    h = m.shift(), x = "L", v.push(h, d);
                                    break;
                                case"v":
                                    d += m.shift(), x = "L", v.push(h, d);
                                    break;
                                case"V":
                                    d = m.shift(), x = "L", v.push(h, d);
                                    break;
                                case"C":
                                    v.push(m.shift(), m.shift(), m.shift(), m.shift()), h = m.shift(), d = m.shift(), v.push(h, d);
                                    break;
                                case"c":
                                    v.push(h + m.shift(), d + m.shift(), h + m.shift(), d + m.shift()), h += m.shift(), d += m.shift(), x = "C", v.push(h, d);
                                    break;
                                case"S":
                                    V = h, U = d, f = l[l.length - 1], "C" === f.command && (V = h + (h - f.points[2]), U = d + (d - f.points[3])), v.push(V, U, m.shift(), m.shift()), h = m.shift(), d = m.shift(), x = "C", v.push(h, d);
                                    break;
                                case"s":
                                    V = h, U = d, f = l[l.length - 1], "C" === f.command && (V = h + (h - f.points[2]), U = d + (d - f.points[3])), v.push(V, U, h + m.shift(), d + m.shift()), h += m.shift(), d += m.shift(), x = "C", v.push(h, d);
                                    break;
                                case"Q":
                                    v.push(m.shift(), m.shift()), h = m.shift(), d = m.shift(), v.push(h, d);
                                    break;
                                case"q":
                                    v.push(h + m.shift(), d + m.shift()), h += m.shift(), d += m.shift(), x = "Q", v.push(h, d);
                                    break;
                                case"T":
                                    V = h, U = d, f = l[l.length - 1], "Q" === f.command && (V = h + (h - f.points[0]), U = d + (d - f.points[1])), h = m.shift(), d = m.shift(), x = "Q", v.push(V, U, h, d);
                                    break;
                                case"t":
                                    V = h, U = d, f = l[l.length - 1], "Q" === f.command && (V = h + (h - f.points[0]), U = d + (d - f.points[1])), h += m.shift(), d += m.shift(), x = "Q", v.push(V, U, h, d);
                                    break;
                                case"A":
                                    _ = m.shift(), g = m.shift(), y = m.shift(), b = m.shift(), k = m.shift(), L = h, w = d, h = m.shift(), d = m.shift(), x = "A", v = this._convertPoint(L, w, h, d, b, k, _, g, y);
                                    break;
                                case"a":
                                    _ = m.shift(), g = m.shift(), y = m.shift(), b = m.shift(), k = m.shift(), L = h,
                                        w = d, h += m.shift(), d += m.shift(), x = "A", v = this._convertPoint(L, w, h, d, b, k, _, g, y)
                            }
                            for (var W = 0, X = v.length; X > W; W += 2)v[W] += t, v[W + 1] += n;
                            l.push(new a(x || p, v))
                        }
                        ("z" === p || "Z" === p) && l.push(new a("z", []))
                    }
                    return l
                }, _convertPoint: function (e, t, n, a, i, s, l, h, d) {
                    var c = d * (Math.PI / 180), p = Math.cos(c) * (e - n) / 2 + Math.sin(c) * (t - a) / 2, m = -1 * Math.sin(c) * (e - n) / 2 + Math.cos(c) * (t - a) / 2, u = p * p / (l * l) + m * m / (h * h);
                    u > 1 && (l *= Math.sqrt(u), h *= Math.sqrt(u));
                    var V = Math.sqrt((l * l * h * h - l * l * m * m - h * h * p * p) / (l * l * m * m + h * h * p * p));
                    i === s && (V *= -1), isNaN(V) && (V = 0);
                    var U = V * l * m / h, f = V * -h * p / l, _ = (e + n) / 2 + Math.cos(c) * U - Math.sin(c) * f, g = (t + a) / 2 + Math.sin(c) * U + Math.cos(c) * f, y = r([1, 0], [(p - U) / l, (m - f) / h]), b = [(p - U) / l, (m - f) / h], k = [(-1 * p - U) / l, (-1 * m - f) / h], x = r(b, k);
                    return o(b, k) <= -1 && (x = Math.PI), o(b, k) >= 1 && (x = 0), 0 === s && x > 0 && (x -= 2 * Math.PI), 1 === s && 0 > x && (x += 2 * Math.PI), [_, g, l, h, y, x, c, s]
                }, buildPath: function (e, t) {
                    var n = t.path, a = t.x || 0, i = t.y || 0;
                    t.pathArray = t.pathArray || this.buildPathArray(n, a, i);
                    for (var o = t.pathArray, r = t.pointList = [], s = [], l = 0, h = o.length; h > l; l++) {
                        "M" == o[l].command.toUpperCase() && (s.length > 0 && r.push(s), s = []);
                        for (var d = o[l].points, c = 0, p = d.length; p > c; c += 2)s.push([d[c], d[c + 1]])
                    }
                    s.length > 0 && r.push(s);
                    for (var l = 0, h = o.length; h > l; l++) {
                        var m = o[l].command, d = o[l].points;
                        switch (m) {
                            case"L":
                                e.lineTo(d[0], d[1]);
                                break;
                            case"M":
                                e.moveTo(d[0], d[1]);
                                break;
                            case"C":
                                e.bezierCurveTo(d[0], d[1], d[2], d[3], d[4], d[5]);
                                break;
                            case"Q":
                                e.quadraticCurveTo(d[0], d[1], d[2], d[3]);
                                break;
                            case"A":
                                var u = d[0], V = d[1], U = d[2], f = d[3], _ = d[4], g = d[5], y = d[6], b = d[7], k = U > f ? U : f, x = U > f ? 1 : U / f, v = U > f ? f / U : 1;
                                e.translate(u, V), e.rotate(y), e.scale(x, v), e.arc(0, 0, k, _, _ + g, 1 - b), e.scale(1 / x, 1 / v), e.rotate(-y), e.translate(-u, -V);
                                break;
                            case"z":
                                e.closePath()
                        }
                    }
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t;
                    t = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0;
                    for (var n = Number.MAX_VALUE, a = Number.MIN_VALUE, i = Number.MAX_VALUE, o = Number.MIN_VALUE, r = e.x || 0, s = e.y || 0, l = e.pathArray || this.buildPathArray(e.path), h = 0; h < l.length; h++)for (var d = l[h].points, c = 0; c < d.length; c++)c % 2 === 0 ? (d[c] + r < n && (n = d[c]), d[c] + r > a && (a = d[c])) : (d[c] + s < i && (i = d[c]), d[c] + s > o && (o = d[c]));
                    var p;
                    return p = n === Number.MAX_VALUE || a === Number.MIN_VALUE || i === Number.MAX_VALUE || o === Number.MIN_VALUE ? {
                        x: 0,
                        y: 0,
                        width: 0,
                        height: 0
                    } : {
                        x: Math.round(n - t / 2),
                        y: Math.round(i - t / 2),
                        width: a - n + t,
                        height: o - i + t
                    }, e.__rect = p, p
                }
            }, e("../tool/util").inherits(s, t), s
        }),n("zrender/shape/Ellipse", ["require", "./Base", "../tool/util"], function (e) {
            var t = e("./Base"), n = function (e) {
                t.call(this, e)
            };
            return n.prototype = {
                type: "ellipse", buildPath: function (e, t) {
                    var n = .5522848, a = t.x, i = t.y, o = t.a, r = t.b, s = o * n, l = r * n;
                    e.moveTo(a - o, i), e.bezierCurveTo(a - o, i - l, a - s, i - r, a, i - r), e.bezierCurveTo(a + s, i - r, a + o, i - l, a + o, i), e.bezierCurveTo(a + o, i + l, a + s, i + r, a, i + r), e.bezierCurveTo(a - s, i + r, a - o, i + l, a - o, i), e.closePath()
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t;
                    return t = "stroke" == e.brushType || "fill" == e.brushType ? e.lineWidth || 1 : 0, e.__rect = {
                        x: Math.round(e.x - e.a - t / 2),
                        y: Math.round(e.y - e.b - t / 2),
                        width: 2 * e.a + t,
                        height: 2 * e.b + t
                    }, e.__rect
                }
            }, e("../tool/util").inherits(n, t), n
        }),n("echarts/component/roamController", ["require", "./base", "zrender/shape/Rectangle", "zrender/shape/Sector", "zrender/shape/Circle", "../config", "zrender/tool/util", "zrender/tool/color", "zrender/tool/event", "../component"], function (e) {
            function t(e, t, a, i, o) {
                if (this.rcOption = {}, i.roamController && i.roamController.show) {
                    if (!i.roamController.mapTypeControl)return void console.error("option.roamController.mapTypeControl has not been defined.");
                    n.call(this, e, t, a, i, o), this.rcOption = i.roamController;
                    var r = this;
                    this._drictionMouseDown = function (e) {
                        return r.__drictionMouseDown(e)
                    }, this._drictionMouseUp = function (e) {
                        return r.__drictionMouseUp(e)
                    }, this._drictionMouseMove = function (e) {
                        return r.__drictionMouseMove(e)
                    }, this._drictionMouseOut = function (e) {
                        return r.__drictionMouseOut(e)
                    }, this._scaleHandler = function (e) {
                        return r.__scaleHandler(e)
                    }, this.refresh(i)
                }
            }

            var n = e("./base"), a = e("zrender/shape/Rectangle"), i = e("zrender/shape/Sector"), o = e("zrender/shape/Circle"), r = e("../config");
            r.roamController = {
                zlevel: 0,
                z: 4,
                show: !0,
                x: "left",
                y: "top",
                width: 80,
                height: 120,
                backgroundColor: "rgba(0,0,0,0)",
                borderColor: "#ccc",
                borderWidth: 0,
                padding: 5,
                handleColor: "#6495ed",
                fillerColor: "#fff",
                step: 15,
                mapTypeControl: null
            };
            var s = e("zrender/tool/util"), l = e("zrender/tool/color"), h = e("zrender/tool/event");
            return t.prototype = {
                type: r.COMPONENT_TYPE_ROAMCONTROLLER, _buildShape: function () {
                    if (this.rcOption.show) {
                        this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
                        for (var e = 0, t = this.shapeList.length; t > e; e++)this.zr.addShape(this.shapeList[e])
                    }
                }, _buildItem: function () {
                    this.shapeList.push(this._getDirectionShape("up")), this.shapeList.push(this._getDirectionShape("down")), this.shapeList.push(this._getDirectionShape("left")), this.shapeList.push(this._getDirectionShape("right")), this.shapeList.push(this._getScaleShape("scaleUp")), this.shapeList.push(this._getScaleShape("scaleDown"))
                }, _getDirectionShape: function (e) {
                    var t = this._itemGroupLocation.r, n = this._itemGroupLocation.x + t, a = this._itemGroupLocation.y + t, o = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            x: n,
                            y: a,
                            r: t,
                            startAngle: -45,
                            endAngle: 45,
                            color: this.rcOption.handleColor,
                            text: ">",
                            textX: n + t / 2 + 4,
                            textY: a - .5,
                            textAlign: "center",
                            textBaseline: "middle",
                            textPosition: "specific",
                            textColor: this.rcOption.fillerColor,
                            textFont: Math.floor(t / 2) + "px arial"
                        },
                        highlightStyle: {color: l.lift(this.rcOption.handleColor, -.2), brushType: "fill"},
                        clickable: !0
                    };
                    switch (e) {
                        case"up":
                            o.rotation = [Math.PI / 2, n, a];
                            break;
                        case"left":
                            o.rotation = [Math.PI, n, a];
                            break;
                        case"down":
                            o.rotation = [-Math.PI / 2, n, a]
                    }
                    return o = new i(o), o._roamType = e, o.onmousedown = this._drictionMouseDown, o.onmouseup = this._drictionMouseUp, o.onmousemove = this._drictionMouseMove, o.onmouseout = this._drictionMouseOut, o
                }, _getScaleShape: function (e) {
                    var t = this._itemGroupLocation.width, n = this._itemGroupLocation.height - t;
                    n = 0 > n ? 20 : n;
                    var a = Math.min(t / 2 - 5, n) / 2, i = this._itemGroupLocation.x + ("scaleDown" === e ? t - a : a), r = this._itemGroupLocation.y + this._itemGroupLocation.height - a, s = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        style: {
                            x: i,
                            y: r,
                            r: a,
                            color: this.rcOption.handleColor,
                            text: "scaleDown" === e ? "-" : "+",
                            textX: i,
                            textY: r - 2,
                            textAlign: "center",
                            textBaseline: "middle",
                            textPosition: "specific",
                            textColor: this.rcOption.fillerColor,
                            textFont: Math.floor(a) + "px verdana"
                        },
                        highlightStyle: {color: l.lift(this.rcOption.handleColor, -.2), brushType: "fill"},
                        clickable: !0
                    };
                    return s = new o(s), s._roamType = e, s.onmousedown = this._scaleHandler, s
                }, _buildBackground: function () {
                    var e = this.reformCssArray(this.rcOption.padding);
                    this.shapeList.push(new a({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {
                            x: this._itemGroupLocation.x - e[3],
                            y: this._itemGroupLocation.y - e[0],
                            width: this._itemGroupLocation.width + e[3] + e[1],
                            height: this._itemGroupLocation.height + e[0] + e[2],
                            brushType: 0 === this.rcOption.borderWidth ? "fill" : "both",
                            color: this.rcOption.backgroundColor,
                            strokeColor: this.rcOption.borderColor,
                            lineWidth: this.rcOption.borderWidth
                        }
                    }))
                }, _getItemGroupLocation: function () {
                    var e, t = this.reformCssArray(this.rcOption.padding), n = this.rcOption.width, a = this.rcOption.height, i = this.zr.getWidth(), o = this.zr.getHeight();
                    switch (this.rcOption.x) {
                        case"center":
                            e = Math.floor((i - n) / 2);
                            break;
                        case"left":
                            e = t[3] + this.rcOption.borderWidth;
                            break;
                        case"right":
                            e = i - n - t[1] - t[3] - 2 * this.rcOption.borderWidth;
                            break;
                        default:
                            e = this.parsePercent(this.rcOption.x, i)
                    }
                    var r;
                    switch (this.rcOption.y) {
                        case"top":
                            r = t[0] + this.rcOption.borderWidth;
                            break;
                        case"bottom":
                            r = o - a - t[0] - t[2] - 2 * this.rcOption.borderWidth;
                            break;
                        case"center":
                            r = Math.floor((o - a) / 2);
                            break;
                        default:
                            r = this.parsePercent(this.rcOption.y, o)
                    }
                    return {x: e, y: r, r: n / 2, width: n, height: a}
                }, __drictionMouseDown: function (e) {
                    this.mousedown = !0, this._drictionHandlerOn(e)
                }, __drictionMouseUp: function (e) {
                    this.mousedown = !1, this._drictionHandlerOff(e)
                }, __drictionMouseMove: function (e) {
                    this.mousedown && this._drictionHandlerOn(e)
                }, __drictionMouseOut: function (e) {
                    this._drictionHandlerOff(e)
                }, _drictionHandlerOn: function (e) {
                    this._dispatchEvent(e.event, e.target._roamType), clearInterval(this.dircetionTimer);
                    var t = this;
                    this.dircetionTimer = setInterval(function () {
                        t._dispatchEvent(e.event, e.target._roamType)
                    }, 100), h.stop(e.event)
                }, _drictionHandlerOff: function () {
                    clearInterval(this.dircetionTimer)
                }, __scaleHandler: function (e) {
                    this._dispatchEvent(e.event, e.target._roamType), h.stop(e.event)
                }, _dispatchEvent: function (e, t) {
                    this.messageCenter.dispatch(r.EVENT.ROAMCONTROLLER, e, {
                        roamType: t,
                        mapTypeControl: this.rcOption.mapTypeControl,
                        step: this.rcOption.step
                    }, this.myChart)
                }, refresh: function (e) {
                    e && (this.option = e || this.option, this.option.roamController = this.reformOption(this.option.roamController), this.rcOption = this.option.roamController), this.clear(), this._buildShape()
                }
            }, s.inherits(t, n), e("../component").define("roamController", t), t
        }),n("echarts/layer/heatmap", ["require"], function () {
            function e(e) {
                if (this.option = e, e)for (var n in t)this.option[n] = void 0 !== e[n] ? e[n] : t[n]; else this.option = t
            }

            var t = {
                blurSize: 30,
                gradientColors: ["blue", "cyan", "lime", "yellow", "red"],
                minAlpha: .05,
                valueScale: 1,
                opacity: 1
            }, n = 20, a = 256;
            return e.prototype = {
                getCanvas: function (e, t, i) {
                    var o = this._getBrush(), r = this._getGradient(), s = n + this.option.blurSize, l = document.createElement("canvas");
                    l.width = t, l.height = i;
                    for (var h = l.getContext("2d"), d = e.length, c = 0; d > c; ++c) {
                        var p = e[c], m = p[0], u = p[1], V = p[2], U = Math.min(1, Math.max(V * this.option.valueScale || this.option.minAlpha, this.option.minAlpha));
                        h.globalAlpha = U, h.drawImage(o, m - s, u - s)
                    }
                    for (var f = h.getImageData(0, 0, l.width, l.height), _ = f.data, d = _.length / 4; d--;) {
                        var g = 4 * d + 3, U = _[g] / 256, y = Math.floor(U * (a - 1));
                        _[g - 3] = r[4 * y], _[g - 2] = r[4 * y + 1], _[g - 1] = r[4 * y + 2], _[g] *= this.option.opacity
                    }
                    return h.putImageData(f, 0, 0), l
                }, _getBrush: function () {
                    if (!this._brushCanvas) {
                        this._brushCanvas = document.createElement("canvas");
                        var e = n + this.option.blurSize, t = 2 * e;
                        this._brushCanvas.width = t, this._brushCanvas.height = t;
                        var a = this._brushCanvas.getContext("2d");
                        a.shadowOffsetX = t, a.shadowBlur = this.option.blurSize, a.shadowColor = "black", a.beginPath(), a.arc(-e, e, n, 0, 2 * Math.PI, !0), a.closePath(), a.fill()
                    }
                    return this._brushCanvas
                }, _getGradient: function () {
                    if (!this._gradientPixels) {
                        var e = a, t = document.createElement("canvas");
                        t.width = 1, t.height = e;
                        for (var n = t.getContext("2d"), i = n.createLinearGradient(0, 0, 0, e), o = this.option.gradientColors.length, r = 0; o > r; ++r)"string" == typeof this.option.gradientColors[r] ? i.addColorStop((r + 1) / o, this.option.gradientColors[r]) : i.addColorStop(this.option.gradientColors[r].offset, this.option.gradientColors[r].color);
                        n.fillStyle = i, n.fillRect(0, 0, 1, e), this._gradientPixels = n.getImageData(0, 0, 1, e).data
                    }
                    return this._gradientPixels
                }
            }, e
        }),n("echarts/util/mapData/params", ["require"], function (e) {
            function t(e) {
                if (!e.UTF8Encoding)return e;
                for (var t = e.features, a = 0; a < t.length; a++)for (var i = t[a], o = i.geometry.coordinates, r = i.geometry.encodeOffsets, s = 0; s < o.length; s++) {
                    var l = o[s];
                    if ("Polygon" === i.geometry.type)o[s] = n(l, r[s]); else if ("MultiPolygon" === i.geometry.type)for (var h = 0; h < l.length; h++) {
                        var d = l[h];
                        l[h] = n(d, r[s][h])
                    }
                }
                return e.UTF8Encoding = !1, e
            }

            function n(e, t) {
                for (var n = [], a = t[0], i = t[1], o = 0; o < e.length; o += 2) {
                    var r = e.charCodeAt(o) - 64, s = e.charCodeAt(o + 1) - 64;
                    r = r >> 1 ^ -(1 & r), s = s >> 1 ^ -(1 & s), r += a, s += i, a = r, i = s, n.push([r / 1024, s / 1024])
                }
                return n
            }

            var a = {
                none: {
                    getGeoJson: function (e) {
                        e({
                            type: "FeatureCollection",
                            features: [{
                                type: "Feature",
                                geometry: {coordinates: [], encodeOffsets: [], type: "Polygon"},
                                properties: {}
                            }]
                        })
                    }
                }, world: {
                    getGeoJson: function (n) {
                        e(["./geoJson/world_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, china: {
                    getGeoJson: function (n) {
                        e(["./geoJson/china_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "南海诸岛": {
                    textCoord: [126, 25], getPath: function (e, t) {
                        for (var n = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, .7], [52, .7], [56, 7.7], [59, .7], [64, .7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]], a = "", i = e[0], o = e[1], r = 0, s = n.length; s > r; r++) {
                            a += "M " + ((n[r][0][0] * t + i).toFixed(2) - 0) + " " + ((n[r][0][1] * t + o).toFixed(2) - 0) + " ";
                            for (var l = 1, h = n[r].length; h > l; l++)a += "L " + ((n[r][l][0] * t + i).toFixed(2) - 0) + " " + ((n[r][l][1] * t + o).toFixed(2) - 0) + " "
                        }
                        return a + " Z"
                    }
                }, "新疆": {
                    getGeoJson: function (n) {
                        e(["./geoJson/xin_jiang_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "西藏": {
                    getGeoJson: function (n) {
                        e(["./geoJson/xi_zang_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "内蒙古": {
                    getGeoJson: function (n) {
                        e(["./geoJson/nei_meng_gu_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "青海": {
                    getGeoJson: function (n) {
                        e(["./geoJson/qing_hai_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "四川": {
                    getGeoJson: function (n) {
                        e(["./geoJson/si_chuan_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "黑龙江": {
                    getGeoJson: function (n) {
                        e(["./geoJson/hei_long_jiang_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "甘肃": {
                    getGeoJson: function (n) {
                        e(["./geoJson/gan_su_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "云南": {
                    getGeoJson: function (n) {
                        e(["./geoJson/yun_nan_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "广西": {
                    getGeoJson: function (n) {
                        e(["./geoJson/guang_xi_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "湖南": {
                    getGeoJson: function (n) {
                        e(["./geoJson/hu_nan_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "陕西": {
                    getGeoJson: function (n) {
                        e(["./geoJson/shan_xi_1_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "广东": {
                    getGeoJson: function (n) {
                        e(["./geoJson/guang_dong_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "吉林": {
                    getGeoJson: function (n) {
                        e(["./geoJson/ji_lin_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "河北": {
                    getGeoJson: function (n) {
                        e(["./geoJson/he_bei_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "湖北": {
                    getGeoJson: function (n) {
                        e(["./geoJson/hu_bei_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "贵州": {
                    getGeoJson: function (n) {
                        e(["./geoJson/gui_zhou_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "山东": {
                    getGeoJson: function (n) {
                        e(["./geoJson/shan_dong_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "江西": {
                    getGeoJson: function (n) {
                        e(["./geoJson/jiang_xi_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "河南": {
                    getGeoJson: function (n) {
                        e(["./geoJson/he_nan_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "辽宁": {
                    getGeoJson: function (n) {
                        e(["./geoJson/liao_ning_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "山西": {
                    getGeoJson: function (n) {
                        e(["./geoJson/shan_xi_2_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "安徽": {
                    getGeoJson: function (n) {
                        e(["./geoJson/an_hui_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "福建": {
                    getGeoJson: function (n) {
                        e(["./geoJson/fu_jian_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "浙江": {
                    getGeoJson: function (n) {
                        e(["./geoJson/zhe_jiang_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "江苏": {
                    getGeoJson: function (n) {
                        e(["./geoJson/jiang_su_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "重庆": {
                    getGeoJson: function (n) {
                        e(["./geoJson/chong_qing_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "宁夏": {
                    getGeoJson: function (n) {
                        e(["./geoJson/ning_xia_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "海南": {
                    getGeoJson: function (n) {
                        e(["./geoJson/hai_nan_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "台湾": {
                    getGeoJson: function (n) {
                        e(["./geoJson/tai_wan_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "北京": {
                    getGeoJson: function (n) {
                        e(["./geoJson/bei_jing_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "天津": {
                    getGeoJson: function (n) {
                        e(["./geoJson/tian_jin_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "上海": {
                    getGeoJson: function (n) {
                        e(["./geoJson/shang_hai_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "香港": {
                    getGeoJson: function (n) {
                        e(["./geoJson/xiang_gang_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }, "澳门": {
                    getGeoJson: function (n) {
                        e(["./geoJson/ao_men_geo"], function (e) {
                            n(t(e))
                        })
                    }
                }
            };
            return {decode: t, params: a}
        }),n("echarts/util/mapData/textFixed", [], function () {
            return {
                "广东": [0, -10],
                "香港": [10, 10],
                "澳门": [-10, 18],
                "黑龙江": [0, 20],
                "天津": [5, 5],
                "深圳市": [-35, 0],
                "红河哈尼族彝族自治州": [0, 20],
                "楚雄彝族自治州": [-5, 15],
                "石河子市": [-5, 5],
                "五家渠市": [0, -10],
                "昌吉回族自治州": [10, 10],
                "昌江黎族自治县": [0, 20],
                "陵水黎族自治县": [0, 20],
                "东方市": [0, 20],
                "渭南市": [0, 20]
            }
        }),n("echarts/util/mapData/geoCoord", [], function () {
            return {Russia: [100, 60], "United States of America": [-99, 38]}
        }),n("echarts/util/projection/svg", ["require", "zrender/shape/Path"], function (e) {
            function t(e) {
                return parseFloat(e || 0)
            }

            function n(e) {
                for (var n = e.firstChild; "svg" != n.nodeName.toLowerCase() || 1 != n.nodeType;)n = n.nextSibling;
                var a = t(n.getAttribute("x")), i = t(n.getAttribute("y")), o = t(n.getAttribute("width")), r = t(n.getAttribute("height"));
                return {left: a, top: i, width: o, height: r}
            }

            function a(e, t) {
                function n(e) {
                    var t = e.tagName;
                    if (d[t]) {
                        var o = d[t](e, a);
                        o && (o.scale = a, o.properties = {name: e.getAttribute("name") || ""}, o.id = e.id, s(o, e), i.push(o))
                    }
                    for (var r = e.childNodes, l = 0, h = r.length; h > l; l++)n(r[l])
                }

                var a = [t.scale.x, t.scale.y], i = [];
                return n(e), i
            }

            function i(e, t) {
                var n = t instanceof Array ? [1 * t[0], 1 * t[1]] : [1 * t.x, 1 * t.y];
                return [n[0] / e.scale.x, n[1] / e.scale.y]
            }

            function o(e, t) {
                var n = t instanceof Array ? [1 * t[0], 1 * t[1]] : [1 * t.x, 1 * t.y];
                return [n[0] * e.scale.x, n[1] * e.scale.y]
            }

            function r(e) {
                return e.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
            }

            function s(e, t) {
                var n = t.getAttribute("fill"), a = t.getAttribute("stroke"), i = t.getAttribute("stroke-width"), o = t.getAttribute("opacity");
                n && "none" != n ? (e.color = n, a ? (e.brushType = "both", e.strokeColor = a) : e.brushType = "fill") : a && "none" != a && (e.strokeColor = a, e.brushType = "stroke"), i && "none" != i && (e.lineWidth = parseFloat(i)), o && "none" != o && (e.opacity = parseFloat(o))
            }

            function l(e) {
                for (var t = r(e).replace(/,/g, " ").split(/\s+/), n = [], a = 0; a < t.length;) {
                    var i = parseFloat(t[a++]), o = parseFloat(t[a++]);
                    n.push([i, o])
                }
                return n
            }

            var h = e("zrender/shape/Path"), d = {
                path: function (e, t) {
                    var n = e.getAttribute("d"), a = h.prototype.getRect({path: n});
                    return {shapeType: "path", path: n, cp: [(a.x + a.width / 2) * t[0], (a.y + a.height / 2) * t[1]]}
                }, rect: function (e, n) {
                    var a = t(e.getAttribute("x")), i = t(e.getAttribute("y")), o = t(e.getAttribute("width")), r = t(e.getAttribute("height"));
                    return {
                        shapeType: "rectangle",
                        x: a,
                        y: i,
                        width: o,
                        height: r,
                        cp: [(a + o / 2) * n[0], (i + r / 2) * n[1]]
                    }
                }, line: function (e, n) {
                    var a = t(e.getAttribute("x1")), i = t(e.getAttribute("y1")), o = t(e.getAttribute("x2")), r = t(e.getAttribute("y2"));
                    return {
                        shapeType: "line",
                        xStart: a,
                        yStart: i,
                        xEnd: o,
                        yEnd: r,
                        cp: [.5 * (a + o) * n[0], .5 * (i + r) * n[1]]
                    }
                }, circle: function (e, n) {
                    var a = t(e.getAttribute("cx")), i = t(e.getAttribute("cy")), o = t(e.getAttribute("r"));
                    return {shapeType: "circle", x: a, y: i, r: o, cp: [a * n[0], i * n[1]]}
                }, ellipse: function (e, t) {
                    var n = parseFloat(e.getAttribute("cx") || 0), a = parseFloat(e.getAttribute("cy") || 0), i = parseFloat(e.getAttribute("rx") || 0), o = parseFloat(e.getAttribute("ry") || 0);
                    return {shapeType: "ellipse", x: n, y: a, a: i, b: o, cp: [n * t[0], a * t[1]]}
                }, polygon: function (e, t) {
                    var n = e.getAttribute("points"), a = [1 / 0, 1 / 0], i = [-(1 / 0), -(1 / 0)];
                    if (n) {
                        n = l(n);
                        for (var o = 0; o < n.length; o++) {
                            var r = n[o];
                            a[0] = Math.min(r[0], a[0]), a[1] = Math.min(r[1], a[1]), i[0] = Math.max(r[0], i[0]), i[1] = Math.max(r[1], i[1])
                        }
                        return {
                            shapeType: "polygon",
                            pointList: n,
                            cp: [(a[0] + i[0]) / 2 * t[0], (a[1] + i[1]) / 2 * t[0]]
                        }
                    }
                }, polyline: function (e, t) {
                    var n = d.polygon(e, t);
                    return n
                }
            };
            return {getBbox: n, geoJson2Path: a, pos2geo: i, geo2pos: o}
        }),n("echarts/util/projection/normal", [], function () {
            function e(e, n) {
                return n = n || {}, e.srcSize || t(e, n), e.srcSize
            }

            function t(e, t) {
                t = t || {}, r.xmin = 360, r.xmax = -360, r.ymin = 180, r.ymax = -180;
                for (var n, a, i = e.features, o = 0, s = i.length; s > o; o++)if (a = i[o], !a.properties.name || !t[a.properties.name])switch (a.type) {
                    case"Feature":
                        r[a.geometry.type](a.geometry.coordinates);
                        break;
                    case"GeometryCollection":
                        n = a.geometries;
                        for (var l = 0, h = n.length; h > l; l++)r[n[l].type](n[l].coordinates)
                }
                return e.srcSize = {
                    left: 1 * r.xmin.toFixed(4),
                    top: 1 * r.ymin.toFixed(4),
                    width: 1 * (r.xmax - r.xmin).toFixed(4),
                    height: 1 * (r.ymax - r.ymin).toFixed(4)
                }, e
            }

            function n(e, n, a) {
                function i(e, t) {
                    V = e.type, U = e.coordinates, o._bbox = {
                        xmin: 360,
                        xmax: -360,
                        ymin: 180,
                        ymax: -180
                    }, f = o[V](U), d.push({
                        path: f,
                        cp: o.makePoint(t.properties.cp ? t.properties.cp : [(o._bbox.xmin + o._bbox.xmax) / 2, (o._bbox.ymin + o._bbox.ymax) / 2]),
                        properties: t.properties,
                        id: t.id
                    })
                }

                a = a || {}, o.scale = null, o.offset = null, e.srcSize || t(e, a), n.offset = {
                    x: e.srcSize.left,
                    y: e.srcSize.top,
                    left: n.OffsetLeft || 0,
                    top: n.OffsetTop || 0
                }, o.scale = n.scale, o.offset = n.offset;
                for (var r, s, l, h = e.features, d = [], c = 0, p = h.length; p > c; c++)if (l = h[c], !l.properties.name || !a[l.properties.name])if ("Feature" == l.type)i(l.geometry, l); else if ("GeometryCollection" == l.type) {
                    r = l.geometries;
                    for (var m = 0, u = r.length; u > m; m++)s = r[m], i(s, s)
                }
                var V, U, f;
                return d
            }

            function a(e, t) {
                var n, a;
                return t instanceof Array ? (n = 1 * t[0], a = 1 * t[1]) : (n = 1 * t.x, a = 1 * t.y), n = n / e.scale.x + e.offset.x - 168.5, n = n > 180 ? n - 360 : n, a = 90 - (a / e.scale.y + e.offset.y), [n, a]
            }

            function i(e, t) {
                return o.offset = e.offset, o.scale = e.scale, o.makePoint(t instanceof Array ? [1 * t[0], 1 * t[1]] : [1 * t.x, 1 * t.y])
            }

            var o = {
                formatPoint: function (e) {
                    return [(e[0] < -168.5 && e[1] > 63.8 ? e[0] + 360 : e[0]) + 168.5, 90 - e[1]]
                }, makePoint: function (e) {
                    var t = this, n = t.formatPoint(e);
                    t._bbox.xmin > e[0] && (t._bbox.xmin = e[0]), t._bbox.xmax < e[0] && (t._bbox.xmax = e[0]), t._bbox.ymin > e[1] && (t._bbox.ymin = e[1]), t._bbox.ymax < e[1] && (t._bbox.ymax = e[1]);
                    var a = (n[0] - o.offset.x) * o.scale.x + o.offset.left, i = (n[1] - o.offset.y) * o.scale.y + o.offset.top;
                    return [a, i]
                }, Point: function (e) {
                    return e = this.makePoint(e), e.join(",")
                }, LineString: function (e) {
                    for (var t, n = "", a = 0, i = e.length; i > a; a++)t = o.makePoint(e[a]), n = 0 === a ? "M" + t.join(",") : n + "L" + t.join(",");
                    return n
                }, Polygon: function (e) {
                    for (var t = "", n = 0, a = e.length; a > n; n++)t = t + o.LineString(e[n]) + "z";
                    return t
                }, MultiPoint: function (e) {
                    for (var t = [], n = 0, a = e.length; a > n; n++)t.push(o.Point(e[n]));
                    return t
                }, MultiLineString: function (e) {
                    for (var t = "", n = 0, a = e.length; a > n; n++)t += o.LineString(e[n]);
                    return t
                }, MultiPolygon: function (e) {
                    for (var t = "", n = 0, a = e.length; a > n; n++)t += o.Polygon(e[n]);
                    return t
                }
            }, r = {
                formatPoint: o.formatPoint, makePoint: function (e) {
                    var t = this, n = t.formatPoint(e), a = n[0], i = n[1];
                    t.xmin > a && (t.xmin = a), t.xmax < a && (t.xmax = a), t.ymin > i && (t.ymin = i), t.ymax < i && (t.ymax = i)
                }, Point: function (e) {
                    this.makePoint(e)
                }, LineString: function (e) {
                    for (var t = 0, n = e.length; n > t; t++)this.makePoint(e[t])
                }, Polygon: function (e) {
                    for (var t = 0, n = e.length; n > t; t++)this.LineString(e[t])
                }, MultiPoint: function (e) {
                    for (var t = 0, n = e.length; n > t; t++)this.Point(e[t])
                }, MultiLineString: function (e) {
                    for (var t = 0, n = e.length; n > t; t++)this.LineString(e[t])
                }, MultiPolygon: function (e) {
                    for (var t = 0, n = e.length; n > t; t++)this.Polygon(e[t])
                }
            };
            return {getBbox: e, geoJson2Path: n, pos2geo: a, geo2pos: i}
        }),n("echarts/util/mapData/geoJson/an_hui_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "3415",
                    properties: {name: "六安市", cp: [116.3123, 31.8329], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nJUXUV°UÑnU@mlLVaVln@@bn@VU@xlb@lLnKlVIJUVxnI@lVL@b°VX@bxnVVUnVVnU@kX@VwV@al¥UUnUWa@@wĸULU¥lKUa@aUI@alLVaU¯anWkUKm@XV@VaXlW@aU_UWVUI¯@ma¯W¯I@UU@WWU@U@@UU@VkV@@WUUm@UaU@lK@IUKL@KWmXUWaXI@@a@a@U@U@KV¥lwk°b²JVIVKlV@UXlaUl`UVLVVVUJU@Lnm@_VK@KUIW@J@Xk@WW@UmmXmWk@kK@aUUVmmkUwUmWL@WmU@UJmUULkKWakLWVkIlwULW@X°lUJ@°ULWVwmJ@bmb¯Vkm@@WkWm¯wL@lkXWmXym¯UImJUbkV@Vn¯@V@lUb@mk@maUxmlUbULWn@JLmKUkWKkwUKbmXWxkVUKmLkVV@JUUWL@xkJUUV@X@VVlUbVX@xk¤x¼xWxnnn@Þ¼JVb°aVn@mlnXUJlbVlkz@lUlXJmxVxXnWxXÈWlU@UxU@VX@xUL@UÆmLnV@lWXk@@JlbXblnlJ"],
                        encodeOffsets: [[118710, 33351]]
                    }
                }, {
                    type: "Feature",
                    id: "3408",
                    properties: {name: "安庆市", cp: [116.7517, 30.5255], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n°znWXlW@kK°xXnl@Xn@l°Una@anIxXUVK@¯VIkW¯X@VKxklJXUlKXblLVKnVVIV@Xn@XKVnVxlnnUlmV@²óUkVlWbln@VVVIn@lw@WVIXblV@ÈxaUaVIVVnKVLKln@b²K@»U£ÑķġÝÅbKa@Im@Û@kWÓkkmKÅnóJUÅ£W@wĕ@wĉţ¯¯UkK±l¯U¥UÑkÝUķ»Ý¥¯JIUVbUl¯ÈV¼VJU¼Vb@bkLUl@VJ@bUXÇ@lkVmXmKkLVxVL@VkVVVlzWkbmLUUUbVbUVlÒnJlUnLllUL@bUVxlLXVÆ¦ÈVU¦WJ"],
                        encodeOffsets: [[118834, 31759]]
                    }
                }, {
                    type: "Feature",
                    id: "3411",
                    properties: {name: "滁州市", cp: [118.1909, 32.536], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@`nnl@xK@X°KXVIXVlbXVWnXlL@È»LVan@VJêVVn@X@laÞbVayn@_xnWVXnWl@VnUVkI@lnXKVLVV@V@kW@LlVô@J@bVnnKnkVa@»lç@nwKmaUUUVÑ@nmWXalI@alVn@VwUaVU@nlaôJnUVVXlJaXXVK@UV@VWx@nXVWXVUlLUbVULVVnUVbUbVb@@aKÆnnKVK@U@UU@@a@V°¯ÈJVIlķ@aaUaVKU_@mkxUI@aUlyU@@wkKWmUbUnUVWbkJW_J@bn@Vm@@KULk@V@@bVbÅm@LW@UVVbkK@UkKWL@VULUKWIUJUbkK@_WVXUJka@XVa@ky@aVIUUW@@mUlLKWÑUKVan@UkVmmIXKaVaUwVU@UmykU¯@±UUL@WUIVUU@KkIWaaU@kUUaÇUó»mKk¯@y@kWK@bkI¯`mnl¯XWlkVUzUJlbUbVJl@nnm@VULV`XnWÆbmUUnJmUknJ¯km@yk@kUxL@VUbmnn¤lX@`z@JmaULUVl@Xn@xllkXWaaW@UVmUb@mVXWxXbWbUÒnVVnVVUL"],
                        encodeOffsets: [[120004, 33520]]
                    }
                }, {
                    type: "Feature",
                    id: "3418",
                    properties: {name: "宣城市", cp: [118.8062, 30.6244], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vb@XLJXxlIXxlVlV@I²¤nlUnVU@VULWVUJ@Lnb@lV@UnV@@VVVlLnbnJUVkUUVWn@@anUVnVJVIV@@nUJVbUb@VUbVK@bn@VbnIlxkllXVlXKWUXUlL°¤UVVb@bUlkXWxXz@IlaUlnUlJVInVÆJULVUnVK°@VnlVnxV@XLlK@wVL@KnUlJXUbnKVLXlUw@VWlLXKm@@a@VLnmlIVVnKn@kVaVlwk@@a@k@VIUa@maUa@wna@kmWUUmVUIVÇ@aKmakUJ@InmUUaVaklX@Vk@m@VU@wnK@alKVUkUkKbmUkm@U£WVk@@UÝbbaÇx@b@WVUa¯@wVwUUV@VwnK@KWaÅ@KIUyUI@WmXóUbWaKm@km@IUyIUaWKx@zUKUL@llVUnkLVVkJWX@VUKUVIkVWakb@VWb@n@JkXUlmL@xkL@`VxLUÈUJ@Vm@@bmIUlUL@VUVVbknm@mKUwKVÈ@J@LV±kkJUIl"],
                        encodeOffsets: [[120803, 31247]]
                    }
                }, {
                    type: "Feature",
                    id: "3412",
                    properties: {name: "阜阳市", cp: [115.7629, 32.9919], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vn@ak°a±@¥@UUI@aUmlwUUxb@¥XU@mmI@a@Kn@@_W@@WI@mUVVXUl@XaV@K@I@aLX@aVI°K@KVLUUwyXkK@kKÆbXnlK@k@aJlU@w@U@»@aXKWn_JXkVKn@°LlKXW@¯U@aUK@kmJUwVIUJkmLK@kka@wUVm@@am@UkUbkK@nmVÒ¯VUWVVmIULk@ma@kkK@nUbUamU`UUVUkKVkkW@@bkmnmUXVKXVL@VbUmbVXJ@nmKÅI@KWKUXVJUL@VUKUX@KUKWL@LUJmaXXm@kVVV@L@VUL@VlK@L@V@LUK@VUb@UUU@°@nVxU`Lkn@`@XVJ@XVmk@UKmV¯LVVn±Wm@Ub@JlLUl@VLk@lmVVn@bnV@V°IVaVJXI°K°V@XXVlVVUnKVlUbWXnV@bV`U@@m@@@nxmn@bXVlL@¤nbUl¦VVUnJVUVl@@bÞL"],
                        encodeOffsets: [[118418, 34392]]
                    }
                }, {
                    type: "Feature",
                    id: "3413",
                    properties: {name: "宿州市", cp: [117.5208, 33.6841], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@UWU@bkW@aWU@aUIkWVlLXblVIUVV@mn@V_n@VaUK@I@UaanJVU@lVUVnnKVVlaUaI@wnKLnll@nVlk@wVKXkl@@bbUJ@VU@UUUyVk@aVUXwlWXXWU¹@aU@WUI@mlUnJ@Il@aXbV@VKl@XxVL@WIJlb@al@IUUm@@aVK@¥¯@mUķ¯bWk£Vm@akm@VaÅ@UVWa@UJWkJUbWbU@UlXk@amV@K¯nk@lU@Uxmz@bU`ÇbUbÅVm£U@Wwx@akLUK@UlakwUJWVkLmaUal@n_mVUnKVUUmÅXWa@kJmx@XUJ@bVLXxl@VVUVVUbkLWbU@@lUVVVVXK@XkJ@nU@@bV@VxUVlbU@xXLWn@UxVbVĊV@b@XV`mnkJ@kUKmbaU@VbnbÆx@XU@@`k@@bl@@bkL@WakXWaU@Vmkx@XWW@@wUUUbJU¯V@¯ÞU@WxXlL@bkb@lVlnbJW@kkU@mbkaWJIVlmz¯`UnU@mb@@`@bkVlnV@b@V@aVxn@VxKXnl@nbVKbVK@a_V@Vw@WLlwnK@UmIU@VW@UÈ@lKnalw@@V°@aUmlUUw@V@@UXK"],
                        encodeOffsets: [[119836, 35061]]
                    }
                }, {
                    type: "Feature",
                    id: "3410",
                    properties: {name: "黄山市", cp: [118.0481, 29.9542], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lXnlWX@VUJVnUJVzXJVxkVJlI²lU@K@IUÇLVxnLn@lmUaVU@UVKVknJ@an@@UVIVÇKUw@_lK@wnKVklW@I@mXa@UlaXblUJVUVL@UXWlIUUlKVmkU@kVKVL@ywXLVbJVz@Jln@nLXbVaônW@la@UVWUa@@a@mk@WIk@VwUa¯¥m@UUVK@ImK@aX£kKÅVa_@±akXWWLnU@@a@¯mK@LJUWwUVVmbXX@lWLn`mzUJUbLk@makVWmkXambkKkna@ab@U@Unm@WV@VbUbUJWIk@@lmL@°UVUVmn@@kmWkb@x_m@@aU@b@JlUzlWxXn@b²@l`IVlUlL@VKnVbUl@VlIn@@bbVWUk@@bX@Valb@bnb°Vn@xVKlbVnV@VxL@ln@UXVVL"],
                        encodeOffsets: [[120747, 31095]]
                    }
                }, {
                    type: "Feature",
                    id: "3414",
                    properties: {name: "巢湖市", cp: [117.7734, 31.4978], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VV@blL@XlWnnn@VXXl@@WIX@VJ@LxŎxln@bXJVblX@VVbUVn@VbUVlb@LnJVbVLVXLÒVLÒVbVIVylUXk°Wknm°_lJ@aXL@lz°@lnLô¼VÈVUUaVKU@WW@@UUa@knmVLlaV@a@kak±@UmwkKmkǉÝUUkL@mlIVmnÝWkkUÝ@KƑĉa@»mma@mX¤¯Uw@@UU@bU±±L@akmLUKmLUUUJVbbÇw@kUWaUJ@Xkxm@UJUUm@kakXUVl±ôU@kn"],
                        encodeOffsets: [[119847, 32007]]
                    }
                }, {
                    type: "Feature",
                    id: "3416",
                    properties: {name: "亳州市", cp: [116.1914, 33.4698], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lU@Un@@anUlw@KVmUwlaX_lKna@KU@@kWKUU@ankWXK@@V²VVIÈU@al@VaÈamK@wU@klaUV@XVUU»WUUbkmUkVmk@aÈw@mWU@VkIkVWKUÑķXȭºU¯l@kkLWmÅaL@lLWlzVxVUK@L¯LUJ@bWK@b@JLU@Wbk@WVUUV@nJ@XX@@`m@@L@bnJ@nWV@¦awVVkxVn@bVJ@V¦@²¯blb@mUU@¼¦XbUV`@nnxUxWLkUkVWKkV@XV@@VVL@VX@lVV@L@blL@`L@xXKVL@VnU@lwnU@ml@XnV@@UVW°LnalUI@aUK@aa@UkXW@I@mWL@UXK@UVW@U@@kWn@@V@XblaVxL@bVKXbIlJ"],
                        encodeOffsets: [[119183, 34594]]
                    }
                }, {
                    type: "Feature",
                    id: "3417",
                    properties: {name: "池州市", cp: [117.3889, 30.2014], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@V°°ĊŤ@xĖ@xXÆ¤VôIÆmnLllXÔ@lÜn@@JbLÆaĢÞĸ°VVUUKVanK@UV@VLVVnln@xnklxXamk@WV@Xa@naVkKlk@mkUWwkJWwIWK@UaUwWIUyVIUmVI@UXWmkkWKUUVWm@@kKw@UUUmkaULwm@¯Uma@akaUbW@@a@VlUXa@am@kJ@UVkUamL@UkKVUkJk_±@a@WmXwÇkkaVaUa±wV@VkwnyUaW@UU¯amLk@m@kmmU¯K@L@lUX¯WlkXVbbVUL@J@LVKnlJXnlb@`nXlalV@bnL@Vnb¼@lXbWlkLK@zUJmIUxUVUVmX", "@@llUL@VlxL@a@UwXa¯@"],
                        encodeOffsets: [[119543, 30781], [120061, 31152]]
                    }
                }, {
                    type: "Feature",
                    id: "3401",
                    properties: {name: "合肥市", cp: [117.29, 32.0581], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@LxVĊLÞkVlVVXaWaXwWnU@anVVUX@bXblWkk@wWmk@VUVKnb@Iy@_kWm£nmVa@UKwlVl@zn@°lIlmnVIVmnVaXÅWmU_VK@Unmmk@UIVakaaUÑUKÑWKUUKUamI@KkaVUUam@VUUa@UkWUaWI@akmōwwUL@`mn@KVIUVUUUKVk_VkbW@VkUULUJ±I¯alkxU¦@L@V@V@b@b@WJXbWVXn@LKVL@JkLV@Vbn@VV@XU@UlV@@VV@V@XXV@@VJ°°Xnb°@JUVVXV`@bkXWUbU@Wn@VLXlm°bVUbkK@bVJ@bVbkLV¦KķV@x@XbmVVVk¦"],
                        encodeOffsets: [[119678, 33323]]
                    }
                }, {
                    type: "Feature",
                    id: "3403",
                    properties: {name: "蚌埠市", cp: [117.4109, 33.1073], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VÒXLlUlJ@UXV@nÇx@bnlUVllnVaXVV¼UVWU@V²wVV@Vl@VnwlI@XbÆWVnUVmLUVnm`k@VbnblKXUVIlxkb@VVLlK@bwXxV@n¤ÆUVaÈaV_@anyVwV@kl@°m@LnUbl@WVkV@XaaVIXlIV@XbVUÆ@XKWwUkmW@_UmnIlJXkWKXmV@w@_XV@Kl@kU@KlX@@UUUUKWLm@klJVUUmk@mXUWmXw`m@zUbÝakbW@m@UUéUIm@UbKÇ¼@kKWXmWUkaWUJWU¯L@WLwk@mm@_ÅlUVkmWUnV@VWLUbbƑĬ¯l"],
                        encodeOffsets: [[119543, 33722]]
                    }
                }, {
                    type: "Feature",
                    id: "3402",
                    properties: {name: "芜湖市", cp: [118.3557, 31.0858], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bVaV@XllLXU°lL@V@VUnVl¯IkVUVU@@b@lUXUWmbn@¼bƒĊLÞ@lVXlmÞUnkJ@nlKVVÞXklWVaVI@aUKn»lL@Kn@XXwlm@mn°@V@WywXlWVk@aUaVU¯£kKWVXVWLUkkWlkkwmJUam@@aULVa@UVaUaVI@m@UUJUIUmmV@bm@UXVVUlVmImakKUU@UU@VmU@@kma@KVIXUVK@UVmUkVm±£@JkU@nlkLUlmb@WbU@@XnlWb"],
                        encodeOffsets: [[120814, 31585]]
                    }
                }, {
                    type: "Feature",
                    id: "3406",
                    properties: {name: "淮北市", cp: [116.6968, 33.6896], childNum: 3},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@lnnK@¦n@@VV@@VV@nIVV@VW²a@b@bVnUVVV@Vz@l@°UVIVaVV@x@XX@WlwUnV@XblWb@XlK@a@k@al@@_V@@WÅwmaUaV@bnaVL@llInmU_@W@aUUĉUaVwm@XWK@wVkaVUUwU@@aV@@mlI@WLWUUUVU@kV@XalKVaUVUUUk@WwUK@aVI@WUk@@UUU±xkb@lV@xnLÇbUbk@@bÇVUJ±U@U@WLXml@bVVXL@lV@@LmbkLW`kbVxUn@LkxmV@bm@@VkV"], ["@@VVVkV@¥@UV@U@VUUJkWakKUlXVJ@bXV@blX@aXV@V"]],
                        encodeOffsets: [[[119183, 34594]], [[119836, 35061]]]
                    }
                }, {
                    type: "Feature",
                    id: "3404",
                    properties: {name: "淮南市", cp: [116.7847, 32.7722], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°kƒīaVaXK@UUVmnXUlVÆkVKUUUmmUÑkUUÝlĉKUwKbU@UxW@@lmVUUVmUUmwaWkL¯K@mULWlIm`XWL@b@¼@V@xkVI@b@l@lkV°Ȯ¹ĸW"],
                        encodeOffsets: [[119543, 33722]]
                    }
                }, {
                    type: "Feature",
                    id: "3405",
                    properties: {name: "马鞍山市", cp: [118.6304, 31.5363], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ǊnllLnxV@laXLVKmaaXbVIbVKVVVIVyn@n_W@@UnJlUVVXlLnaUWlV@VVIXW@_W@XK@K@UVUUwVamÑXmmwwKUnUKçU@JU¯@m@nknWxWm@@LkKm¼VL@bUJUbkXWl"],
                        encodeOffsets: [[121219, 32288]]
                    }
                }, {
                    type: "Feature",
                    id: "3407",
                    properties: {name: "铜陵市", cp: [117.9382, 30.9375], childNum: 3},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ÒV¤@¼V²@aVV@@x°V£nW@nbnaVXVW@k@aV@VUUl°JUkVm@U@UkK¯WVkKWkU@Ubakwmlwm@kUmUUKU@@VmLUbVLUV¯U"], ["@@LllUL@VlxL@a@UwXamK"]],
                        encodeOffsets: [[[120522, 31529]], [[120094, 31146]]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/ao_men_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "8200",
                    properties: {name: "澳门", cp: [113.5715, 22.1583], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@HQFMDIDGBI@E@EEKEGCEIGGEKEMGSEU@CBEDAJAP@F@LBT@JCHMPOdADCFADAB@LFLDFFP@DAB@@AF@D@B@@FBD@FADHBBHAD@FAJ@JEDCJI`gFIJW"],
                        encodeOffsets: [[116325, 22699]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/bei_jing_geo", [], function () {
            return {
                type: "FeatureCollection", features: [{
                    type: "Feature",
                    id: "110228",
                    properties: {name: "密云县", cp: [117.0923, 40.5121], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@vIHZDZQtDLNMXIbHRCXXITbJ@H`LGPRDDJNCLHTOCWFGvGBUJMKGFO^IHWXITQCIY^AXGfRDXF`DJOLB~G\\DZIHHpErUVMhHb]\\MBVF@FTP`@zTbD\\@~M\\K`H^EVODWICAakAQXoIcCOCIgGYNWFWNGGKKGaJEGMEIKYJUT_J_Go@_SyQaSFMEGTcYOQLIIi@EKAUPCV[EEXQCW|aMUMAaYCYNIDGGACIMGGSKDQGaF_C[GaB@GOIiOKAYLmI@CN]F[SWWAcKKI@HMUimEKbeYQYISNUOcBKPIFBNgvDPGZYFSf]CMSIWGEUFgDIQ[MeDMJS@RR@LphFPCHaBAJKF@J]IBJO@HlO@@RKAMPJHCNDJTHFP@ZGNANBRFH@J_fM^ONJNF\\VTDJHDON@XRND\\XRCPVETCLBVKDFJINHRGPRV@\\CLJN@VbXbLVT"],
                        encodeOffsets: [[119561, 41684]]
                    }
                }, {
                    type: "Feature",
                    id: "110116",
                    properties: {name: "怀柔区", cp: [116.6377, 40.6219], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@JHTVHXCHPfnDJGHNDJSB[JSBGVSAOH@PMPuDEHHXZN@PHF@ZLJ@LHVYJA\\OFWP]BMtMBSRGV[JeVAPQVIFENMD¡@^NV\\JH@NNL@NM\\kTQ\\I^FNIpBHGTBFFAZQfKDIXQTLXFXNNVMVHRGpCFLlRLEVBBH`IVO\\G`RDPAXLXBXORHZEHTDLLN@VGTMrQNFPeASKG@GMOAKBYMK@GTUHUXSHMVDNMOUEOZMJML@^KRACMZEZMRQLUHE@OFENPR@DI\\ChMHIDG\\GJMDWHCKGMDCIQCHO_K@GaIJSWWQDaGWJMNCKRsCYGYuJUSaKaW@UIMDK@[QUHOGQJMEILCAUDKFSOUQD[WMCQ@WPMGCCIUSE[IMPMN]`e@IEGAQBMHM@YEOSGCIDMIGNOLB@QP@GkP@AI^J@ILEBIbADGEOog@KQQWSekWQQUOFKZLF@PUNmIaHIUeBCTSHENcJa@_IWSaGu`GLSBKJQFOXGDXVQVOBIHcDSJWBEFGTMH[^mLaXcHiKElTRKtFXZ`MHMPCNRDxZB\\ICIHK@KHbIVFZ@BPnGTGbDXRDJaZKRiGEFSFEJhjFNZFjn"],
                        encodeOffsets: [[119314, 41552]]
                    }
                }, {
                    type: "Feature",
                    id: "110111",
                    properties: {name: "房山区", cp: [115.8453, 39.7163], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@h@bl@HRJDZ``TA\\VVD^H`\\pF\\J`JGv@ZO\\GPSTEjPTR`FnEbDTDHEhLFMTK@ETSPULKEI@OVISKSJACEQNQbVIXGDIN@dMB[IIBcN]ZHNLP@XOWCFWCNRHTpATD@^NVNLED@Rh@jCEF}E[OOHUEW]W@QGGDIQSH_MmFmCUT_K]i@MHCMWFCFE{BMHMPOHKS]CFNGBELDH_@BcAKOACESAOBELaXAROB@FODMEDWJAG[aE@UM@DImEWJMC@OeCA{aE[@{L@MINUCQXKfUJORCHqJBF@TCXWNQX]M[EAJO@@KMBQJIC]EWMCCUBEBFHKDOTMBGNGF]MWDBRDdMDQVyE@LPVHDCP@JVVMTG~HNSH[CmRUvHPHBbA\\PTNRC\\YNJPRARPJDDR"],
                        encodeOffsets: [[118343, 40770]]
                    }
                }, {
                    type: "Feature",
                    id: "110229",
                    properties: {name: "延庆县", cp: [116.1543, 40.5286], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@^AXOPEB[ZIGU@KKI@YGE@OYMGWFGvCNO@OPGTBHUTA\\ITACIGMIHmCOeDGGWSUIGimYEEMgiFITEFEjHLQbYCIWQaCSHmHAOY@UEaJG@LGLDJ[JAwYQCDMNONGY_EWLsSQFkMO[NWAIGaIYL@HMBOKiOQDWEUDMQSF_QIUBWdg@[NaAKQ@M]OQ@WhgLUMMFYQDIRCEUZOOCIOJ[KIUMKL@HIDKVEBM`HJAJSJUdBLGNEdMBMO[BYEWJSNKNaD]PE\\SjOT_RQVEZPpNQXfNA~lNG`@PNLp¼RFLfbdKbATUh@FSNWjGFZVLFHVA~X¨PPROfFJbNJPLFbENJPrEFNPFRHDDJdENJLVEPBJTVTHGHFRFH@PXP\\ORQHW\\BjWFDERLPPBbB\\E`B\\D\\L`@F]FCnJ^AZL"],
                        encodeOffsets: [[119262, 41751]]
                    }
                }, {
                    type: "Feature",
                    id: "110109",
                    properties: {name: "门头沟区", cp: [115.8, 39.9957], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@V@XMnGPY²JQNEhH\\AZMPDVTTDZCPiJkHSHCjIdFtEHITCNITQEKUAMCEIKCECABYESKFWAKBEIIHABGDCKCAIHMHALKEI\\CFIBILIJQZS]BBEECS@E@@C]COKI@CABAAEEDMGCH]A[M@CJWHJaUMRFRBDTITLUJ@PFJKLOVST@FSLENgKGFSCaCmF_ESQiOSFOT[HYPu@IH_[IoE_[]GUC[USB__CYQI@Gakg@qZeHQNMNV\\FVLPgJAFJPRLCH[XcPELUT[JiV_EELFTADBXRTRLJC@fHXHHbPd`fR@NfT`@TLplHMpCEJHJBVLF@JTVnG^KXDXHNVGRLRXFJVdDHSNWLGfEzA"],
                        encodeOffsets: [[118635, 41113]]
                    }
                }, {
                    type: "Feature",
                    id: "110114",
                    properties: {name: "昌平区", cp: [116.1777, 40.2134], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VNLJI\\JPPDYPFVQDCJZRNEVNhKXgR@^P@NLRbB\\Mh@XcVARJE`RTCNFVXRCjPPLNA@GZKbJJHXB\\MNPjLdGbWnK\\]NGHSFEXATIdCJGPARUWUHCPWRELITAHKv_E@iYCaW_BQ\\Y@QIO@QDCIGZCEMWGFMFAFgHEDOCSqKCCFGAMKEAC@ODGCGs@WH@KQA@EE@CE@GEA@EH@GGUEEJEAYD@JM@@DAA@FHD@FTJEHUC@JUBKCKG@G[CIIQReAYhO@OXGDO@@FF@IHJFCPEBACBIAAKDOABXARHPNEHGbQAAKQFGIAM[C@WHKaGiCEGOAHUKCIokSCUSOCYN[BgGMFIR±OZmHWNU@ShbbXDHVXXGJ^lZ@PZ\\Nb@\\FHJAD"],
                        encodeOffsets: [[118750, 41232]]
                    }
                }, {
                    type: "Feature",
                    id: "110115",
                    properties: {name: "大兴区", cp: [116.4716, 39.6352], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@F\\E~DFN@BDFEpHFCHBBEGCDCJBHUDSBB@ELCPbF@B\\J@BJVAFJ\\ADKTCBGECFMT@BMN@@FH@DaNBEnvB@FPBATK@FHEFIAKFBFL@@PKBFJHC@FXBRAFCDMPDTOL@JIVFDHH@DDH@BGRFCDLD@N^@@CNA@KNOAEBCECFEGCFGMGFIPMOEJOLBADBBHGG@GCHIECY@INC@DMGS\\AIOZAAEYA@GT@KKMBEETCGMVINFxA@MJADB@FlA@HJA@NND@DFA@DVAZBBOFKH_JA@K^GBC@EFEG@gAENMXKJigC@IbSJMqGOP£RGSMGE@kbQFDPEFiBSGGSBK]I{CDWCIDOic[C_G@SuSO@EWKCO@MNY@\\uZOPENQD[LKESSKGBKEG@EJGAGHoH¥CqhifeJkX_XFFGHFNEDFPENKHM^IFIVL^S`DVEnNnG`RTCJHH@R^XFXGVPP"],
                        encodeOffsets: [[119042, 40704]]
                    }
                }, {
                    type: "Feature",
                    id: "110113",
                    properties: {name: "顺义区", cp: [116.7242, 40.1619], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@EhEBENXHFNYDJHCD@RJP@R[ZARX`DbjZF@bHXT`Jb@dIFMTGDSfAJVbGnJVM@OKELYPERVXRflXTT@NIfC\\NJRhCVEHFJXNT^DTeZEHYCOhuAMJELOdAVPTMOWBWNMNEJgl]@WGUFIC[T{EEDEHGCIGMI@SECUQI[D{A{GQESPUH]CsiMCmHUeoHENcAaDGCMDGMQCACCBaCGLMAHB@DIEQLOAAEEJ@CW@CDINGAAGKQOCgV@LG@BEGDKNeREFBNCFIDOPKD[@YRW@GFWDAFE@EHDDrLDTCPGF", "@@KrJEH[\\B@FF@CHFBHUNAJKADGECBCMAG^E@EbI@BEGP"],
                        encodeOffsets: [[119283, 41084], [119377, 41046]]
                    }
                }, {
                    type: "Feature",
                    id: "110117",
                    properties: {name: "平谷区", cp: [117.1706, 40.2052], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ZJZRafFLjnVGNJ@LLBdXX\\T^EDMJ@nZKLBjPPJ@HbA\\H`DbERHLCFK^BZaFWXQLAGMHa\\OLO@SBIpBdCLVQfElO@GSAKEDQTC@GEBKG@ORIJBDAPDFA@CaOq@GGQAAEJK@KMUGAAGEAa@MGMBGCGSIIW@WSUCMDOJeWOM@IUF{WMWaDIMgIoRoCOKeEOEAG_I[cg@wLIFENQFDVTFJ@HNDJGHCFFFS|D\\EJHV@Xk^IhMFMNAXPX"],
                        encodeOffsets: [[119748, 41190]]
                    }
                }, {
                    type: "Feature",
                    id: "110112",
                    properties: {name: "通州区", cp: [116.7297, 39.8131], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@FDAJTGDNDCTDDEDBBE@DT@@EHCDGJ@EIZ@@FDBR@ATFBBVFFE@@HNA\\VE@CLIFNJFNJBCP]A@LJFA@HJEDD\\C@DBCHLAEPF@@DH@APHAERDF\\GIxDTM@CFLBBFJ@CNUPMHECGDBF]BMFPDLRBHHBJMDCX@@DFIBFPBRKJF@CGANBHKbDDABDRDHNNCHDbCdBFMpGHiOYMefKJMC}HWAUNW\\NNBNAkNU|]HMTMN@MZBLFFF@RIRUTBMFIEGaAGGAOIIUGTSFcYKS@MSLYPKRUBU]EWDOI]CKGASgW@MTWKIMCS@uMAKKADMECGAKVUTSDy@IjWLMNBF@hHEF@FAD]H@LIBG`ELAPYAUB@CEB@CMC@MIB@GkB@ECAIB@NwBMEUJHNSDFFNALLS@@HZBBFYBJP[BHTCND@JMZ@FDGJHDH@GHAABCKAIPPFONEJNHEHHDEFFDADBFMP@L"],
                        encodeOffsets: [[119329, 40782]]
                    }
                }, {
                    type: "Feature",
                    id: "110105",
                    properties: {name: "朝阳区", cp: [116.4977, 39.949], childNum: 2},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@bFGHBHFBFIVFHHG@@FFB@HDFF@@FRB@LXGt@DHCH@PBDLFBNF@BEXCHEX@ZQ\\@LCPOJCDEAMFEfQLMHCAFH@@KhUNE^AAEHCFDNGVODMI@AEKADEN@CSJw[HCEFQGBBOG@@CE@FOKBDGCAD@C[FCGIB@IE@K^BDOIAEMMIJEDKF@[UMB@GF@EEAUEABSQ@CA@EY@FJI@CHGD@FS@@CAFCACFSCCDCMSHBIECMB@D]@@MKCDCQEAHG@CCG@CGUEIJK@SPOCCNEDQBDNDB@DJCDLFCBBALJB@BVGPBKVO@KHCCCD@FE@BNA@FNCTDDJA@FGB@NBDW@CL@hT@@ZHHQDDDAFSAANBC@HG@EFS@@DE@@PCB@Ue@CADNJB@FCBWA@LI^ix@FIHrH"], ["@@HUNAJKADGECBCMAG^E@EbI@BEGPKrJEH[\\B@FF@CHFB"]],
                        encodeOffsets: [[[119169, 40992]], [[119398, 41063]]]
                    }
                }, {
                    type: "Feature",
                    id: "110108",
                    properties: {name: "海淀区", cp: [116.2202, 40.0239], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@plDJVLGPBFHjDbHGL@X\\DBNHJREBLRBHaFGMGOBQAWPBLCBBAJBDFADOIEJGE@@EP@HCPWP@ZgfBRQJJ\\D@HLHLDVA@IVDFGSI@EGC@EBB@CN@@IZCAGHGaEqGJG@EjwJ]@K@GSA@e_I@NE@CA@Kg@KC@ENCFAKQAW@WIMK@V@I@@F@^EDFB@HcIaDYCBRRDCHD@EFLN@FE@CJUPEJOJMTBPEDIFCMIAKNOGMRFJNDVBFLSRMJSDGJsFcEiJGDGTIlOjYD"],
                        encodeOffsets: [[118834, 41050]]
                    }
                }, {
                    type: "Feature",
                    id: "110106",
                    properties: {name: "丰台区", cp: [116.2683, 39.8309], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@hMN@NFTQCFRCBJFA@HJ@@HJ@HJ\\FTACD@@UNLXJX@@MA@@IECAQlDFEHBDI~D@GXCFMVDFCH@@NF@ANJC@FnAB@AMF@@EDCDDLGP@LUOAUH@AIABKAAEDCKID@CCACMWA@EGDEILA@OK@AELEJBFEEGL@BSOA@EuAFmMACbG@@EM@ANS@ENFDAHSDCL[BEIUBAII@A[E@OaKD@FAACTGVIACDHDAFGAEDoGEFACM@ig@@QFCMKMU@]SCoBGSMQDEXXDWPO@MKYGM^AdJJA\\cNB\\G^DNHFCBFABDBJ@PL^D@DF@T@FDAF^A"],
                        encodeOffsets: [[118958, 40846]]
                    }
                }, {
                    type: "Feature",
                    id: "110107",
                    properties: {name: "石景山区", cp: [116.1887, 39.9346], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@NQPHLMJBDNJEFCAONSPIFIVODIF@@EKMFEC@DGQCAQZDbCdJ@GEAFC@]@EJ@DCSB[EGII@@GI@@GEBAIQDDESRMEM@gNYTIRKJAJEJ[DFJKLGBGNBJLDCDAHGBJJAFBLEXTLZFBAFDLD"],
                        encodeOffsets: [[118940, 40953]]
                    }
                }, {
                    type: "Feature",
                    id: "110102",
                    properties: {name: "西城区", cp: [116.3631, 39.9353], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XBDA@EIACM@IJAD]BC@SFABISAD]H@@OAEDQEW@BLEMD@FLDh@@LDBF@@M`J@fTB@H"],
                        encodeOffsets: [[119175, 40932]]
                    }
                }, {
                    type: "Feature",
                    id: "110101",
                    properties: {name: "东城区", cp: [116.418, 39.9367], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@DBf@@VDA@OF@@CT@FEH@@GADBMTBBECCRCGG@YS@@gDK@AC@PG@C^TBAJEB@TADC^IB@J"],
                        encodeOffsets: [[119182, 40921]]
                    }
                }, {
                    type: "Feature",
                    id: "110104",
                    properties: {name: "宣武区", cp: [116.3603, 39.8852], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@RBX@RFFCBFU@aK@WA}CCJGAEFkCBRFD@JB@@N"],
                        encodeOffsets: [[119118, 40855]]
                    }
                }, {
                    type: "Feature",
                    id: "110103",
                    properties: {name: "崇文区", cp: [116.4166, 39.8811], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XBL@@bEVD@BX@AC@MHA@EIBCCDSEMmB@EIDBME@@MG@EDUCENWD@H"],
                        encodeOffsets: [[119175, 40829]]
                    }
                }], UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/china_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "xin_jiang",
                    properties: {name: "新疆", cp: [84.9023, 41.748], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@ρȁôƧƦóəʵסʵóƪԫʵѵͩƧͩړυࡓɛʵ@ȃ@óᇑѵƨɝɚôóНѺͩɜ̏ԭʵôƧɞñ@υƩ݇ȂóƩƧ@ѵȂυƥŌਗ॥ɛóʵѵƧѹ݇̍ࢯəɞυρͩ̏óਙƨƧŋôōó̍ͩóʵןóŋړͪƧѶ@ɜԭԫƦɛȄ̍ɝȄöςƩȂ̏ñȀ̏ƩóóŎə@Ő̎@ɞȀɝŎôƨóנѵȄƧ@óŏɝóɜôŎ̍ͨςŎ@ƨóôƨɞ݈ʶóƨφó̎Ȁƨ̍ԮòѸԮמ@ѺȀ@ƪၬֆòȂñ̐òȂɜóƨ̒Ŏ̑߼@φρȀ@Ő๐ς̎Ƨφ@ɝφڔ೦Ԯǿࢰ@ƦŏԮƨƨȄƧ۬ɜʶڔŐɚɚóŐôƨ߼ôƧƧó̐ƥóŏѺǿƦȁφƧςƨƧ̒@ɜƥƦυ̐ɛƪͩƩəƪʷ̑ə@ȃƨʵנŋྸōਚԭԪ@ɝƨŋ̒օςʵôƧ"],
                        encodeOffsets: [[98730, 43786]]
                    }
                }, {
                    type: "Feature",
                    id: "xi_zang",
                    properties: {name: "西藏", cp: [88.7695, 31.6846], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôŌנôʶ̎ͪôóŎƨŌਚƧ̐ôςͪφɚɝࢰ݈̎ѺѶƨôʶ०ɜਘƦŋφѶȁ̍ôŏɚŋ@̑ə@ŏò̍ɜóƥôʷƧ̍φѹԪ̍ע@Ѹʷɜ@ôñנ@Ѷɛɞô̐ŏѶƨѸƧƥōƦôŏô@ƧôƩ̒ŋƨŌƦǿô̎ɜȁ̒óʶѶôôО̒ςƥɜНφσɛȁ̎υƨఱƧŏ@ʵƥ@ŌóóóͩƨƧóŋ̑õóɞóɝԩͪɝρôƧ̍ƧѹͨڑŎ̑ōóƧࢭͩ̏ѵɝóఱóóԪυô@̒ƥŌ̏Ƨ̑Ȅ݇ŎƧѵӏ@ɛõŏɛȄôӒƧŌѵǿɝƧŋԫ@̏ʴƥ@óǿ̑Ȁóǿ̍ςóóυô@ʶɛñρƦƩŐó̎óѵó̑ͪࢯОóɜןƧ̏ƥȄ߻̎̏̐ןŎɝɜöɞƩȀôöɛȀóͪ̐ƨƪ̍̎ȂƥԪυО@φɞôƪ"],
                        encodeOffsets: [[80911, 35146]]
                    }
                }, {
                    type: "Feature",
                    id: "nei_meng_gu",
                    properties: {name: "内蒙古", cp: [117.5977, 44.3408], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ኊȁ૊ö߼ƩɜɛנñԮɛѶóԮô@ȁѸóמ̎ගѺၬ@߼ʶԮӒ߼̎@ŐѹӒ̒Ԫƨöග̑ѶȄ̒ς।ѶɚöɞɜʴڔôôȂ̎ѺȀςƨƪóԪɜôɛОਕڔԭѵ̍ѹȂԫɛƥ̍Ȃóɜ̎ô@ʶ݊ੲࢮʵږͪנƨôȂƧ̐ͪ@ŐƦƨφԬѶɜôƦ@ŐƧôôƦəŐ̏@ŐڒѶԬô̐ʳԩНςōôŏɞ@ƨȂѶəóƧ̒ػ̎ó̐Őנóƨô̒@ƨɚɚ@עԫɛɛ@ȁυͩƥʳòևρ̑ࡗƧͪ༃ॣԮփ̎Ʀ@ôô@ôō@@ȁѵóƨ̍υȃóʵɛƨƥóυȂóəƪ̐ρƧͩɜԭڔȄ̎عƧȁ̐ŏó̍ɛƥƧ̑óρŐ@Ƨ̏ɝəɛ߻ͩ̍ͩɝО̍ƪƧóóӓƨóƧʳ݇@ɝςƪ@ʴƩƧƦôƨɛȄəƧŋυóͩѵ@ɝǿóŌן̍ɛóО̍̑̏ôȁ̍ŏòȁñóƦͩ@ǿə@ɛƧ̑ρȁυô̍օѹóȃə@ȂσʵѷƪòƩ̍ôó߻ۯôʳƧóõʵѵóѹɜ̍ȂѹôɛŌφֈƩͨρóυӑóޟఱ̑݇ͪóƪƨŌóȄڔԬƩςםñ̑ȃѵŐԭŏƨȁɛǿρôõɚɛóƧОə@ѹ̐ѵöԪͨôͪɛ̒ןŏƧƥóôƥƧɛŌôóɝó@̒݇Ӓ̒Ō@Ŏԭࢰ"],
                        encodeOffsets: [[99540, 43830]]
                    }
                }, {
                    type: "Feature",
                    id: "qing_hai",
                    properties: {name: "青海", cp: [96.2402, 35.4199], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƨ@ôƪ݈ȁƪ@φɝòóƨԮʶɛ̐ѹͪôОəóƧɞᇒѶ@ôږô@ǿѶƪȁςɜͩφςŋɞôѶɛƨŌɞ@ɚςŐñԪॢͩƨȂɞóƨŐ̎ŏעӏ̎óƧƦô̒ȁɜςͩ̒ɚɛƨôƨɝφɛóȁƨŋóóɚͩƨóóƩ@ƧəŋƦƩ̍@ƧƧôǿυ̑@ȁɞǿõŏρƥסɚƧóτԫɞôƧƦ@ñȃòñƥóυôôѹѵ@ŏ̏Ȅɝó@ȂəŌóəѹƦ@Ő̍Ōυ݈ԩŐƧóôƧ̑ôʵɞƧ̑ѵôƩɞƧ̑óНѵóôʵ̑ɛȂó̍ƥȀƧŋ̑Ōóƪ@ƨóóŐƥƦŎѷƨѵƧ̏Őɝóѵɜן@óòɛ@ѷʸס@ԩ̎υѺƨ̎óʸôƦɛñ̎@Őɚ@̒əŌóŐ̎"],
                        encodeOffsets: [[91890, 36945]]
                    }
                }, {
                    type: "Feature",
                    id: "si_chuan",
                    properties: {name: "四川", cp: [102.9199, 30.1904], childNum: 21},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôôŋó̑Ԯ̒ɛОמͪƨōöͫ߼ƥôȃƨóóñôƧóƧôōڔŏƨŐ@ŎôòƥѺŎ@ōɜóנôǿôƦôԮ̍ɜôɚƧñɛɚȁ̍Ƨɛևυ@óóôŋρԭɝ@Ƨʸ̍ŏυɜƧƧóƧƨȁρ̍ƨȃɚôʵφóô̑̏Ȃ̑ʵɜʵɞ@ƨʳסƩóŎəóɜƧôƩƧρóôôô@ŎƧƨƨƪѹó̍̍Ʃ@̏ѹНôޟ̍ƩóƪυɝɛəƨôŎɛȀ@Ȃ@ñɝʶ@Ōρנ̏õóɛͨƨȂѵОɛʵ@̏ƩŐó߼Ƨల̍φɜȂυτɛОρƦɝƨóƪ̒Ѷɝƨóʶ̒óƨƨôԪŏφ݇̎ŋ@ŏѺƥôɚɚŋ@ȁɞô̐ȃ@ŐѶóѺφóƦôñòòȄ"],
                        encodeOffsets: [[104220, 34336]]
                    }
                }, {
                    type: "Feature",
                    id: "hei_long_jiang",
                    properties: {name: "黑龙江", cp: [128.1445, 48.5156], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ᇔȂਚНƨŐѶŏöƥςŏñƧƦóƨȁ@óƨóȁφӑóóƨóǿ̎̑ôНɞó̑ɜə߼̎ǿ̒ôڒӑφ@Ƨȁ̎̏ƥƩ̎ρశôȂςƨφ@נɞ݈̑ƥƧɛƨʵƧȃƥ@Ƨƥ@ŏ̑ԩôɝρρóɛƧƩͩƧó߻ʸ̍ʷѹƥɞڕõ̍öɝυ̍ȂƧ̐̑ŏóƨñŋѹóóȁ̍̏Ԭõʸ̏ŏ@ǿ̍@ƧОυ@ñƨòȀƥŎ̑ŐѵóɛŌóȂԫōƧŎѹñ̍ʶóОן@Ƨ̎Ѷô@Ȃ@óŎó@@ó̍ƥԭք༄।ƨͩ̒ࡘςñֈƦʴφͪ@ȂɜɜסԬə@Ƨə̑@Ƨóןô̏ŏ̍ô̑ؼôƨѵɚƧȁɝ@óŐρŎԪО̏ʴ"],
                        encodeOffsets: [[124380, 54630]]
                    }
                }, {
                    type: "Feature",
                    id: "gan_su",
                    properties: {name: "甘肃", cp: [95.7129, 40.166], childNum: 14},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ڔôԮࢯ@ō̑ŋ݈ӑ@̑ɞôóôɜŋƦƨôóƨƦנŐɜ̑óͩԩͧѶõѺ̏ɚ@ƨНɜôöəςóɜȀƧȂԮŐѶŏ̒ȄמòƪρړԫôȃƧŋôƩ݈ͩɚ@@ǿɜ@φͩóŏɜӑƧōôǿ̎ôƥƪóõö@ôƨôƧƦôó̒ɜ@ɞŌõʶ̏Ő@ȀóôƨȂ@ʶע@@ƥ୾ӑó̑óŋôʵóɛړ@@ƩöóƩóρɛƨ̑@óʷƥƥ̎ɛƧôōƧǿôͩѵôɝȃɞȁõƧρóó@ōƧŏړŐóŎôƨóƨôòƧôóȄ߻ƦõͬƧŎםͩɜНԭ̑ô̒óŌóƥ@óƨɝσԬƨôעəςƦöŐɝȀ@Ȃφ̒óȀƨƨ̎@ƥƪɚŌ@ƨôƪƧôəͪôôƧŌôȂυɜƧɞƧóəɜ̑ρͪɛ̑Ȃóƨƥ̍ôסӐ̍ŐƧŏɝôƧȁॡͪòԩρŏ@əɝƧŋѵɜɝóρŌυɛͪρƩȂѵ@Ȁڕó@ȄɜʶφࡔڔƨͪѶͪԬʶôƩעʶɚʶƥôóƨςȂ"],
                        encodeOffsets: [[98730, 43740]]
                    }
                }, {
                    type: "Feature",
                    id: "yun_nan",
                    properties: {name: "云南", cp: [101.8652, 25.1807], childNum: 16},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôɞôɝ̒öôŌƧƨôͪôô@ŋƦ@ʶƨŐô߻ƪŏ@̐ɜʶѶНƧȁɜͧöô̐ςן@ŋɞʵ@ò@ȁɜǿóōɚƧɜφɞôƩ̎ƪóޠѺО@̐̎ƪô̎ѺƧƩƨƧ@ōóóôóςƪƨƨóôɛó̑ԭƥŌɛǿɝƨɛͩô@ǿƨȁѺŌɚɛ̍ןѶНɛƧôóƥȁƦͩôŎɞƨ̑ɜòôφ@ƨʵ@ɛѹōóȃəƨυǿóʵρƧƧŌƩɛ̏ȄñƧƧȀɝ̍ԩʶƧ̑υóŌƥʳɚӑóНƥô̑óӒѵʵѹƧӐןôƪφõŌƪ̒ԫŌƧؼƨƨסρȁƧƨȂóʶó@@ʴƨôôφ̎Ŏ@ȀƨƪɚƨóƨôôôςóޤƧŌƩŋƧԪ"],
                        encodeOffsets: [[100530, 28800]]
                    }
                }, {
                    type: "Feature",
                    id: "guang_xi",
                    properties: {name: "广西", cp: [108.2813, 23.6426], childNum: 14},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƦŋѺ̎ڔʵƨŐ@ƦמȄƪôóȂɜŌɚͩɜ@öóɜôôȂƦôɜȁ@ɞφóȄ̎ƨʶɞŋƨʴɚǿ̐̎Ԭ@ôñ@̏ƨρ۫ôɚƨƨНƪŐ̎ƥóƦʵƥŋ@ȃóƥƧ@@ŏɝǿôυƧȁѵɛ@əóŏ̑@@ə̍óƧó@ȁƩρóòНƥô@Ӓ̑@óŎ̍ƥσŎυ@̍ƨ@Ō̑ôóͪƨ̒óŌړ̏Ŏ@ŌôȄѺŎ@ɜƧʶυ@ñóɛƧ̒ɝóōƥͪ"],
                        encodeOffsets: [[107011, 25335]]
                    }
                }, {
                    type: "Feature",
                    id: "hu_nan",
                    properties: {name: "湖南", cp: [111.5332, 27.3779], childNum: 14},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@քɜОƨ@öŐמóƪôƩɚ̒Ő߼ȁςͩɜòƪɜȀòñɝòѺͪ@ŏƨŋóɝôǿƨɚȃóəƨȃѵͩó̍@ȃƨóóƥƨƧ@ʵƦóͩɜɛóñԭɛōυȂ̍ƧƦō@ɛƥɛȀ̑óʷóō̍ƩŏƧОəƧóς۬Ƨ@̐óòԫ@̏̍əȀƧʳɝŌóɞƧƨɜóŐƨò@ȄƧŌρŋóôԪОóʶ@̎óȄ"],
                        encodeOffsets: [[111870, 29161]]
                    }
                }, {
                    type: "Feature",
                    id: "shan_xi_1",
                    properties: {name: "陕西", cp: [109.5996, 35.6396], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ςôöƨɝȂɞȄѶóóͪƨȀóŎƨ̍ɜƦƦôʸ̒@ɜƧςƪôõô@ƪڔ@ôɜóʶôŌô̒୽Ӓ@Ʀ@Ѻ̎ɜѺɛѶôöʶôƨóʴ߼۰óô̎ñƪѸƩτʶ@ȁòŋəѹóǿ̑ʵ@ȁ̒ʷυփô݉ôН̏ط@ȁƨóô̏ƪõ@ʳ̐ʵ@ɝɛŋƩŌɛóןôƧŋ̒ó@ŏ̐ƥ@ŏυ@ƧƧôן̏@ƥȂѹɜəɛóԭ̎ƥóóóȀןɛô@ŎѹōñƦ"],
                        encodeOffsets: [[108001, 33705]]
                    }
                }, {
                    type: "Feature",
                    id: "guang_dong",
                    properties: {name: "广东", cp: [113.4668, 22.8076], childNum: 21},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@Ȃôôƨ̎@ɚ̒@ôŐ@ɚѶɜƨȂóφɞȀ@Őƨ@ôƦ@ȄƦŌƥʶƦôôŎôʸ̒ɜǿƦ@ɜƥŎ̎ƨφȁɜŎòƥԮŎƨōóŏɛƧɝəɞƧ߼ɜςȃñȄƦŎ̒ōôòƨəƨɚН@əƨ̏ƪʵυŌəɛóəԭŏəóŏѹρʵɝƦ̏ƥʳѶöō̑óóŋρȀυƧƥɛѹōƧôןɛŏѵ@óŋôʵɝƪԩõ@Ƨō̍@Ƨ@@ƦɝԮƪО@@", "@@X¯aWĀ@l"],
                        encodeOffsets: [[112411, 21916], [116325, 22697]]
                    }
                }, {
                    type: "Feature",
                    id: "ji_lin",
                    properties: {name: "吉林", cp: [126.4746, 43.5938], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@נ@ôН̎ʵѺòƨōԬŎôȁɜŋѶô̒ŏƦōñǿòƧφ@ƨН̎@@Ȁ̐Őöʷ̐ԫ̎ôȂѺôòŌôƧ̒Őƨ̏̎ȁφ@ŋƩͩםȃƨ@ȁ̑ʶ@Ōóôɛƥѹ̑συ݇@ɜρƧȃࢯƨôəȂɛōƩɛ̏υρóõƪʴυφ@ʶôŌóρք@ɜƧ@ɝǿƧͪρȀƩó̏ŐƨȂ̍غړȃɛԮƨͪ̏ςƩôɚφȁƦôɜƧôʶφȄ"],
                        encodeOffsets: [[126181, 47341]]
                    }
                }, {
                    type: "Feature",
                    id: "he_bei",
                    properties: {name: "河北", cp: [115.4004, 37.9688], childNum: 11},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Ʃ̒̏ŌѺ̒ƩóȄƧŌƥͪòôñȂ̎ŐóȂ̒̐̎ôНɜנ̎ôŋɞȀѶ@ôͪφƨŌɚɜȃóƧƨƥƪ@ʳƩɞρ݈@υНφʵɜƦρƨƧ̍ɝóɛѹ̍ρŏ̑ôóƨ@ƧƦôƨɛ@ƥƨ@ȂƦ@@ôəŐƧʶƨŌυ̍̎ɛŋôōɝ@óƧ̍ƦʵѵʳôʵɜŏςôƪŋƨŌɚ@ôНƥƧ@ōѸɛ̐ô̎ʵѵНԭ@̍̍Ƨò@ȁɝ@əρυͩƪ̏ƩõƧŎƧōóॡȄɛʶɜȀ@ɞςѶƧƥςɛŐ@ɚɜɜ@Ŏôôςƪς"], ["@@õə@Ƨɛ@ŐóƦφô"]],
                        encodeOffsets: [[[117271, 40455]], [[120061, 41040]]]
                    }
                }, {
                    type: "Feature",
                    id: "hu_bei",
                    properties: {name: "湖北", cp: [112.2363, 31.1572], childNum: 17},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ñȄυƦöŐƩóנƨƨφ@@Ő̏Ʀ@Ő̑ôƨŌנóɜôƪŋɜŌѶօڔə݈òɞōɜŎôӏƦóƨô̒óôȃƨó̎ŐôƧƪ@ƨȁςƧə̑̎Н@̍Ƨŏρôԭͩԫ̍ʵƧóȀôɞƧŌ@ŐѹͩñòɞñɛǿƩɛñρͪ߻Ȃ̑ŏƪəƩóםôõŏƧ@ɛНƥȄó̑ѺƧôφóƨƨƦƪóɜŐôóòôƨóφ̐ƨóƦ̎"],
                        encodeOffsets: [[112860, 31905]]
                    }
                }, {
                    type: "Feature",
                    id: "gui_zhou",
                    properties: {name: "贵州", cp: [106.6113, 26.9385], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɜȀƦŋԮô̒ɚôōעƪƧʴɝ@ɛʶ̒ʶ̐ȁƦóȂô@ôŏ@ōôƨʶѸô@ʶƨɞó@ōτöòυƨ@@əƨô@ɛ̒@Ʀɜôȃ@̍ôʵԩНôóςŌƨŋ@ȃƧñôŏƧɛƨôɝƧʵ̍ôȃυ@ɝɛȂƥóóȁɛóõôɛ@əͪɛŋôȁƩóםȃ@ƥƧŏړʶѹ̍ƥŌƦȂóôɜƨѵО̎נəɜѹŋƧȂ@ȀóɜͪɞƧ"],
                        encodeOffsets: [[106651, 27901]]
                    }
                }, {
                    type: "Feature",
                    id: "shan_dong",
                    properties: {name: "山东", cp: [118.7402, 36.4307], childNum: 17},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ʃ̐φͪɚςɞ@@Ȃƨñ̎̎Ԯ@ѶОƨƧڔ@φН̑ŋ@Ʃ̒ǿ̎@ƨɜԬςôʶ̐ʶöԫƨƧנƥɜŎôō̎@ôŏóρƧŏԫôóƧԩó@ƥɜƧԭóƨʵɛƨ߻ӑɜНԩóô̑óƧʳəóɛƧ@õȀƧ̍ȃɛŐóŏυО̍óɝƩԩ@ƧɚԫȄɚʶƨɞʶԪ̐ړɛƪ̒"],
                        encodeOffsets: [[118261, 37036]]
                    }
                }, {
                    type: "Feature",
                    id: "jiang_xi",
                    properties: {name: "江西", cp: [116.0156, 27.29], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƧȄôɚəȄ̎ʶԬԮͪςóƨŐƪτɞƦōƥƧ@ŏςôóŐôô̒ʷѶƪƩƩǿ@ō̒ɛôυ@Ƨȁѹɛəƨѹ̑ƨ̏óƥѵʷô̍ɛȁôŏɝǿƧԫƧôʳƥōòȃρȄ߻ɛɝƨɞɚɜƨôŐƧŎԭōñƦòԮɜôɛôͪƥ@ʶƧƨôƦƧô@Ȅô̎Ѷͪ"],
                        encodeOffsets: [[117e3, 29025]]
                    }
                }, {
                    type: "Feature",
                    id: "he_nan",
                    properties: {name: "河南", cp: [113.4668, 33.8818], childNum: 17},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@φ̎ƪ̐ɞȄɚ@@Ȃעó̎ŌѺ̒ôֆॢȃôƨŎƨōƪöƩ̑ڔɜԩ̏ɝʵƧəʵԬȃƨəԪ@@Ƨ̒ŏô̍υȁƧɚ̍ôóŋ@ɝƧŋõ̑σ@ŏɜŋôɝ̒ƧɚôôطρóóɛƩ@óƨ̍ŏƧôóȄ̑ôƧóƥôóӐɛōɝŎ݇ñړɚѵֆ@ɞ̏ʶ@ʴƩöó̐"],
                        encodeOffsets: [[113040, 35416]]
                    }
                }, {
                    type: "Feature",
                    id: "liao_ning",
                    properties: {name: "辽宁", cp: [122.3438, 41.0889], childNum: 14},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƨʴƧôôӔƨô̎ƩɞН̎ͪ߼ͪɜɞɚ̐@ƨςŏ̒ôƦƨɜô̎ƪôςǿƨͩɞȀƨ@@ɛςփôóŋ@ʵφυƩʳö॥փρѹס@əɛ@ͩࢯ@ѹʵρƩʶφȀƧ݈̒۬óʸɝŎѵ@ԭԫןɛƧƨƥςɛυʶφО"],
                        encodeOffsets: [[122131, 42301]]
                    }
                }, {
                    type: "Feature",
                    id: "shan_xi_2",
                    properties: {name: "山西", cp: [112.4121, 37.6611], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɚѺñŌɚôȄѺ̎ֆφóςȂ̒ɜƨɚ@@Ȁƨŋôȃƪѹ̑̐ŋƪ̑Ʃρρóó@ōɛɛ@əɜŏƦρƨρѵ@ɝɛǿɜʵóօѹ̑̍ŋסô@ȁə@ɝȃ̏̍ƩυƧô@Ȃ̐ظóОó݊φք̑ʸ@Ȃ̒ʶôȀ"],
                        encodeOffsets: [[113581, 39645]]
                    }
                }, {
                    type: "Feature",
                    id: "an_hui",
                    properties: {name: "安徽", cp: [117.2461, 32.0361], childNum: 17},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ó̎̑Ő@ƨƪѶǿɜ̑φƦʵ̐ƧѵôóƪôôυςƨȂɞŏ@̍ԫôò̑ƥóȃѶͩƧƥôŏѺôŏƦ@ƥͩƧôȁυó@̑ƧɛѵʵƩƪѵ̑ʸóóôŏρó@ŐƦƨƥŎσɝƩ@̎̍Оɚ̒ρƨƧȂôɜςôóظəó̑ƨóɞɛŌ@Őτö̒ƨŌ@ɞôŌ̎óƨəφȂ"],
                        encodeOffsets: [[119431, 34741]]
                    }
                }, {
                    type: "Feature",
                    id: "fu_jian",
                    properties: {name: "福建", cp: [118.3008, 25.9277], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̎óȁƨӑ̒̎ɚƨͩφŐƨɝ̎ŋóŏρ@ōƨòʳəóƨō̏õɛƧ@ƨѵƧōəŏóŋƧô̑ɝɛʳƥ@@óɛõ@Ƨ̑ƧóȁəƧ̑Ƨ̐@ɚəОƧƧɚóñ̑ŎóʴƨƨԬɞȀóŐɜȂó̎ѶʸôƦƧ̐Ѻ̒ɚƧѺɜƨȂ"],
                        encodeOffsets: [[121321, 28981]]
                    }
                }, {
                    type: "Feature",
                    id: "zhe_jiang",
                    properties: {name: "浙江", cp: [120.498, 29.0918], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ѷʶƨɜ@̒φôóȂƨƦͪ@̐Ѹ̍τȂ̒̑נŐמôƪƧôӑ̑@ƥρͩƨօ̏@@υɝó@ŋɛ@ôƩəóƧѵυó@ƩɜŋƧ@̍ŌƧɞυŏƧͪ̍ə̑ƧӒôȂ̍@óφ̑ɜ@ŎƪȀ"],
                        encodeOffsets: [[121051, 30105]]
                    }
                }, {
                    type: "Feature",
                    id: "jiang_su",
                    properties: {name: "江苏", cp: [120.0586, 32.915], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôɞ̎φНôŐɜŏ̎Ȅƨöǿƨ@ôɜɚƨʴ̒ôôó@Ƨ̎əԮȃԪૉöͩ̐ƧòʵφƧôʵ@óړɜóŏɜǿƧɝρσȁѷ̎̏ƥóŐѹóŐƨƦѵͪôȄƦñ̒Ԭó@̎ɝŐƧȁρóφƩóóôƨѶ̏ƥʶυɛ̒ѵȀ"],
                        encodeOffsets: [[119161, 35460]]
                    }
                }, {
                    type: "Feature",
                    id: "chong_qing",
                    properties: {name: "重庆", cp: [107.7539, 30.1904], childNum: 40},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@əȂòɜƨѺɛƦȁ̐@ƪõŏφƥòȃƥ̍Ƨôυ̏ƧôñóóôɛŏƩôƧƥôƧóυƨ̒ѹôƦȃ@փƥɛ̑@@ɜƧó@ɚƧ@ñφσõ@ŎɝôƧ@ʵѷóƧʵó@ŎóŐó@ôȁƥó̒υôóʶəƧȄς̎ƧȂôƨƨƨφɛ̎Őƨʷɞ@ςԮóŌôôφ@ɜֈ̎ƨ"],
                        encodeOffsets: [[111150, 32446]]
                    }
                }, {
                    type: "Feature",
                    id: "ning_xia",
                    properties: {name: "宁夏", cp: [105.9961, 37.3096], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ల̒ôޠφӒςôƪͧυևɜŋѺó̎ȁ̍ɛ@ѹס@@ʵƧȁôó@ǿ̐ŏöʵɝŋɛ@ô̑ƥóóƨƧóôó@ƩôóƦ̍óȀƨŎɛӒôŐυͪɛ@@Ȁə@"],
                        encodeOffsets: [[106831, 38340]]
                    }
                }, {
                    type: "Feature",
                    id: "hai_nan",
                    properties: {name: "海南", cp: [109.9512, 19.2041], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@φɜƦʶ̐ôφô̎@ƨŎö@τʵƦԩ۫õН̏óƥȃƧ@Ʃəםƨ̑Ʀ@ޤ"],
                        encodeOffsets: [[111240, 19846]]
                    }
                }, {
                    type: "Feature",
                    id: "tai_wan",
                    properties: {name: "台湾", cp: [121.0254, 23.5986], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôƩɝöƧɝѵəޣ̏ρƩԭóōóͪρɞƧОôԪ݈ଦѶɜ̒ɛ"],
                        encodeOffsets: [[124831, 25650]]
                    }
                }, {
                    type: "Feature",
                    id: "bei_jing",
                    properties: {name: "北京", cp: [116.4551, 40.2539], childNum: 19},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@óóóυóôƥ@ŏóóə@ƧŋƩŌρóɛŐóʶѶʴƥʶ̎ôƨɞ@óŎɜŌ̎̍φƧŋƨʵ"],
                        encodeOffsets: [[120241, 41176]]
                    }
                }, {
                    type: "Feature",
                    id: "tian_jin",
                    properties: {name: "天津", cp: [117.4219, 39.4189], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôôɜ@ƨöɚôôôɚŏ@óƥ@@ȁƦƧɜ@óƧƨƥ@ƧóəН̏óѷɜ@ŎƦƨóО"],
                        encodeOffsets: [[119610, 40545]]
                    }
                }, {
                    type: "Feature",
                    id: "shang_hai",
                    properties: {name: "上海", cp: [121.4648, 31.2891], childNum: 19},
                    geometry: {type: "Polygon", coordinates: ["@@ɞςƨɛȀôŐڔɛóυô̍ןŏ̑̒"], encodeOffsets: [[123840, 31771]]}
                }, {
                    type: "Feature",
                    id: "xiang_gang",
                    properties: {name: "香港", cp: [114.2578, 22.3242], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@óɛƩ@ρ@óôȀɚŎƨ@ö@@ōƨ@"],
                        encodeOffsets: [[117361, 22950]]
                    }
                }, {
                    type: "Feature",
                    id: "ao_men",
                    properties: {name: "澳门", cp: [113.5547, 22.1484], childNum: 1},
                    geometry: {type: "Polygon", coordinates: ["@@X¯aWĀ@l"], encodeOffsets: [[116325, 22697]]}
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/chong_qing_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "500242",
                    properties: {name: "酉阳土家族苗族自治县", cp: [108.8196, 28.8666], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XJ°lJX@lbl@XbV@VLnJlxnbUU@IVK@lVIVwnJlU@n@J@L@Jn@l_nWVLVln@@blLmV@@xÔ`nxVÈLlxLVxVVV_U»VWn_m¥XwVmnX°lmUUVwÞaVk@a@mmIUa@mwk@m@@U¯a@UV@@K@ykkmwkV@kU@ÑVkKWLÅamaUm@kyU@WkU@UaIUaVaUUmUUa@aVLXKWa¯UUbmJXnWnX`l@@xkzWÆ@VLU¦x@b@JkIkJ@LmbUamJwm@óxnk@V@xVnUVmVUVUbVlUbkXW"],
                        encodeOffsets: [[110914, 29695]]
                    }
                }, {
                    type: "Feature",
                    id: "500236",
                    properties: {name: "奉节县", cp: [109.3909, 30.9265], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WVXbUnK@x@b²kxmKkl¯_VV°VU@bnKVVV@@nk@nbn@°@VLČU@°WV@VnU@InKVl@nUbKnXWlknLlKUwnalLaVlUXmWk@UU@UWWIUyķ¹XaWW@XKUIVmU@W@UVU@KV@n»VkUkÇmUmVIUmULUbm@wUaKkkm¯ÑUL@bWVnx@VmxUI@klmkkK@aK@IlJ@I¯k@mak@mnkJVL@bV@UbW`UUUVI@VU@VVbUJVLUVVbUXVVxk¦VJUnVxnVVUJV@Ubl@@bXV@L"],
                        encodeOffsets: [[111781, 31658]]
                    }
                }, {
                    type: "Feature",
                    id: "500238",
                    properties: {name: "巫溪县", cp: [109.3359, 31.4813], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nLWbXVLVUV@KIVl@b@lbUVnU@JÆU@V@n°KĢUl@VbÞKV@_VKXUU@KX@wlkkU@mWKUU@UôJ@XV@aVmÞIVaVL@»km@UkLU@aU@WWLUUUKkbwWa@KU@kaXmWLamVk@UmL@JmVUU@¯X@ċVUK¯@ÅnWKLkKULWK@UXK@wW@LkV@bVLlXn`¯xU°LnlV@n°Lnl"],
                        encodeOffsets: [[111488, 32361]]
                    }
                }, {
                    type: "Feature",
                    id: "500234",
                    properties: {name: "开县", cp: [108.4131, 31.2561], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n@naIw@@VVKLVbVxnVÆUnanKWXamKmk¯K@mkUm¯KV°w@Wm@UIUUlKUU@a¯KWanwmUXamKkUWUnU@KkUwWKXaWLUWkImaUUUKka±k@l¯wwmbUkXm@UJkIWXXbmUJXUV@°KllVXV@xmbnV@blV@VU`UL@Va@bULlb°VXbÜ@V@bL@JxnLVb@lVb@V@@zbXWXKVLV@@bUVVL@blVna@ll@zl@@J"],
                        encodeOffsets: [[111150, 32434]]
                    }
                }, {
                    type: "Feature",
                    id: "500243",
                    properties: {name: "彭水苗族土家族自治县", cp: [108.2043, 29.3994], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Jlb@nVV@bXb@ÆlLUl`nVKU¼VxkbWnlUxlXX@°°WnnJ@VUn@Jk°L@VlV@nUJx@bVVVz@VnLlaKnalVlIU¼@nV@@anKUwVal@UlJlI@akU@UWXKVI¯Uak@@KmkXWÜkXWykIWwXw@laXamkVUUym_XmlkkmmakwmIUKU@Wak@kaW@kI¯WIk¦VUUmaUV@XkVUV±aUb¯b¯¥m@@ImJ@mmL@kUKUkkJbV¦"],
                        encodeOffsets: [[110408, 29729]]
                    }
                }, {
                    type: "Feature",
                    id: "500235",
                    properties: {name: "云阳县", cp: [108.8306, 31.0089], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lbLVVVnblJVXXKWbXLVxl@LmVXVVlnLWbnVmxXb°L@bVVkLVVVJn@@X_WmkUK@alUKX@@xWL@VXLVKlLKXLÆm@ma@ml@mU@UUmL@aVUU¯U°`lknLlw±@a@wmLVWaXU@KWU@ak@VaU@IUVmUUwVmUIl¥UwUVWUaVUUKVIUa@UUUUJUUmknl@@VWV@L¯aUbUlx@@b@VULUx@VUxVVU@bU@mxUU@mUVklkk@WxknlxK@amLKUK"],
                        encodeOffsets: [[111016, 31742]]
                    }
                }, {
                    type: "Feature",
                    id: "500101",
                    properties: {name: "万州区", cp: [108.3911, 30.6958], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĸĊVInaWWXlJVIn@lWVnax°xkl@²LVLnK@bLkwlmXw@lllkUnVV@VnwV@@aVUUVw@UVwVK@U@a@kwVVa°b@KXU@U@mkÇÑamlkUVmn@VULUm@kUVkUawUWm@Uw¯mKUUmVUUULUKUW@XbWVkaWwkUUk@maUbmbVlk¦xUVUIWVUkJVVkL@UmJUUVU@lLUVUlx@@VbJUL¯¤@V"],
                        encodeOffsets: [[110464, 31551]]
                    }
                }, {
                    type: "Feature",
                    id: "500229",
                    properties: {name: "城口县", cp: [108.7756, 31.9098], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VK@w¯L@m@UÅV@ImVUVka@@aUkJ@LUUVUKmLmbÅVmUUwUaKUL@U@xJmbm@nVJ@X@VkVnlLXx@b@bUVLU`UnbU@@mVVX@JX@VLVVklV`@bUL@VLVKn@U@UJkn@lmLmK@X@Jn@mbnÞWVXnJkKČÑÆ@VK@knaÜmXlUČW°kôÇÆ@a@yÞ_VmUnU@K"],
                        encodeOffsets: [[111893, 32513]]
                    }
                }, {
                    type: "Feature",
                    id: "500116",
                    properties: {name: "江津区", cp: [106.2158, 28.9874], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@InWUUlU@LValX@°²lÒXxlK@Ul@@Un@UaVJ@I@W@UUUVUwVIUKUaUUVwn@Üx@XUlnnbJ@¥VklKUUlk@ynU@kVUUVWnI@¥V£VWVIUKU@UVa@n@Vm@@nlUaVkUwJ@blLkLW@XWmXkmmLn@m@U@UVm@UVUUlakUVaVkV@@wnaWUk@VwklmVIkUUxmJ@U@KIkx±V@IUm@K@IUKkbWKUbnm@bmVnbmb@xkxUJ@ULW`@bX@WVXL@V¯mk¯@UJ@VmLUaWnX@WJ@nkKkxW@UIV@@KkImmkK@UW@XaWIU@UIkbWbxXlLVbnV@bWlX@VxVLnl@nÆÞVÜ"],
                        encodeOffsets: [[108585, 30032]]
                    }
                }, {
                    type: "Feature",
                    id: "500240",
                    properties: {name: "石柱土家族自治县", cp: [108.2813, 30.1025], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@kl@¼UbmVXJ@bV@nxVIVJULVVk@@LWbnJVU@bVbUJ@blLXnWV@mbnV@Vbn@VJVLnaVanbl@VlVXxlbXUWaX@VUUVwUUVm@I@WmI@amlLlK@alwnUV@kóVaÝk@UlbVK@VU»VUUVWU@U`ULkwm@@KmU@knK»VkJkUmbLkbmK@UUyUU@awm@@XXJ@VVLVVUbVnUJVX@Kk`WXXJWXUbmW@bkLUm`Xnb@JVL@LU@°VVXKVnUxVLUbmJ"],
                        encodeOffsets: [[110588, 30769]]
                    }
                }, {
                    type: "Feature",
                    id: "500237",
                    properties: {name: "巫山县", cp: [109.8853, 31.1188], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@kVUbkKmbVxkLmKkllbV@@LXbxlaLVVVKXXV@@bVlKV@ln@¼°KXaU@Ulw°JXalIUaÝWXW@kVU@VUVWUUUamUw@aVamwn@VUUlLXWm£@wÇĉkKklmLUÒ¯Wn@ğ±kwmaWm¼U@@LUV@V@XVUnVJLW@XXWbĸºVzXJVXV@@VXlWn"],
                        encodeOffsets: [[112399, 31917]]
                    }
                }, {
                    type: "Feature",
                    id: "500102",
                    properties: {name: "涪陵区", cp: [107.3364, 29.6796], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nèVblĖVVnL@xVn@nJ@LUVVX@lbUJV@@nn@VVVK@zV@nzVJVUlmX@@_VVVbnaVal@@knW@wnaVK@aVIJ@£kUVW@wXUVJam@Ik_X¥@WwkKkwmkUxnÅmm¥WV@Um@UlVL@JU@@X@UVkKVkKVkKkb@bmJVXUVVUbU@@`W_UV¯b"],
                        encodeOffsets: [[109508, 30207]]
                    }
                }, {
                    type: "Feature",
                    id: "500230",
                    properties: {name: "丰都县", cp: [107.8418, 29.9048], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Þè@XUK@LlV@blbUJ@V@bnV@VVVXU@lbXal@VXnKV@maXUÞ@amk@aVKXVanb£°mnIVaUKVwUmWLUU¯V@@KUK@IaWmn_VlK@anXVaXWWIXWl_@LUWVIUmVaUUUK@UWI@Wn@VI@mkU@U¯Kl@ImVÅLwU¤óbUU@wWXkmm@LU@@VUIWVUL@JUnax@JnbUIWVx@UXlV@¤IUJ@bULmb@xmX@lk@UbmbUaUU@`W@kn"],
                        encodeOffsets: [[110048, 30713]]
                    }
                }, {
                    type: "Feature",
                    id: "500232",
                    properties: {name: "武隆县", cp: [107.655, 29.35], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lwbVm@IVKXUVJ@UV@@KnnWlX@xVVôaV£xÆKnUVm@UmIXm¯¯@WkWVwmkXlaUwV»ULmk_VkK@ÅWa@aUU@mkaIb@n¼nm_@mmK@ULUVVmI@aUJ@XWJ@U`UIkm±kk@@lULmUmKUnVnlUVmI@VkVlxbkIVmLUxkKUXn¦ÆnmVwlnlxlLXx@W¦`"],
                        encodeOffsets: [[110262, 30291]]
                    }
                }, {
                    type: "Feature",
                    id: "500119",
                    properties: {name: "南川区", cp: [107.1716, 29.1302], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VUbVJVUn@VLX@WVXVVI@VUVWxU@m@ĊX@@¼V°aVUX`@_V@VaUUVUWnI@alaLUlLUllLVU@@WV@@IUKVkn@@VlLVwnKUlJakwlU@UnJVUmkUVmXa@wVK@UUw@VVI@ak@alInwlKXUmaUW@wWLkKVak_ÇaUV@XbLVxUlWIk@UK@V@kU@VbUVUlVnLUV@lVXmxkV@L@V@Vk@WbUwmL@JUI@xVxkx"],
                        encodeOffsets: [[109463, 29830]]
                    }
                }, {
                    type: "Feature",
                    id: "500241",
                    properties: {name: "秀山土家族苗族自治县", cp: [109.0173, 28.5205], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XlV@lzn@VnbÆbXKlLUÒV@@llUnxll@z@LU@@V°b@Vn@l@VÑUnK@UU@aUakVm@K¯wklmnnUl`nI@almkIUwmWVkUakkJmUUa@K@aU@@_m@@wUyVUUa@Um@awl@Wka±UkUykIWVb@bUVk@aU@UXUUIWakUWmUxUV@nUVWb@XXVVmXX@VbVLkVWx"],
                        encodeOffsets: [[111330, 29183]]
                    }
                }, {
                    type: "Feature",
                    id: "500114",
                    properties: {name: "黔江区", cp: [108.7207, 29.4708], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VX@V@LV@VJUL@lVnnxlb@VXVXV@@W@UIVK@kUKna@£VWUaVUUalIVJVIUW_lm@bXKV@mn@JUUw@KnIVll@VanLVmUkVKXLVKUIVamw@UaU_lwKlwUWV_Ua@aUa@KUwm_Ó@wU@nkK@am@UkUKmXk`m@@I@K@I@mkVmIUxUJ@kUL@JVVlnklWnn`VzUVnlWbkb@WxXxlJXzWÛlWXnl@Ll@Vb°UJWLX@VlV@bkJ"],
                        encodeOffsets: [[111106, 30420]]
                    }
                }, {
                    type: "Feature",
                    id: "500117",
                    properties: {name: "合川区", cp: [106.3257, 30.108], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XKVXlKVL@UnV@aValXXKU@WVwUaVU@IV@@aVWL@U@anVV@@bVK@UVL@bnJWL@VnUnb@@JnIlVl@@bXIWbn@UKVLVKXLlaV@VVnK@bVLmIV@KmknUUWVI@aVJ@_WU_VmUwU@KVak@am¯mJU_UJUkU@WkIV`UI@JV@LmmU@@mbUzÅ@VK@nUKbakb@UWK@bkVVbVÛ@@`Xk@W@n@lXL@bmb@VVJUn@JnUlnUlmX@`XLlbkJW@kzlb@`@b@b"],
                        encodeOffsets: [[108529, 31101]]
                    }
                }, {
                    type: "Feature",
                    id: "500222",
                    properties: {name: "綦江县", cp: [106.6553, 28.8171], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@¦@XlVX@@UVKlVUX@lanVlUVbXWVXVVVUnKVUlwUwU@UJ@nmVkUVlwXam@VaUUUw@W@kk»mV@UmKkwVKVUU@@LUKVI@mV@XVWxnXVKUUUK@wWU@UUWnUlLXamUIam@wI@K@amImUUkI@makUkKWUUan@wamLVxk@UVmUUL@Vm@kV@I@ak@@bWVXJlLVbVL@@bn@@`Un@WbUKULWVXb@UVmbXWVb@bVmxUKUV@Un@V@V@nmnKlnnWWXX@lKkK@aIVxUlVbk@mn@@U@mbVUV@VLUJUXU¤"],
                        encodeOffsets: [[109137, 29779]]
                    }
                }, {
                    type: "Feature",
                    id: "500233",
                    properties: {name: "忠县", cp: [107.8967, 30.3223], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VLÞĊU@W@¼V@lk@w²mlVUllVnI@VlKUUlIVXUVJVUwl¥UkUKUIm@aU@mUna@XUWmkK@aVIUa@aUVmIXa@Kl@UUVKUIUJmwU@@aWInUVa»k@@l¯n¤mabWUUL@bnl@bÝWVnbU@mLUWk@Wbka@WVUU@UmUmVkUULVlVUxl@L@VbÈÒlb"],
                        encodeOffsets: [[110239, 31146]]
                    }
                }, {
                    type: "Feature",
                    id: "500228",
                    properties: {name: "梁平县", cp: [107.7429, 30.6519], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XLV@VV@b°°nnkb@bnJWVXblIUVxWnUJnVVLVUJlUnLVK@UnUVJ²nKVbVKla@aXlJkKlb@U°£KVIUa@@kwVVUkKV@VUkkUVk±n@xkl@U@»@XVÝĉUJnxWb@UXKkVUbUKWUkVmkkLU`b"],
                        encodeOffsets: [[109980, 31247]]
                    }
                }, {
                    type: "Feature",
                    id: "500113",
                    properties: {name: "巴南区", cp: [106.7322, 29.4214], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nxnVlJlUXL¦@x@Vl@nKVVX@V_V@@KlVXU@lKlxXIl@ÈĊ@Vl@n_VJlnVlnb²VVVJVVmUUkĕUamçU@»W@@ĉnV@XwVU@UUJWUXUW@UKm@UVUIVaUUVmLUVUUUWWXUakVmUkbW@UVkUL@VW@kUW@mJUXVVU@lmV@zklVVkLUl@¦I"],
                        encodeOffsets: [[108990, 30061]]
                    }
                }, {
                    type: "Feature",
                    id: "500223",
                    properties: {name: "潼南县", cp: [105.7764, 30.1135], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@a@a@_kalyX@lIkaWK@_nWVkkmmV@IVmUI@Una@aWK@k@mkbWaknmJUk@mk@@kUal@Ua@Wa@aXLlwUKlkk@KmI@VUJ@Lk@@VUUmL@amJU£kKUaWakLmU@bVVUbnbWV@xkL@bUbxUxVbXJVbUVWIUVU@kLWxkKWV@n¯VUbU@@VVX@VmaUL@VUK@VVbn@lVnI@@lnLULm@Ub@l@na@lK@XVVkJ@b@zl@@VnV@bVb@J@bnXV`lXXmVI@W@InbV@@aVKUblKVLUanLlmnLlK"],
                        encodeOffsets: [[108529, 31101]]
                    }
                }, {
                    type: "Feature",
                    id: "500118",
                    properties: {name: "永川区", cp: [105.8643, 29.2566], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@bÜnWVLXlxVVxXxlVn@@bVblK@a@UnLVJV@@UnLVU@VXaVKVX@n`WUÿ@IUKlaUUUkWyUÛÅÝ@mmkUKUwW@Xk@amUUakKWwXaK@VVLklXVlkxVUL@bm@Vxn`IVxUVkLVUl@@lkXmmVUn@VV@Xb"],
                        encodeOffsets: [[108192, 30038]]
                    }
                }, {
                    type: "Feature",
                    id: "500231",
                    properties: {name: "垫江县", cp: [107.4573, 30.2454], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ċ°¤nÒ¼aV_lKnllUXVVLValULVW@XamwVIUKkaÇÑa@U@KkVwkUUVKlVnU@aU@VIka@akU@KVL@WÝçUV@VmbÅ¯@LKnnJWVkxlL@VX@VxmnXVWxUb@bkn"],
                        encodeOffsets: [[109812, 30961]]
                    }
                }, {
                    type: "Feature",
                    id: "500112",
                    properties: {name: "渝北区", cp: [106.7212, 29.8499], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@bVVXLa@lnbWn@L@XVlK@VVLUVlbkLUKVVVL@VnXVL@VV@UbVb@x@¦UxVb@bUJL@LVVxlK@nk@U@WUVLlKXV@VblU@UUKVU@wn@VJVanLlkX@VaVK¯@a@U@U@VaUKkUU±maUkm@UUkbm@@Vk@@JwU@Ub@I@JmwUL@a@@KkVÇLkWk@kUU@@xUVmKUnllUb"],
                        encodeOffsets: [[109013, 30381]]
                    }
                }, {
                    type: "Feature",
                    id: "500115",
                    properties: {name: "长寿区", cp: [107.1606, 29.9762], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VVUbXlX¥l@XnVmlxUx@@blVnnôĀlm@aVaXwWUnmUwW@@UkKlwUXmImL@KÆ°na@UUImyU@@yULUUm@@mU@VIkaW@UUV@KI@mmUw@mKUnUUIlVLUb@@V@V@b°ULUbW@klmKUbUIm@@xUVVL"],
                        encodeOffsets: [[109429, 30747]]
                    }
                }, {
                    type: "Feature",
                    id: "500225",
                    properties: {name: "大足县", cp: [105.7544, 29.6136], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XUmaVaUU@anVlKXbValU@aV@@IXK@@bV@VxVK@UXLlUJXa@_@@aVKÅWVkwWawUa@am@kUWLU@kWmX@ykI@W@UV@na@LlLV@UkwWUKmXX`mIVl@bXLWVkbkkx@`VXm@@J@U@UUKUxk@WbUIVl@VXLWJUkUlUImxXlmb@X@VUJUnVbW@UV@@VVX@bnW@LVxUnlJUV@n@VxVIn@l`UVVVL"],
                        encodeOffsets: [[108270, 30578]]
                    }
                }, {
                    type: "Feature",
                    id: "500224",
                    properties: {name: "铜梁县", cp: [106.0291, 29.8059], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VblLV¤nI@bnKVV@Ul@@KVI@UnJ@LlklVLkxWK@bXb@Vbk@Vb@ll@@nVlnIlmXblaXl@W@_Ü@UUalU@aXL@VlabaVL@mUL@UUÇXUWX_WaU»m_@UWULWb@UUVmK@VU@UImK@V@bkLxXblxXUÆUL@b@@`WbIkVWK@VULUwU@@a@WL@JU@@bkVUb"],
                        encodeOffsets: [[108316, 30527]]
                    }
                }, {
                    type: "Feature",
                    id: "500226",
                    properties: {name: "荣昌县", cp: [105.5127, 29.4708], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VI@U@WnaWknwVJVkVlIXWK@UUkVJXal@VwVL@V@V@In@UW@_wlllaXUWK@aUknJW_Û@aWaU@@UVmUUaUImJVnÅUmVUm`kUUVWLnVU@VVmXK@nxmULkxImJ@nU`@X@Vkn@`@nlV@nVJVaXVLnK@bVV@nV@lbXW@"],
                        encodeOffsets: [[108012, 30392]]
                    }
                }, {
                    type: "Feature",
                    id: "500227",
                    properties: {name: "璧山县", cp: [106.2048, 29.5807], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XzVlVVkbVL@JVĀX¼VXbW`XWVÈVVVkV@@UXa@alK@IU@UKWUyUI@wVUUWVak@VUkW¹@WXI@yVIUK@kWwkÑ¯±W@kUb@KkVVVmXJ"],
                        encodeOffsets: [[108585, 30032]]
                    }
                }, {
                    type: "Feature",
                    id: "500109",
                    properties: {name: "北碚区", cp: [106.5674, 29.8883], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XVLV@@JkL@bWb@VU@UlÆVya@nV@nn@KU@IVJU_lJXV@VlVIV`nIn°@blUbKVI@aUaVw@¥@wUaVaU@@UUKWm@UUKUUVLlKkaVUUK@UkLWU@@KXmma@kbWKUU@aUamLnÞ@VWLk@@Wm@ULU@@UKUVWI"],
                        encodeOffsets: [[108855, 30449]]
                    }
                }, {
                    type: "Feature",
                    id: "500110",
                    properties: {name: "万盛区", cp: [106.908, 28.9325], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VIV@@wVJ@InKVxXal@@U@U@KlUnwUW@kVUKUmVkUa@I@KW@@bk@@mU@m@k@a@aIUxmJk@wULwkKmVVX@VXV@xVLVVULmWXwWUU@@nUJVL@KV@UVULlxnL@VnUl¼@l@XVxVVUbn@WbkxUlVnU@m"],
                        encodeOffsets: [[109452, 29779]]
                    }
                }, {
                    type: "Feature",
                    id: "500107",
                    properties: {name: "九龙坡区", cp: [106.3586, 29.4049], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XKL@V@XbV@lW@UV@@VXIV@UVKlL@KnnJ@VV@VU@I@@mVUVWUUmL@V¯LUK@UV@UU@a@U@yU@WLUK@X@KUVmL@@aXI@w@ammVk@WÛwm@UxVVVbVLUJVxVUV@V@X@JUIVbm@@Vk@@VkL@lVLUJ@zWJ@X"],
                        encodeOffsets: [[108799, 30241]]
                    }
                }, {
                    type: "Feature",
                    id: "500106",
                    properties: {name: "沙坪坝区", cp: [106.3696, 29.6191], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XºlUVl@UbVXUV@xVJVzXJVUL@VV@VKn@@Xl@XK@UmÝnKVbVakkVm@kUK@UmIm@LkKULVU@WJ@UU@@VkXU@Wa@@UKWL"],
                        encodeOffsets: [[108799, 30241]]
                    }
                }, {
                    type: "Feature",
                    id: "500108",
                    properties: {name: "南岸区", cp: [106.6663, 29.5367], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VVJVL@bUVVnl`XIlwXJlw°nnlIXW@UÇĉk@WJkwkL@WVkU@LU@U`W@UXUV@n"],
                        encodeOffsets: [[109092, 30241]]
                    }
                }, {
                    type: "Feature",
                    id: "500105",
                    properties: {name: "江北区", cp: [106.8311, 29.6191], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nLVU@wV@lV@XllÈKlU@L@@bVKnx@I@JVaV@x@Il@@Un@laVVn@mkUIm`k@WXJmk¯mkxWIkxWJk_UmVUUK@UU@@l"],
                        encodeOffsets: [[109013, 30319]]
                    }
                }, {
                    type: "Feature",
                    id: "500104",
                    properties: {name: "大渡口区", cp: [106.4905, 29.4214], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@k@@U@w¥WKkVkImUmwa@b@xWJ@b@nKVU@L@WVLXKV@@z@V@bVVU@@VVL°K@U"],
                        encodeOffsets: [[109080, 30190]]
                    }
                }, {
                    type: "Feature",
                    id: "500111",
                    properties: {name: "双桥区", cp: [105.7874, 29.4928], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WwUwU@kK@KmbU@@V@XlJ@znWlXV@XK"],
                        encodeOffsets: [[108372, 30235]]
                    }
                }, {
                    type: "Feature",
                    id: "500103",
                    properties: {name: "渝中区", cp: [106.5344, 29.5477], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VL@VV@VL@aUKIUU@@JUVU@"],
                        encodeOffsets: [[109036, 30257]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/fu_jian_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "3507",
                    properties: {name: "南平市", cp: [118.136, 27.2845], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@knyk@KU¥wV@nkWzUmk@@lKUa@aVI@UKUamKUUVaUI@X@UV@K±IUVVlUbUbUL@KWUXmWk@KkXmmkÅKUa@amUbkUkKWUnwUÇwVUUÝUKV£U@nKWwXLVKm¥@wUXkmWk@@wX@lU@yVImaXwV@knU@mbk@mlUXmU@mV@n@bnW@bUIWJImVUKWbUK@nkKaU@W_VUUmWmL@UU@bUWUL@V@bmVUz@`mUUVVbXL@VL@lmLUxmVamXkW@xWbUVbUxkU±@ÅUmmkLUbW@@`kLknVlV@lbXxlVUXVVUU@UbWkIWVUUUJkI@llbUxVL@VVUU°ULUmWXUV@VULWb@xm@UaVLVKUa@w@VbkmVambUUm@@VkK@@bxlxX@n¤@X@@lkLWV@nVkb@bWJXLWx@nkxmmbXn@VWVUn@VnJ@bVXl@VJXnWbX`lLUlJVI@@VXV@Vl@bn@@Æmn@VxXU@mVIlxVnIl@nVJaXI@mlU@aXkVm°klmnVV_na°@V@xÜ¦XKVnnUlVXbVKLXKV@naV@@VVl@@lXblXWnLlbVK²n@@VLUnlV@lXxô°V@UnaUUlKXLVUVVUbVVlUnJVX@VW@an@lb@nl@VU@anUVW@kaUm@InVVKVU@kUW@Uam@km@kVa@a@nwU@WlI@mVI@WXaW_n@nlkkW@U¥@kV@Uw@wU@@IXK¥VIn@nU@`@Xl@VVLnaWbVaUwnU@VIKlV"],
                        encodeOffsets: [[122119, 28086]]
                    }
                }, {
                    type: "Feature",
                    id: "3504",
                    properties: {name: "三明市", cp: [117.5317, 26.3013], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lL@Un@VVnabnUla@Ux@VbULUKVbn@w@XaVK@UVUXWVnVKV¯VU@UUKVwka@klJVIVVXUlJXVaV@VUUVWkUWwkaU@UklmlK@_X@ValKnnÆV²@lVVwUaVXa@wlXnWbnUVwnK@kK@UWKUaVUnV@_VynU@a@UVKVXaV@@VnKnXVVUX`V@blL@mVLXaVLnUJXIVJ@amX@a@mnUV@nVWnkl@naV@ml@@KmKUam@UU@@UlKUVkUK@aVaUwVU¥UIkJ@wmI@mbkwkVW@UXKULU`IVKUa@LkkVmUU@WlULUWÅU@I@WWnU@@w@a@Uam_XyVIVWkk@mwVKXUV@nwVXkWÅU@aU¯KUnK@¯mULXVLnWVbVbUVm@Ub¯¼W@am`kbamLUUUaUXV`@x@XmJ@n@L@xkJUU@kU@mWm@kUUwUUVWl@VUkIy@kkaVUUmIWVXbWxU@kmVkK@nWVX¦WxU@@bkx@VU@Wk@kUbmJUUmkUW@_kKWK@knV¤kIUKWLUbV@Wbk@@VWL@VkI@lUXVxUVU@@mWIV@a¯nUaaUV@Jb@bÞ°VbU@XaUVmL@VXblnV°n@Vnx@VUUUlK@InJVb@Vlnn@VL@VWJUx@XlJUVVVl@LUUUJ@L@lUL°¦kVVnV@xVl@blLnlLVaXll@nVUn@xn@nml°X@lb"],
                        encodeOffsets: [[119858, 27754]]
                    }
                }, {
                    type: "Feature",
                    id: "3508",
                    properties: {name: "龙岩市", cp: [116.8066, 25.2026], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@aI@VUbVb°m@bUXJ@nV@VUUwVW@klJ@UXK@Ul@Xa@UVaXKVLlJU£lm@XLlL@`VXnlVVnIVall@XV@@Ulw@aV@XwW¥XU@mlLnUlV@XwWaXUJVnUVlb@lzlJUVk@UXVVVxlVn@nXV@@lVVlI@w@K@mnI@W@wU_VWbVVVnKbla_nbX@°»Van@VUUaUamXUKWK@a@Uk@wWkXWW@wUUKw@_lywUkU@@U@kamVmXaUVUka@Wk@»UUUVKkbWUVUbk@mkxkKnIVUmW@kUKmXUmVaU@kU@m@KUWVkIWJ@U@UI@wUUUa@KW»nU@mVkUmm@XwWU@UUmL@w@mnVUU@aWak@@amxU@UxULWVXbVLU`mbUImVUbnV@@bVn@bnVWxLmyUbIUK@aVmakbVUXWUlKWbkV@WLUlk@@nbb@lkKmU@UIWJkw¯UUVVxm@@XkbWxXKlUzWJkUUL@bmKkV@@VUIUlWV@XK@VkbWx°xUb@LUbk@@VWb@LXJ@VWXU@@bUVVVVn@VVlLn@l@xk¦Vx@bVJXbn@JlnXxV@@nJ@X@V@lmxbUn@xVL@VVKlL@lnLVaVL@xkl@LxVl°XWVXVlJWnxlJ"],
                        encodeOffsets: [[119194, 26657]]
                    }
                }, {
                    type: "Feature",
                    id: "3509",
                    properties: {name: "宁德市", cp: [119.6521, 26.9824], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@LVKVaVaUkVU²J@LVU@@WVJUbVVnLVbL@VUJ@bVbkL@l@VnyXmlU@xV¦L@lmz@lnL@bVVbVb@lnKVkVl¤@zXV@l@XJVLVKnXVKVnU@wUm@KU@UlVlw@U@U@UaUKlU@kXKlmXIWKXaVIVUVK@KU@@kJVUnLVJUL@VIVa@VnLKUnl`VbVV@Vbn@Vzn@lKnVlIVVKUalkXJl@XXVWVLVUUmVU@Unm£lK@Uk@WUXK@U@WVwVkĠkĢÇ°aUÅUwmaţɱUÇaw±V¹XalKôx@UVaÜʓͿVóbÅLJm¯Vk¦k@mamXkKUULakbk@mV@LkJWb@VkmXk@UVmaUV@amLUKUamI@KUaU@WbU@UUUUIWJUkm@wKkVJm@kxÇVUK@mUVUkmlkkVm@amwLVWU@UbVLkUb@VmK@XaVWU_VJnwV@@kUmWakx@kwWakIWxnbUJz@kVW@@x@XllnVW@xn¦ULWKXxmL@VU¤VLÞVVUÈxVmxXVlLlVanV@bbVLlÆnnlW@LXlWnXV"],
                        encodeOffsets: [[121816, 27816]]
                    }
                }, {
                    type: "Feature",
                    id: "3501",
                    properties: {name: "福州市", cp: [119.4543, 25.9222], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lxna@nJ@xlIVJV¦UVxUb@bLVUlVkL@V@VVn@VbLn@LUlJXblx@lwXbVn@lU@mxUIV`UXWb@nLU@ValUKVaV@UXKnxbn@lUkllnUVnV@VLUÈlwn@UIlLxn@VlXIVJVVVV@XaV@Vb@LnJVbVLnK@bVUnbVUl@nWl@UXalI@KnUl@labVKVlLnWnbl@l¥°UnIÆKôa΀Ua@UUwÇWǓIUWUÅVkƨm@@£@KmLU¤ULˣJkUVǟUUķ@ĉVKUk@Ñ°wôÇç@īé@Åţ¥mīÛkm¼Å@VķVó°ō¦U°n@bVJXVVL@bUakLmx@xmxXzW`XbWnXV@bWLÛ@a@aXbWVkaÝwU@mlWKkLWWkLUKULW@kVmVUUÝUamV¤n@xUVUzkJV¦lJU"],
                        encodeOffsets: [[121253, 26511]]
                    }
                }, {
                    type: "Feature",
                    id: "3506",
                    properties: {name: "漳州市", cp: [117.5757, 24.3732], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@bl@Xb@bVVUm@nx@nKVV@XVWxn@VnUl@nmVX¼@LVbVV@xVJV@@XIlJXUV@Ln@lVV@UbVnnWVL@lnXUVmJLlwnll@VaUXVlaLVUVV@¼Xl@lbUVVWbnnUlb@@VV@aVUmlUaUny@kU@Wkk@WaUVk@@ammk@@U@UlU@aUa@wl@mXLllnLU@anVnU@L@VVV@KlXnWVnVanUw@w@wmnÅ@waUam@UkmUl@@aa@U@¥kôKwÈ¯°w@ŻkwǕaKÑÛk@ĕōřċ£ĵUKW»kÅŻLU@Ulġw@¤VzVUbkKUbmLmlULU¼UxmbXl@bWVb@bUnVUVbULU@@VkbVL@`U@WX@XV@b°@b¯@¤@Xm@@b@`UVVUL"],
                        encodeOffsets: [[119712, 24953]]
                    }
                }, {
                    type: "Feature",
                    id: "3505",
                    properties: {name: "泉州市", cp: [118.3228, 25.1147], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vlxkz@`xLVV@xXXWXl@xl@V@bnV°@LVm°LVbV@ÆXWlUmxU@WVULnx@llUXUJWzn`Vb@@b@xV@mXX@@JÆVVXVKXkV@nVlUl@KVbULJV_VKLVWX@lUVkIU¥lIVyVU@wm£nUVWU@am@UmWw@UX@@amVUn@@aUUlUVanaWUXWmUnkK@VUlVVUUw@XLWWXma@knmbVbVXbVL@XJlInlLwmXów@çV»ÇçŋaķƧóƅóKġ°nÅUķƑUÇW@¯xÇ°öÆlVn@lla@Lb`@VXVVx@V@bULVJUkÇ@¼XUKk@mmULkaWbk@x@UkL@a@K@U@UmKmbU@kV@UmVUbUmmXkW@LUU@U@KmVmU@bVmKkkWKnk@@xVb@bkV@V@Vl@nn@bl@VUXbl@XlV@@lmzVVbknUVb"],
                        encodeOffsets: [[120398, 25797]]
                    }
                }, {
                    type: "Feature",
                    id: "3503",
                    properties: {name: "莆田市", cp: [119.0918, 25.3455], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VbÞVVnUlUX@VKVLlKXXlKXLnkV@ÞxlbXUWab@bÜ@XK@aWUXmWaX_Wynw@wnwlKbV@aUKWUUI@amV¯Ŏ¥ô¯ĸUUÆ@n»¯aƿé@ţ¯nĉĬÝKóó@ÑU¼@èxWônxKmkkJWI@UKWaUUaamn@lnbWXXWK@VxUVkUV@ULmlnVWXXVmbUbkVVV@bm@UVn@bW@@VXxn@Vn@bVUX"],
                        encodeOffsets: [[121388, 26264]]
                    }
                }, {
                    type: "Feature",
                    id: "3502",
                    properties: {name: "厦门市", cp: [118.1689, 24.6478], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VlUV@nanL@V@V@L@blK@Vwl@XalbVKnnl@VLW»È@lVUIVK@a@UUwWUU@_aK@bkkm@UkõÅxóLl@¦@Vb@bk@VnVln@Vbb@xmÆn@x@xx"],
                        encodeOffsets: [[120747, 25465]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/gan_su_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "6209",
                    properties: {name: "酒泉市", cp: [96.2622, 40.4517], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÇnÅaĉ@U¯¥UŹ£WUýUU±JkkUwyÞIČxĊĕĊ¯¥ÆUkţUÅÓ±¼IUx¯UÒƑÝÅ°KÝnğ°ÅU@@Vn@þ¼¯WnŎ°XLWlnVnbWnVXxmbabóUlǕUUaIUmlU¥k¥ĉwkkÝɛa@¯U¯°mVkVnKlōÑÇÑU@klUġkUŻnUW@¯k»mWV£UKnUmUww@UIVaXwm»Èmmwn¯ċ¯LĉUJUalka±Va@Uk@ÛÑ¯WmnUaɝ¤Ûmn¯m±x@wóxÛLġÒUx¯VÈJUbózÝÇKĉ¯ōlÝUÅWl¯nťbÝ@¯ǩLġmV@Æ¯ĢkÆmĊkVťLɃmÝXó°@ĢbVóVÝ¦ɱ@ƧaġUVĠÇÈV¼UVţwmbJÇwˋaXmÇ¯KkkmbXm¼V¼ǬŚ²¤ôŰÆƴô̐ŤǪnɆӨ¼ɆLÆłUĊxŎƞȘǔˎǬǪnƨŮǬö°»ġÞÜÆĸÒĊǀbƾèôÈ@¼¯þŤĸƧ°VĀ¯b@lÈĊʠń̐ȘKǀֲॗţÿǕý@ʊǓƨóÆÑǖŃôw@΋ʈƆÅÈVVĊVóĊÅ@ÞƒĬV@Þī@°V@ĸĢ°XτƜĠ@ÈaÜ¥ŐƅnğóĕVġUůƿŋĕa±VUťÇğÑ"],
                        encodeOffsets: [[101892, 40821]]
                    }
                }, {
                    type: "Feature",
                    id: "6207",
                    properties: {name: "张掖市", cp: [99.7998, 38.7433], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÈÒŎÒkmLUlU¯nV°@°ɜbÞĠaÈ»ĸlLVUÈ@Ċ@ýUm@@ÆVĠ¯ÞmLÆ¯ÞƒÑ°VVwJ²»ÆÔVlŤÅV¦ĉ°ĉĖċwÝJzVxll²IVVVþX¤źV°¦VĊ@ÆbÈmǔLĸĠ¯Ģaô¯ĸmÆÛUlÇĸk°XyĊUǔVǩnmV»a@ýnK°n@l¥@»żĊ¤mç@£ČU@mmVkÞUƐ±²¹°ĠwÅƑŃU¯V¯aÈŁÇ»ġn_°xŎKlxklx@Þw@Æm²bÇ²LlkWXať¯ĊaÑK±w@wUÅçV±Uk@@¯¯xU±±UU°ōxVxÅÔō°ó¯UÝ¦óbÝþ@ĉÈóUVUx@VUVÝwÅÈÇóVkk¯JÇkmmL@KÇx@bk@U°ķ²ó`mn¯°UwlÅkU`¦ɛôķz@ÅnÇ°U¼¯KmVk²J¼ƏÞķô¤UL@mnğ`ÇnUxÇ@ÛÿU@kŻ@x@móJkÅ¥VŹĉóÒĉlċ°ķUƽÜ@x"],
                        encodeOffsets: [[99720, 40090]]
                    }
                }, {
                    type: "Feature",
                    id: "6230",
                    properties: {name: "甘南藏族自治州", cp: [102.9199, 34.6893], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÞnKlnwX¥WÝXkxÞUn°aĊVnUUKlÞĶWXnĠ¥ô»@nmVL@¤°VzJanU@aÆwna@kU¯yX_aĉbwéXkWwÅa¯V¥m¯UI@@mb°aÈçU¥@»knwɜƇ°I°ÑÈmVU¯Xa@wW@wV¯Č¥l¯Uwnm@kaUaóKkk@Çab@ÒWa¯IÇxÛam¼VUxÒl@zÝÒ¯bÝaĉVĉwÇWzJmJn²mÜ¯U¯ĉ@ġ¤Åb@²nml@@ULVxVU¼Ålmab@°l@WIU¯@m@ó@UzţyXÇUÇVUUVLkbWakVWmUbkkKUÆ»n°Knk@aUVmnk»l¯Ģlw@_kKVU@na@lUk@¯¥mV@kmbWb¯Åõa@mkU@kÇkU@`@óóbl¼Uxn¼lVÈx@blVkVVn`XÈġÈ@ÇK£ÝJmUUnUĖmlUmKUnVÅaUwUĉ`¯n¯wW¼nxV@bĉnkIċŘkXU±ÒxÈ@X°`lVIÈ¯ĊVVVan@VaUVażVmblkÈWWIXaalL@wVbV¦lL@lĠnÒUnkL@ÆÞkÞKbñþW¦ÛċVULUºkÈlŎUxÆxÞUUxÒx@XbL@lÆ@ÒlXVln@bm¼J@Ånx@bnĠmxVXmbÈè@Ċ£ČWw"],
                        encodeOffsets: [[105210, 36349]]
                    }
                }, {
                    type: "Feature",
                    id: "6206",
                    properties: {name: "武威市", cp: [103.0188, 38.1061], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@±¯¥@klwU»ÞÝmwKm¯ç@kVÇUL¯lVUKġġm@a@U@X£°l°LŎÇ@aōVÝwÔKUÅWJ¯lm@ÛVWa@klĉUmaLUanak¯J±KkXóÜÅx²Ç@nUÒĊb°@ÆkLXÇÆ@xÝnxWxţ¯¤I@ÆnVVVlU²ÆèV@x²xLÒĉbŦ°WbXklÞ@l¤XĊ`wl@ĢÈŎm@bnVUb@ÈÆÛLèÇUÒÅ¦lĸ`°ĮʟÆǓbĉôϚĊÆĢnŤé΀ÑĸĀĊ¦@@l°l¦Ȯ¦ɆÞĊKŤĵĸů»mŁyġķŭ@Çɱȭ¯mƧUĊķnŁŻ»UaUƛɞÝƨů"],
                        encodeOffsets: [[106336, 38543]]
                    }
                }, {
                    type: "Feature",
                    id: "6212",
                    properties: {name: "陇南市", cp: [105.304, 33.5632], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÈÞ@l`UmV¼@nnÆwVlnVVaLVÈ_ÿÞ@naxÆ@l_@VxnK@llLnxmÈŎJnbUxI°l@n¦lÈIlmX¥k°@kJk²é@klaUaVaU@@ÝnIWnmnxkºÞaV°V@nwKxôbÞ£VUbþLn»mVwIJ°@nb@°°IġUkÇKV@Å¯»lLnm£@anK@ÑÜn@»mL@£ykUUmbUÞÝ@kyÇbó»XUxWVzb±mÝbXawUamL¯»@wUKVwm¯ĵJ°ÅUWVkKVk°wÈVVÑlU¥kmVamknUw¯¯bċ¥ÅKkKkVċVk£kKVwÑa@kóyÛ¯ÇVkówXō¥Ç¼ów¯U±k@xIĉÒÅVmÈnÜ@n°bUbÝVUnnJ¯Į@m¦nVÜ@L°JXbÑ@aÈb@llôLVbb@lmnVxk°ċ¦U°@xX@xWb°UVÇn¯Ò¯Jɛƈmxl@¼"],
                        encodeOffsets: [[106527, 34943]]
                    }
                }, {
                    type: "Feature",
                    id: "6210",
                    properties: {name: "庆阳市", cp: [107.5342, 36.2], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@kwĉ»VamV¯wIóVkl¯KmVō¯ÝWkL@bÝKō¦@@Lx@b@la@km@@l¯nm@UaÅ@óWUXm¥nw`@UUxķôÇ°ğ¦@VJ_nIVnalxkXJWn¯nVLxl¤nnVbklVX@xnxmV@bUK@nm@@xV°±aÅnkUWnUax@mn@¯LmUĀlU@lV@blLUblxklkIÇx¯°UXbaVUnV@°LUlnbX@`°nVmbnÆmVkLmK¦U@Xy@kl@U°K@¼XbW@bWnLVaVVz@xlVČ¥lbUxÞlVU@nÆWôn²VJlUƧLnmÜLXan@mw@wlUlV²mblwVÈlLÞ±@lVnUlxnkma@mkJ@kXVU@mn@¼VXUVlLnmVbôaVnWV»ÈUl°È¯ÆInÆU@kk»mKkÆġk¯@»mk¯@óÇlÇ@VykklUml¯Þ@w"],
                        encodeOffsets: [[111229, 36383]]
                    }
                }, {
                    type: "Feature",
                    id: "6204",
                    properties: {name: "白银市", cp: [104.8645, 36.5076], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VKUÈl@è°nLnxÝÞV¼kx@l¦²°ĊóĠĊ»@ÈxaĊxlwÈVŤa@¯²aÇ£Jk£lnUÞ@°ô@ywl»lIX¥Ǫnw@ÑÞWlaÅlL@Uwĉakl@¯mwna°JV¯nUVÓÞÑm£²óWaUÇ@óÝUçV»ÈkkW@¯xV@XlK@wX@Vmm_@wÈÝKU¯ÇwVwÅK¯VkJXkWVaIm¯UkÇlVĀV°mxók@¼óWxĉÜU@UbzÛJÇk@ÆnVlÔ@kxô@ĬWL¯K@aÛImm@IUa@UÇêU¤VÒÇx¯ÒVlk@Wbĉ¦UbkWV_y¯Laók@b@nmbkx°"],
                        encodeOffsets: [[106077, 37885]]
                    }
                }, {
                    type: "Feature",
                    id: "6211",
                    properties: {name: "定西市", cp: [104.5569, 35.0848], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@aV²wVJV_@LlanÅllŦçÜÓ_lnWaôkxUbmV@È°lènk°l¦`@nnL@ÈlÜIyVaV@ĊÛXwô@»lônwU¯ÿUÈkl°VnJUblXWIl°UV@aVVVmnL@lUUwmk£bV¥VUVwÛlaÇÝÞmk£LUy¯L@WlkKW_XaWmġU@akakXkmVwmŹVUbWónmwnWW£KÈnV¥¥Æ_klWbU¯V°aôbnaVwmaōInÇmwkK@kmLUw@`kÅ@wb@mÝĀÇ`UKUbmUUkÅxmm@»nUVk_Ý@Ç¦VÇè¯ban@@JV°nU¦°ÆbXxWlêxĊabW`zV°@lmbÅx@bmVbI`¦@ÒUVUI@ÆL@b¼@@lmxnL°ULÞğÞ°kLUL°xVnKVl@zX@"],
                        encodeOffsets: [[106122, 36794]]
                    }
                }, {
                    type: "Feature",
                    id: "6205",
                    properties: {name: "天水市", cp: [105.6445, 34.6289], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UyÈVVUnn@VU`UblzJnk@VbKU°lwW°nkVUÈl£°V@n¥VklkU±Unlw¯UkwmKUlmkUmnkym@Å@UmWÈU°l°anlJkUKlU¯Èm@kmWV»kkÝLUWUx±b@¯ma@¯IJUxnm¼KýaVUÝ¤óawLmxU@¯UbÝ¹lmwmnXmJ@ÞV@UbVbkbl@±êlIl¯@lW¦knÇJkm¥k@¯Jmbóa¯bUV°akXlÅ`¦U¦ÇmLX¤mXnxmôXaVźUnUxlnlWbl@bĢVnXWbX`lLXk@°KVzKl¤nÞÝÈkbÜ"],
                        encodeOffsets: [[108180, 35984]]
                    }
                }, {
                    type: "Feature",
                    id: "6201",
                    properties: {name: "兰州市", cp: [103.5901, 36.3043], childNum: 5},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@lW²L°IlmbVbKnbĊVlk@XbÜU@kn°XIÆVLÓÞxŎUlôb°KzU`lXVaĊ¥Xal@kU°ÑÈwUÑV£ÈéV@VbJ@nnÜJ@bL°XK@īówl@kÓmUÅmK@m_k¥l¯mkçÇ¯@nUaVwólXbmk`ÛÔťèkkmÆkbK@U`UI±xUbWlXmbVbÅÒólkIWJk@zKŻ¼@xUxó¯LWb@ÅÒ±¦U`nbťĀUVbLU"], ["@@¯lwna@mōÈ¯K¯kW¤@@V@bĢnĢVLU°k"]],
                        encodeOffsets: [[[105188, 37649]], [[106077, 37885]]]
                    }
                }, {
                    type: "Feature",
                    id: "6208",
                    properties: {name: "平凉市", cp: [107.0728, 35.321], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÆLUxÈxV°LÇÞ@xn`Ü@X@nĊÆwnJmwUxaUkw@V@waVmlLXÝl@XVĢmV°@nl@UUUWK@wÿVI²Òlm@nÝĊýVV@nJ°Ułm@kV¼nKĢÈ¤ôKblnKllVk²aĠ¥È¯ĸóVw@V_xmn¦VWôXÆ@Vbn@°m@kn@@lb@ka@wK@@UlKVaWXW²¹lÓw@_°n@@_lKÅķW@mLUWn»Û@l_Ç`Ûmm°ÅbWb@VWbUUKÇÅaġlmkUġl»LlUm¦@¯U¤ÇkVUml¯Xx¯kVLUa@mlIkyVa_UV@mmUVUÇVzUxUVU¦a¤lnVxVk@mKUnUU@bU", "@@@ż@mlkġk"],
                        encodeOffsets: [[107877, 36338], [108439, 36265]]
                    }
                }, {
                    type: "Feature",
                    id: "6229",
                    properties: {name: "临夏回族自治州", cp: [103.2715, 35.5737], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@ż»Ly@lXIJlôkÆÑUanaWXkW@yk@ULmUw¯KVlK¯ĠÝÝVK¯mKnwk@@»@aK@ÅVJVU@Ñ¥_Uy¯@£UKmn@ó¼ğ¦WmĵXÝkVLmVĉU¯bmÝVwWlXÞW¦xkmmLÝ±U@VÞ@ÅÈW°XÜ¼ƨyUĮnWnXÝxUx°lVXJlôV"],
                        encodeOffsets: [[105548, 37075]]
                    }
                }, {
                    type: "Feature",
                    id: "6203",
                    properties: {name: "金昌市", cp: [102.074, 38.5126], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĢÈ¼Çł°bU°VƒńÆǖŰnÆōĬǔaʠÅ¯ĭ_kķÆ¥VÑÈçÜKÅ@ÇVaUm@aōnġÇk@xĉ_Wk£@Ý±KÈ±aÅn@Ýx@kwlkwōL¯wm`"],
                        encodeOffsets: [[103849, 38970]]
                    }
                }, {
                    type: "Feature",
                    id: "6202",
                    properties: {name: "嘉峪关市", cp: [98.1738, 39.8035], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@llĊx¦l¦kVVnJVbǖVkôVabnaWwUXmmamUXkWKō¯Xm°»ĉÇ@UVKķkÇ¼ğb"],
                        encodeOffsets: [[100182, 40664]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/guang_dong_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "4418",
                    properties: {name: "清远市", cp: [112.9175, 24.3292], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lÇ¯kÿaV¯VaÈU¥ÆÇIlxmnbUxlUôl°kWl@ôVwUanUl@xVkaX¥kU»a¯±@kka@UwmUkwJk±k@L@ÝWUwVÝxÇU¯ÇX@mÅ@@yĉ£VmUwȗ»ÇUnlUnWU¯`Uk@@x@bÇxX¼VV¯LĀkÝL¯@VĀ¯lnĊW¦kVÇôkUÇUK@ţU@aóÜUU»@¦k@VxKVbn@Æl@xbWnlUlxÈlVÈ°Æ@¼@xWxŎVK°¥nÆkŎ@ÈÑmK@¥k@ô@nôV"],
                        encodeOffsets: [[115707, 25527]]
                    }
                }, {
                    type: "Feature",
                    id: "4402",
                    properties: {name: "韶关市", cp: [113.7964, 24.7028], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WXk±Ñ@UwmUwĉwlmn@Æwn£mkI¥ÇÅ@¥aón£nWWw£V`Þ@nVml@xô¼IV¥kUmkamUkVWwÛ»mó£UVÅKmn@x@kbmm¯aXkaVĉaUbÝ²lIlxnVVx@lb@l²°bV¼lW¦bUlwk@mVVbUxó@kX¯lókVkwVmankwJÅÈ¦ÇVUbU°blĀ°kÈ@x¦ÆÜ°@°¦óaVUôlUlbXl@nÜVnKlnIVÞ°W°U@bnm@¥IV²Ul°VnalzXyl_Vyƒ¦lLlx@ÞbKmknVWanwÑVwČº@n_ÞVaVÜIl@KÈVJ@a£È@@kmaV¯W@_a¯KmbkÇkLmw@Å¥"],
                        encodeOffsets: [[117147, 25549]]
                    }
                }, {
                    type: "Feature",
                    id: "4408",
                    properties: {name: "湛江市", cp: [110.3577, 20.9894], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@kX@aUUċlkJk@wVJXUWk°W@nKnwlUl²blU@lIl@XbWxnm@lW@wwUJX¯VU°`ŎóˋkÝÝkÅ@ÇmğÈřmwaĵVxUÛ»°ĠǷnýmóX¥ɅĵҏÇ@°²ĊUĖ±ĮU¤Ç°Ā¯ɐnżUĊĊĬV@è@ÔÒU¼l¤nĠbêVĠ°ÈyzVaVnUÆLabVlwÆ@"],
                        encodeOffsets: [[113040, 22416]]
                    }
                }, {
                    type: "Feature",
                    id: "4414",
                    properties: {name: "梅州市", cp: [116.1255, 24.1534], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nÔlW¼x¦@lVllLkèa@z¤Ė¼UxlnUKUbÝlU¼lb@VxVklJÈwV¯@ĠlÛĖnbkÆźÞUÈôklmL¥LWnKUkVa°Vx@IVV@x°bUkaa@mV@@ywLÑUwVUVUbÞVVann@XwÇÿ¯²aVamkXaÆ»@»nw@¥UXakbWa¯KUw@¥m@kwmLU»UUJ@kmU@UUWU@yanwmçÛl¯¯UmKUmwVkmÝXbW@XWÝbk¯@±w@»U@W¯Å@Ç¥UU@IUakJĀê°þXkam@_J°m@X"],
                        encodeOffsets: [[118125, 24419]]
                    }
                }, {
                    type: "Feature",
                    id: "4416",
                    properties: {name: "河源市", cp: [114.917, 23.9722], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°VlmX¹laĢÒlm@V£@¦Ģklynn¼lW°zW°VbÈV@lÆbnnJkXVÆaÅW@UUw@kaV»ÞkVaVLkmVw»ĕ£@yblçkKkU@k¥wX»kmÓ@Wn¯I`@nlbWý¯éÿlI@XUmWUw@@UJUÇmKUV@xţk¯¯LWnUxK@Å±»Vwa¯@¤WX@Û¦@¤ÇIÈ¼WxX@WxwUnVbÅèmVa±²UWl@klÈ¤nôÜ¼XxlUnVlbVnlU¦Jó»@wnkmUÝ@U_¤XxmXm¤ôb@¦ÈÆ¦lJn"],
                        encodeOffsets: [[117057, 25167]]
                    }
                }, {
                    type: "Feature",
                    id: "4412",
                    properties: {name: "肇庆市", cp: [112.1265, 23.5822], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l@¥@V¼VôÛ@bV@ŤVLÈlVÈólUX¥mĉ°kÿU°@ÞKlÿ°KUUW»Èw@aw@@nm@w£kÓVUVnKk¥£Vam@nkKkbÆǫmakmLU¥UmÛwmVUmUJÇaUxÇIn`mb@Þ¯b@nJ@nlUVlVULW¯Û`Ç_¯`m¯IbĉWċzx±Jx¯ÆU_k@J@UmbXôlLn¦@¼ĊxlUXxUbLĠUnVĊwlUb@lWXm²@ÞWxXUnb"],
                        encodeOffsets: [[114627, 24818]]
                    }
                }, {
                    type: "Feature",
                    id: "4413",
                    properties: {name: "惠州市", cp: [114.6204, 23.1647], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lbW°bnnla@@wnmÆLVUkÇl@XkV²±bnUÆçUaVmxXw@WXwÇ»ÈJ@£Ü¥@XW@£°bUx²¼@ÆLVwmX°K°Ťl@wVUnLÈVVIky±wkKU¯ÅkXġÑÛlwUwlm@mnKWaÅm¯óÇmğb¯alĉUwķbmb@lÞÒVnmĀŹ@VbVUnmakLm`@xĉkklVÔVJVnlVUnmJmaLUblzmkLaō@@zV¦UV²kJnÜU@VXUL@lJL@bÝ¤UnVb@xVnlK²Vx°VxlIlkVl²k¤@n"],
                        encodeOffsets: [[116776, 24492]]
                    }
                }, {
                    type: "Feature",
                    id: "4409",
                    properties: {name: "茂名市", cp: [111.0059, 22.0221], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@LnÇlkKnkÆLUmÈxlUJló°n@ana@@X_@mÝóóU@aaU¯mL¯kV¯ÇVwkw@V±Ŏ£@@alw±Vk@mÅm¯ÿÅƧIÇ`ōô¯_UVW°IVx@xkX@mnwXWa@kkJ@kVa±kkVmxmL@¯XXlWVUI@xlIklVČV@blW@@nUxVblVxkôlxnynIÆ»Æ°aXwlKbVnXbL¤kLèVV¼²IlĠVXynz°KVx°@VlLlblK"],
                        encodeOffsets: [[113761, 23237]]
                    }
                }, {
                    type: "Feature",
                    id: "4407",
                    properties: {name: "江门市", cp: [112.6318, 22.1484], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lUXx°JWnnÆXVWX@ºVLV¯nUVnbôxaXmWXIUb°xlKl¯KxXÞ°XÈ¥Ü@ĉÞUç»nóVmax¯UÅU¥Ý¯@ç@ș@çĉÅUmUç±ĉKÝxÝ_ÅJk¯»ó¯nmèkǀWx¼mnUÜġ°@¦@xLkÇaVnUxVVlnIlbnÆÆKX¦"],
                        encodeOffsets: [[114852, 22928]]
                    }
                }, {
                    type: "Feature",
                    id: "4417",
                    properties: {name: "阳江市", cp: [111.8298, 22.0715], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°nKV°b@bôVÞô@nVlÒôÆUnlnn@lmkmVkaÈkÆÆk¥ÅÞ»ÆKXkW¥ÅLmÅkamJUkUVwUmÈblKw@@¥Ģ¯VÛnm»Xwlƿ@kbWaʵ@óLl¯ƽ@Ln°Æ@nUl²kxb@@ō¤U²@lxUxÈU°l"],
                        encodeOffsets: [[114053, 22782]]
                    }
                }, {
                    type: "Feature",
                    id: "4453",
                    properties: {name: "云浮市", cp: [111.7859, 22.8516], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VIl@`V°Åw²IwČyĊXa°Jn°_È`Ü_°XKVkUUVk@mmI@°a@Ýnam_ÈJVwlĉX@lUómaUmVU°UK¹@WXUWmÅXm¯IWwkVWlÅLÝ¼Æl¦ÅÅÇlbUllnknm@kmVmóÅkÑUW`@@bmb@¯mkôIkVÇwnVÅKmlLklmÈKVĊK°²`n¤nUbWlxVxLUx@°nXm`VklVxmnnx"],
                        encodeOffsets: [[114053, 23873]]
                    }
                }, {
                    type: "Feature",
                    id: "4401",
                    properties: {name: "广州市", cp: [113.5107, 23.2196], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ș¼VxUnĊ¤@z@Æ@nÈW°ÈVwUÞVxÞX@Kl@ÞVaĊbU@ml£k±lUkkJw¯UUw±kLUm@waUVmÞ£@aKkI@KVUW@ÛVmlIU±VU¥@yğzƧÇƽĠřÅnī±m@²¯l°@nÝÆóUll@XnÝVU¦mVV°V¼Jnb@°mbn@²¯¯wVw@@nmxX¤¯L@VLUm@@l"],
                        encodeOffsets: [[115673, 24019]]
                    }
                }, {
                    type: "Feature",
                    id: "4415",
                    properties: {name: "汕尾市", cp: [115.5762, 23.0438], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@@VxnXWV@bVJV@ÞÅU¥Ċx£UWUwÅUU¥WVUkĊÇnkV`°LVwnU@lbĊ¯Vnal@@çkUÝ¥ġaó¯ÅaÅLŻÆUýmy¯ó@ĉÆóȯwÆXbmL@nknVxkxÜĢÒWÆlV°Ll²xlz"],
                        encodeOffsets: [[118193, 23806]]
                    }
                }, {
                    type: "Feature",
                    id: "4452",
                    properties: {name: "揭阳市", cp: [116.1255, 23.313], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VÈ¦Æ@X°V@@¼x²°@lÞaWXX@aÞWlnUxVnnL°V@kmĢl@ak@mlk°aX±nwm±²¯JV²@wW_maV»U@m¯ĉUÑJlabVnlĸLlƅÛÇ±wÝ@ĉxó@è@kmbUĉ°ka@mVxU¯KU_mlĉÈVlXUV¦ÆVxVVX¤ĉwV¦ÝÆ"],
                        encodeOffsets: [[118384, 24036]]
                    }
                }, {
                    type: "Feature",
                    id: "4404",
                    properties: {name: "珠海市", cp: [113.7305, 22.1155], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@è@Þ°V¦VÆ°wnbUÆ»nçÆ@nxÜ¤²llU°VnÈJÞ°UôéķUklô£VVˌKÞV°£n¥£ȗÝy¯¯mÅkw¯bÇĔğ@Ýn¯ĊVğōŁŻķJ@Ț", "@@X¯kmèVbnJ"],
                        encodeOffsets: [[115774, 22602], [116325, 22697]]
                    }
                }, {
                    type: "Feature",
                    id: "4406",
                    properties: {name: "佛山市", cp: [112.8955, 23.1097], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÈbInVVnUÜxnVV¦nKlnbÅǬlalL@mnUb¤l¦LUmUVlÔ¤@xmnVl°_XVVmkVmÈ@kn@VUK@°KW£nw@m@Ux°x°@±mna@¯amIU»U¯nUV¥ÞUWmk@Vk¯UknÑWÝĊÛ@Ç¦W¯WÝwLk°kL¯wVaWJXWnbwkVW@kĊ"],
                        encodeOffsets: [[115088, 23316]]
                    }
                }, {
                    type: "Feature",
                    id: "4451",
                    properties: {name: "潮州市", cp: [116.7847, 23.8293], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°Üknèmxbz@VVX@VnV@lIVVV¼nKlxn@@¦Vx°LXblaWbV°£¯W@nW@aUñVwW»@¥ŤÅUÝǓÝóV@ńÇkUVmIUwÅVWÇX¹@W¯bkl@nlb@kġn@l"],
                        encodeOffsets: [[119161, 24306]]
                    }
                }, {
                    type: "Feature",
                    id: "4405",
                    properties: {name: "汕头市", cp: [117.1692, 23.3405], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@U±°I±n²mx²@WºXÈÆUVxJUnlVÈ@ŃôUǔÞVçn»VyĢÛVm@»kaÝUÇ¼óÛÈķKċ¥X¥Wwğk¯@wķKkUmabkIVÒ°Ċ@nVU¼bn`Xx"],
                        encodeOffsets: [[119251, 24059]]
                    }
                }, {
                    type: "Feature",
                    id: "4403",
                    properties: {name: "深圳市", cp: [114.5435, 22.5439], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÞL@xbVVK°X°Kô¥Vw@anUèlkĊl@wn_lKnbVmUaUź@nÿUmÝÑ¯Ubk@ÆkxŻ@aÇXwJ¯LķÝUĕóĸóêWº@b²nmĬÆ"],
                        encodeOffsets: [[116404, 23265]]
                    }
                }, {
                    type: "Feature",
                    id: "4419",
                    properties: {name: "东莞市", cp: [113.8953, 22.901], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ŏ@blKnykVaKnbnIVmUkUmUIUÓçmV@bUxó¦¯LW¯LUUa@wÝKğŚƾƨÈĠy"],
                        encodeOffsets: [[116573, 23670]]
                    }
                }, {
                    type: "Feature",
                    id: "4420",
                    properties: {name: "中山市", cp: [113.4229, 22.478], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XÒlmV°ôÞÅ@m¯°k±@@aX¹¯VÝÇIUmV¯kk±Û£mw@ÅmèÅ¼mô¼èV"],
                        encodeOffsets: [[115887, 23209]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/guang_xi_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "4510",
                    properties: {name: "百色市", cp: [106.6003, 23.9227], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lklWXL@VIl@XnJn@VUUalk@mK@kny@UlU@a°UU@VmaU@Ua@UWw@n@KmLm@alkmnIm@an@VIUamWÅImwU@@a@KX@JVLUVmUaVkUa@m@@Ulmkk°UaVUlKXbVwVIkaVmUk@KVk@aaW¯m@w¥laX@KmakVmnUl@nxVKInU@yVaVIV@na°KlxX@@_lmXUV`VIVV@n@lbn@@WUkValK@²yl@VUV@@K°L@KU@@UVaXIVVV@naVkVa@K@UUK@UUaLWaw@m@K@UVV@mVUUVKnLmVLKbVK@UUIkmI@mUIVK@IUK@VkL@WU@mU@WmUk@I@VJk@WwX_@amK@UUWkIK@LVb@mVmakL@J@bU@Ux@xbmI@`Iwm@UbmKUaUWa¯UkJWV@XJUU¯LUmV@ma@kkamKwLUUmWVkkm@aVUUkVKnVVUmXK@UW@km@Ukkm@@W@UkUy@I@aUUmb¤U@kUmL@bmJU@Ua@wkLWWkL@U@VaU@LUakKWbkUWVkKkLVLUV@JVbz@V@VmUU@kVmK¯@VU_VWakVmIUKUaU@@bml@XU@@V@LmKUVmVUKKbkaUXKUL@x@V@l@mxU¦V@lL@V@Ln@@VV@nlKUaV@nLUbmJnL@VWLkbmV@@LWXLlxVVIVV@x@V²blUVmLVUK@kWWXUlV@Xl`LXl@@Vn@VnbV@lVUVUÈVb@@`UXU`l@@XUVm@k@xmVknUJVXUbmKULmbx@VlJ@LVbkKUbVLÇUUVUVmU@VaUkUKVUwmLkUUVVlbkaXmwKUVVU@@V±Uk@VWUUm»XamUbKk`U@UnWW_kKmbUVUVmnUV@nJVUlUbU@UV@n@JmI@VmbnVUXlx¯kKmnVV@L@VbkVUmm@Ub¯LmlUL@VWLkmkLmmn£WmnKU_mWbnbmx@U¦UJU@Xmlk¦@mnUUm@@Jn@lVÔVJnIVWI@aÆK@I@aVKIlÞnnl@nl`nbÆX²l@xV@llbVn²VVl@nnV@IlW@Un@@kVa°KnÈmVaVXUlaVÈUVlwôUlynIVaan@lVXbI@n¥la@K_n@bÆx@XnJVnKVz@`VXVU`@b¦UV@VIlxUnVKXÈbVllbVbnVn@"],
                        encodeOffsets: [[109126, 25684]]
                    }
                }, {
                    type: "Feature",
                    id: "4512",
                    properties: {name: "河池市", cp: [107.8638, 24.5819], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lLVlbVV@nXVlI@JVXmnW°bIVV@ln@nalVUbnW@kVkÒlbVKn²°bUlV²@X@`nbaUI@°wlU@aXJVI@aVK@wUamIXm@XUV@@bV@VmImnUUwVaVKXUnVK@akVwV@nL@UV`n@@XlnIUJl@X¦V@aUIVm@anV@UwnL@VlbVL@KVVXUWwUUVUka@UVJnUlbnalbVVn@°LV`Þ@XVxV@@bVlUVVbXnWlXnml@XXWVXJmbUI@VllUVkn@@VWV@Vnb@VXUJVnn`lLVka»lVLnw@WV@lInw@WnU@U@mknUVóKwUmUXUU@@wVJVIl@XKVVVbVIJ@Un@lVLnmb@U@Ul@nU°VUVJnnVJV@@mVU@@wkUVwkKWkyUUkU@alkÈ@lJ@xIl@UUWVkUw@Kn@@kmaVUlUULÇUUKl@UUmL@aXU@mlUUwmKkUUVKVUaKUnK@U@Vl@XUWUKlwX@b@K@XkV@UwWJka@aUwmV@U@@U@wUm@»kLWVkIWXnmV@VkbmKLUbkVa@aa@@aVU@aVak£@±UkVU¯VUUJVUI@kxmUmWUbLw@K@aU@@aVU@Kma@aka@_VWkk@UWVUKULWKULU@KUnwVaUKxU@UmaLm@kVmVa@UkmI@@KmIkxU@@KU@mmakI@VLkmWkkJ_U@V@L@nxXbKVb@VVL@V@LUbUlmbU@UUWJUb@VV@@L¯K@LU@UVk@±z@kLUbVl@Xm@akm@U@UUJU_VWkn@`W@kw¯LmbU@UJUb@zmVJULmwk@mVUnlnb@LWkb¦@x°nXb@bUl@LVlUnlbUJUxWakLUVVb¯llkn@V@@nVbUlVbUnVUK@IW@L@bV@nxÆJnXVbUJm@@bnmJnkl@bnnK@Lm@Xx@VVbV@nb@UVV¯@bkV@Vmz@lnLl@kVbUVm@mI@WkJ@UWKkXkl"],
                        encodeOffsets: [[109126, 25684]]
                    }
                }, {
                    type: "Feature",
                    id: "4503",
                    properties: {name: "桂林市", cp: [110.5554, 25.318], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nU@JX@`XLm¦Vb`lVXXW@VblČnVlanLnmVLK@_Va¥@kUa@VmVbaV@XVVzlVVK@knKVmX£VKLlbn@b@llL@xĊôXaV@°È@¤bnV@@Wl_VU@WnVamwwVbn@KVLX@VmVUxlV@nVV_nK@mI@Wn@@IUĊ@@wVWX@@I°VVm@wmU@m@IUVklkUmmkÅV@@aV@@Wn_UKla@kaVlVanb@k@@KlVn@@aV@nIWWUUaVU@kKmwU@UImKk@UU@w@W@k@UkW@mk_W@Ua@a@¯mV£@mUUam@kWakVama@UUm@nw@alaUmnUlVlIVLVyk£Vm@k@UUJkK@kmKUwKkWK@UXImyVwnI@mkUlkUKkUVmw@kkJWUÈm@_k@@aaW@UUJUwU@@IWKkmUUV@nVl@bVb@bUUXakw@WUkbkKbm@xUlkLm@@wmKUX@UaVWXVmU@@UUUxkmWXkKkUWaUaUbL@`UL@LV`UXmK@VmakLVbkLxUJUIVbUVVb¯KV@Xnl@lVXbmÒnV@L@VWKkVUIWJkIUamUUbm@UkU@JUbW@XWxUam@kbVVUnUJmUUV@bU@UUV@Vk@bmULV¦U@VU`VLUL@xVbn@UJ@nWJXXVVV@bkxVbUxL@x¦@UlXUVVlULV@@nUb@xlnJVnlVknUlVUbmU@bVx"],
                        encodeOffsets: [[112399, 26500]]
                    }
                }, {
                    type: "Feature",
                    id: "4501",
                    properties: {name: "南宁市", cp: [108.479, 23.1152], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lKnbnU@Ua@KLlJVX@VnL@bW`Xxl@I@UJl@nV@XV@nXV@lK@UVL@JULVJ@nnJlVJ@VULaLUKnmKULVVU@nU`lIXllnK@UlJnb@nV@LV@lwnJ@L@nJl@VUbUn@lnKnbVV@wVLUbxVm@LVVKXLVKVLXU@VllUX@`lb@bnbL@UV@bV@@b@LxKVanXVUUmVUUUaVUkyUUaImK@mUUVUkKU_@W@UVVVIUWUVaVU@UUKn@k@al@ll@bnL@bVUVX@V@@bKnblmn@V_@aUalL@a@akK@kVKUKlwUUnV¥VmU_VWVIVaX@VaalÅK@LVJnalL@LnKwlVUwmX@VXlLUVnblaUmVUVwXU@Wm¯Va@ÞKnw@wmk»UVW²a@_mW@U@IyLVUUKW@@LX@VUV@@yVU@UV@nwUUmJka@IU@mVkaW@UwUX@`@kLWUk@mkUUm@kUUWkUkWxk@@VK@nV@UVaUUJmIkV@UamLUbkVmamLka@kmL¯WI@wJmwx@akU@aUKmbkaW_nW@_U@Wm@a@wkwUKmk@bkbw@mKUkkU@J@bW@kVWz@bVUaVUx@ULkJWbXVVX`@mJUVU@@Lk@WbU@UJlnXlmVx@Ln@b@KLXWJUUW@kaUVUbmV@nnV@n@lVLVmLXmXkV±@kxÅLUbJWIÅJ@ImXalkUamKkkL±aVwKUU@mÞnbWJXm@lbmKULWUUVkabnn@Vl@VVV@VbVbnLWLXJWxXLV@@VV"],
                        encodeOffsets: [[109958, 23806]]
                    }
                }, {
                    type: "Feature",
                    id: "4502",
                    properties: {name: "柳州市", cp: [109.3799, 24.9774], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@wUaV@nVaUVklmkUUmmIk@waVm@U@VKUkVUkWV@¥@wKVwUalw@aUUUWWXI@mVIm@Ua@wVKUKV_UV@U¥VKnal@U@VU@VV@aVUnVVIVmUUlan@VbXwWX@Va@IlVVn@VanVVblJXIVJlUXL@U@KmUnÑWakU@mkJUI@mk@wUmmUV@JXaWIXWmaUIJkk@WnJ@aUak@kkJ@kUKU_@myUóWUkm¥kUmL@KUKm@k_UmVa@k@@UmU@mm_JWIUVUWLUlbVUJÇVUIVwKUVk@mU@n@lUL@Km@@l@LVzJmUU¤m@UbV²U`U@@¼Vn@x@V@@VnUVx@blbXIVxU@Wl@@LaW@kxLXVWVk@@U@VmLVLbUVULVVlnLVxkV@nWV@bnKVVk@VLVÈVKVVkUnb@lm@@LVxUlVX@VkJ@wkIÇ@kl@blVVVzXllLUxlV@x@UV@nU@UImmUIUV¯mVk@@V@VamnUKkm@@VIUJUaUUWLk@UJUI@xV@VVWVnxLUômVV@VkVVVUnV@UVkL@VVV@bVxla@bkXVJVn`nU@bb@bVL@VnJ@l@VaU@@_lW@UUU@Unlll@XLl@@UX@°bVWVanLlknVV@VVX@VVnUVLmbXJ@nllXX@`VXlmaXVWk@WkwJ@VL@JbnU@bn@@bVKUnVJVIVVVL²a@bV@@Vl@nUVakalmUL@VUL@Va@mXl@nK@UlKL@Vl@@nkllb@Vnn@nVV°lVInwlKXxlU°n@@I@UnVlakUJWkUK@anUWK@_ÞJ@U"],
                        encodeOffsets: [[112399, 26500]]
                    }
                }, {
                    type: "Feature",
                    id: "4514",
                    properties: {name: "崇左市", cp: [107.3364, 22.4725], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@JVzl@V@Xn@ll@VlnX@@VWLnUVmUULVlUV@blnUlnXVVKxnLlb@lnbU@Vn°KVVI@WXUlI°VXbVVbnLVan@xJ@_nJa@wVwV@@a@IU@UU@WKXwWIXKmKUaa@UUUUk@@UmmalbVUXVVKnLa@knWXImanÝV@VLUx²blKlnLVbklWbn@JÆIXJIVaÆKlw²@lUnWWnKUUK@k@mmU@mnUVaVUb@lVXVXIWK@Lam@@KUwnWkkmVIV@Xal@@KV@VUnI@_UWWUkam@kkm@ka@mk@wkJWIUU@WXkWXkWWLUU@UakLWXV±VIVWUU@anUWaUK@IU@Vak@@UUKWa@m@ak@@wUkla@mUaUklakwV¯¯@WWUkLkKmakLUnV`UxWX@Jkn@bmlakkk@b@l¯bmbJb@VXnbVV@bJUkkKWVU@mÛVUUW@UVUJWXkVkKmUL@WW@UVl@XXKWXJ@XVlmbUxnnm@UlVnV@XVm¦VJb@mLkKÇbXblVkn@l@bWnX`V@@IVV@VV°n@@_naÆVVbUVVbUJnzlVUlXkV@Vlx@XVnxbKUK@b¯VVUVL"],
                        encodeOffsets: [[109227, 23440]]
                    }
                }, {
                    type: "Feature",
                    id: "4513",
                    properties: {name: "来宾市", cp: [109.7095, 23.8403], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nVlw@VJUIVVUV°lU²V@l¤Ub@bUV@b@b@bUblVaKnLla@UnUWmXlJXUlKV@V_U±Van@V£nVIyU@K@kn@@LVK@k@mnVl@VULUxVJÈUVIUaVkXKVVUXJIn`@nnV@Vl@@UbVnl`n@VL@LnKlVn¦VlôXVnz@V`VL@llIll@Vbb@mIXl@lIVJnbWXXJWb@IUnVVn@xl@nVJI@WU°LUaVUUaVJVIwlKUalKnb@UnLVWU_@KVK@_KVa@VKU¯VLVKn@laaUkU@maVUJ@k@Um@XmbkyVaUIUU@KV@laVn@KXKWUkUk@aWUUVw@aXKmVaUUkmIlUU@wUaxUmmU¯U@WLUmVIUym@UVmUa@wmw@çm@aWLUJUIUamKmL@ax¯¥kU¥U@±kUVmKU_mJUbkKmLÅÇ_@WWUXUmaVUkKUWW@nVxkUxmL@KkKmbUI@KLkÆbUbW@UbUJUXV`UnU¦mVVkxVLUL@llL@b@bkKVb@bU`m@knmaL@a@@UWVUU@amK@akkk@@b@lmVL@VUVUbVVXUJUU@V@XV`lLUVVV@nnLJVbVlzUVVbVVnUVVU"],
                        encodeOffsets: [[111083, 24599]]
                    }
                }, {
                    type: "Feature",
                    id: "4509",
                    properties: {name: "玉林市", cp: [110.2148, 22.3792], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VJUXVVXlWX@VxVnX@@`ULWUXÅbWK@mULUUmJ@n¯b@l@VULVxxXU`VXXJVIV@nm`@nUVXn@lWVn@b@Jn@nU@Lm`@Xn@WJ¦U@@VnLlV@@Xl`nIlJnkVLw@KVK@UaVL@bVKXlUUKVK@IVLa@U@WLUlVL@bU@@blb@VlbUxVbXUVJ@xVLUlV@VUbVLnKlXJ@Lb@an@VanL@`VLKV_UWl@U_a@WVInlVUUUVm@I@W@wVakIWm@U@XwlaVbnI@m»Va@aXaVLU»@aVa@kKkL@KmU@WzUK@wU@VWUUVUUKUa@mKmbUK@_nWVaUkVaUaVUVLXKVVUVmVI@UkKkLm`UkW@UwWW_UaU@WakXmK@xUXJkUUWUk@WlmJ@km@@aUKzmyVka@kkWVUU¯lmU@@wkkmV@Vk@mÅIUka@Ub@m@UUU`mUbWaWmbXXKWIXUWm@Å@y@UkIUJUUWLUWL@UkVUxW@kaWbKWnXxW¦nm`XLVlUbVbUxI@JmLUKUb@VW@@bkL@b@VlU@xk@L@lxXxWXX°V@VVVbUVV@UVVbULVnVJUb²baUb@VVVVInlV@VnXaVUlIVUb"],
                        encodeOffsets: [[112478, 22872]]
                    }
                }, {
                    type: "Feature",
                    id: "4504",
                    properties: {name: "梧州市", cp: [110.9949, 23.5052], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VbXblVlLXWlnwVV@VV@UnWUXVb@VWXa@kVKUaVaVkUlyX@VaVmUwUaVU@UÈymI@aU°@nWV@VaVaw@IV@VmnLVK@kmmna@VbVI@aV@XbW`ULUVVx@VbUV@bl@VLXblJn¦lL°°@n@K@UlLnKa°LWbnJ¦UÒVUllLlVnKnbWnnV`w@@Xa±nl@XKV_WVkVa@kVyUa@wU£UW@UIVW@@awWaX_WKkVmUULmak@UJUI@±m»k@m»VyUImnmmwnkUmVaVIUn_mW@»Vk@VwkmmUXa@IaVmm@Wm_U@mIUWóLmUk@laXmmkUK@UmKULUUmWUL@VakU@Ub@b¼VUKWb@bUbn¼@mJUakbWx@@VXnlJUb@x@X@JUnVVUVmkUJ@XbV`k@VXU`LUK@_mKUbm@@b@U`@nlV@bUnbVbn@@`VbUbVV¯bm@@mJXb@bVnUllVXUlbUl@LU¦VVmkLVb@bl@V@XlK@V@nUJUz°mwmLmlXbWVU@UUUlIU@VVmV@@¦bXbWxXWlXVWL@LUmkbU@@LVVVJUblzna@WVn@@lIUVnbV@Vlbkbm@ULUKV°UL@"],
                        encodeOffsets: [[112973, 24863]]
                    }
                }, {
                    type: "Feature",
                    id: "4511",
                    properties: {name: "贺州市", cp: [111.3135, 24.4006], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nL@xn@lKVkwn@alLlaXV@lxbVWV@aUa@aUk@mVUnVlXL@JV@VxVIVX@b@bl@@`ÇnXVlI@lxUnlVVLkllV@nmJUxnzWJ@VXLlLVxnL@lLlVI@V@lUnl¤UzK@Vl@LlLnb@VnVVU@kaKnxn@VkVJ@ÅUlakmWIUaVanm@_UK@UVWUa@klXamU@VmVIXW@lUVknVlKVLXVXW@b@VlnnVL@KXLKn@lb@UnW°@VaXWVb°aVa@I¯aUkUaVKVwaXk@aa@wkm@alanUVw@alK@Umkw@UaUmU@WXUaUK@UW@UaVWI@¥Xa@w@WWVXwU@mKUXUWVU@a¯kl@akU@UULmK¯VUVW@U_m`U@@xVbUz@lUbUlXU`WLk@m²Wb@@xU_mXmmamLkUkKVkUVÑ¥mIXa¯KbmLkK@V@Lm¯@¯kKm¥kIWaUKk@@aVUUa@UwVUKVX_WaU@@bUJUa@mbnn@lULmKUnU@@JxUbUbU@mX¯@V@bnJÇz@VUVVbVxUnUbW@kzVUlUbVbUL@lWb"],
                        encodeOffsets: [[113220, 24947]]
                    }
                }, {
                    type: "Feature",
                    id: "4507",
                    properties: {name: "钦州市", cp: [109.0283, 22.0935], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@IlVVlnL@xlaal@nVLlx@x@bXnV@@`mXX`lbnaVL@blV@bwnxI@xXJ°nKl@lbnKnblUVanKVb@lUnJVIVUb@VU@mL@Ul@XwllVVXV@lVnlVnl@XVlK@@_VWVxX@lbUnV@@JlbnIlmnVV@UwVK@U@k°a@mnIVVVK@nXLÆaVWXVK@_W@Umw@UXWWkUUVWUIVaUkJUVWbUmU@mkUJUU@UVab±aVaUIUmVKUaVUU@VUUaUUU@W¯XWWww@k@Kl@wkV@U@alK@aX@@UmIUWUI@mmkXU`U_WJUnUJmUk@@amLU@UVW@UkU@@VbUWVUk@@wmKkUWLUWX@JmIlUkkKWKkLWU@UKWa@bU@@a@_UKWUUUmJmw@nV_@ġğKóLmbU¼VÆ@xUX@Um@wklVnUnlkaUV@lV²WVklWXXbWlkVkIm`UULUU@UWx@XU@@lWLU@kbUbV`UXllUV@bmb@LnKVbULmnVVIV`X@"],
                        encodeOffsets: [[110881, 22742]]
                    }
                }, {
                    type: "Feature",
                    id: "4508",
                    properties: {name: "贵港市", cp: [109.9402, 23.3459], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n@VzUJnVK@XV°nVVnwVb@xVVknJlVVUbnWL@bUxVVXbl@lVXkWXwWaa@¥@nUUUV@JVkVVV@XUWanknKxn¯VyVI@m@UkL@W@Uk@aUalKnUUV¥@KVkkaWVkUVkUm@aWanI@n@°aUUVaUa@_m@UamaV@akU@mV_@a@KWIkmLUKaUVU@kVUK@wUIWVUaVwka@Uka@aV@@aUKVkK@X@VbKU@JULVLkVWUL@aUKb@VUL@LxUKmlkImJk_@WU@kmK@UV@¥XIm@@Wn_@KmVm@@I@aUmkXm@UWV@mn_@mUUJWIUWV_WwU@mUknVVmxU@@VUV@zU@UVW@K@X@VLUVKz@J@VnX@`±bUXV¼ln@xmxÝL@Ubn°@XWVUxUVVnkbWVXV@X`ÆÈKnlLVanIV`nLVUl²V@V¦l°¦wb@nKnLVbVJIVXK@bn@ènx@xVbUnV"],
                        encodeOffsets: [[112568, 24255]]
                    }
                }, {
                    type: "Feature",
                    id: "4506",
                    properties: {name: "防城港市", cp: [108.0505, 21.9287], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XV@X°°UlxkbVlVb@nkbVl@xl@@b@nXbVL@Vl@UbV@@JVLXbmV@bVVUXUJU²WXlKVb@VVXKlXWlXXWV@VXJlI@xl@nlbn@lln@lbXalIVK@VwUVbU@aXylUX@@aW@U_UJmUnVKUamL@Kna@aVUkkVWU_ValaV@XK@kV@@WwVXV@VKVVn_lJlUXkWaXWlkXU±kU@VUlbkVmUmlk¯ÝW@mb@¦VxULmkJUU@ma¯wmkX@VóJ±bUVUXÝWklWXXlxUabIğÇ@U@mVUKkkm@UJm@XnWV@x"],
                        encodeOffsets: [[110070, 22174]]
                    }
                }, {
                    type: "Feature",
                    id: "4505",
                    properties: {name: "北海市", cp: [109.314, 21.6211], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VaVLnK@IJVwUaVaUkWKn_mX¥WwXmLXalbU£UyVÅ@Ýwm@°lLÅUmkmwÛaƑLÝUUm@ȣÆV_Ó@£UUV¼U°W̄ÞVbXbôx@b@bmV@ÇUÝ@@ĢU`m@nxnIVVVXVL@`@bV@@aXbVL@XVlKXLlLVlknJ@IWVXXKlVnL@xl@UVVXa@UV@VlX@VUV@nK@bl@nVVIVmXIV`V_lWnn@VJVXnJ"],
                        encodeOffsets: [[112242, 22444]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/gui_zhou_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "5203",
                    properties: {name: "遵义市", cp: [106.908, 28.1744], childNum: 14},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@@UnUlJnwJU°VL@bnVUwlJ@XXVlU@klVUJknlUllL@bUJ@xULUlUblVkblbnwUXmla@wV@VK@L@UXaVKVLXWUVa@U@Im@@W@£UKUakKWIXU@al@@llUnL@W@Un@@VlUV@VIUanKl@Xb@lmxVb@b°bb@nlJVVnnJ@b@LV@ln@LmV@Vx@blnVKnlJXIlwJ@Òb@nlK@Un@UL@VVVVUUUVKl@VUVLJ@UVUUw@Wm@UVÈVlbUb@JLlX@@xLmk@@nlx@bUJUzVJ@@LVxUV@bWxnLnVVK@_K²xVbV@n¥@aVI@b@l@VaKnb@n`nmmýW@U_wV@VlVV@Vn@n@nI@Jn@°¦VaUU@mVVWVaUÅU@aVKnVbVUmmU@a@kUwm@aUUmUUJ¯lakUaXaWUUaVkkamkmUnVlULVlJ@XU@UJWUUwk@aU@WbkWL@U@WU@@XUKmV@aUVwUĕUJUamUUVUÑmnIVJ@kl@XalJVn@KVL¥@UWIXWmU@mVUKnUWLUKUaWUUKVU@U@anUny@UlUkK@w@a@aVU»UkVw@WmkJÅmUUVmwXalLXWWUnam@XkJ@UVU@U@W@@U@I@Wl@Ènlw@KXLWblVUkalKUUVVaV@@wnIlaUmkUKWU@KkUkLWaKUUWUn@VK@LnnWJUIVkUWVnV@V@@XK@VUIUJ@IWJkX@VVJIVkK@I@UVaUWk@m@wnUWKk@mxk@@lV@bxmb@x@VUmLkUJ@nVV@b@VkLVbU`¯Il@U_UW@UU@K¯wm@xL¯¥kI@bkb@Ua@m@kkW@XVbmV@kV@bWbUbV@¦xXlmVk@¦bkaWL@KUImK@wUK@VUIb@bmK@LÅy@akXW@kbWlXblL@ULUb`@UkUymX¯@mUJUUJL@Lm@@WX@lUVlXll@l@Èk°V°X@VU@UVll@XUJVXUVm@@VXLWlnV@Xk@mVULnxV@@bmkL@VWLUbU@UVm@b@ķ¥UnmJ@UUVkkJUlÔU`UIW@°kLUlUI@WVIU@mWKkXk@WU@bXW@J@xX@l@LVl@xLVxXX@xKnxVknbKVV@ULWlXU`@nUlX@llVXVUKlkUKlI@anKVLXKVaUIVWV_VK@VnLlU»VKVLm"], ["@@@KlKkUUVVX"]],
                        encodeOffsets: [[[108799, 29239]], [[110532, 27822]]]
                    }
                }, {
                    type: "Feature",
                    id: "5226",
                    properties: {name: "黔东南苗族侗族自治州", cp: [108.4241, 26.4166], childNum: 17},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@VV@XkV@bUbWJU¼Vb@Vnb@b@J@bL@LV@UVlUI@aKULVb@bkJmxlLVxknVJkxnKmnnL@bn`WIXlWLU@UxVbUVmKVXI@JVIVJ@UL@W@@UmUXUlVUVJXImm@KL@UVmVXVLXblKlV@LXVLlVVnkbmJ@xnXl@bXa@VanaÒLmVnIlÞ¦°k@b@@lVnJlUnVX_@lVlKVUUxVLVWVIXJUlnnWlI@KUaUUVKn@VaVXV@na@mw¯@mUkJUamI@lk@@am@@IUmVImUUw@anUVaUU@LU@WaWUXWWwV@VwnU@L@ynbl@@X@aJ@nW@@Vn@lVLlxnIl@@UWKUnIlJXIVllIVV¼XK@aVIV@@bn@VKXLVKVVVInwJ@UWI@mX@WKnI@KmUUVJUL@VKW@@k@aU@@W@InJWUXwWI@W@¯wkaVaUIl@nValIXWWI@UUm@anwWkXWWIUbk@UJmIUamKVUUUVVama¯VkIVVUlKnXVwX@@WVaUUVa@IlaVmknawkUU@U@mUVUVwl°LVbnJVU¯la@mX@@UWKXU@aV_V@@JlkU¯@VnK@km¯kU@WUW@mmU@kmlU@wkL@WUkL@VmLJ@b@V@bknUUVK@UVKUK@Uk@Wa@LUVVnUbmVk@@UU@@aV¯K@U@UU@WmUL@aU@WVw@IxXll@UXK@KXXVJna@wWa£naUKVm@UU@mUmalm@@XkVm@U@VLmWU@kkWxU@@bVV@VkXVlV@UUk@@mI@KUwm@UmVUUwU@lwkV@IUa@mUaVIVKVa@w@U@UJkb@n@bmJ@XmlVUxWXkJmUkUUVWxUlU@aULUmbU@@WXkmL@xUV@nUxÇm@XLWbnlnVnnUVUnVVz@lbUVVlULVb@V@nUJkwm@Ux@bWbUK@UULkaJbUU@U@lUK@XUJmnJ@bU@UwWax@zkJWnUJUUVVV@bXn@xVb@JLm@Xw@`@bkb@VmXUV¯L@mW@@n@V@L@KIW@@aaUx¯@Um@XbW@@LV@bnVWVkKUzlV@bÆa@lnI@VV@@LnVVKUaV_VJVbnU@bn@nX@yVIVxXKVLlUVaXU°J", "@@@KlKkUUVVX"], ["@@UUVUkUmV@ln@VXVK@K"]],
                        encodeOffsets: [[[110318, 27214], [110532, 27822]], [[112219, 27394]]]
                    }
                }, {
                    type: "Feature",
                    id: "5224",
                    properties: {name: "毕节地区", cp: [105.1611, 27.0648], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UkV@kW@Xn@@KKVIVVIn°@nWVzl@V_VaVK@kKWaXklaX@lW@bÆz@KnL@aaVJ@UVL@xnLVJ@LXKlba¥l@nUWkw¥U@VaXa@amLkUKm¯kmkIUaKUIWkKm@anw@mlwXImUk¯@a@amU`kkKWVkxmUUak_mJmw@wmXUW¯X_@WnI@aVwkWWýÅU@WLkUaUbVV@lUVVnm@kUmV¯kKLwmVUUaWVaaWw¯wÈ@VULUVUUK@nWJkIl@Umxnbm@kbUJa¯bUbVxmLUVaU@VUUWxkVVV@bUV@XWbnlUbbUJlbUV¯b@z`WbXnmbawUwVWUbUxmbU@Uam@VkVawVaUWI@mUKóz@lUlÅ@WIb@xXxml@XklULWKUmwUa¯KUXWJkaULmKkLWbkKUVImWa@kUaULW¯LK¯@kbL@bx@J@bmnnlUlzU`U@@Ub@mn¦°bUVx@bkVm¼mx@mkmVV@bkxVnaVV@bU@mL@b²`lIVV@lXLlbVxn@@bl@XllIVnbVn°°wlbXw@mVa°lVnU@mVLVbn@@b@@WVnUV@Xlxn`VznJVb@L@bV`V@UnwU@WUXKV@UUlmUUlaXalLmbIVbnJVIlVVaUUnWVXnVLk@nWnblnlb²xxVKVXlVXLVWLlUVJna@wVL¼@JVX@`@nnx@nWJU@Vx@XXKUblxU°LVKVVlL@KnbVUnJIlUnKl£VWxIlJ@nVÞUVVnbVX@V_°lnK", "@@@UmWUwkU@Um@@VkL@V@VVkV@nbVa@"],
                        encodeOffsets: [[108552, 28412], [107213, 27445]]
                    }
                }, {
                    type: "Feature",
                    id: "5227",
                    properties: {name: "黔南布依族苗族自治州", cp: [107.2485, 25.8398], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@V@IöalK@UV@@KUaVIVVLlaVbVWnX@@LnUlxl@naVLXVVaVUJ@lUUanWWI@VlV@Xbb@Vn@VmVVbk@kU@VV@XJ@zn`ULW@kK@_WVUK@LUb@Jlxn@nnWlU@@bx@XVVU@UbVb@n`VI@VVLUlUIUV@KmL@VV@XIV@@lVLVmXV@WLXLW@U`nkb@Vl@UL@VVVLllX@`lIXbJIXWLaVL@XXWĢb@bmK@L@°@VnxmxnK@xVn@VkL@VLakbl`VnnxVnUlV@@VVXV`@k°JV_UalK@U@aUU@mIlVnKV@U@wnaw@akU@l@nwl@XLmV@xnl@VXUb@V@JlLUJUI@UlWUnLVUUaVwV@XKWkXJm_@amKnmmLwlUIlmUwkKnwlI@aUaVKL@bVJkVUU@@KK@a@I@ama@UUaV»XIVa@alU@WUU¯IWVUbkVUKWLUwUJ@zmWm@@amVUaUIU`VbULmU@KU@@UmJ@kÅb@akUVylLXUmU@aU@KX@Wan@V°@Vwb@bX@J@LK@@U@mX@@n°KVUnW@Ula@a@_x@WnK@IUa@wWm@aUUUVVVIXmlI@ywXbVxV@@aInmVI@WVL@k@VVVaIlbVK@VVLXa@aVwn@lxVI@m@UUaVKUkVUka@UymUVVUmmUmmkXaWK@ÈnVw@mVU@wKlnXW@V@naVVKUk@KVIUW@mk@KXU@Um@@lVk@UVJna@UWaL@a@Xa@kmmVUUk@mkkamJImJUUmIm±aUUkambkamVUU@VlbUbVVxXWVUU@VUakU@UmUVU@mnUVVnUbVJ@bUW¥kLVamVkUaWJU_UVWKk@@nlUVVJUXm@Vm@UnVlmbnmJUbULU@@UUKWVIWxnJVb@xUL@bUJWIkxbkb@xVJbmU@kW±LkKUkVa@a¯am¥ULkalÑlKXUWXaVakImV@ka@UUJ¯aXmmbKWU@wUUaUaKmU@UXlWb¼WLUKUb°UlVbkbVL@VJ@nVlUbUXmJ@VX@lbUbU@@bWb@VnLVJ@bVVUzVL@lnL@bVVVULmKUkJkbm@xVb@VkKVnnV@b@WXUnVlVVXVJUXlVXbWV@VU@Ubk@@KWbUUmL@JnXV°XJ@_`UbkXVVlÆkb@VLXVV@V@kKXX@`V@@n"],
                        encodeOffsets: [[108912, 26905]]
                    }
                }, {
                    type: "Feature",
                    id: "5222",
                    properties: {name: "铜仁地区", cp: [108.6218, 28.0096], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°a@aÈbVUlU@aVKnVVVUlyX¹lWVa@UVnUVU@m@mUl@mÞw@xnIVbna@KVIJ@kwV¥UXÇVkVW@kkKWU@aXUWmnIVa°VXbmL@VVbnVVVUbVbJVbVKXkVKVanU@aWnWUWa@Unk@mVIVK@wXxlLXbVJVlKbl@VI@maXalVVVbX@@aalnkx@b@Vb@Vnx@bVVUXn¤WXn@Vl@Vlzn@`@I@KUU@V£namVkXa@aVKnnU@anVlKa@UUU@amk@»kU¯@aVWnkWmkImU@akaVm@»VUV@UKnkW¯XWlkUKnIWa@nmlIXmWUnwUwWm@wULmaUJkIUaaWaklwkwmJmU@bkJ@XUJ¯W@XbWbUKUkWJUUVKnn@UmmXUWa@mU@@UI@WmXVykwm@kaULWwU@¯lKUUVU@mU@UkmaUbmV@bxVnVUJVn@Jn@@bl@@knJVblInV°@nx@mbU@UWUbm@ULVVVb@LkJmXkmVWIUJUXUKVwVUkLkU@W`UmkVmIU@k@@a¯lÝ¥kmJUnKÑmbUb@Wbak@mWU@UbUVVkLlbUVkXaWK@LkxÇmk@@X@J@V@@X@VUV@VIWln@mbXVWXkKWbnxVUnVÆInl@XUxVl¼UV@b@b@xlLkV@VmzmV@b@VUVVLXVVbVLXKmVVLU@nnVWXXJ@V¦UK@LUmkIWbk@@lUImJnVÒVUnVVbVIVĖUxV@bnUVL@WV@@X@VKlXXaV@@blVxXVVIV@@WkIUVKUkVmlnnbllUVbXVWbblVkb°VInVVV@bnVx@l@bnVVnUUamUL@bVVÆUbUXUn@VVUb"],
                        encodeOffsets: [[110667, 29785]]
                    }
                }, {
                    type: "Feature",
                    id: "5223",
                    properties: {name: "黔西南布依族苗族自治州", cp: [105.5347, 25.3949], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VL@Vl@@IXW@kVUVbnW@XlKVVnUVlL@baVbb@xX°ÔUxV@kbm@VxkxWJV¦@ÈnVKxWXJmV@nÒ@xVbn@@blLk`VX@bla²JVUlnn@U±lw@wnw@mlwVIX@@m@klKnkaKnwmmXkÆVmU¥l@nb°n@aVwVmVIVnI@a¯@mU°l@@VnI@JV@UV@b@IUbVJmXöºzllUbVa@aXUl@U@llLnKVaUa@UmK@UwVbnKV@VwVK@UXV@Vbn@w@UWnX@a@mI@UUKlaUaVk¯VaVLXK»XaWk¯mkğwmW@mIVkwJUIÇVwUUkVKkm@UkmU@WÅwm£Vm¤¯IkJWa_lUbmJzÝJkUÇVU@bUÝnm¯LUb@`mL@VkL@VUmmk@UU±Umka@kU@ķymUkk@mmkÝmUaUakImV@V@VÅL¦JUXmJXWb@n°Æx¼nV@LlbUUbmL¯@ÞbV¤nbVx@bUVlblI@KVVUnVJUn@VlLUlmLUUUxmK@I@@VW@@bU@UJmUkLVVUl@b@V"],
                        encodeOffsets: [[107157, 25965]]
                    }
                }, {
                    type: "Feature",
                    id: "5202",
                    properties: {name: "六盘水市", cp: [104.7546, 26.0925], childNum: 5},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ôyVL@nXJVUbxbUlU@nVbV@naVwaVUXVxxbnaWmXa_@y°aVUkaVIaVamkXa@WVU@aUUlUXwVV@UVbVUnKUwVa°abVIlan@manw@VklJXI@mLVVVUVK@UÇk@KUa@UkaVU@UVWV_XWVXVWlLXKlLXaÆKwVL@akKm@Uw@@XUVk@VUI@wWK@aUVI@UkK@mLW@kImJUÅVmkXUW@UJkx@nmx@xkxV²m@kmUV±Ikb@aUWl_kK@am@Ua@wÑ@mnUWIXwULm@ÇU¥XIlwUwn@laU@Vw¯ÓW@waUab@akKUmVUUkL@WmXUaUV@lWX@Jk@@UUKULmLUJmzkKmVX°VUnWKULL@mU@UnVJ@b@UV@X`m_@l@@bmbXJmnn@°wnn@VLX@V@nVl@nk@@bl@nn°WlXzW`XXVKnUlxVbUb@VXb@VxÈbVlnbmn@kVUL@mLUVVL"], ["@@@@UmWUwkU@Um@@VkL@V@@V@VkV@nbVa"]],
                        encodeOffsets: [[[107089, 27181]], [[107213, 27479]]]
                    }
                }, {
                    type: "Feature",
                    id: "5204",
                    properties: {name: "安顺市", cp: [105.9082, 25.9882], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lL@bUKxÅLWbkKWLkKUXUWWXU`UX@VUVlb@VVb@Ll°xXxbbXUVbVnUxKlL°nUlVn@UmVU@kUUVablVXKV@ÆXþlXUxnU@mVK@_@ml@UU@blU@KnLVyUw@@UmkWVw@UVK@VXzVK@nVVUUW@kVJnla@nKWkaWL@Uõb@JU@mU@@_WWL@lUU@WUUK@lakÅUUlWVa_@`WIU¯mW@InKVVXa@Ll@VaV@@UXUWakUVWUIUWUkUmVXW@@amUUmLl@UUawn@laIVlnLVKUUU@amK@kUKVyUU@aUImK@UXa@aV@VakaW@@UnIVWVaUkb@mWX@Vxm@UaU@W@VULUxU@mLaUx@VnL@VVbUbmLkK@kVk@WV@bUbVakkyõ¹nWUIVa@J@aVUU@@ImJ@Uk@¯V@n°@bmJUUJUnUxbm@¯mak@¦VUnÅWlnnmxLbmlkL@l@nWVnlÆUVnIlJ@XnK@lL@VJVU@bXL@xVJUl@VU@W@Vxn@"],
                        encodeOffsets: [[108237, 26792]]
                    }
                }, {
                    type: "Feature",
                    id: "5201",
                    properties: {name: "贵阳市", cp: [106.6992, 26.7682], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nlLXVJLVblJn°lnLlVnKlU@nUUa@WlX@ln@Vb@la@alJ°¦Kwn@°xLVkUmmwUmk_labK@UlK@UUm@wLmnwmw@U@¯@KnL@aaġXWW@UKbKWXJIWakJ@_kWkKUU@UVKk@@UlamV_X@WKXK@WUUnUK@kU@WJU@@UnK@LVUVJVkUK@UUJm_@UaVaV@UU@Ww@aV@Xkmmm@kw@IVa@KVLXU@`lLX@VKm_@yI@WU@UlVl@UanU@Um@UaWaU@Uk@XJmXVbkV@IUVUbWUUKmbk@kwmV@K@mWUXUakbKUUUJVb@LU@@VkL@VXKlbXmL@kbmUI@lVXUVU@mULWy@UUL@VUxXnl@V@VxUzmK@LkVa@VVk@@n@`UL@nmV@bmJ@X`WX°WVn@xnxnIl`VbnVlwXUlLl_nV@b@bl°VnWJkx@nmx@b"],
                        encodeOffsets: [[108945, 27760]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/hai_nan_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "469003",
                    properties: {name: "儋州市", cp: [109.3291, 19.5653], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@à®¼jpnr``pRVHÊÌ¤Zt^JÖA[CâlTébQhRPOhMBcRSQiROE[FYdGNOEIH]MgEAMLLIAG_WMCSL@ED]PCLYC[ZIHgjSxJTMbHNEFCMEE_HSDFHSLECRNSFDRICHNADGPI\\RZGIJTIAHLDQOHG`GTNCOIC@eIGDWHIS[kiE[FMbECZS@KKS[FDWsCeRuU_DUQNOE[LKGUBM¨EDQP@HWHGDImXCog_~I_fGDG|QDUWKBC\\ore|}[KLsISBHVXHCN`lNdQLOnFJSXcUEJMCKSHOUMDIm_DI`kNDIGEYFM\\YPEEIPMSGLIKOVAU_EBGQ@CIk`WGGDUM_XcIOLCJphHT_NCISG_R@V]\\OjSGAQSAKF]@q^mGFKSW^cQUC[]T}SGD@^_aRUTO@OHAT"],
                        encodeOffsets: [[111506, 20018]]
                    }
                }, {
                    type: "Feature",
                    id: "469005",
                    properties: {name: "文昌市", cp: [110.8905, 19.7823], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@hĲ¤Ī¯LQDaFßL[VQìwGF~Z^Ab[¹ZYöpFº lN®D´INQQk]U[GSU©S_­c}aoSiA£cÅ¡©EiQeU­qWoESKSSOmwćõWkàmJMAAMMCWHGoM]gA[FGZLZCTURFNBncVOXCdGB@TSbk\\gDOKMNKWQHIvXDJ\\VDTXPERHJMFNj@OwX@LOTGzL^GHN^@RPHPE^KTDhhtBjZL[Pg@MNGLEdHV[HbRb@JHEV_NKLBRTPZhERHJcH^HDRlZJOPGdDJPOpXTETaV[GOZXTARQTRLBLWDa^QAF`ENUPBP\\Eji`yºEvåà"],
                        encodeOffsets: [[113115, 20665]]
                    }
                }, {
                    type: "Feature",
                    id: "469033",
                    properties: {name: "乐东黎族自治县", cp: [109.0283, 18.6301], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ªVLP`@PEdNRAHOPEAKHEVL`GZBJfvdTAXNNTZJFPrHHNpKTD\\ILHbEVd^JOHLh@NNBnHP`\\xH@NBRLJTlNv_^CTLd@bNDVFbxdFVUPBTKOGEOUO@OEBXQP[H_EI\\EbeYa@UO_JMEJ_IEDKJUGMDcNUd_FMTEJSGoZ]EIYGO[YWgEQ]a@WHEDQKUSDUGAbYBUpSCYNiWqOSQEoF[UcQISWWNMSDe_cLQ_UBiKQOOASQAWgS­ā]ZaSPÝZ]XMXS[^oVËNgNKlE RôEø"],
                        encodeOffsets: [[111263, 19164]]
                    }
                }, {
                    type: "Feature",
                    id: "4602",
                    properties: {name: "三亚市", cp: [109.3716, 18.3698], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@®ĂhTBXTRPBRPjLVAR`dKf`TCNXMTXRJVdE\\FpTRrPjXZMTDVoZABaVHTCLVCRGF@X^bFRhZXP\\ZHHMA[^wBWXJlW¤EJ[bCTOFWWMm@ILMGWQ@DQ^QNWFSHEbF`OXNbOVNKTEPDTLTCCVTREfvfEHNbRAENH^RJXCFHNFRpVGHWISDOTMVCZeGamaLoLÛD¹¹ėgsia{OųETtlÉwr}jR±E{L}j]HąKÃT[P"],
                        encodeOffsets: [[111547, 18737]]
                    }
                }, {
                    type: "Feature",
                    id: "469036",
                    properties: {name: "琼中黎族苗族自治县", cp: [109.8413, 19.0736], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bRFnHNbHgN@NPEnbXP@bND`NT\\@\\QZb@`@J]V@XhDpWnCJGHGXO@CR§FANHVKLF\\MPVR`CvVfQtDPKpGHG@S`WJP~^dSTHWX\\RHTFACQTIAUPOU@MG__IaYSFQKNSbORHXCZeTFJgB`YBMNMFi~IVDV[tGJWXGDQRGF]JrALgESLSAYDGIaFeXQLS\\MKSLSQYJY}eKO[EHiGSaK[Yw[bmdURgEK^_kcSGEOHKIAS]aFSU@Y]IWFUTYlkP_CUOUEkmYbSQK@EMWUuAU\\M@EpK^_ZMDQ^OXwC_ZODBrERURGVVZ\\DTXcFWNIAWJWAYUUFYEWLQQaCIZeDM`cLKRGpanJZQd"],
                        encodeOffsets: [[112153, 19488]]
                    }
                }, {
                    type: "Feature",
                    id: "469007",
                    properties: {name: "东方市", cp: [108.8498, 19.0414], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ºxJYZQIYXLl@dR\\WZEn]bA\\S~F`KXaDeTiNO^EEKWEDQXITBXaWaDQMUJOIaTWf@NJV@dSxGZFu_@WMKAU}AQ@MwG_[GOAmMMg@GKP]IUcaFKG[JSCoLGMqGEOYIMSWMSBucIeYA_HUKGFBLOFGPQBcMOF_@KO©UAtERadwZQ\\@ÊJÒgòUĪRlR°KĮVLJ"],
                        encodeOffsets: [[111208, 19833]]
                    }
                }, {
                    type: "Feature",
                    id: "4601",
                    properties: {name: "海口市", cp: [110.3893, 19.8516], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ńZƂtĢ¬æßFuz¹j_Fi[AOVOFME_RBb]XCAKQKRSBQWSPY\\HbUFSWSPoIOcCOHIPkYCQ]GdGGIFQYgSOAQLK`MFUIGa@aQ\\GGUFcHKNMh@\\OYKAigsCgLSF]GOQO]@GM]HyKSHKPW@Pxi@EMINYREXWRQ@MQcFGWIAwXGRH\\yDI`KJIdOCGRNPNtd\\UTMbQYi@]JeYOWaL[EcICMUJqWGDNZEXGJWFEXNbZRELFV]XQbAZFrYVUBCLNFCHmJaMIDDHXHEhQNXZ_TARFHVB@DTQIRR@YHAJVnAbKFUEMLd\\c^ÍÞ"],
                        encodeOffsets: [[112711, 20572]]
                    }
                }, {
                    type: "Feature",
                    id: "469006",
                    properties: {name: "万宁市", cp: [110.3137, 18.8388], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@^J@ZTVbET^JBGLFPTHld]`FLQhcVanx\\\\ZbLHTGj\\FLP~fIZRZPVTQFSVAFJE^NDLEE[~LjsxVTG\\NZZNGlLRRGLJTV@hPZANN^@T\\NEPPbDZXO`d^HSvcJDIV\\XZAJUFCLNP@PQ¤@[ïKLÑIÏ]ÇE±I{u­YśUćFcYUmsVeBSVgB[RO@aYYPO^]@UVaNeDShMLG\\EfFVE\\F`"],
                        encodeOffsets: [[112657, 19182]]
                    }
                }, {
                    type: "Feature",
                    id: "469027",
                    properties: {name: "澄迈县", cp: [109.9937, 19.7314], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@T\\GJCXJH@fJDDPNCNJENN^NLHBNSx@DDYbBLLDRbjZTj@`XXTlG^Xr@PJLW\\WLTlWR@HDJTD@X_PO@STMDNTMVV@NLDM`M\\XM\\JNBH[PYZúYzŸ`Ċ\\ÎÝd]c[NKVFLEBaUmBIZGQ@JQSR@CUAEGBQ`SWYRMFgWGCGJCbNnIDGMEDKVAZUEqBYRa^WEUFKYQMaFWXEHIFWMYHCrXVIIiaK@aMCUYNSIISTwXALKH@XWXIEIJQCG[IEQDE_XSBaa[AIPW@]RS[FWS[CD]PEBYNGFSaSyJG]@ugEUDQlGHiBKHUIoNSKqHFaPMICK]UUHIPDJMuCA[SCPIDIOILGAEmU[POPBVSJDREBGS[QXWSGcT}]IO_X@TGHoHOLCX\\ELT@LYTDaFENF\\lj"],
                        encodeOffsets: [[112385, 19987]]
                    }
                }, {
                    type: "Feature",
                    id: "469030",
                    properties: {name: "白沙黎族自治县", cp: [109.3703, 19.211], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@D\\RV]dTXELnHr]^@LETBBRTHPi^[@U`QTHDJ`MGSogDIPKdJ`WVNHCXHl_DJR@AH`FBVPUJLHKNTJOFFZON[ZEHFCJlMJ_Cn`CJVNGPLTNDFIdVTWEIPmRKMc_kDMWGGUTAtJLK~\\f{pqD[LAVXRCH{HC`eJ`}@W^U@I@_Ya[R[@MSC_aMO@aWFmMOM@haGGMEmaQ[@MESHaIQJQMckBIw[AOSKKAMPSDSLOAV_@@`KJRbKRDfMdHZERgAWVsDMTUHqOUr@VQXTT@TfgL^NH\\@heTCZaESNObHPHeZF\\X^ElM^F^"],
                        encodeOffsets: [[111665, 19890]]
                    }
                }, {
                    type: "Feature",
                    id: "469002",
                    properties: {name: "琼海市", cp: [110.4208, 19.224], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@TP\\pATHTGlZDJGAQjE\\Rb@jVBDCN`JZ[NCNHNXbULPrP\\KNbMTLjJJRFP`pNLZz^FLRHjVPZ@hxVKbHBHMNNJFRlLzGPnNHhIrHHADcPWdUAmEMVQDSKYHY\\EhBN^HpXGNDBNNBnIßÅ_g{³So]Ã£@ORO@KMEDIVYB[WJUICudGTc]P_YWaCOOMFS[]@MMYBgOU@ISHKQQkKMHYY[MSHwUit}KF\\KFMCF]EIUBETSROUKTLT[NKTWREfJbCHBZKTFTKh"],
                        encodeOffsets: [[112763, 19595]]
                    }
                }, {
                    type: "Feature",
                    id: "469031",
                    properties: {name: "昌江黎族自治县", cp: [109.0407, 19.2137], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@`ZĤd`òü BSPGP@VSbQ`@]HC~T^SE]N]FkW]E[fYGGOPaTMbFDYfS@g[MGK]he@SSSRW@UVqrPVGNStCXUhBFQGYNcCeLQQaLI@_`@EUwcEaCUaMc@SK]Du`MSkKI~BVNL@X`EvYwHcTU@MIe@SXJbIPNVCRXbWbSAWJCRXFFL]FMPSjCfWb_L}E[TaBm^YF[XcQk@WKZJYRIZw¹ "],
                        encodeOffsets: [[111208, 19833]]
                    }
                }, {
                    type: "Feature",
                    id: "469028",
                    properties: {name: "临高县", cp: [109.6957, 19.8063], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@jD`hNd\\^dZädĒH´Op@ùZY\\OAGIMN[[W_NCNMKU@NUMSNCTSP@`O@WSCCI@GXQSkXKX[IK@OWqH]SkWW@_SiiYQaKCAKZaCCw@MTGAMKM]FMMIMDSM_HGHRPKCBGSJJIYH[QOJCHMBDGQJECMTDQKFGTCEGTF`NFEDMFaGSNwIiTGhYJD\\KZODC^@FTKND`XBHKJNKFBNhG^FJMPcHEZF\\QPRjQTAdgNOPgQaRSê"],
                        encodeOffsets: [[112122, 20431]]
                    }
                }, {
                    type: "Feature",
                    id: "469034",
                    properties: {name: "陵水黎族自治县", cp: [109.9924, 18.5415], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@R]NC`YL]FoN@V[vBXVFNL@TRZalnVFVP`DlOZkVSXEE_F[EUFeH[NKTgfCbMVU^@P]ZObZP@\\QhATUfAtUasñiāEoI]eYǯ@aKmaeWuCºKÜKpnbHbYfUDSNCPJTRAHJTDJSfDNLHXC``VBNGTYCQDIXMDSP@xLNEFRNXBIpVNLXah@RgF@`qOML@LJNSPLbaHAh@Jdj"],
                        encodeOffsets: [[112409, 19261]]
                    }
                }, {
                    type: "Feature",
                    id: "469026",
                    properties: {name: "屯昌县", cp: [110.0377, 19.362], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@\\OnVBFKHPJCJOJTDB\\vDINOCGJVVL^JDONEbrGTLpMVJLGjAHGRkVChF@vH^zIbTETMHAZOFC^\\DXT\\EffAP\\PdAV@UIYfS|S@YPICMeM@sC[_A]VQEwyHSMuNcAUlQJMVGMS@mVBZPFO\\CSFQK[LqDMACiUa@[QiFBRIHYCHkGSBS[oSOqBIE^QHCRWHIXsHU\\UC}JEjMNAN_ZAIhSEYfWDQGaPMTLERZTJb``NHV@"],
                        encodeOffsets: [[112513, 19852]]
                    }
                }, {
                    type: "Feature",
                    id: "469025",
                    properties: {name: "定安县", cp: [110.3384, 19.4698], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@JjDNdJ\\FbKPXfZ^Ij@RZNaVSc[MsMOHQPDJcLIJ_zCG[HQxWJBHXdENRR@XQFWZQQGOFSWUCI[WCJuRGLXNMPLhCl[Ta@SqGgJMGOmyHkKEQMINMAGaGULgwY@UOGiKQ]EYyMKoO_QEIIKiNSMa[LqOKOaVMWMGMDY\\_IKrL\\ERT[DEPYOUA@nNTUHINkRBVMdNvGTxzRF^U`BD\\@tfNDNOJ@Z{TeTJZ@VUcB[OBOeeQT@^OXBJb\\AbWTF`RCJFH\\RDJIJFXW@WLGBKxWTSJJMTVZND@bbL"],
                        encodeOffsets: [[112903, 20139]]
                    }
                }, {
                    type: "Feature",
                    id: "469035",
                    properties: {name: "保亭黎族苗族自治县", cp: [109.6284, 18.6108], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@FJp@fxpQ\\ApN\\GNPNBM`HLMrXLXj\\PEHnI@WUCEM\\GTc\\GZYHTPBHRCPTdH\\K\\@HXiBJILJJAVNTOZJNtFPC`YxDPWci@IBgbGKaTOIM@KNKrP@_hE@QbgKWUMJoWAQMFEKM@wTONCJWRCZDHSAM_UD_GWMKeCITSCGIQBGXUHQoMEEGWDQIG]FMQBMaFGueFeSQDUSDSKOCSFMLUaPWM_PaEGFETMX]RCRR@HXKN@JNnXXESPaDI\\£FkXWIAX]xB\\GN"],
                        encodeOffsets: [[112031, 19071]]
                    }
                }, {
                    type: "Feature",
                    id: "469001",
                    properties: {name: "五指山市", cp: [109.5282, 18.8299], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@TCNOLBTLBPx\\AJdlNRRIbJTGNF\\@RcIYbmHoLQdKN_fCJYbDRRXKZFVEZVXBXIJBXMdESW[CUYHUVQFQAqsEIMPYMSBUIIJKAIjGW[@[LGScDOGQOAGSYZ[HSd[HFNVD@XmJFG[OWiWKNqGKN_MAMO[HoM[BoRewo@Y^HpITSFENc`MVCdHNIVCLJFI`NFIP`@VZbaf[FFJG`O\\WRFA@PVPFPPH"],
                        encodeOffsets: [[111973, 19401]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/hei_long_jiang_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "2311",
                    properties: {name: "黑河市", cp: [127.1448, 49.2957], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VÈÞ@kxnX°VÈa°V@kôwbJVkXlVUx@lL@xkVV°VbxlVUnVxk@KkVbIl@°kVl@lÆnkll@@VVX@V²bUlVlVUVÇn@nkJlkVb@x²V@n°VUnlKUn`@n°bWLnVUblVUVVbknV`°kkl@@V°@nzJ@XxlWXb°n@bĠlbXbbVbJ@Vba@@lbUbVmn@lVmnIW@WbÞ@n@x°@ĢaƐéϚnlČ¯ĠŻÈwm@ôçUmm£Xy°UV@wÈ£Ǫ¯kõÝçUÑUķĢkVÑÆÞU°nŎ¥ČUĊx°m°¦żVƐx°Ç£@yUônÞÆ@Èĉ°Kô¦WkWUbÇ»@ÈĕWÇÈ£ŤU@n£ÆUUKVamanwÅmÝJ¯k@JIkaVaUUÇbkaÆÑkWmÝUÛÝ@wnU±@kkV¯KUkJ¼U¦Å@ówķaķůV¥Uaó@Åwm_kVwĉĉmmn_V»a@UVwķóU¦LǫéóXÇmōLǓÇķxÝkĉkmakbUĶ°@W¼@bÈÆ@ĖLl@°J¯mkl¯LÝ±LamJ@¼VƧUóUXċb¯ńVbkÆÝI@llxk°V²V@UxÞL@b@b`ÇzkókÝ¤@ğ¯WLĉÇLmmnċVkbUaL@¯bU°ğLÝÝ@"],
                        encodeOffsets: [[127744, 50102]]
                    }
                }, {
                    type: "Feature",
                    id: "2327",
                    properties: {name: "大兴安岭地区", cp: [124.1016, 52.2345], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@kϙmƏêġb¯@@wmÝ@XV@Ill@bUxl¯VlVbV@ULVlUV_kxVVVÈÝJ@¯Ulm¯x@xóÒĉ¼m¯Wxţ@Uz¯WwnUwť@knW£óVUUwğyó¦WIVmmI@±kwÇ@@b@ĉ¼ó@¯wó@¯aó¼KÅaUwmWUwÅI@aKó@UaLaVÅwō¼UUÝl±I¤VxÇx@zkJmnnmbnzxll¯ČkJl°@kbmx@x@kêmVnWxôXxU°bWLóJnÇWĵV¦UUbbÆġKk¯VU±aXmċÑUwĉKġkVxkÇKkbIÛXWl¯bX¯KbĊÞVÆnĸ²lxU°n°òÈb¦xVb@¯Vx@¯VķÞČlĊ°KĸȘI°¤ČIôò»ƨnȰKǬ¦ôWŎÈƨwlnKVXmbX`lbwkVWXXL°aƾaĊ£n°@°¥ŎzÞ¥»alwôkƒJa@ĶK£bU°ĊxźVÈUĠ¥ƨVI@XU°x°Ln¥w°UmwXmÝV¥Ģ°@nU@mÆ£¯lKÜw@aÅU¥UaÝIkmV²nn@Ķ»@Uk¥VKÞ@ÞÛ@kVmĢa@_Jómǖ¯ÆwóÇa@alUwwĢřk@wÆWXUWXWam@_ƒ»ÇéXaĸwVa@ÝKkUWkXkKXxn@lĊV@¯m¯nřÆw¥"],
                        encodeOffsets: [[130084, 52206]]
                    }
                }, {
                    type: "Feature",
                    id: "2301",
                    properties: {name: "哈尔滨市", cp: [127.9688, 45.368], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°`_JlU@@V¦°JUnLôlnŤ@@ÈaUÒVbkbl¤zk°ÇVÛô°IlVUVôUxÆU@bźĀº@¦b@l²UVl@°ÒĠxnXxÆVô¼Þ@Üx²KÞlVÑ°UȰôlwô@²ĸ°lanV@VŎUll@bÈnÜmwĢ@la@ÝÞb°UXblŎ²ÆkVI@nJnĠ°knÜbĢwna@akÞKƒĀaIVbU¥wĠwkôxnLċVçkaU±IUmnġW°WôĉalÞÅĵ¯@W¹XÝab¯a±X¯ºLaVmkLóbkaVUKVkkKV_@aÝykk±L@ÅU@yV_aU¥ówÇx@UkVn@lkÅlwWVwUkĉmkklW@abVwnWWwWL@UUÇLÇm@wJĉL¥@Ý_@a¯yUWw¯¯Uġx¯aÝXVmaU£ó±¯nwa¯óÅVXmanUlUXkWa@mkIğamIklÇUkĊzkKlUōĬl@nX°@llUxŹ²mKĉVWwk@UbUK@bmVmIVmwaWxXlWČmºÞÆbUxV@ĵńWÆĉLkWUbaWzkbĉ`U±LklōwUVÝ£UW`Uwk@mk¯VkaõVX@WbLK@XƧºWzxK@lmX@bkVVÆk¼Vbk@Vn"],
                        encodeOffsets: [[128712, 46604]]
                    }
                }, {
                    type: "Feature",
                    id: "2302",
                    properties: {name: "齐齐哈尔市", cp: [124.541, 47.5818], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Þ@ÞĠKV¯a°@KVblaČUmnnKĊÈKX°Ġ@Þ£ôllÈy_@a@aKÝVwU@±¯Ulkw@kÞJlÅUa°ŃČaWVôƨVU@»nIb²KÞ°Klkn°¯I@kK@ĕÇÅ@aX»¯@VĵlaÿVamI@aÅÝउýĊȗJôȁÅkmƑÛ@kxġ@@laVk¯»īŹak¥Å¯JUaWU@@wa»KUkÆkUmUmwÛ±±UUbUUXwWwÆÝklkUanaWwnKlkal¯kaƽakÅxa¯@amb¯VlÇwÛĀV@xmêVÆVVaôVwÈx@ˌx¦VÞ¯VlmX@L@¯Ua¯LmV@°XċKV@UÈ@¥@wġIUkm¥Źw¦¯lmn@°kxVV@¦óamn¦l@nxlĉVómxnÒĉĀĊ¼þǔêÞ°ˌĠÞÒ°ĀɲĀƨźˤȤƨĊ°w@£nymwnkUUV¥ôÑVmkÆmUUVamVIkmôlxkXÞþbll@kVƆVxV@¼VÒ@UnnÞJ"],
                        encodeOffsets: [[127744, 50102]]
                    }
                }, {
                    type: "Feature",
                    id: "2310",
                    properties: {name: "牡丹江市", cp: [129.7815, 44.7089], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@U`lLUlVLUlbaôlKnUbK°¹²W°baÞbknyUlUkamř²L@m°@lm²n`ôÅlKxÜKnxV@l@ÅXyW_k@wmŹĕmX»Ûl°ôÈ»ôô_WW@Ual»wU@@wUV@VXI@wĢ͑ÞȻaU_@mUkly@¯óV»XmWUXUWmnm¥nUUaWLk»Æ²IÇawÅaÝ°¯nUa±a@¦õÆğ@@ÅbxUÜnÇłlb¯¦ôó»m@±Uk@Wwa¯xUV°xXbÇÅUVK@¹KUaȯ@ōÝXallÛkalÇUǫÇÅÇakbÝƆ¯nl¯@¼VUx@x¯W¼Æ¯mĖĬ¯ČVkķÅmx°ô²V¤bUnÞW°bĢw°V°XxV°z@bÞ`@¦KĊI@xnÈÈKV@VXKxXmXUxab@kXllĊnVlUxXkxlÆkm@UVl@ÈwôxV¦bU`@zÆV@²KllÞz@b"],
                        encodeOffsets: [[132672, 46936]]
                    }
                }, {
                    type: "Feature",
                    id: "2312",
                    properties: {name: "绥化市", cp: [126.7163, 46.8018], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ऊþÆÞ@bnJUbĀnblĊÞlĸwǔÈŎKÈnôWǬêKV¥ĸôUx@VbU¼m`nnĊĊxlUmkaVÿLw@°»UmbKmÝUwUmVknKUUl¯KUUÈnK@ĠkX±lX°L@¯¥@wV_mĵ¯WwL¯UkōÇVUlwVó±¯aVka°wVk°mÞ¯ŦřÆl²ŎkU@mUkb¯ķ±ó@kxȯó¯VUÒkÝ±LÛwÝ@ó»ÅUWwmğw¯Ñ@UkV±@ka@¥¹Źÿ@aÅVwóVVUkU¯JÜóÈUl¯yk£laUaVÑÇb@ţ@kmómKV¯IU¥@@kVI`@ô¼blUlbÈb@xÇKkĢɳaÅɆō@VK@z@@¥ÆKnÜ@@aÛUwwnUķ@_V°@klVnULVVÞbVl@°@nxn°LÅÆlVÈmU²@VmĠLxn¯xkWzJwnLmbXbW°Æ²@x@JVxLĀ²Æ°I¯ºÈ@ÒnÈ"],
                        encodeOffsets: [[128352, 48421]]
                    }
                }, {
                    type: "Feature",
                    id: "2307",
                    properties: {name: "伊春市", cp: [129.1992, 47.9608], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@K¯kWW²ğl@mLÇVVLk°VVmLUlVnxVnÞLnaV¯¼@xKUĀlbn`nÆxô@VbU¦ĸŰĸbôxÆ@V¥»IVl°LUll@²mVx@ÞÜÞVnlXÅÒlbÈaVVUblbJ@I°lÞInÆmxnbUbVLÅVm¤@ţVÇ¤XÈÇĖ@È¼aXVÜaXbWnzŎařKôbUlw@¯naÆKnUU¯Üa@mkkVUĊmżÝǖK°L²lÆI@¯¥ĉƛVaÞk@ÝVaĠlnUVwóma@wĉ@aVxamX@a@UaÅLaVW_nWm£nWm_ÅV¯m@mó¤Ý¦¯ÅalmX£VWUÅwmÇ@@IVWUw@aI@k@wŎ»WÅVaKIka@¥lUkUlwÅwVyÈwWU@a¯U°mÇ@UçaVa¯mV»ÅwÝUlUkV@kmUkX£w°@@ÇaÝIamÛam¯lğmmI@JUl±ÅōkWa¯VÝa@Þkbġ@xÛnÇm@akkōVōl±kÅťŚÝ°¯nUl¯xlbU°b²ôUxkVÈUŎVl°KXxĶ°nU`@x°¦@"],
                        encodeOffsets: [[131637, 48556]]
                    }
                }, {
                    type: "Feature",
                    id: "2308",
                    properties: {name: "佳木斯市", cp: [133.0005, 47.5763], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nbÞJb@È¯@xW¤Vln@lUVlkÞVÆxU¼°nUbbVèÈ@nIn@ĢmlUw°żVUn@lnL@VôbwĊlJķĸĢlwôwƨxVVUŦxLźÈ°`nnĠwŎJÞĶwôJ@¤XnÜĸln°¼È°lUbx@l@ÞÞÈm°lôwL°¼ĸ°Þ²nĠ@ôwÞ`ŤIVÒĠU@VJĸbÆ²@°ĊKJĶaĢȰ@ô¥°n¤bČU@VxmUw@aÝţÇķ@ĕķīU¯²@ÆmVÑô¯X¥ċç@ĉ»U¥ÝţKWVÅkUVÝŎUmÇÝx¯aķxÛUóL¯a±óōb¯ÑÅVÿ_Åķa@UK@wm@Van@UmmLVa@VImmXUWÝUÅKUwÝUUkVk@l¯XÅ_J¯kJmÅLa@¥U@¯Vz¯@`@¼mxƥŏKÛk@±laÛ@@Xm@@xƽ@WŎnˣĕÅ@@aÅ@@nÝbÇ¯@_UkUWkbwÝU@çWlw@anI¯lyX°m°VaÛm@mVwÞK°XlaXmm_@UkwÝK@VIXmV»I@a¯ğWbġaU_¯JU¯ġĉkō`±nÝÆkbóĊ¯XĢXmVn²JVlbUèČmKwlóğxxV¦UaJbƑÿÝLl@bmbġx"],
                        encodeOffsets: [[132615, 47740]]
                    }
                }, {
                    type: "Feature",
                    id: "2303",
                    properties: {name: "鸡西市", cp: [132.7917, 45.7361], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@LKVVnkbVÈb²U°VnklVlaÈL@anU°ÜmXV`nôLèxlLXL²aVVmÈX@ķlnUÈl`È¹@Ť°U@xKnnVmlnnUllVnnaŎwlVÞÒ@n¦LV°lwVkLaÞlnÒ@xmLÞ¤Wn¼WÈLVVUxlÈôWVaU_VKKXUÆbnnôKbÞw°bÆWXamVwKUw¯WUkUlJUwVUa@@kmyzmĉw@kVwkW¯ÅKU_VmxU@aW@@kK@wa@K@@kVUaky°_Vmkna¯K@Lwġk@@IÇóXwVakmV@mwXUWanlĉ@ÇUwKóܛǊÛm°@wÅ@±b¯W¹WVwŹĕ¯kVmōb¯w@awmVUUbVIkaVwķxk¼b@VXXó`ó¼Çó¯kÜ¼WnźĖnxl@X`WzÆ"],
                        encodeOffsets: [[133921, 46716]]
                    }
                }, {
                    type: "Feature",
                    id: "2305",
                    properties: {name: "双鸭山市", cp: [133.5938, 46.7523], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UUwómÑÞÑUÝÝUkmmÅyV¯ī¥Uÿĉ¯mÇkaWbÅX¯aÝxaóLmmÅaWVLULV`UbXókÇVwUUÇKX»XmÝ£nK@wmÑkÝbKUlx¯kUKm¥@ÝÑkUōxmbUmkVkmmnkUmmL@w¯Vţ@Çºk_ÇmVk@ĸVxVÈ°lLkllUbōwnVW¼nlUx¯XmWUnÝ@xÝUó¼¯J@LVbkJWnkbW¯ÝLUxn@nÜb¯U¯nWkz°mJ@bkxX@èÞVxlaXlVV`°@ÈÞa@mÆ@@bÆ@ˤĖmXōƾ@@wn@@WÜ@kb@²ÜlŐLƦnw@»_°@y°UV@@¦bÆKnI°lIÆ`°W@kllUVÞVVxLÆÞVXWVnnUJ@UbnKVnm@Ubn@@xL@VbÆĸ`UĀÆÒ°Ŏa²ô°bôKÜVĸw°bÞwÈVnÞōVUÆlXU"],
                        encodeOffsets: [[137577, 48578]]
                    }
                }, {
                    type: "Feature",
                    id: "2306",
                    properties: {name: "大庆市", cp: [124.7717, 46.4282], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@mÇ@ÑÇ°¹¯J±ÅÿKUwI@w@±ÅX¯WanamKxIylX°wmwğKUn±@nVÇUÅkÆ¯Kmmw@@¯UkÝaUUVKmUlk@¯U`ĸ@VmxVxÜ@bÛ@mÅL@¦@@yLUŎ@ÆɅɴblġÈL@wÇaakkVa»@ó¯_ÝJwÇaÅXnyU¯¥Å@wbÝaLmm@@VUlbğVm¯Xm_`¯_UxmLa¯b@maó¦Çk¤V@bóJknVxVXx±aLUbVxkLVlLWl@nX@VÅbWlÈnxbWÅbm@xbml°bXbWXVmnn`Lmnbmb@k@mwU@@¯Jlbk°lbkmLXxmbVbkllÅÞxXxVWVVa²VÜ²nxVVnÅlVlL¼b@xV@XVbIÆ°¦lźbĬ°¼Ulb@kĢ@lw@ƒÜlnȂÆóȘIĉ"],
                        encodeOffsets: [[128352, 48421]]
                    }
                }, {
                    type: "Feature",
                    id: "2304",
                    properties: {name: "鹤岗市", cp: [130.4407, 47.7081], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Þ¥ô£nn@°ÆUn`mXn¤mX`UXbÆKVb@@bnWbwUbĊ@x@nbWVm_mm@ó»UmÅWXkĠ»²¯¯nķwŎ@ĊŎK°bĸUnÑKČ¦ĠÈbÆknJÆUĢV°IVƾwaVkÇ¯¯»mķkÛWm@£óIĵxÝōIğxmm¯_ÇŹKwťUVUƧwóxxġkĸķIkĉxóa@UmK@kVmUŻ¯Vxkġn@mmJ¯n°V@bXVÇxUzÆxkxlVkV@¦lbJLUbÆXō¼@xl@J@bVxXU@JÈ@nxVÆUXW¤knÆb°"],
                        encodeOffsets: [[132998, 49478]]
                    }
                }, {
                    type: "Feature",
                    id: "2309",
                    properties: {name: "七台河市", cp: [131.2756, 45.9558], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²mŎ_lĊĢV°°IV`ĢbaĠX°@bJU¼WnUJ@ÞLlxV@n`lIUa@K°Iô»ÞVwÞ@VmnX°WVwmkX»UmŎxVaklkkKÇ¯UUwÇWUnU±bKWKkwçóKmU_nW¯ÛmV@bÇKkbkUml¯U±VÇaUamlUULKk@U@mwÛLwkLóÆm_±nk¯@@n±KnŚlbkVVmzlWXº@Ķ°"],
                        encodeOffsets: [[133369, 47228]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/he_bei_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "1308",
                    properties: {name: "承德市", cp: [117.5757, 41.4075], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lLnlmxnIVVlUnb@VVxXJWL@LÞVnnVJ_@wkmKbxwXkWXXKlb²K@nVVVbL@WlU²lKVnUJVz@VVb@lÅ¼mVUVnbôaVX@°Ub@lWbX@b@bVb°x@VxÈLVlaÆ@Þb²k°@lVU@Xn@VWLXb@¤VXKVVVLnm°_ƨ¤@aUIVaalkX°kV@alwUVyU@kó°na°UVUUmUÆw@mkLVUWVIWLnn@xlVnKmyU@U°UXaV@U¥U@UÆ@aVUkWU¯aU@WLUV@bkbmKULmKkUVUkmVIUwlWV²Uml°U@WLUwVm@UUK@_KUUÜaXw@VKUU@mVIUUlmnIVVVbÈVlKnbVK@nI@nVnwVLVKKVnb@aUIVW@In°@lVnI@lWĢ@°UVL@b@VyUUa@w@WUnU@WÇ¯K@UkkJWaÛbmk@mVaÞU@amkW@mXUKkÿ£@akl@Um°UXwlaal@nmlXnW°znW@awV@akbĉ¥VmU@IVUJkUmWUKbmkUaKkUVU@KV@@klwWaU@kmXVènbmlUUKX¯JkbI@JmIUWU@Lml@XkJ@UkK@aVKwWaIWwmU@mU@J@UaċUaUUVkI±k@UU@UbVVm@UVKLlkIWaULUWXUJU@WbUb@lkXUxm@@JVn@J@bnb@Vkx@bLUÆnJaVXnKVVmzX°V@_lJXxWXK¯bÅamU@lUIbñJ@LÇKkIÇ`kxWL@@@bUVUb¯xWKkÅVlULW@n¦Ul@IlmUUUVm@kWnkKma¯XUKWmnwVwÝLmVUbUVWb@LnxmxVmbXx¦@nb@`V@kbLUmVUlkbVXkºmnm@@xk¦bĢÜl"],
                        encodeOffsets: [[118868, 42784]]
                    }
                }, {
                    type: "Feature",
                    id: "1307",
                    properties: {name: "张家口市", cp: [115.1477, 40.8527], childNum: 15},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@kġÛal¥@wn@nml¹UWlaVknUVKla@U@_ma@¥WwnaUwnmw@KXaVUVaUnmWUk°lnUVUXWVwIWVóKUI@WXxUU@mma@kUKWLkw@yk@aVkUUċaUU@Wk@Unm@UVmLm±IUkJkW@aI@m@UVUla@VXVXmVwnkWKKU_k@m¥mX_JmnU@km@U@KmUVU@U@Umk@@LmW@Û£Wka@wk@aI@mmk@mUa@UmUIwW@aWUbU@kbÇ@kw@makVUkU@am@aU@mxkUbKUXU±KXVWLUK@wkU@V@WXUa@WbUxJI@¦VèVVX@±ê¯KUI`¯UULVx@V@UKIVkLmVkKm@nUJÝbkIUJVXVVxVbUVJUn°bVmlU°XnK@Ul@lVÈVUXx@W@VXVKÞbn@VnbVm`UxkW@UVkLKm¼@lUnUJVnVXV@Vm@@LVklIkl@VWlULWKUL@mJ@blbUVUlmzUJUxm@UUbċÜk@Ub@VLVV¦ôbVmUKUkU@m@VlVn¼WbUJ¯@@°nIllÈl@nXWlLkJ@bkxlxkxlXUlklJXL@bWn`@nÆXxlL@xl@XbLKlVlIXblVUbUJW@lX@VL@VVXJwn@WnL°KbVbl@VI@K@U@nmVmV@XUWI@aXm@VUUkWmn@lmUUk@mUmK@UnwVĉ@mU_V@XJôVVULVUn@llUnJl_n@ml@XlLlw²LVJUL@VmbVblVXmVnl@Ť¦nn@Ü@bl@@XV`Unb@VlLVb²JXn¥ÆÑ@¥Þ@"],
                        encodeOffsets: [[118868, 42784]]
                    }
                }, {
                    type: "Feature",
                    id: "1306",
                    properties: {name: "保定市", cp: [115.0488, 39.0948], childNum: 23},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VbXW@@UlV@xVLXKWU²LVVWLalVnwV@@bn@bVVllUnb@lxÈ@laV@aXV@bXxJnV@VVb@nnl@nJ@bll@aU_VWUwVUkUmUkb±mVwU@VIUW@UWk@VU@ynLm@IV@bnKLVaVmnIlaXwV@@WVL°@@xnX@V`V@VbUVVLVKnwnL@ll@@_V@VVnaÆ@KVXÆ@n@wKmUWm@km@kÜKXU@ÑW±nIUwVKla@I°wU±kkmm¯m_JnawW@IVaUama@wUmU@mVw@aXk@mWa@£km@a_kVmUnWW@¯bkUmk@VÇm@@kUUKUU@UVUamVUaWIkb@xU@@amUkKVkam@@kVUkUWmKmUkLUb@xmJU@UImVÛVmnUwJU@VX@UWm@Ub°¦UmxklmX@`ULU@@UW@@xkn¯@makVUmxUb°lUbUbnUJUUVaLkbUUJUU@mUUUJka@xUIWJUnJ@Vz@kb@`@bln@lb@X@@@XlbnbVb@VJlInlbVw@UKl@lbnan@VbJôLnUzlV@lÈLVbVK@LVxVWXX`WxXzbV`UXV¤nx@bVlVnVlUL"],
                        encodeOffsets: [[117304, 40512]]
                    }
                }, {
                    type: "Feature",
                    id: "1302",
                    properties: {name: "唐山市", cp: [118.4766, 39.6826], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VVl@²lJUVVbČVVb@@InV@VnXxJXbxUL@bLl@VlI@WnkKV@VXnJ@IJla°IWLVVnkmaUçWVkôaÜ¯@nV°wnJlaV@VUnUUaW¯wXWWwna@£UaWKU¯¯@aVUkKUamUUn»anIVwUWlk@LlWVakU@K_lbÞU°@y°n@KÈkWWţ¥ĉōkġWUw¯£¯Çwţw@kK@k¥ÝwÅbÇ¤ÛťVlW°@ĸx@VVVULVLkl@V@X`Ub@Xm@UWbk@ÆVbnLWV@lnXUbl@X¯lmUVkKWLkK@_UK@U@UmmUxmVXLWVULkU@`W@ULUK@XlJXzV@@xml@VU@UX@Kk@WbUK@Xn`XmJnmkxUVbUVlVVxUbV@nKlLkVKÞbVKXI°KVmVUIUKULVxVJVLkV@V@UbU@WUU@UbUK@b@nV@VkLmb@b"],
                        encodeOffsets: [[120398, 41159]]
                    }
                }, {
                    type: "Feature",
                    id: "1309",
                    properties: {name: "沧州市", cp: [116.8286, 38.2104], childNum: 15},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@ln@UÈl@Vnl°aX@mXnVlU`@bln@¤Xb@nWl@bUx@nnVV@xnbVbUb@JXxbmXa@kUVwlWkKôVm@wkkK@kl»ÈmVKXkla°@XVV@VI@ml@@Vn@VX@V@J@VxUzVV²blVk¦@Ġ@@»@VK@VÈLlK@XnJ@alIUlaVVb@n@aU@WUIV@mUn@mKXml@lL@LnWb@XV@@aVVbV@VVIVWÈbIÈ»ƒǟlWaVUÅUUm@kVUWVkaUwmaóUJUU¯ÑU¥mk¯UaKÅnÇyóXmWÛX¯aċbÛaJWÝU¯»aóóUm@IVVl@bLUJWLX@@xXUxl¤V@VnVUVXVbV@@@VVn°V@ţU¯VUmUWV@mUXabUKUwUaÇKnVk¦Wb@VnLmV@bkV@nxW`Å_UVV@bUklVX@VmlUx@VVL@xVWVL@VW@UUm@"],
                        encodeOffsets: [[118485, 39280]]
                    }
                }, {
                    type: "Feature",
                    id: "1301",
                    properties: {name: "石家庄市", cp: [114.4995, 38.1006], childNum: 19},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@la@y@UImVXIVJw@lbIVVnV@VVIVVlaKbVUVVImVaaVk¯VanwVlUnb°@lm@wX@@VV@VK@_nWlknwV¯¥Van@VX@W@UVIVxnmÜUnUVJV@nI@wValKnV@kmU£na@mVk°KLVa@UU@UmknWWkXU@aWW@@km@UaU@@klK@UkaWaUnamm@Ua¯wWU@UkL@Un@xVlUXVJUbLmU@aUWUkmKkLUUm@mWXammkkWUm@@U¯JUUmkU¯@mKĉxÝwÝ¥LUómwkUUUWVkKmkKmLXlxVLVxXJ@nVJnz@VWL@`nX@x@kVUUmJmIXxJVnUV@UVV@LU`UXVVlXL@l@b@VmX@bxn°UbkKWLXlW@@bKmKULmakLUlmb@Xb@xmXU`Vb@`lLx@nWVXL@°WlXnlbKVKXVb@X@l_lJ@V@XnI"],
                        encodeOffsets: [[116562, 39691]]
                    }
                }, {
                    type: "Feature",
                    id: "1305",
                    properties: {name: "邢台市", cp: [114.8071, 37.2821], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nKlLnlLXUVVlVnxôVKÞ¦ÞxĊwnL°@lVnVV°I@Vn@VlXnlnbWnXn@VVlKnLVlVX@bnVKVaUIVWkU@wVm@¯@U¥VmU_°lKkw@LXVaU@wUUUKlUóW@UVUUl°KwlKU_naKVnlKkkWWa@IJVa@IlJnU@KVUUmVlaXUl@lm@kXWÝÑnk±k@wğ@@U@mKĉLmVJ@zmlnWLUÝJU_@@mJkXUVlbklÝ@Ýab¯@¯±JÅwġaUU@kU@mVI±bUKLWUXJkaLóKULWbUVkKmnk@@bmLUl@b@mnmJkUULabnmn@lVV@¦n@l@bznx@`Vz@bxnV@xllbnKVx"],
                        encodeOffsets: [[116764, 38346]]
                    }
                }, {
                    type: "Feature",
                    id: "1304",
                    properties: {name: "邯郸市", cp: [114.4775, 36.535], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bVKlVnInm@@akVnK@al@nmlLVUXaVKôLKlbIVWXKVL²aJnU@lV@VVĢbÆx²I°°@aÞbÞ@lkkaVUlWnI@@V`ÞIVXKmnk@yInUĊKÇkUUamUUk@aU@Uk@WUwVkVJVkkw°a@mK@UX@VVLVW@wwVa@¯Xm@@lUIWaU@UWkXWmU@UwmUkKmn@lkV²VaULUVmJUUUwLma@UmkIUmLmVmx@bLUamKÅL@VmbkU¯KÝamzkJUb±VkbL@lU@WIkJzkKmKnUalWkkKW@@nkbk@WW¯XUVUJ@XlJ@X@XlWLkU`VUnaWaUV@UVIaUxUUmVK@I@W@ÇU@@U@b@nmKXmx@UxkVWUX@`VLlL@`zXÝb@b@VUVkIUJVz°KVlnLlKnLxlLVVUVlXUJ@nnI@mVUlbn@@m@bVnV"],
                        encodeOffsets: [[116528, 37885]]
                    }
                }, {
                    type: "Feature",
                    id: "1303",
                    properties: {name: "秦皇岛市", cp: [119.2126, 40.0232], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lnV@Xbkx@lU@@LUVlVLVbnlaLXVVnlIVUJV@UnĊ¦lab@nJ°UmV@wn@VUJVI°bnWlXnWVLVK²bakklI@aUaVUwVUUalaVwnUVak¥X@WkLVÓmmUK@_lW@n_UK@alÅ@ğÅƑŃÝm@ÑţÇlL@¯mz¯@ÝVak`@LlVUbkXK@klVXUxJmbm¼VnVVblLUV@b°V°XLVb@¤mbXxWX°xXVbmVUVU@kbmI¯xmU@Û°óbUl"],
                        encodeOffsets: [[121411, 41254]]
                    }
                }, {
                    type: "Feature",
                    id: "1311",
                    properties: {name: "衡水市", cp: [115.8838, 37.7161], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@KVlV@X°xb@VnnmbVXblb@VkL@lV@Vbn@@l@XX@bWVXlmXnlVV@@VUbK¯LUl@nmbV¤n@lLXnlVUV@ln@lbUlLnV@bV@@wlaXJVbnUVbVU@VVLVVn@VVX@@UKXUU@wUK@UwVnk@UUWlkV@aUVUÆ`X_w@mlU@anUmK@UXal¥UmÈLVbVxVLabVW@nXUVnV°UŤV@U¯Um@U@@UUaWVUmUUU@k£VwW@wW@XKIUa@wU@@al@UK@_mKXKbUU@aVKm@Xm±@kbÇakLğVaUw@a@mkUJk@ykw@£WX@lknk@WVkbUVnUVL@mVkI@JUbI@JXbXllkLUmLmbV`kLx¯LkVUV@VôXkVVLVV@xVUbW@KxlL¯kV`UnV¦°@"],
                        encodeOffsets: [[118024, 38549]]
                    }
                }, {
                    type: "Feature",
                    id: "1310",
                    properties: {name: "廊坊市", cp: [116.521, 39.0509], childNum: 9},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@laU@UnL@VWbklWxnIVVV@XJlbUlXVbn@@KmV@@X°WVInJmn²@lmVbnL@amKV_kwlmX@@LVamaXaaVU@UnJVanLlUkaW@UaVakK@IlKUU@an@ln@alKUkIVa@a@klaUKUV@UkUV¯KVV@kUmU@@a¯ImJUU@VV@UL@U@@WXUWa@Ukwm@X@@w@al@@aVIUmVUUUVWUknK@I@l¥kU±aUUVyUw@@I@UUWm@@Uk@@nUJU@WU¯@kbWlULnÇk¼@llLl@xUnóLlkXUxV@lWbI`°nnnllV²¯x@JkbLUVxmJX²@ÒWVÛL@lln@XnnVL"], ["@@@kX@Valaa@KWI@UXW@WanaUIW@UaUKķk_W@UVUKU@b@UamxVXnJUbWVXLVbn@W°kb@U@Wó¼mIU¼k`V@bVbl@lX@lUôVlUIV`lXVn@lUlVn@l@UVaIUWl£UmVWU@@UUKlUUUnVL@KUnLVWUa@U"]],
                        encodeOffsets: [[[119037, 40467]], [[119970, 40776]]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/he_nan_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "4113",
                    properties: {name: "南阳市", cp: [112.4011, 33.0359], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lKl@nVV@bn@VVnmnLLXx@VLlKVUIXWÜ@Člbl@XUĊUlwnWLÞwm@ÞUVmnVl@nXJXLm@VnnJlaI@VkxVb@VlnJ@knKVn@°aVanal@XK°b@¯VJXIVK@al@nVk@nKab@XL@blVVKVLXK@VaVI°mVaX@V_@a@yUkVwVIVaJ°@anIlaV@nKnXÆm@wUUV±UUWUKnaWwXUWmÅ¯Vam@kakImUK»lan@VXXaW@@UlUUa@a@UlwUV@Xal@@anIVaUK@VXmwVmUmVLXl@nalLnal@nKlkV@@UnJUXnl@nVl¦V@@VnJ@nUVVVVIn@VaJÆn@@K@mka@kmWVaUI@a@k@@aUL@mmaVIUKUV@@IU@mUmmL@K@UUUU@mW@@nU@ğ»mVmbk@klW@UXnV@LJmlUnUJUUUW@UnkKxmLa@@@lUUbmUVWk@@nkUmam@UakJU_Vm@ÅlÇLUVmVUwULKU@k@UVUlU@@U@UaUUWaÅzJaWLklb@bmL@kKabWUV_@mV@b¯JmXUbUK¤ÇLUU@b@JkLWmkUWIkJ@VmX@JUbVXU`¯VV¯blK@LXKlUV@Um@@Uk@kxWkbL@KkbmL@UXmaU@@l@x@blX@xUJ@bULUlULÇ@@VnU`W@@nÛ¼U@@VmKUkm@VVX@@xÇ@bUbVb@VX@@xLUb@l¼XLlbUlVVUUb@n"],
                        encodeOffsets: [[113671, 34364]]
                    }
                }, {
                    type: "Feature",
                    id: "4115",
                    properties: {name: "信阳市", cp: [114.8291, 32.0197], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VllInJlknJVkVU@mXlUÞ`VnVVU@U@y@nXlKVnJVkXKWaXIb@yVkVUkVwn@K@nW@kKlUXVVUlbnUV`n@V_V@llX@@Vb@bV@@nlVUb¯WLnbmb@nLnKbUbVWnLlaX@VVUX@Vln@`kL@ll@VXVJÈIVl@XÞJ°UnaLlylU@UXKlnn@lanLWWnbVI@KXKVL@LVWVL@UVKUIVWX@@XÆJ@In`@lJVI@aWÛnK@UlK@UU@VKnlmnXalUllLUbVVknJ@nV@Vm@al@@xnVlJVUU@w@ak@XW@_mWnUlŁUmVKV@VXwW»XWaUwnkWUkVUU@@@WlaUkkaIWVkm¯xmIUmLUVaUIó»m@mmwXk@amk¯¯l@wmkLmmU@UbkUWJ@XUbJ@b@l@znÆmK@Xk@Ub@lm@I@akmVKUUVUkU@U±JUbk@IWmkxa@UUVUWVkIUaW@UlLWn@VkJI@VkK@L@bmKkJmUUaUKWXk¼VxnJ@V@@VULV¼@@UkaUlWL@U@W@IkKmL@KULUWULWKUXUJmIbK²UWnWKUUkLUmUUam@UU@mUL@xkV@VV@bmV@Vk@mwkUVUx@mbXÇnVbUL¯WnUVLVb@xnlWnU@UVUVVUbVVlVkn@llVUXUWUXVbUJ@bmLUJnb@nVK@bl@@@bVJUbnX@lb"],
                        encodeOffsets: [[116551, 33385]]
                    }
                }, {
                    type: "Feature",
                    id: "4103",
                    properties: {name: "洛阳市", cp: [112.0605, 34.3158], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VVUllLXl@LWn@J@bKUVmnL@`VblLnbV@b@JmL@LnV@VV@¯VJVnXL@nm@aÞ@ak@mImVbXLynLk°@°aVJnUV@UVVXk@WJ@VXLlUnJVnn°U@»°Uwl@bWmUXÆ@VLXU@m@Ua@Imkba@naWW@_@WXUV@@U²@K@I±U@¥kKWLóLla@£Um@kWKXU@mlLXUVKUU±J¯_@`UL¯Wmk@WakklUnVUVaU@KUU@mmK@_a@KX@VaUIm±kaVKVUkw@kaW@kbkL±UUaK@UUKVak£@UmmL@lIkmU@Ualw@UJkbmIUmn@WKImWk@mUUnÝV@nÝxKmXkxĉVWVk@kaċÛ@WXJUV@zmVWnbUbVbLlUnlUÒnWVVWnk@@Vm@kxm@Unl@Ll@@V@XnkJVV@nlVXxU@ln@a@VLnWĊ¦nx@lbVKXLl@ÞVLXJl@XXl`lIXVl@XlXUVKwV@lanxzUbVJ@VVX@b"],
                        encodeOffsets: [[114683, 35551]]
                    }
                }, {
                    type: "Feature",
                    id: "4117",
                    properties: {name: "驻马店市", cp: [114.1589, 32.9041], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n@b°UÆXnVlnLÜ@VLm@n@na@Jm@k@lVVxXX@V`lLVXVV@VVÞLVV°²@labnxV@@bLmlm_VWnIWUna@lLbnV°VL@KVLVUVaVLXK@mÆXna@wVma@Xw@KlL@a@Va@wUkaWnIVla@Kn@Vn@VUl@nKVnJ@LnK@aVkVUUW@VakUVanI²XW@UUU°KnUVLl@XaVK@aU@KUI@W@_lm@KkLUKV_U@»@UVJ@XV@@mVL@K@U@Kk@VwUUm@kmWL@VkVkzKmb¯VÝI@WUkÇJUIUWk@@klK@_km@UVWUUW@kbmKUXaVamLmK@namaXK°VakU@mU@@aa@UW@kkU@U`m@U_mVkaUVWUkVL@lmX@Lm@UxVlUUl@zaWJXbWLUlmIUkLmW@@z@VUVUUmÝ_kVW@nUVUlmIklmIkJUkl@n@Lm@ÅIUbm@UJUUVU@mmI@UU@k¥mUk@WmVmI@VU@klmLk@mbkKmb@WkKUVnUnnxW@UVLUbmJ@bk@WbU@Vkx@V@bVbkV@V@XWbUWm@kb¼VLnlJlb"],
                        encodeOffsets: [[115920, 33863]]
                    }
                }, {
                    type: "Feature",
                    id: "4116",
                    properties: {name: "周口市", cp: [114.873, 33.6951], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lnb@xlJ@UnLlKXUlJl_KnV@xVL@bkbVVUè@Wb@UbmkVmbXVJnUl@a°@@bLVblXxInmnLVwanJÆw²IlmnXVl°VVbÈaVb@lkn@VWnLlUVmÞUUklkVkUaVaVaUwK@kkaVWmw_l@nUVVb@baV@VV@zXJl@@kl@lk°WVnÆbnbUVJI@VKVm@kK@_kK@a@aU@@wW@@k@aUW@IUWVUnLlUlVXKVwmk@W@VWa¥@k@lnUIÇKUaU@UUVmIUVUk¥Vma@¯k@Wanwm@@n@@m@UIVkUVamUXWaVU_@mUVUImW@aUIĉK@VmIb@lU@@nJkU@KIUmmLk@UVm@Um@@LkbUmJXlbV@xUb@@bkK@LWx@bUn@xmbÅW@nWLUKUbUVKU@LUK¯mU@VV@xULUVL@bU`WUz¯aUamKUa@@xkX@x"],
                        encodeOffsets: [[116832, 34527]]
                    }
                }, {
                    type: "Feature",
                    id: "4114",
                    properties: {name: "商丘市", cp: [115.741, 34.2828], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XVl@lLÈ@VkV@V»UanWX@VaÆÇô@ÈaVX@xVJXUÞUaVLĸbXKlV@m°Vn_nyXX»mUk¥lK@a_@yInaVKVa°_@WXI@@KVnIlbnaV@l@a@_w@lwUKmXa@UV@»Vw@kUKVUUm@w±VUXUKUwmJUU@km@@±mXkmUI@mmKUwkbWakLWaUIkJmX@l@@VUX@JWbX@VbULWblUVULknlV@bVJkmb¯KknWmk@@nmVkx@VmU¯KUnUL@JUIVmaÅaUm¯Xlkk@@lk@WI@yUUU@b@aUaUmVk@`nxUXlb@lLVxUbUbVbUllkVlÝVUnkVmKUXm@kl@nUx@xnxn@`VX@V²x@V@b@Wl@zU`VUVVbL@VbW@bkXllkLWV@V@VVÈwlV@@XK²LlbWnnÆL@VnJWn"],
                        encodeOffsets: [[118024, 35680]]
                    }
                }, {
                    type: "Feature",
                    id: "4112",
                    properties: {name: "三门峡市", cp: [110.8301, 34.3158], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WKUmUI°U@@UmU@KnK@IaU@makKUa@_KnmVUL@a@IXm@KWkkKVkUU@aUW@UUIVaymwkbU@xLVUWWkk@WUkJk_WWk@WIUKÝk@WKULka@mwĉ¥mXUK@@bm@kVWwkU@mUUlIWm@@Uk@@KkVmn@lwn@@Ul@XmUXUmVÑkmkVKUaVamaUXn@ykLUK@WwKmKnUm@UmaU@mUk@kL@lxċxUnkVmnXxWb@`kzWJ@VLmVUnlmUL@lW@Ub@VXUb`VLUbUJ@nmnUlUUm@@bUJlnUU@lxkb@@XJUn@kb¯VVVmlXXlJlzn@VlkVW@bkKbmkUbVblXVxKÈnwÞlĊKlVnKlwX@lL@xlUnVn@l@lmX@ÆÈb°¼ÈwVJlx_°xalUÈxlUnbVxnL@lllbmn@nb@@VL@V@@VLJnIVVlKnV_"],
                        encodeOffsets: [[114661, 35911]]
                    }
                }, {
                    type: "Feature",
                    id: "4107",
                    properties: {name: "新乡市", cp: [114.2029, 35.3595], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XVlLK°bUblbUbl@nX@WXVVKVk@@mb@UbnW`kLLV@VVLnKlVXIlV@@a@l£nWlkVa@°bnUlLVlnabnUVUXKlU@@lk@aI°y@ôkUU@wmônkWakmlUkVmkUlmUUm@nkUKWanamULXW@UVnUln`lblL°KXV@ĠJ@L°JUVwanK@UUImmkK@¯±Um@IVmUmmÅnWaUK¯aUkw@W±kVxUVwnÅJUIWaÝJóIbm`ÝbÅImJUI¯¥¯@mU¯UJmnUVóUkl±V@zXlbWVXL@bmmº@@XmJUXU°llk@nWJk@U@¦U`m¯Wx"],
                        encodeOffsets: [[116100, 36349]]
                    }
                }, {
                    type: "Feature",
                    id: "4104",
                    properties: {name: "平顶山市", cp: [112.9724, 33.739], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l¤UbVL@VLVb²VlKlaX@lb@lxUVULbln²VJUbW@@Lb@`nL@nVV@LVUbUVmkVllXbl@Xn°VK@_°`²IVVV@VUVJnInaWK@U@KLÆ@nmlXXWVUUw@klKVa@knyVkVanIJXUl@XbVUl@@aa@mXkbnK@UlK@UUUVaXaWmkUm¥nWmXaWakl@VmÞbKVL@aVI@mUwVm@KÅméULKVaUk@kUK@UWXI@VlKXU@VVnInVV@VLlK@UUkKU_@WWUwU@kln@@Imb@@mnUKÛ@mKUkWVXxmbVLXVVU²VV@xÅnmWmLU@kbmJ@b¯IUbJUUxVl@z@bU`W@Ub¯nUJUb@WLUKULkU@aWK@abmL@lmUk@@bULWJUI°@¯aWLk@mbUb¯b"],
                        encodeOffsets: [[114942, 34527]]
                    }
                }, {
                    type: "Feature",
                    id: "4101",
                    properties: {name: "郑州市", cp: [113.4668, 34.6234], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@nWVUKÅ@WnVnIV@kÆwV@nn@lxÞlnôJzXJl@nalUČVll@²UlkôVVUnmI°VnV°@°¦VJnIÆJÞan_VmU@ama@kU¥kaUklw@UIV¥kVUI@mmUÅmUlwVU@amUJWbUakVVé¯Im`k@wVWmLkU¯XkWmLmx@UUbm@@xJ@LbW@UUVWUkVK@kaIUamKUkkmmLUkJUVWXkWmnÅ@KL@@VXLmbmJUIUVU@ULWVkK@nWVXL@lVn@¤bkôKXKlL@¦²V@JL±@@VU@WV@X@`XXmb@blan@Jb@V"],
                        encodeOffsets: [[115617, 35584]]
                    }
                }, {
                    type: "Feature",
                    id: "4105",
                    properties: {name: "安阳市", cp: [114.5325, 36.0022], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°kVaV¥kVmUkWkWVkVKUwkkmKUU@awWWXWakKWkXmlaIVmX¥U@a@WnK@kVI¯@KğI@WU¯LkKak_kmmVU@VWXKnVmbXbVLmln@VVknlVUnVlklnXbmlmlXblnÈlWbn@@nK@VLbVV°VVzln@VxIbU@WLUa¯VUkWõ@¯kkmxk¼lXUlVbVLnlULmU@lLkVUlX@xW@¯mU@UmIUWL@aXakU¯anWk°@kkKmmUIWaambUkkKmV¯a@UblkmXk¤@@b@UbULWVnb@lUVVnmnVVUJ@bWXX@WJkL@blVU°UV@XlWnXUbW@UVkVVWbnLUJWLUK@Lnn@blVUnUblxVUVJXUa@UbLnUVV@mVIVVn@UbV@XbmbUV_lVXUWanJVI@WkI@WVIVU°WXXl@la@mX@lLXlkVbmXylIXJV@@kKla²UVaIVyÞb°LlVna@UÆKnLVbK@anwU"],
                        encodeOffsets: [[117676, 36917]]
                    }
                }, {
                    type: "Feature",
                    id: "4102",
                    properties: {name: "开封市", cp: [114.5764, 34.6124], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lUVbXaInV@bUVxknVVÆnn@VJlUU¦VJ@kxVllb¦lV@nb@bVUnaôJÞIXbVJÆImxUVwU²l@XxVl°bVLXb`XklUnmVblL@lmx°LVK@UXIVaWlL@Uk°KkVaVUXmmI@UÅKmmXka±KL@W@kUÇxUU@@UXUlKkklW@aXa@UKUaVUUV_@yXk@@a@U±w@UUW@_mmw@wVwmUaÇbUa¯UUkmWkn±JÅxmIbUxmKmnJWwkUaK@a¯@bk@mVUIWLmwm@Ua@WJUb@LUl@UUmLUbWJ@VL@VmXWWzUJUê"],
                        encodeOffsets: [[116641, 35280]]
                    }
                }, {
                    type: "Feature",
                    id: "4108",
                    properties: {name: "焦作市", cp: [112.8406, 35.1508], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@V@VL@x@bXWV@XklUWX@J@nI@KlLKUVaV@JlL@KUk@KÞLl²_@nWlLUVV@nLWVUJVn@anV@awÞUVLVxb@lW@lbXnVn@@¼L°mKVn@bnl@nVK@blbLWU@VWLXV@nlKn@lVVbXw°nV_@¥Vl@XI@mlkkV¯VWnI@W@n¹n@aWKXUaWk@yk@kċUkVmbk@WIyóImÝkkwm@mU@xÅlU@mJXak@x¯V@¼¯VmUmmIkVWK@UXIl@UWVUU@mVUI¯b¯@lmKzWKUanJ@nlbÝ@@b"],
                        encodeOffsets: [[114728, 35888]]
                    }
                }, {
                    type: "Feature",
                    id: "4110",
                    properties: {name: "许昌市", cp: [113.6975, 34.0466], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lIVnKlnVlnLVbJlb@ULVlUXVVX@a@KI@wn@aVV@nwnKlXW°lVnKUXx@ln_°JVIXyXnW@UK@UXIVanKVV@Vk@KVaXI@Vbn@nxKnaUlnVa@Xa@VçUUla@aUK@wmULk`kIWVkLmK@V@XUln@JXV@nmbUóImUa±@@ÑóVUUk@UlKVU@akWVUUlUUaUK@UUKWbUkÅJ@XWa@XbmJ@nUJ@bUKLÝaUnk@lXbWbXnmn¦lVXnWbUbVV@VkL@VmLaWl@nb@bk@UVWak@WVImJUbUlmz@lUbkL@lVx"],
                        encodeOffsets: [[115797, 35089]]
                    }
                }, {
                    type: "Feature",
                    id: "4109",
                    properties: {name: "濮阳市", cp: [115.1917, 35.799], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lLXbWXXx@bVVnLllVxULUlXXlVlUnlU¦Ub¯lnK@VbVb@XbVLKVxVVnIlaba¥lU@wnalLnVVlVLXnlWVXn@@lVI@WnU@mÅW¥aW_k@WwXy@km@wUm¦lUxVLV@UwJ°x@VX@Vb@`VX@VX@llIVbnJlIbVlJ@mÑ¯Lóa@KUakX@UK@wU@lWUUÝ¯ImW¯aLUKU@k»k@mwa@UnKWI@UU@akVWKk@a±bóUWKXUmkKUmLbUx@lmLX@@bVW¦UnJkbWnXl"],
                        encodeOffsets: [[117642, 36501]]
                    }
                }, {
                    type: "Feature",
                    id: "4111",
                    properties: {name: "漯河市", cp: [113.8733, 33.6951], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@LUnVxnIWa@Xb@WÆIVlXaVL@VVLVbkVVUVlX@bUVkLVl@VVôU@Ò²@VbnôJVan@mWU@ImVk@WkI@wmak@wlW@w@VbnLVb°bVyXV_@aUKVVK@wUU@aK@kmbXVmJUX`knnK@aU@mwakb±@¯UUÝKUUU@WU@VkLUKU@mUmJUU@WVkL@UWJX@VVL@lVlUbLVKnêÆ"],
                        encodeOffsets: [[116348, 34431]]
                    }
                }, {
                    type: "Feature",
                    id: "4106",
                    properties: {name: "鹤壁市", cp: [114.3787, 35.744], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ón@xVVól@¯zJ@bkl@@kVWLUVmVXbVJnnlLl¯@Xlm°bVlWb@bKVXnJ@VV°nX@@wWVklUK@knVVKmkUKUaVkWkl»nwl°lö@lXV°UVbXKV@aJw@UmkUy¯UUUaK@UL@mm@XaÇkkmWank"],
                        encodeOffsets: [[117158, 36338]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/hu_bei_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "4228",
                    properties: {name: "恩施土家族苗族自治州", cp: [109.5007, 30.2563], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VKbX@lbUVnL°@VlVnUl@VUX@aVmaXlaUUU@wmaVUn@Vnmmk@mU@knaaU¥VamX_@WUmW@_kVaVKnLl@VVal@k¥@kUW@kUKVUlUVÑW@kÇaU»ValmkUVUVak@aV¯_@WUkmVUlU@aalI@akkVWUaWXUWwWVbÆ@lalIVK@Um@UUW@al²a¯UağÇm@bkk@w@@WaULmxIUb¯@U`UXJmL¯aKXWUL@aknmK@aWUXaWm@I@UÅmVU@aUV@bVI@WkUbXkm@VakwUKULWKXmJ@XUK@mL@KUwVaUI@KU@mmnmXka@»V@@UUaw¯yVk@UUVmmkÛÈU@mWUnmxmlUbV¦UlbWVUL@UUIUmÇKVVbUVVxknLUxV`VX@kJVVUXWaUVVlUnmKUbkI@WULmK@L@LVlLnmUIWV@akn`VXUJIVlUVVbUX@¤mbnLmm@UXk@mm@Uka¥@kV@@KkU@aUKWbkLWVkIVk@UbVlmX@bU@@mmL@bn`@Ln@llVLVk@XVVU@`VXU¼k`VULka@VllVIn¤VU@@blÜbkx@bkLkKn@bn@@b@JUnV`UnVbVKlVXUlbn@°Vx@@bnVbUllVn@VVK@UnW@UVUlnkVÈÞxVbVVIxVaÆ@@aka@UVaU@@ak@Wl@nbVIÆ@Jk@L@VlXnlla@VJnw@UmwXU@aVK°ÒnllnLlbxnKVaV@l¦²nVl@llLx@XVVĶ@nax@U@alXUVaLÈþV°XxWXkK@mLnlUb@bxnLVlVVkb@UJ@xWXX"],
                        encodeOffsets: [[112816, 32052]]
                    }
                }, {
                    type: "Feature",
                    id: "4203",
                    properties: {name: "十堰市", cp: [110.5115, 32.3877], childNum: 9},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@@a@w@kV@nbVK@nUla@laÅl@nlVakwWX@WkLaVmwV@anK@UlIXmWkk@@mmLkWlwk@U_mKXwWK@U¯K@UU@VUakmkIyUUVUmanU@mlwk@_mWXaUWU@Ç@U@aUaVwUKUIVkK@UWIXmaV@k@Vm@UnwlUamk@V@ULUamxUJkU@I`WkkK¯XWak@@W@IUVLWJkXkaÇVUK@kUmbmUUUKbkKWUkI@kKÝ@@aUm»nI@mU@UnWV_@aUmWbkLUl¯b@akkk@WkkJm_k@UV±@J@bnU@@WÝIUJVbXL@nlJkx@Wn@VkJmbLmU`VbUL@xVn@XV@mVVnnJVbUx@VnVUbVVx@nbUK@b@bJm²VUlbXzVJVJVbn@@Xmb@V@bVJÈ@Vnkn@°aVVV@XKnalLVmUnnVKVlnLWlXXKlk°XWkLUVVV@nU@ml¯nmbk@W`Å@mbLWm¯UxnêVèk@mbVnUK@kKmXk@@JUIlÛLllnbVnlJ@LULnlÆaVLnV@nkVJ@lkô@²bÆm°wLWV@VXKVXI@W°ÆVKb°UJVIVV¦XKVL@lInaVÝnUl@@bX@nmVL@lVLlVLVUnbVW@xXnbU°¤V@a@kWKUUn@VlnL@UV@Ü»@mX@V_akaÞ@VK¯@kkW"], ["@@mUkUUm@nllVKXXVK"]],
                        encodeOffsets: [[[113918, 33739]], [[113817, 32811]]]
                    }
                }, {
                    type: "Feature",
                    id: "4205",
                    properties: {name: "宜昌市", cp: [111.1707, 30.7617], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°`U@blUbUVlVknUbV¼Èb@lXUÒkVUVVL@lVX@ll¦k@UbU@kmKULUbl@`nXV@XW`nUbV¦bmb@lV@nnlmnUm@UVnb@xVVVkbWnbVnVa@an@UaVUJXnWlXX@l¦@lKÆXbXV@VV@°¯°xXxXV@nV°UVWU_VWXkmaVnWVkn@lln@lb@UVLXWlnX@aXUmaVK@UXUU@WVIWXXVU@¥VK@UÞa²LlV@kV@UanKma@UVUnK@UVLXyVLknJ@UV@@UXKWUXaV@Vb@mVLnKWm@aUUm@@UkK@UlaLXKWaXI@alKlmUk@wVKXL@m@WWn@UVa@K@wna@aW_XWWkXbVW@k@U¯WWwka@UUaVIVkU@m±@U@@wVKka_@VV@XUVwU¥yUkm@V±ÈUKk»ÇLmmLk@ó£kmWwm@UIkWKXwWU@kLwkbmabkK@VLkmWIUKkUUÇIǫJXÅJULVÇLUV@UK@kI@WVI@UaWmXVVUL`±kÅLmKkkÅ@UaXXxWVXVbUXll@bkJb@bkVUVlnV@X"],
                        encodeOffsets: [[112906, 30961]]
                    }
                }, {
                    type: "Feature",
                    id: "4206",
                    properties: {name: "襄樊市", cp: [111.9397, 31.9263], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@Xl@Xb°WlLXl_@JlVVInwVbVK@@UnlVbkmx@VUnl@U@nbWXJ@VlLUVJVLUxVb@b@VÈ@XVVWbnX@`lkx@nmVnbUVVVzlJnlVbUV@@V°L@VXLWxnLV`l@kxlXnK@nl@XlWn`Xnl@@UVa@VÈK£VLVanW°U@UVU@`VInmV@nV@Xa@aVW@UalkXKblIyÆXnlJXbl@@VV@nklU@`nVKLVKVb@VU@UÈKUVKIlUX@V`lIVbn@nblVVmV@@XXJUVV@knKVn@`@XVnKwlLVmUUU@U@aXL@WlU@UUW@UmU@KkLWaXkWmXUWm@U@nk@UmK@U@UaUVUUKV_@al@namWUI@KUK@aV@WUIb¥ULUJkImK@U@KV@U@a@UkU@K@wVaUwlU@mUULmKUkV@@anIWmUK@I¯mKkl@LUb±lUakLmk@WwUKÝVUIm`¯n@Uk@makJU_@Jma¯ImwUVkKbaUÅ@wWaU@VU@mXIVmmUkJkwm@mIlUKWzUK@VmLUV@VnbmLVbU@@lkU±KbÝV@UL@¦VWUWXUJ@XVWV@VULnbWVbW@kmWXUK@Vkam@kkm@UlmXUnbWlUXV`UX¯VmUU@Ul@Lll@nnJ@LnWmbm@b`", "@@kUUm@nllVKXXVKmU"],
                        encodeOffsets: [[113423, 32597], [113794, 32800]]
                    }
                }, {
                    type: "Feature",
                    id: "4211",
                    properties: {name: "黄冈市", cp: [115.2686, 30.6628], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VVUnWVXnVJ@U@V@VXV@@IVJUn@V@L@KlIVlVanLVbnVlIn@@a@Kl@@IJlI@aXU@KlKkVblJXUVlU@VbVkVKXn@VlxVa²I@VlVUxln@bJXklaVWnLmÅ@y@k@aI@W@aXIlVVaV@nnlKnLVW@IUa@a@KUVVlI@wXKVV@IUla@lUXwWnnalLlxXLll°@XwVKVaXIlnb@nln@Va@U@k°UmÆUVaXIJV¯ÇUmmkU@WaKmakVm@U@aVKkkmKkVmIkÇ°£@aUUVaVVnKlkXmk@lUVaX@@Um@UmlUXVUVU@wK²¥Ua@I@UVl@UV±UIUÇ°»VkUmVI@a@Umĉ¯V±bŹĖğaÇL¯lmkX@óĀ@mÝêb±WkLn@xXx@@b@V@LW@UblţX`kxWnXô¯¦ÆV@L@JVLxkK@V@bkz°llXz@JUlVla@XUVbVKXnW`XXV@laVV@VX@V¯xx@xULVbUJ@n@LU@VmmakbUK@bIWWUUVkUmkLm@VJkb@nUJ@`V@kXaUaVmmLkUmJ@Uk@U±lkzmJUb@bVUxVXU¤L@JX@VlL@JkLUVU@mnUl¦@V"],
                        encodeOffsets: [[117181, 32063]]
                    }
                }, {
                    type: "Feature",
                    id: "4210",
                    properties: {name: "荆州市", cp: [113.291, 30.0092], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÈJVlVVLXJlnK@UlLanblaxlK@XVWxXLlJ@VnXxlnô¤l@nKnÈKl¼VL²ÇUn@VlzV¦UxWVU@@U`lbUL@xV@²@@nlVUUJVb@VlbXx°XVWX_VKUwVKVa@UVKUUVk@KnblaUU@wnWl@UX@lÆ@@aIVmUkxVJUbÜ@Uk@WWnk@VVm@I@m@Un@mXUlVlUnJ@knJVU°@@aÆLX@llL@¦nJV@XblLVa²U@UlW@VX@`@LV@@bXJlIXml_lJU°bKÆLnVVl@öVmXaVIĢllUlVnLVlX@@bannxVLbn@°ÆXmmkĉ¯w±Uċ@KÝÅƧŃÝçUw¯m¯k@WkV@¯UIUJW¼kbUwk@W`@¦Uônb@VÆlÈ@VU@£UWWnUÆUnmJkUÇ£VWUI@aUU@WkI@Ua@JW@k£kaWVUKmnkKbkkVWbVmUUmwU@kk@UakUUa@V@nlx@lUb±lUbnnWLUyk@UamUK@mlk@Wb@VXL@x@xWI@a¯¯V@bVn@LkKmL@`XmKmVU@@bkL@V±bk@UaaLKUVIWXamVVbUK@b@Lm@UWkxULWVUnm@UlUX"],
                        encodeOffsets: [[113918, 30764]]
                    }
                }, {
                    type: "Feature",
                    id: "4208",
                    properties: {name: "荆门市", cp: [112.6758, 30.9979], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n@lxlInVUnWJ@nUVV@Xb@xVÆbalLVUnx°JnbI@V`lInbl@@V°mn_VJÞUVLXx@nllKVb²kVa@KlknL°@JVLXnmJ@bU@VlnLVKV@nX@lUKVaXal@VKn@¥°L@UnwbnaV@KV@VUX@lVXI@KW@@IXWV@laVLKlaXUVVnkVWV@lwXblIXWVkVmaU£VaUmVIkU@y@WakKUamU@UUK@kmK@w@@mK@LV¯U@WwkmULamVVUU@IbUKUakmm@UakLmxU@UÒWlULţÿmwkIUm@akÈblW@UVUUk@JW@XkWWUkUKUIlw@aUWknWUUmnIWaUwVaÛaVUIwVlUnJ@bÅ@@kVWk@mX@xVVkbma@LUlVVUL@VUbULVxULW`UX@V@lUXWaXlWXX`@bmb@x@LUb@VmXX@@nWKUL@xVlknkL@bWJXbWLKkb@VlL@Vn@VV@bnXmLUK@nUaU@WbXVWL@VU@@V"],
                        encodeOffsets: [[114548, 31984]]
                    }
                }, {
                    type: "Feature",
                    id: "4212",
                    properties: {name: "咸宁市", cp: [114.2578, 29.6631], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÞÆLČ@V²°xĊnlWnÅ¯m@aK@°nJwnVIUaÆJÅ@wwVXW@aV_l@²V°lĊwlaXLwlUkalVVaX@lVXI@aUXJ@U°UU¥VIVKVklanLVa@VÈIVV@nk@aVa@mV_@aK@klKUa@UnKWk@@lU@@UW@@nUWUwmaVIXlV@mLXblJ@kV@kk@KU@WkUWVÅwkLmW@UmL@lULKULak@maUUÝwUJIbKUU@aWK@kUWVkUwVw@mÝ@I@wkW@aww@LU¥kJ@nVJIkVVnkVUkyUIUl@xWUkaW@@°kzWxkLUWmzk@@bVVVb@@XlV@Vl@bVbUn`Wn@WbVVI@`LVbXLV`mnU@@lL@LUak@Lk@WbUJn¦@lVb@xVb@n"],
                        encodeOffsets: [[116303, 30567]]
                    }
                }, {
                    type: "Feature",
                    id: "4213",
                    properties: {name: "随州市", cp: [113.4338, 31.8768], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@n`lwkUmUVWX@lk@VanUĠ¼V@@mX@@nVVVXLmJVLnK@bV@@J@VUn@VaVUUUVWVLV@@Kk_@almaVkUU@WVVUVLXmmk@wUaUKUV@°@kmaUaÈmWmUVklaX@lVnxl@@UnaUk@VUVwVKn@VVn@VbVJUknUmmVmk_VwKUUmVak¥@UVKVIkW@UmIVWkIVkmmLkwmVU@LUU@VVXL@JmLUbmK@UUKmkKUUmVUaUnÇlk¯mJUnmLUaUJUaWL@UkJU@aklkU@¯@KWLUmUUWVkbLUKkbU@WX@JX@@LWJkUW@UVU@@LUmbamx@V¯K@¦mULk@WbUbLkVW@kVVxUb@x@LlV@V@b@VU@L@VLnlJVIVK¦aVJ@XU@bLV@LVJnXmbk@@bU`VLUVVb@V@VnL@Vml@@VXnWVXnWlXblK@LnV@VVX@VkV@XWK@bVV@VV"],
                        encodeOffsets: [[115830, 33154]]
                    }
                }, {
                    type: "Feature",
                    id: "4209",
                    properties: {name: "孝感市", cp: [113.9502, 31.1188], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VnXK@L@°lVlkb@VlI@VXKVbVIVbnKVmnI°lÈkVmVbnUVVlLnVL@VnLVanK@IWKUUV@V@KVnUlxnKlnUlJUXnJ@VlXUJUL@Vl¦UbnVVLUxl`UnnnmVVlnVKbmVX@a°Ý°LaXJV@VUnKVXVK@LnKlLUbVVX@VwVJVn@@UU¥V@@UUK@maUVUkkJ@L@K@UmVUI@JU@W@U@UV@UIWmXUVmUUÇ@UVmIlmnmakK@akaW@UwVUkKVnUlKVwkVU_WKUkVW@UXaWkUa@w@VU@XaW±@IkbKb¯L@WXkW@UakL@UV@UmVUmL@UXWVL@aUVUUUVU@yUUIUa@wUKWVU@kWk¯UkwVKLUxK@nVxUlUUWVUmw@wUUyXWlX¦WbUV@U@blbUVVbXXl@lVL@bk@lxkVVnVx¦`UnkL@V@L@@@xnL@lVL@VnVVblLXb@@zlVUJVnUbV¤bUnUlWXkJWakxU@UXml"],
                        encodeOffsets: [[116033, 32091]]
                    }
                }, {
                    type: "Feature",
                    id: "4201",
                    properties: {name: "武汉市", cp: [114.3896, 30.6628], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nbnmknJVUÈ@@U¥VknmV@VUlK@IkK@UW@IKV£UWVwU@aVanIly²kVl@@VnIlVnKUnVbblWU@@_VI@mlaUIn@lKVnUlVVXXJ@aVLlanbUnV@@K@mVIUaVK@ww°w@UW@UUUkbU@WWX_WmULaVU@WkbkUV@IWyk¯kly@a@UlLwUK@I@KÅUW@Å±Um@wl¥ka@@_Vw@ķa@akw@kKW£XVUVwVwUaU@VUUxWKkbĉx¯k±Uk@U`@bWXUx@xÆÅIVbUJmxIm¯@UmxnUVVbnJV@L@@kV@bVn@UVULlx°VXllV@XUVL@xVbJVV@zUVVVUVV@bUKWX@VnKUVVnU@@VlKVb@lXW@X°KaLla@JX²Wb@UV@@xVbXlWb@VUXVlXLV`UlUxkLmVUlLUVVxX@lb@blL"],
                        encodeOffsets: [[117e3, 32097]]
                    }
                }, {
                    type: "Feature",
                    id: "4202",
                    properties: {name: "黄石市", cp: [115.0159, 29.9213], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VUVV@VbUxaWUblUVmnKlX@bXJVIlVUxVVVIUzlx¯@VbnL@xx@UVaXKb@XkWU_Vm²klWXVKl@nXV@@wmlK²XaÞén@ôÿ@lWn°kUKmmUÑUmm@wkImWU@UakL@bVLUVċ@bUK@alIXKWK@nXnKmkUVw@¯b@LlUL±Wn@KULUaW@kL@lL@bU`@nUb@bmlU@UÇJ@UUbmKkblUULUJV¦¯V@VWIV@bWJkUW@UbkUlbkV"],
                        encodeOffsets: [[117282, 30685]]
                    }
                }, {
                    type: "Feature",
                    id: "429021",
                    properties: {name: "神农架林区", cp: [110.4565, 31.5802], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n`lIXll@ll@b°aVklKXaVn@bU`mX@VV@nmJn¼V@bÞ@lL@lJXVlLaVLVnVnalV@VLÈUlblWXIKVU@J_@annaXm@KmI@mkk@KVkWWw¯w¯°@UUU@WaÅWkL@¥@kWWXkWmIUVVbm@@bUbmUUbW@UVk@mVkU@U¯mKVUkaW@aULÆVbb@VÅ@Un@VLWl¯L"],
                        encodeOffsets: [[112624, 32266]]
                    }
                }, {
                    type: "Feature",
                    id: "429006",
                    properties: {name: "天门市", cp: [113.0273, 30.6409], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@K@UlKVm_¥UwUmlUkwl@@aUK@kkWWUaVUka@aV@VUXaW¥Xk@WWIklm@ÅxmIVÝUkxka@bWJaUL@W@l¯UULUbkVUa¯bm¤UnÇUkmUUxb@VkXÇal@bVnlJnxŤĀVKXkVÑV@nwlKVbn@nlVbVLaJ@VVUnUbVKlnXxV@°U@KnL"],
                        encodeOffsets: [[116056, 31636]]
                    }
                }, {
                    type: "Feature",
                    id: "429004",
                    properties: {name: "仙桃市", cp: [113.3789, 30.3003], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VK°VkX@@VKbXI@alblwÞVUnJÆwn@lkXJ@XWVzV@xnxVXUVVVkUw@mLVwKVU@Um@alU@@@KUmIUaVUmnwmwmb@aW@UkmKkUkVġkUJWbnUõ@UkmUÅKL¯aVkIk`WnkJ@xVLUVVbUbk@WlXbmVxnxUblbUV@@VUV@nVL"],
                        encodeOffsets: [[115662, 31259]]
                    }
                }, {
                    type: "Feature",
                    id: "429005",
                    properties: {name: "潜江市", cp: [112.7637, 30.3607], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UbVxbXmJVnXVlmVX@bkxVJVLVlXXWlX@@IVlVUaVwVlnÈVVmn£°aVbUlaVUK@mVU@U@VUkaVamwUwnWaXkl@VaUaVUUK@wWI@aU@@K@_UW@kX@V±VUbkKWaU@mI@¥kKkW@ÅK@b¯@UVmI@lmIkVkUWVnm@@V@n@JUnU@mlXXl@@V"],
                        encodeOffsets: [[115234, 31118]]
                    }
                }, {
                    type: "Feature",
                    id: "4207",
                    properties: {name: "鄂州市", cp: [114.7302, 30.4102], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°¥WóXmlw_ŤWkVaX@@K@U@a@WwU@mWk@ULWkX±lUnV`XWl@aWLUb@Vw@wmKUa@°kwyVUJUUVwkUUJWI@akWmLUnkVaXVbUxUVWX¤lL@lx@bb@ĸUx@`@lbk¦@xn²VÆX@"],
                        encodeOffsets: [[117541, 31349]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/hu_nan_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "4312",
                    properties: {name: "怀化市", cp: [109.9512, 27.4438], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@n@b@XnJ@k°x@aVUnlUXnV@@VnJWUJVnIVV°UbVVVL@²LUVa°V@aV@nmUXblLXWVXVmVLVK@an_`@X@l°VlXXW`nX@Jmn@b@nV@Lm`bUbn@VUVl@nIVbUlV@LkJUnVV@xVblVUbU@zUKU@mx@xUnn@@WV@lbUb@nVWXXV@VIV@VUnJ@VUz@JWbXllI@VXVVL@Vn@Wlb@lXVlLaV@VJ@XX`kVwVl@bkbUlVXIlnLVamVwV@@nV@XaVJVbX@lwV@n@nV@VWnIVVUÆ@Xxa@IUUKmk@mVIXmWUVJnUVU@anaVwkU@UXa@W@m_@a¯@@K@UVbnK@blIlbXa@WW_n@VU@¯bmyUkUJÇÅ@WU@kWKÅwnm°KVkmankVWnXVWV@UwXkV@mUlLnaVaX@VUn@VnVK@xlnXWU@a@@klakVwmUaV@wmIÛ`m@mVUXmlIXVI@K@aU@UaV_UK@wkUmmUKWXmVkUL@mU_nK@aVU@Ukak»@U@ymU¯UUVKkam@nka@mwkLWb¯mka_VaVKUIUw@kKmU@WK@UnmaULkU@wUalWV¹U@@WUI@WU@_@W@U@mU@WbbUK@Um@@UmbUwWWkk@WUa@anUUwlWUwUU@wlJVUnnV@@mnI@mK@U@wa@wUm@_mVUUaVUk_kċUkVWL@mlU@kn¥W@UwUWV@VÝU@lXLWVUbVLXlVIlknmU@VUJk@@@kVmwmVkxU@@XmVUb@xnKVLl@VxUxkIU`@bWVXX@JWL@bkb¤@bmUUU¯Kkmb@VVUVVn@@Vb@`lnxmblUnbk@xUmV@bmWbUV@VJIl@nVUbK@nn@VbnJVIlJVkXJ@X@lmx@bnnWVXJWXU@UlU@mk@@llb°xIUbnJ@VWbXVmI@JVX@bk@bWL@JUXUK@U@U`n@@Xm@XVW@@nX@@`ImxU@@JUI@KLmK@UÅUUV@VW@¯kUU@UamVUUmJ@nxmLKkmJkwkKm_mKXU@aU@b@Wk@ma@zUJVUmbUlU@xnXlWlXXblK¤V@@nUVVLkVl@Xb@VVKnXKVx@znW@X@@lVK@X@JXbWbnn@JUamLVVXIVxnK@aWUX@x@VnI@WlI@anVIVxkl@lbXXxVVVJVInbV@@ln¦ml@XXVWbkJWb", "@@XLVKVXVKUa@UUUmV@l"],
                        encodeOffsets: [[112050, 28384], [112174, 27394]]
                    }
                }, {
                    type: "Feature",
                    id: "4311",
                    properties: {name: "永州市", cp: [111.709, 25.752], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lxUXVlXUVnlVĢJVbUXVJV@XUW¯VIUK@klW@Un@nl@V`XUVL@l@Vx@XXW`UnUbxUlVnUVlb@VnJUVVVInJlUVnwVklKnwLVJVV@nIV@nbVa@KVVVUUaKV_nVVJ@_VWnV@n¥lI@anl¥X_VKlwVlULUVVV@U@VXL@IUmn@VU@wmKXUWU@m²l@VIXWWkWUkWlkIVamUXamUnmWUU@@UnlK@XJl@kVUk@mWKXkl@@aVU@UVWUUVaIn`VUVLnw@U@K@U@w@UVmUU°K@UnV@bV@Xk@KVm@amkaU£VWUUmUUwm`UbULkaKXU@kVmU@aV_UWVIn@yXXK@klmVV_kWVUn@WUU@UmaU@wnwWanUmmXkam@UakLmK@bxUUUU@Km¥Va¯@kUaVUlmUU@mUUÇmUkUybbUaXUWWbÅLmL@VaL@WWXUKmmk@a@UUKXW¥kU@VUkxmVkUWbUJnVJ@nVJXzWxk@lVbUX@VVL@`mbUnUnVV¼k@Ulm@mwLb@lmLUK@UamWkK@£Ua@UkJkUmbVlkX@bWbUVnnUVl@bbVK@VX@lbV@nU¤x²Knblb@xVô@l@b@l@XWxnVl@VV@XLVlLUUXV`bXXmJU@@bm@UUkLW@UlUKWUUbwUmL@nklVVmVXXm@@bUKlÆnXkllVUVVL@nUbV@V@nnV@xUn¯U@JW@UX@xĉ@`m@@LV@b"],
                        encodeOffsets: [[113671, 26989]]
                    }
                }, {
                    type: "Feature",
                    id: "4305",
                    properties: {name: "邵阳市", cp: [110.9619, 26.8121], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XIlJIVVK@n@VVVKnLVwVmnLVK@U@wJ@wVIÆ°X@ÜÈUÈxll@kn@VwVaXJWXn@@WVL@UUKVKV_U@@aVKx@UaV@lk@XylbUaV_Vnal@WU@aI@aV@@aVUl@XmUXWaXml@@kk@ma@V_UnUVUUWJUa@kkaWLUmk@@LUVWUkJWkK@¼UnWJIkV@b@JUIm@UlVm@Uw@a@kWXWKUknW@WUU@kmxUkVmIUJUUVmI@UkaUVUmVkwVaVmX_WW@Uw@@kUKWVU_k@mm@@VkX@lVLUJX°WVU@UIVWUaIUġmkVUkWUVWkwWXk`mI@¥kUVUUn±@mXkWknVUVmmU@@XVUk`@Xk@¥¯»mbĉó@mkU@kUKmX@UnmL@lULkKUWUU@bUaUn@Vb@l¦Ub@l@UKmnKUnlUVVbUVn@`Vn@xb@x@VL@nmJ@nU@mmUVkI@xVVVxkXVxmV@bbXVl@XlXVxna@Vn@@VVLaXaV@n@@V@X`V@@XVJ@XV@UºkXVb@xlVVKnbm@VXLV@nlL@VxJVULUb`lb°nXalKnx@lbmn@lbULVV°nV@z@Vl¼lb@VUV@bmLV`@nKlVnUXWVLnnlV@xVLU`VbV@"],
                        encodeOffsets: [[113535, 28322]]
                    }
                }, {
                    type: "Feature",
                    id: "4310",
                    properties: {name: "郴州市", cp: [113.2361, 25.8673], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²zVaVlnVl@nVkJl_XJlIVmnL@mV@VXn@lV@XzV@lyV¯²U@UlJ@XVKnVVIXl@UVLV`@n@JI@mlIKVLnUlVUVVLXaKVLl@nb@WXV°KUnVVL@xVJL@b@LUVVVUVXbmbVbn@@lUbm@x@XVVV@@@bkImx@Vm@Xbb@l°XU¤aLmnL@bl@@VUX@VxnVanLnW¥XKVwnUWXmVIUWÆLVxLw@wVmlU@¥XWUkwlÇn_UwWV@VU°wnUy@aVkVlnL@lVnw@VlJ@bXx@bVKnb@U@WVUl@@Vnbl@XLlK@aVLVKnxÞn@aLlmUaVUm@ÅknUmaUKmVk@mkk@UlWUkVm@w@kUU@WU¯¥@wÇ@aVIlUV@kUWU@UUm»@k@mKVkUKUwaUaUa@kkUWJkImaU@UK@maUzk`@zy@XmJkL@UUJmUkV@z@kkVmK@¦UbWL@a@UbmKmwUKXkVUUkmVkw@UUKmL@WUIWaJW_k@@WmI@mk@WkWULUUVKUUVm@Ub@nUÇ@U@wV@Ua@aL@akl@kUJwó@@L@V@`@J@xnnmV@bkJmUó@nJWUUmU@UV@LkWlnnmVXbmxxV@nbVV@XVm@UVlXU`Ukn@lWLWzm@UJVXU`@bVUn@lWVLlbVKVan_VxnVVVUXV¤bnl@bUn@LWlU@@amU@V¯LVVUn@V@x@V@L@VmxUKUVm_JUbVV"],
                        encodeOffsets: [[114930, 26747]]
                    }
                }, {
                    type: "Feature",
                    id: "4307",
                    properties: {name: "常德市", cp: [111.4014, 29.2676], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lUmkUwUyV@VW@¯VaVmUU@KVUVUVLnaWnkUÓV_@mVU@Ýw@ka@kVmUmK@IkaUamKkXWaUW@WUk@@KVU@aU@L@J@XÇVUKVak_mWkLWakVUbmLUUmlUVKUU@kUWW@UImJ@xkLkKm@@X@óÝ@UUk@UKVULKXkWWbkaIUWU@mUk@WLaUJġ@@XÈÆVIlVnz°aV@Um@X`@XWbkakJ@amLaU@V@L°@@bn`@@XWb@VVlUxmb@bUVmVUIXVWnJU@nnlVLV@JbWzk`m@UVK²VxkLVl@Vn@V°xVKVkVVlUblx@bUÆ@@nVnUllkx@VW@@VkLWxUL@bÝ@kKkVõV@bkXVVUV@VkUkVLkVa@@¯xUxmX@JVb°WXkK@Vm@kVbbn¤xUXkJblxnXÆK²l_@Wnan@UL@bJnIlV@lU@@¯ô@lWȂIVKVmU@aXaV@lwVXn@@K@UVKUUnUbn@lWXlJnULKV@l@²a@UlK@aV@naVXWV_nKlL@KUm@a°U°@VXL@a@wWmXal@k@VLnV@@bl@VnX@mwVa²aVU@mk@"],
                        encodeOffsets: [[114976, 30201]]
                    }
                }, {
                    type: "Feature",
                    id: "4331",
                    properties: {name: "湘西土家族苗族自治州", cp: [109.7864, 28.6743], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@KL@wnK±nnm@WUkÜÈn@n»@mVamkmUl@VnmmU@wUan¯VKLnVWlInyWUI@WWk@KXUn@mnUmU@WmkV@kXaaVaUmIk@kaX@Um@UKWU@UkJWkXa@IVy@UmIUVU@UJU@WXWmU@VakaU@@Xm@Vm@wnwV@VLyV@VakUUa@wUUVmlI@KUVkUamJk@VU@UmVaan_@KmU@@anm@ImWX_WWUk¯@k@W_m`@bULUKUnUWWXkKWaVmnU@@b¯UUbV±K@UKUUVa¯UUmJUVIXmI@UU@WmVmkUV@b¯w@lmI@W@a@m¯LXbmJVLklWL@V@XXmbVVU@@VU²Ul@VlX@b`XxzUmkUVÒl@bXLWxXVl@VbkLma@nmVmULVbmVUb@lnzmbUÒVl@°nLVlJkn@bmJk_VmmkblxÈx@LUbxVb@Vn@JmLVU@nV@¦VbnJ@lVVbkxbm@UxVLV@n`UnVVVkl°zxVb@VU@@ÆlXnWm¦nbVK@XVVUVVl@XKUV@nVL@WnIWXLVKVLlxUbVKXVWbn@@UnKVLVbJU@aVU°b"],
                        encodeOffsets: [[112354, 30325]]
                    }
                }, {
                    type: "Feature",
                    id: "4304",
                    properties: {name: "衡阳市", cp: [112.4121, 26.7902], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lV@XV@mXVlXLWX@l@bVxn@UVkn@VJ@I@alUJXIVm@»LXllIXVVU@Kl@VnXKlb@lVbXIVVUmVVU`@nbl@@lXLVVVKVbnXWJ@VXbWxXbUlVK¦nLVVUVVbbK@ULnK@Un@VxlUV`UnnL@VVL@JV@VUnxnKVbV@@VIVUnJUVUl@nWXllIUaKVbÞLV¼²`V@VIUwlaVmXa@IWanK@U@mkVVUVaX@lnaVLÈ@¥@kkJUWJUaXkaUmwVXJ@_lWUU@¥n_KkamUK@amKnKbV£¯W@kaWan@@UnwlJ@a@@UUU@Wwn@Va@km@UanaWaUVUUVU@K@aKUI@wKUUVm¯LWUX@mak@UKLWbUKVUkUmVUKLkJ@nJ@I@mU_UK@VWkUJmUUL@WkI@V±VU°kzU@Wy@kUm@UWU@@nmKUnkJWIk`IUlmk@mUUkUb±yUX@VUV@bk@WlXL@nVlUlk@WI@kLm@VV@XVmnnVWbnVUblJXkVlXXlWXUJk@±@nXVWVnL@xUVm@Vn@JWK@UV@UUVUVKUkkxULW`k¦m@bkJm¦U@mUX@`UImUU`LVbUVUU@LUbmaU@mJU@UUIKmxkLUl"],
                        encodeOffsets: [[114222, 27484]]
                    }
                }, {
                    type: "Feature",
                    id: "4306",
                    properties: {name: "岳阳市", cp: [113.2361, 29.1357], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@wUklmUUmU@@UVm@wUaV_mmUKmwkIkJmUUnm@@UUbUKUmÛamm¯xVLkbÇÆUVUzkVUlUUKWLX¦W@VUUUaKUbmLKm@akU@amVaUUVIVWkk@wk@@xmLlmÅwmbVlXlÝIWVkK@kkVL@VWKU@Ublnam@b@bnW`@XUJk@UUWKk@UKnn@xmLUVm@kbVbVnV@Vb@KnVLWXÆVĢ¦VblnUJWz@ÆVóUVbkVaÅx@¦lVUbVVknWKk@wKVUÅl@zkb@`m_mJ@xXmbVb@llV@n@llbXLUXalUlalVnwnLVKlVbX@@IV@blJ@bVL@VVVUXÈ¤VnkVÑXmlbnVKkÑÅ@UmaVç@±XUlIxlV@VaX¯lUVVUVJnV@°°n°Vxĸł°¦b²¦lJ@U@aUK@kUm@_m±VIXal@Kl@bV@KK@km@UmUUaK@_UJaXU@Xm_VmUk@WUk@kU@a@m@UaUUU@al@nyXXWWwkly@¯n@@bnV@k@mVIVlUUmlUJUwIbXVaUal@Kb@VKVkXVl@VkUU@ylUVVaVL"],
                        encodeOffsets: [[116888, 29526]]
                    }
                }, {
                    type: "Feature",
                    id: "4309",
                    properties: {name: "益阳市", cp: [111.731, 28.3832], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÆxXL@lV@ĢVIbXKl@nVV@XVJlbXalXWLVKUVLl@VV@ôÞ@@Wn@lLlK@wnIVJX@VX@lVVULVnkVVnKValUXblKnXl`UbVLÈU@W@IKV@@bUV@L@lXV@VXXblWnLVblb@JnLVUn@llb@x@ÞUV@nU`VÔmlXmbUKUVUV@LVVUnUb@°UX@UVzVxnlVkVnlVnaW@wnIn`@_la@ykÆVULxl@XLlmUUVakU@¥ÆwblUUaôVU@ÅXyVImkUaġ¥ÅUWXKmU@La@UmUUUalan@VUnK@wmmL@VlXLVVl@VI@WX_m@a¯mKUkwW¥UK@_UWWLUVkUWL@WUIkVU@JwkLUUmJVI@WkXm@VmkKUIU@mmm_@VUV@kJċwUU@KUWkkW@IWW@km@klwkWVkkUV¯m@kWLU`mIkmkXm@@`@L@xUKWkU@VL@JUU@mbUKVa¯WVnL@`lXUVkU@xW@UbUWVU@UJ@lnU@mnÈmVa@bULwUb@@VkxmUUUVK@IUmk@akm@wmIkK@bVWXkm@wULUmm@UVW@UbmbkKVnU@WlxVU@UXmWUXmlnbUl¯Lmn"],
                        encodeOffsets: [[113378, 28981]]
                    }
                }, {
                    type: "Feature",
                    id: "4301",
                    properties: {name: "长沙市", cp: [113.0823, 28.2568], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lVUllXkx@lln@XX@JlXXlV@LVVČxlI@VU@Un`nnV@VJlLUnn@lW@XUJnIVVlKx@IVlUVJ@XXKlVVUXKVX@`VLX¦lxVnL°an@bkmVaV@XL@UKlU@llLXUÞJWkUknaÆxnknK@w@l@xllUXUJVVUbn@blV@bnLnKVaLVbVVUX@W¥XKVLVVklUVyUVÈÅlaUK°wnnÜbnVVLaVV@n@VmnVlIlJna@Valkn@na@amwm@UXwK@aUUVUUaVawWK@kU@UaW@kKUU@kW¯XWan@kmmÅ@@I@U@KmLkaVUKkLWVUk@UVmU@am@kkk¥UVUKmaUb@UbI@aKkkWm@W¯K¯b@VmaULVxUXlVk@UxVJVbUb@xUL@ULWWLĕmxVVL@VbKUwaÅ²WwX@@WUWLU@VbkV@aU@@VUnmJ@VUn@VLUK@UmUIk@UÇmU@@UW@J@LbUmVI@aUmW@@bkXUx@lmLUbm@UbkJ@V@XmlUbkKm@ma@kUaVU@aUK@mImJUIkVUVUakbWwka@UWKkLUamKUXm`Å_UULmaU@@lUV@X"],
                        encodeOffsets: [[114582, 28694]]
                    }
                }, {
                    type: "Feature",
                    id: "4302",
                    properties: {name: "株洲市", cp: [113.5327, 27.0319], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XUnwĖKXXVK@VK@wVaUaUIVwl@kUVWUwVKnb@U°a°LX@XnllL@bJVa@VanbVLUV@al@@UV¯ÅÇ@Ummkw@¯yVwnUVVVUkmWVnKVUa@WXkVKn@lUVUVVVXIlV°VnI@VlKnV@mwVm@LXKWkU¥wWw@k@mX@KX¯V@VUVa@VnKWkV@VUkm@aWa@wkUWwkmV£VÿXUVL@mVIXaò@nW@aU@@am@aUUUmXmWUk@nUW@_maVmwUkamaUL@awW@akI@UxUm@kmKUklU@bzVm¯xUVU@XVxm`kÈlxXVW@¦kVUn@xxKUwÅKVXUJWnXmVUxWL¦XmmKbmUUwW@UV@k@VLnlbLm`@¦VVkX@`WIUxVnlbWVbXIVlI@l¦Ç@UKmbkW@UbUVUl@n@VmLXb@JWbUnkbVxUJUxWXXlWL@V@V@XXJWxzUVVVVKnXW`@bkIUlnLVJUbUIWVXlWV@XklVbnn@xl"],
                        encodeOffsets: [[115774, 28587]]
                    }
                }, {
                    type: "Feature",
                    id: "4308",
                    properties: {name: "张家界市", cp: [110.5115, 29.328], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@InWVw°w@@blUKlUlVU@VUUUlW@aöUlUlLÞ@@aVKXwlK@UX@@UlwkVkUm@m@ÅV@akwVaUkUUlUL¯w@UUm@UkKlw±UULVn@l_XyWwÅ@VUUmJUXU@@mmU@kxW@UaUIWbU@@mU@UxnUbmKkWJkUVal@aUkUxlW_@WUIU@bkKWUJVnUbbWblU@nl@XnVmV@nmWV@LXl@XJXVmzkJUXmKULm°Vb@xnVmnUk@VnnlUb@nm¼m@ÛÇVl@Xmnm²mL@xK@LUl@nULÆx@V@VXVWbXXl@nLlm@bVKXWL°bnU@VaVU@mVwJnwVK°zn@VVba@Ċ¼"],
                        encodeOffsets: [[113288, 30471]]
                    }
                }, {
                    type: "Feature",
                    id: "4313",
                    properties: {name: "娄底市", cp: [111.6431, 27.7185], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lLnJ@xln@bnlV@JLVUVnVlw@U@VaxVK@abnUmÇnV@km@I@VUVVXVaX@@wlVVUkW@_mKXU°UbVLnaV@V@IUKV@XlVL@w@K@_n@lWlnnJV_XK@l°nU@WVU@kV@nbVKVl@nLlLXU@lmkw@nW@UKVa¯IVn@@aVUUKl@nXVKVn²aXblKnLlmVI@KUU@akLUaVaUXm@a@wVUVKnLnWlXln@@U@anUVm@UInm@IUK@UmKVmU_kVUwm@@VmLK@VLaUaVUUUmK¥ULkVWaXwWa@UXImWUaULUUWKk@WnXbWVWnk@UV@bU@@bJ@bV@XkmbUU`VbkaWz@klU@b@VwUL@bV@U`ULVL@VUK@Xm@XWWIUbUxm@@lkkÇwVÛÇW@¯ÅUJ@xIx@@VULmKUnUxmKULUUm@@ULUJkIWJ@b@LJUWkJWnUV@nnÜ_nJxU@VbnUxlkb@l@"],
                        encodeOffsets: [[113682, 28699]]
                    }
                }, {
                    type: "Feature",
                    id: "4303",
                    properties: {name: "湘潭市", cp: [112.5439, 27.7075], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Æ`n_VWnLVblKXL@VlbXxlaVbUVlUVJnInJ@VL@bUVVb@lnbn@lLVank@W@UlIVan@VanK@kVwlW@aX@Vn@bUJVna@KIX@@VV@nVÈl@VJn@VVLK@UVm@UnIVm@UV@@blUUaV@XKV@XW@XxÆ±bVxLUa@UKWk@wmmUalk@WXUWkXUVJVaUImKVklJ@aX_mWULUUVUyXwWI@W@U@UXKWkXWVwU@±_U»ÝKUaLVbkJkWmXk@UVVmIUVJ@UU@UamLmwUVU@mnJ@VUnmV@b@Vm@kkWmXmKULUV@x@bWnVUbVblK@bVV@LUJknmKkLWa±bUmULmWk@VLUV@bm@U°JUbVLX@@mlxkn@WVKkmK@k"],
                        encodeOffsets: [[114683, 28576]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/jiang_su_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "3209",
                    properties: {name: "盐城市", cp: [120.2234, 33.5577], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n@°ĀÞ°@¦ULWKkx@bkLWb@lUlVXXJVbnUKmxXV@bm@@XLÞÜ¦XlVnmzVJ@n@²ÞôkÆÞaȰĉwnǉÜóéVÛnĊīČǉĉ@ō@KÞUlU@kklÇÈÑÑlġXɛ@UġaU@U_W@n@kaUL@VW@kKmkUV@bkbWW@bkzma@JWI@KUKUL@U¦`@XUJU@KmXw¯KXkmy@aUIWJXXmV@K¯UU@@bVL@¤VLXbV@@JVXVK@JVn@bkKmakVVXUVVVlI@`U@nzVVb@¤n@@UlKXLVVI@V@nV@V@ÈUx@óVōkÅWó@mU@bk@Ýwk@WbXxm@@J@zV@kVbVnLWVUXWUXUWLU@Wl°z@VkxU@UVWIxWJkbĬnW@@bUl"],
                        encodeOffsets: [[122344, 34504]]
                    }
                }, {
                    type: "Feature",
                    id: "3203",
                    properties: {name: "徐州市", cp: [117.5208, 34.3268], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XKVX@WnIVx@K°Lnll@@I°KnVaU°x²mlx@VanU@ak@akmV@@w@Ua@aUwVwUw@w@UK@£kaĉlóIÇVk±@@kUKmVkIkxW@Ua¯UUm@UVI@WVIJV@@Um@UanaU@mI@J@XV@XaVlkXVaUUWLUyVIXmWak@XkJókJUL@KWkk@ULU@WalUIkJmImkVbV@lV°kXUKWKULUmb@VUlVnb@VV@IVKUUmU@ak@@bmV@xklUU@UKmV@nJVbkXKUamLUJ¯UUVmIbVVLl`@LLU`m@kXUVU@VlxUK@xkIWbUKx@VkVVnb¯@@U@xkmbkLÇKb@@XnJ@LmVkl@@XlUVkxakVVb@bVnUbU@@xVUVb@nIĊ`XVVôJ_K@xlU²KlkU@VaVVÈm@kVUVmnamUUaVXIVJ@ç@¥nkVLn@@XVK@VUX@JVUV@UnVJVLUJVLUVlnIbKnU@m°VanI@anVKVLanlKblKÞk@¦@¤@VKnLVKLKVzlWLX@VmV@VbnU°@UalkWXLVUKWkUUW@£Wa"],
                        encodeOffsets: [[121005, 35213]]
                    }
                }, {
                    type: "Feature",
                    id: "3206",
                    properties: {name: "南通市", cp: [121.1023, 32.1625], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VJ@bnzWl°LxnW@LVVI@W_V¥@VKVL@LXJI@nbly@aXXla@aVUnllLX@@UVKlb@@mXV`V@bĢlkČÇÆȘ¯wnĕVĉVÿUƒUĠŦğlXÑVǵ@±ōLʵĖ¯lÇbÝÞ¯xk@Çkķén¯@ğġƴǫ@kVVlUbL@xULÇóLUl¤@nkVV°VLkxVb@laUXUKWĖklVX@¤UUkb"],
                        encodeOffsets: [[123087, 33385]]
                    }
                }, {
                    type: "Feature",
                    id: "3208",
                    properties: {name: "淮安市", cp: [118.927, 33.4039], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nźUôÒɴèl¦nĖVkbmX@xVlVL@xUb@bUJVnUxlKVLÈxmzXV@lW@XVb@bÈVxnbVIXa°LaÆVVaXUlK@aXIÆVlXKVUlIXalK@alwXLVK@¥Ý¯¯ÿ@mVk@aX@mīlaXIwXJVUV@lw@U¯ybUaUġUÅaUKVknaġm@kUm@wÆIV±nLÆwÇnUUk@ƅÝU¯JÝI¯¦Ul@b@@VVL@l@LLÅmL@b@UaVaUWmLUKV¹KLWKX¥WI@mXk@UmaUVUU@VmL@WbkIUWUmVóIkbmm@UbVLUxmJkU@bkJWbnXU`WzKUÞÈlVbLmx@kè@Æ"],
                        encodeOffsets: [[121062, 33975]]
                    }
                }, {
                    type: "Feature",
                    id: "3205",
                    properties: {name: "苏州市", cp: [120.6519, 31.3989], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôèĊVnX°¤²lxƒÈÜ@²x@J@b@X`nIUÆUUV@bl@VVnL@L@xJ@X@blJXnW@@`XbWkV@UbVxXUxkV@LóxVbUVW²VJĸklUǬ@ĢƳĠ°@mƒī°»ÈÇ¥ULUU±a@bU@¯U@KnImUVWUkmXUVU@lIVaUUVWKUbUkWKU¥n£WakJUkULK¯LKkVIn@VaUVUUUkVk@U@amUkJ@UUlwX¥W@@UkVmk@JUakL@kk¯ÝmJUn@nmVXlmbVVkn@UJ@±WUxV¯a¯KōbÅ¼ÇxUxUUlWL"],
                        encodeOffsets: [[122794, 31917]]
                    }
                }, {
                    type: "Feature",
                    id: "3213",
                    properties: {name: "宿迁市", cp: [118.5535, 33.7775], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XbWnUJVzXKVVUbWklUWbU@@W@IJ@nVmbVbn@@V@UIUJ@XUJ@VVn°VVbX@lwlJnUVL@l²@lÈUôJĊklb@¤VL@@xVxUxVx@bVb@@xU@lnmnXmXLVmV@X@lxVnVJôLLXax@b@@KVL@bn@@m@@alLUUVaU¥nIV±I@mXI@aWWXU@LlUXWW_XWmaUwÇ@aaWUX@@kWUynÇwUKkLVwUmVI@aVa@wUKUk@wWnlaUmĕk¥ɳçóÑŹVmmzkVmm@a@Iók@@LWU@`WbXLWlkImJVn@`nXVbXmL@Vn@l@nUVl°Xx°U@LVĠ@z°@¦UV@Xn@VJmV"],
                        encodeOffsets: [[121005, 34560]]
                    }
                }, {
                    type: "Feature",
                    id: "3207",
                    properties: {name: "连云港市", cp: [119.1248, 34.552], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@lzXxmÆV@@¦@l`XnlKXXmKnLlab@xmbm@kL@V@Vl@@VUXJXmb@@°Æ@èÈzlW°XĢJlÈ`lInbWV_@m@UUķnôw°ÆmnaVVÛVmĸ»Ģw±Ý@@mUInyUmWkÛ¥ÝK@Wn@@aWUnwVLmUaWIUWVk@kkJUVWLUkÅWJ@bkLWVUbÅUb¯KWbUJWXX`WXkV@KWVXX@bWJ@nJU²mJV¦UbVVkK@b@@nm@@aUK@L@@awWbKóKUIUmkwW@U@UnWKnmWn@bl@bmVUb@kw±n¯wVUb"],
                        encodeOffsets: [[121253, 35264]]
                    }
                }, {
                    type: "Feature",
                    id: "3210",
                    properties: {name: "扬州市", cp: [119.4653, 32.8162], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VUXblVVVb@xV@kzV@lwVLUbVV@VU@VbUblb@nkĶ°IÞV@ƆVlmVÈÅxmKU²ÅJ@xVn@lĢnmbUlVLÆbĢVVbVaXk@VXKVVWXVWXUmKUaWaU@¥@£XWUUV@@ynam_VWkUVUna@ÆV@mnkWmXkWUW@k@@akkllWUI@UnKl¥I@VVma@a@I@U@a@anK@UmK@ÅVUnJlkI@aVwka@mVIUW@UWL@WÅbmIULkaUWUxkLUKWlXL@VImÅVUmĉLUól¯I±l@ÒUbVbUVVXUJUnVV@lnbl@"],
                        encodeOffsets: [[121928, 33244]]
                    }
                }, {
                    type: "Feature",
                    id: "3201",
                    properties: {name: "南京市", cp: [118.8062, 31.9208], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@k@ma@kUUVmVIUWVUUaVa@Ñ²k°Jôk@Wmk¯KmX¯aUakKWU@XULXaV@@mUaVUUl@VmkaUXm@WUUna°IlmVmIUW@Uk@@aV@VVX@VI°»nmU@VKVan@m»UaU@U_@WlIUaaVaUala@¯n@kaUkUUWKU@mwkUUmmL@K@LmUUVKVÅImUJVkVVLèVLVU@WLV@nVÜULVUL@bW@XbWbkJUUVUxVXmVk@WUUkVmIV@nbnVWbJUkUULa@Jma@XkK@VVL@L@JLUVU@V¼nXlbm@kbUKmn@lVb@VXXVUV@b@LVbÆxXbl@@lV@UVV@XVK²VlI`UbVbUlVVn@WXn@@VUV@@KmbVLXÒLkKV@nX@VVUV@bnVllbmnbIWVXU@`lLlknVnmlLlbUmVInK°nUU@l@VU@Vn@@alI`VIXaVaVa"],
                        encodeOffsets: [[121928, 33244]]
                    }
                }, {
                    type: "Feature",
                    id: "3212",
                    properties: {name: "泰州市", cp: [120.0586, 32.5525], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lUU@@y@In@WwXal@Þxl@@anVô@ÆXlŎôU@Vw@ÇUU@@m@UJUUWKkL@Vm@@£aUUmyV@@_kJUUVUUWlUnblL@aUmI@ULUW@IU@WaUK@£UK@aV@°V@LnUWWXIlaVV@£UWlkXĕVLVWb@kUalwUKU¯lU@mk£VôKÈVK@wKVaUkķlUI±ğ¥ÝUŹ¯ôm¦ĸ@XXK@VVXUJ@nlbUx@blJkmIUV@ÆnL@VmL@b@b@V@J@bnbU@UJk¦mL@VVJkXkll@b@@lXXVWlXnml@nÅU@mbUVlVUXn`mb@zU@VVWX@¤¦V@Xb"],
                        encodeOffsets: [[122592, 34015]]
                    }
                }, {
                    type: "Feature",
                    id: "3202",
                    properties: {name: "无锡市", cp: [120.3442, 31.5527], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nLÒlxUVkLam@kVWUULUxVVVbUV@bVLUnnźÞVĠ¦XVUUaôw@KlUVwWUwVa@lUXWa@_X@WmkI@a@WI@w@KmKUUk@@aVUVVÅmJ_@W@a@I±wÛ@ƑÇkw±¯£mWĉUóçK¯VkUWK@XkV¯UWabmUaUUblln@b@xbXWX`@VxUblL@bn@Vb@`m@XbWnn@l¤n@xnVlUVLÆWkV@VbÞJ_nl@nKVU@aUU@mVk°WVLUV¯bVXbXlVn@VmL@xV@bl@nW@X@VVJ@²VJVU"],
                        encodeOffsets: [[123064, 32513]]
                    }
                }, {
                    type: "Feature",
                    id: "3204",
                    properties: {name: "常州市", cp: [119.4543, 31.5582], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@LnxUbVVL@xnnWnn@VVXn@yImx°La¥n@VkKVwW@nXVJ@b@UVn@UnUV@Lb@`VLklVÞnÆ@VaXLlÈJmmVUK@aVUUaUUVwVKXVlUn@blKVUkwÑmKUVUI@±UI@U@WmX@k@aU@wnK@UUmWkaWU°aVUUK¯XUl@nVV@bUVmLk@m`ÝIUaU@lÅXUKkVmU@wmk£m@XmWan@@_Uam@@akKVaUw@W_XWa@w@akmm@mL@UJmnUK@@XnJWLkKUb@VxkWLaWVUImVULUK@L@lkLVVVllbm@@°kbVbUbbVbkJ@XV`V@Vbn¼"],
                        encodeOffsets: [[122097, 32389]]
                    }
                }, {
                    type: "Feature",
                    id: "3211",
                    properties: {name: "镇江市", cp: [119.4763, 31.9702], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VĊKnVÆUnJ@UWKXkVLlKVwXVlbVKnJÆaķn¥°óÇIkWKUbÅ@mUÝlkUK@_a@KVUVm@mVU@@aUIW@mXUxLUlm@¦bK¯nwJzm@UW@UmmXmm@wKUUVamwKm@UbUL@Vmn¯¼JUW@UUU@@bl@@VVXJnnUk¯JmbVVXn@VWlbUnk@VVUVb@nU@WbKWV@XVlLVb°bnW°Lnl@X"],
                        encodeOffsets: [[122097, 32997]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/jiang_xi_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "3607",
                    properties: {name: "赣州市", cp: [115.2795, 25.8124], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@`l@Èbln@KVLl@V@bÈlnKXkVlVL@lJnb¦VKVVnXW@w°@VUmlnUV`UbVUV@xnKVI°KXKVkVL@al@XaLVlULWVVVL@bx@VXVmb@x@VVV@nn¤lb°b°KXXWbX`lbXxz@x`VIVUnKLxWXLVKVbVLVU@wnW°b@nalXmXVJn@U²mKkVlU@@xlnaVmlKn@JVLlnVl@XXÆèVlUX@xVLXVb°W@wnUWmXk@KLVwUmUkUKUw@wVaVK@k@WnkUKWkwlmXL@KVUlLVKXmWUL@aL@malaVk@aaanX@VVUblbJnXaVwn£K@UWmUk@UaWIV@bJW@KmmU@aUUUkmKkVKlUUnKVUlVaV£Å¥WUUK@UkUUw@m@mIkUUWLK¯Uw°¯@wUKUbKm@kkKUL@UUKV¥U@manw@k@U@Wm@@U@WwkmwWaUU@UUmV¯kw@@kmkKkUW@UK@ÅV@XWWkXa@Ul@Va@KVaUUU@aXwla@UkVWaXk@K@lmkUmV@Vmbk@»XI¥VUkVUVU@anKVUKUalU@wX@@a@K@ÝwL@UnÇlUIkJmn@bVVb@VmnkLV¯U@±lIWm@kaUI@aÇU@K@KUIkbWbJUIUyX¯UbU@méUUmUkWKxWIkJm@V¥U_UJUwmVkUU@@knwm@UmkWJkL@n@VW@@U@knm@kUml@xÅx@@XUJlb@VXJVxn@lbV@lULnV@VlnV@bWV@bXL@lVLVbV@blLn@VlK@xln@bX@laLVbnKUVVbKlXVVkxV@nnVUblV@@z°WWkbIkWL@LUJ@bUI@b`@UmI@mkK¯XWmUV¯@UUVUUam@@VULWUJIm`IUJKUkW@UxnWbnnmlXbmIUVmV@Vnb@VLUKWLnÒVVV@VUL@kJUV@bÈ@V°@XVV@l@xUz"],
                        encodeOffsets: [[116753, 26596]]
                    }
                }, {
                    type: "Feature",
                    id: "3608",
                    properties: {name: "吉安市", cp: [114.884, 26.9659], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lxnb@V@bV@ln@nlIn@blVXKnk¼@VUKWL@bL@`UXU`@V¦XLĠ@lJ¦@nV@l°nn@mVXna@nbKn@lIV@VanJ@_lKVVnL@LK@Vn@VbUVanKlLnbnJVbnWVnVVanI@Vb@LbVKVanXVbVJVU@aXLllbôlÆ¼XxVLVK@Xn@xnVVVmb@LnVVKVXV@@mnaVXUVnVK@_UaUmwnKV_anKVL»K@¯ÝU@U@kWlUnlknKVnaUkma@UIUwl»Åw@VwV@nn@ÈXlKVmna@kVw@anm@n_WWk@mUkUK@ImkLUnbkm@wV@klUnLV±m@UInWkWmb@¯amX@xUVUKUaULWKXwKmLUVUJ_@wyWwkaW_XaWW¯L¯akam£@mUU@U@wnaWU@Uw@aUKUXUVKUkKWbk@@bUKUlWL¯LUJmLwU@UVaVU_VkmnUV¯@@xXmWUUUL¥makI@UKUkWlLkmÇ@aUk@UKL@kmÇak@_VlkL@`lbnlLVanLnbmVÆln@kJlbknmKUbÝmmwULUK@bkLWKULUUma@Kk@UV@L@llbVzxUxnl@bVLm@IVJXVlLV`@bn²@J@V@Xmbñ@WbUJ@bm@@LUĬU¦lV@xXb@blnUV"],
                        encodeOffsets: [[116652, 27608]]
                    }
                }, {
                    type: "Feature",
                    id: "3611",
                    properties: {name: "上饶市", cp: [117.8613, 28.7292], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VI°`nm¤²@bVJUVVXUl@Vmb@xV@XbmVV@lkLmbn`VbnU@VaUnbVllUXVa@w°VW@_VWLnVlbLVbnlKnVK@IUW@_@am@ÑUólK@U@WU@VwU@UI@aUUaX@kwmJV@yX@kan@mkwVmmI@aUU@aUUW@kVkV@@anK»XVWnIVUl`@_W@wlUV@UWKnUbn°InJlUV@VnIbWn@VklL@l@Vn²m@U`kI@bWJnV@°VXnJmXVmx@VVL@bkLmWULUmU@bWXb@llnX@xkxVVnVV@¤nLnVxnJVXX@bn`VIb@blmlLnaV@blWXnlUnbl@KVanUVmm_XK@kWWnaU@UnaWUXaXamUkKmXUWLX¯WakKmnUWwXa@KW_aXWW_@WnIVl@XULnWVknK@ImyUUÆbXKÛ@W@IÆUnVÝlkVK@mUIVwkUVaUm@aVIVyXIaÈwmmk@UnanVUmÅaó»lwW@kkUVmUK@WKLUmWULkamKLk@Wa@wk@UU@U@mbUIWVKUXWmkUmVmU@LkakKw@w@U¯UUn¯l@bmn@xkJWxkL@VkI@mkmJUI@V@b@VVxnbWlkÈkVLbkKmVL@V@²nxWkLUL@xlKVxbXmVnWJ@Þ°@nxUKUw±`UImVmnU@kalm@akwU@UUJmxU@@U@kU@Um@@KnVm@kKmkU@@WUnkLWxkVUwmKmLkUbmKUbV@xUnkJ@n±UxVXUWJ@LUblUnm@W@nknUJUVm@kXllknVbÆKVVb¼V@Ul"],
                        encodeOffsets: [[119194, 29751]]
                    }
                }, {
                    type: "Feature",
                    id: "3604",
                    properties: {name: "九江市", cp: [115.4224, 29.3774], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WUkVUkmaVUb@mVUam_nalK@kUnUWaU@@wna@UVkUWVUUI@a±n£m¯_JU@ĉ¦Ul@UVKmmLlm@ğ¹m`Uk¯@@UVK¯@UUK@amkmKkVVUa@UkUKUaL@VVXUJ@n@WUbnVb¯V@LÅlÝIJÅkÝm@UaWUU@UmUXmmwVUUKWUX±mUam@kWzUaVmÇw@aÅLmKXUWKkL@W¯IwVwlkUJ@Um@ÛÈWKUxWkaUU@KkLVl@UKUX±KUb@nVVUbUVmaUlUL@aUL@@nUlWzX`@V@lx²@Vlb@bVÞ@°nl@UxVL@lUbVV@n²xVUVmnUÞbaJ@IV°xnbl@nbÆ@VwnK@VnXlK°xnUlVXV@Vl@L@lk@W_XK@KkWxUL@JnVx@aX@VVUaIXlmL@bVVX@VbnKa²XVWk°a@UnV¤nbmLmW@XbmJUbVLaÞKL@K@U@aVKlbV@nXlJxV@VnVÈÞKôbźĕČmV@Ċ²xÆIV@Þ¦ĸ¼ÞVlVÞnxln°JkLXWVUVUVwnJVI@yn@lXlaXmWI@w»ma@UmK@akKkXmW@_kaWakKWk@@K@IWkUa"],
                        encodeOffsets: [[119487, 30319]]
                    }
                }, {
                    type: "Feature",
                    id: "3610",
                    properties: {name: "抚州市", cp: [116.4441, 27.4933], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°V°UnÜ@n@lnLlV@bV°LlnLllVzVVXlVV@@L@xX@WlXm@UVL@V@n°kVmVUnKlaXxVbnlU@lVVnaVI@aX@VJ@V@bb@Vb@X@lUL@@VlIVm@wUVanLalVnKnLVxlUXwlKVm@k@Una@mWIXKWUÛVk@a@UVWn@@kl@@WXlW@_Um@UVK@aLnalInWV@@xnI@¥Km@kKmnk@mlI¤laXbVblknV@UKXVlUXa@@Unw@±mU@ak_±a@UJUIVKW_Xa@aWUK@mmUVa@IXa@UWmannlmX¯WKXwVUVw@XUlK@klJXa@kkmm@Uww@¯W¯kw@WmbULaUUU@mVUUWmkUbKmkkK@akU¯¥Ulm@akU@m@KVIVV@KUkUVUkaUWbmIkaVaUU@mWbb@bUlkbb@nK@bKXVWnULkKUV@LWKknlxXVLml@X@lULUb@xVxVLVlVnUxK@LWlXnmV@x¯XaWUUK@wVWUkÅçm`@mn@bUx@lmbUnkLÇWm@mU@Ux@Æxk¼VxVJ@nbVlmbUmLklmkVlX@VV@°Þ"],
                        encodeOffsets: [[118508, 28396]]
                    }
                }, {
                    type: "Feature",
                    id: "3609",
                    properties: {name: "宜春市", cp: [115.0159, 28.3228], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VlbnK@b@JLlUnx±ĀXxÆWX@l@V@@blJ@nX@xUbVVUbVV@bVmnmJ@bmbm@klUbLmb@lVb@xUX@bVVVbV¤@LVVbXlVwLXÜÇn@@VIlVkUxx°J@XlKXLVWnLÆK@bÈxUnVbylXn@VbnW²XVLVVUnxWnnV@VVVXVbn@ÞÆlIÞJÆk@K°UUamVa@UUU»@wV@VkkUKUVW£U@UmW@@aXkVUnVlKVVUUkVmU@kWaUanUVVamIX¥W@@aUaUVW@_mW@UnIVVn@VbVm@bVL@anKVUkWKUXVIkx@nabVKb@nVJ_V@VwVUVVXUlUUaV@X@VblabnKlkVaXa¯@m@UKVUn@WXkW@@w@KU@UWkUUUykkmKk¯KU@akUmK@k@mmÛ¯V¯U@L¼UKmLbU`mLxVnVb@`LmUVUUWmb@nU@UWULmU@KnaUUmUwmJ¯IUJWIkVkaWVUIUlWaUIUVkKmbUIÒlVUnn@VlLUJ@bUX¯@aWVUKUXKUbm@UwKWa@a@VkUWn@Uak@mbXWJXbm@mLaWVk@wL@WmanU@knwWmkaWLKWUXaU@¥lUVVVbnw¥nKV»@aUk@a@UJ@kmLma@mbUWnm@ULÇº@LXnmxUm@UbkbW@@akLmWk@UXmJmUkV@VUXVlULmKUxkL@lmXnJ@Xl°Vnb@bU@WbKUX@VmKUX"],
                        encodeOffsets: [[116652, 28666]]
                    }
                }, {
                    type: "Feature",
                    id: "3601",
                    properties: {name: "南昌市", cp: [116.0046, 28.6633], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@X@m@VIUW@UKVbLlV@VVbUlUnLnl@bVL@V°UL@V°@Vln_Ġºn@knKnLVU@VkĊ¥Vk@U»UaUÅLUalmkklWn@VUVIlm@mXn@VmkVa@KXIVUWVw²@m@U@VK@k@WUa@a@aU@IUW@@bUJmbUU@kkVmUaWwkbmLUVUnlWbUbklmLakbUaW@U@VbkVWVUUUVUx@U`UI@maULamb@lwJWUVXLlUVmL@bUK@aUnUam@UUmJ@VnX@`UXVVb@bX@W¦nJUbUmVVbXb@lVUnVlVUUkLmUUVWl@bX@VnV@X¤VUVLllUU@@x¼VV@V"],
                        encodeOffsets: [[118249, 29700]]
                    }
                }, {
                    type: "Feature",
                    id: "3602",
                    properties: {name: "景德镇市", cp: [117.334, 29.3225], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VVX@VbmzxUlU@mbmL@V²xVbUVVblbX@VkVykValKVI@bn@n`lVWnX@lL@WKnVIVa@¯nK@alIXJVIVWUwn@nUnK@alI@a@anKm_aW@UWmIUwmmK@£UUmUUlwwW@km@kWaXaV@VnVKnXlK@aUK@UnwWUnmIUW@¯mUXI@alJV_n@m±@U@kkKUlm@XamJ@UVUkmI¯JmamVXL@VUkV@xX@`k_UVmJUXW¼mL@bU@UllX@VV@bVV@bnJUnlx@nmb@lW@zUnIlx@WbVV@bVJV@UxV@@X@VkLVôÒn@@b@`VX@J"],
                        encodeOffsets: [[119903, 30409]]
                    }
                }, {
                    type: "Feature",
                    id: "3603",
                    properties: {name: "萍乡市", cp: [113.9282, 27.4823], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VWnL@UVWLXaV@@ama¯Uk@WmInW@klKVwnLVKUkVW@UlUnVnIVWl@nXlK@bX@laVan@VnwWm@KÈ¹VK¯m@kmU@¥kIğ@WKU¥@V_VW@_K@aXKVL@Ul»mWLkU@amkJm@kmU@@a@UmakwU@Xl@VXk`UIW¼kWWX@@lxV¦XlW@Ubn@mUkL@UmJ¯UkUWVUaUlm@UXWlnUJ@LmLUnXll@bUVUUmVUn@¦xlnn@VÆÈU°kbVVxllnL@VnVVUl@VanL"],
                        encodeOffsets: [[116652, 28666]]
                    }
                }, {
                    type: "Feature",
                    id: "3606",
                    properties: {name: "鹰潭市", cp: [117.0813, 28.2349], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@XV@nlL@lUnm@Ln@@VlV@@VV@nwVI@VVlx@bknlbV@nmnUVJ_²VxVLw@m¯@ÝXImnUWaUwkL@wVKlKXmw@±@UKnUlLaKlUlÇXkmaUw@U@a@UUkwUJ@zWJw@WbkVWUL@VmUklUaWakb£kJ@nmlnlL@nL@¦mJ@wU@mXkJmbK@bUL@VVn@`kXW@Xk@@lm@UX@V@blÜUXVWLXJ@nmb@V@l"],
                        encodeOffsets: [[119599, 29025]]
                    }
                }, {
                    type: "Feature",
                    id: "3605",
                    properties: {name: "新余市", cp: [114.95, 27.8174], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@m@@WULUKWwÅ»ókakkWK@bUVUIUamWUbULa@KUa@mJUbmUXUmUamImakKmLUbVUam@@UL@KKmUUkL@`mIUb@U@V@bVl@b¼UmL¦mxUaUUVk@¦VWbXVLXKlbXnmx@lmVnb@XKxl@XUbnKn@WaXIWnal@Vb@XmlV@U@bXbLVxn@VaLVWVLXUb°@VW@aVIkK@UmVmkUÑVJnalLVUVJXbVkVJXUlblUXJVI°JnI"],
                        encodeOffsets: [[118182, 28542]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/ji_lin_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "2224",
                    properties: {name: "延边朝鲜族自治州", cp: [129.397, 43.2587], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Wxĵm@ó¤VX@@xÜ¼ƨ²xWxVV@XVbWXllaÞU°Ċ@ô¼LôÝWanV¥Ñnĉ°¥ÅX¥°¯@w°w@»°k£°mÈŹmÈbÆŎ¦K°z@kxl¦UbU¤klVKŤÞȰ@@bV@nVVUlÞ¦lUllVlU°ÑU¯V°wbXxl@V²@nô¼ó°kmVk²ĕw@wVÞÞ@@Ġö»¯@bnb°mÞ¯°V°ÈJmX¥mamUÅUlaU¯@wKkl±n@@wkÝVUUl±¯I¯bal@kLmakb@ġŹé°Þb°ékLmwXaÅb@bVlbVbÒVbUbUUanwakbVUVak¯ULmxV°UxnôŻX@JXklbkbĉabWU@kWUU¯@@klm@@Å@awWXlKkI@WbUaVIUanU@ĕ¯KmUnWUwm@£ċèkUmbUmm@@nkJUalwk@@nmWUan_óaWmnw±KIwl@UmI@an@@mlUÅmV_KUk@U`@_KUmU@U¯mmb¯@kbImV¯LkbKÛ@ÇnɱJóaÝĢkb@xÒÇll@²VÆUVVUÇ°XóxlV¯lV@bV@nx@¤@șŎnxV¼knJnKX°¦UlnVbUbÆVnÞWVX¦llb@l°VJôÒnLVbbX"],
                        encodeOffsets: [[131086, 44798]]
                    }
                }, {
                    type: "Feature",
                    id: "2202",
                    properties: {name: "吉林市", cp: [126.8372, 43.6047], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôlzaÈV°K@mLWlnVxUVÈ@ÝĬUÈnôLa²VmĀkV@ĠĊnU@bV@b@nl°UVnÞaôJ@bV¦mlkbmVXx¯@VxmnbbÈKV@bÈLwĠyônmnbÜ@nnVx@n²KJ@kal@nxÞULź±Vwkw¯LWWUkŎīVww°yVĕ°wÈVlkÛ»@wW@Uô£@nĶXwWaUamKóÑUI¯@kakkW¥XUmÝÅUVaUamVk¥W¯LmIlmU»mwȚō@£kJUÇk@am¯y¯UVwa@wġx¦K¯X°Ċ¯¦U°ċWULÅa±b¯@UkÅWmVkIUlóċ¹`óIlXWXxmbULÝbƧ@x¯bÈl@x¯zaÝ¤@nmVWb²bmn¯J¯Ò@n"],
                        encodeOffsets: [[128701, 44303]]
                    }
                }, {
                    type: "Feature",
                    id: "2208",
                    properties: {name: "白城市", cp: [123.0029, 45.2637], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@óǩŁ@WlwUaƑwÛÅÇéĉamKōÇ@IôġVȁÑŹçÝUƧċĉwóóÝ@Ƒ»ğL¯ll²@ƆÅV@¦mÅb@nmlU²VxlUn@VbnWbÇbkÒn@èlnlUÒ°Lx@¼ĉb@ÒUċxÅènLVxÒbÅJ±a@_ÅJÅnVbKlnUÜĊ@UxXVÆnmVJÞ¯VĠwXw°xWLxKV¦ôUwVÝǬóÞÞ¼ÞkVôȘxÞUlVn¦ÞĊa°wb°@bÆwlŤL²`z°@V@@nJVnl@@¥nUmmn@mwnmmUnk@mlwUaLnwn¯°anWakIÇmXwÆamUXUlJXaUUklKUknmÞV@K@VWÞ@VkUwV"],
                        encodeOffsets: [[127350, 46553]]
                    }
                }, {
                    type: "Feature",
                    id: "2207",
                    properties: {name: "松原市", cp: [124.0906, 44.7198], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@źèȂÒUóĢ@JŎÈLnĊbÈêÜÆƒxVbkx@XǪłôkÞ`Wb@n°abKnVw°`_X`W¦ĊIkmVakwKx°UÞbU@ll@°¦VWaÞbxÞI@mVI@VkÅUWK¥nLa@@È@°Æ@nU@KÞalkUwVékUWwkUVkkJk¯@»ókV¯ÆÇI@bĉô¯@ķw¯nmmÅL¯wVUÞy@UówÇLkmm@@UóxkkĉmL¯wVwkWWXmLõm@kÅ±V_ô»ÛÆ¯@VaVaĠVlmğwķUóÝƽ£ÇJkbǫaƽLW@nxÝ¤kzy¯XɅm@VôÇX¯Ė¯ºÝnUnLVlUÔmV"],
                        encodeOffsets: [[126068, 45580]]
                    }
                }, {
                    type: "Feature",
                    id: "2201",
                    properties: {name: "长春市", cp: [125.8154, 44.2584], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@U°xÆKnn°mĸx°@Ċó@aÈJ°ÅUôl@¼l°IllUlVXxlVUêVxkllnÈUVll@Vx²IÞ¤VUlVnIôlÞlwô_bVaĶLXÅÞÇ@K¯@wÛaçn¥¯WXyW¯XwUmmÛ@manómğzxÇK@aUÇLamanUw°@WwnUalnk¥U@aóIÝbUm¯Vmk@@aU@amVğĉ@lUnÿ±UbóKmVÇÞī@ÇVUUwmXkKn@L¯ÇUbyókōè@bn@lÝX@x¯ô@ÆUV_maXm@aóJWxnX@VVnĖVnUJ@nōÆÇ¼V¼kxLklÝw@xx@zV`ÅbmxU±xUnnmknğUbUUb@Å°Üó¼U`Æ²@lönKnXWlXUx°xnKĊllôw@Vn@lnÈKôx@VÝzV"],
                        encodeOffsets: [[128262, 45940]]
                    }
                }, {
                    type: "Feature",
                    id: "2206",
                    properties: {name: "白山市", cp: [127.2217, 42.0941], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ul¦kÒÆ°IlÒU¤ôz¼lJUnÆXVl°@²aÆbVKČXV¯°¥¯ĉ°WL¥Ģw@xbUx°V°znb@ÈlVlI@w@mU@akU°kUôwWÈ¯VUVUÅ±U@kÈkÑw@laÞġUÞ£@ƅKnÑĢ¯@WaUaVUVkkw@a¯@¯ÝVXnW@@WkXmK@xkKUb@bW@Uw¯mmb@WKUbmUbUaWbJĉIVW@Il±LkmUbUm@nkKWa¯n@`UbmaĉL@bÆ@W`L@n¯Xb@kb@xL@VkL±mlUIU¥mL@lÅx@_la@UaV@kmmK£LmKUnÅKVbmXVlèĉUUbmlĢÅ¤Il¯bÇ¦l@ô¼Ģ@x°l¤nal@xb"],
                        encodeOffsets: [[129567, 43262]]
                    }
                }, {
                    type: "Feature",
                    id: "2205",
                    properties: {name: "通化市", cp: [125.9583, 41.8579], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÆlXnĠxĢ°lÈ°K°kXm@¦VbkŤJnÝ¤kVÞVVkÈb°y@wkÇ°awƨ@aÞKVnaWwXWkôJ_ČºôVk»óyV£kÑJÅ¯lÑk¥Va@wkbmk£¯@wġó»@kÈ¥°akJÆ£ġnkVaĊVkçWUnUaÆLVmnLKU±@m@a¯UbmV¯m@_KUaÅWó¹@UanmWak@@wmI@y@mkJVa@UaIkJ@n@Um±kkxmIkbÇm@°bXnV@°ÈmlÞ¼¯XVº¯LmkWWXLmVVlkn@@lnWÆVxbmnm¯lÝaVÈè@¼VbÆ°ÞUVJkxIxIV¤ÒXxmn"],
                        encodeOffsets: [[128273, 43330]]
                    }
                }, {
                    type: "Feature",
                    id: "2203",
                    properties: {name: "四平市", cp: [124.541, 43.4894], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ɇn°WzlyÞ£mwX@ƾKǬblaÈIƾ¤ôÞĸVĠxnmmV²wVnwÆaU_@yw@wÞxlkKlwU»È»ŎÅ@mVIUmmĕUU@mWXwIô@bWnnbU`V@Å°ó@wÞW@km@aŎç@m°Ñ°Inm±aXaUn@mƑU¦@Ç¯aU£aUġ¦ÅÒJōUŻókUÇ@¥¯ak¯mUVak@@aċçÅaUm¦Ý`XbÆ@n`IxĊÞōÞml@Ub@Wl_¯JkÇUÝÆÅb@nllUb¯±a@WĉJġĀ¯Unóm¤xôaVnxôI@xV@bmÆ@lnLmÞ¯ÞxVb¯þ"],
                        encodeOffsets: [[126293, 45124]]
                    }
                }, {
                    type: "Feature",
                    id: "2204",
                    properties: {name: "辽源市", cp: [125.343, 42.7643], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@żôŎVIÆÑĢ¥VbV¤°bÈ@V¥ƒÞ£lÇUUUÝlÞ£mţIlUa@¥nlW¯L¯kÇġ¯ğwWmÅk¯UVUbWlXlmnbUx¯xVVknlUbVÇKUb@VnbmlnzUº±bmJUbWÈnèmÒ@X`WL"],
                        encodeOffsets: [[127879, 44168]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/liao_ning_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "2102",
                    properties: {name: "大连市", cp: [122.2229, 39.4409], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@IÞmVk@wXWÜbnwlLnU@nLlbXW@awnbl@XLa@Ċ¥@LULnJ@xVnmV@VXXV@VJkn@VÜKXXôJlbxl@IVbnJVLUbnlnVwJVU@XUaUUlwn@°nVKnV°_VJwl@nwlVIXWlIVVnK@IWmkIVaVU@WÈUlmU@UWUalkXġŻ@kI»mmakUmĉUŁV»²ġVĕ@aUU؍IɃ`ȃ@kw@Umwĉ@WķÑIĉÇbÝLkymbIwÇmÛbmbU¯ÜõÈkÆVbŎxnXVÆnǪ¦b¤UxÝnĉÒmĊVÈ¤ÈbÆ¼ĀÆÆÞźbVVbX°²¤"],
                        encodeOffsets: [[124786, 41102]]
                    }
                }, {
                    type: "Feature",
                    id: "2113",
                    properties: {name: "朝阳市", cp: [120.0696, 41.4899], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@na@UVI@mÑWkaV¥UI@wl@aÈbm@wVak@@K@k@a@UUmUUalmU@KÇUÅ±¯@±kUKVkUaaU@¥m@@¯k@WLUmkn@mmIkm@amU@wVmkU@Klk@UmaXIWWULaULVbmk@UUmUk±_Uym@mbkImaX¯WWxWKzU@WkJWwkV@Um@UbVVVVXb@VWX@W@Vkb@VnUK±aUUlwXÇWKknU@mmUkLUVVUUVUawbkKmwnIkJ@nmb`kmVkLWwUm@UUUK@UmaUa@UUaWK@mU¯Wkk¯VmUUxVXUVmL¯ymXkWUbmXUKVknWx¯JVnkLl@VVxnxlĀVL²WlXl@bÝVUn@bnlÜaXblIVl@@È¦@VmbXV@@xVVnUn@`°@VnXU@K@VV@VmbnVn@ln@bx°Ub@bLV`ÅnW@@lUnnWVU@Vbkl@Xl`XxVUblkX@°¦VUVVbUlkV@UbVbkLUxmJkX@bbxVKÆlXXbnnala@Uk@UVVklKVUXKVU°KVan@VUnLKVLWVaU_@mmUXa@mwXwVkVWXkk@k@klm@wXKl@U@KVUUUVaUV@alLxUx@b°°VnnVxlIXJmxLUVlV@bnX@VbaVx@XJ@bn@VVXÈl@llX@lUVô°°@ÞVbn@Vk@VW"],
                        encodeOffsets: [[123919, 43262]]
                    }
                }, {
                    type: "Feature",
                    id: "2106",
                    properties: {name: "丹东市", cp: [124.541, 40.4242], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lzXJU@²x@@V@bUVmKUn°n@lnVKnV@n@VlV°WbXn@VzJ@¦@bkbbUl@bkbJ¯zWULWbklVnb¦VJ@K°Ukl@@WbVn°@Vm²UnX`UÜLXmVXlKVbUVVnUbnX@VUL@lUbWx@²kl`n@Vlb@nUVWVLVU@aV@²bl@ÈmxWXVÈUJVl@laWnXKÈkÈ@Va°bÆm@XV°IVV°UnalVUn@UwVU@@VVJI@bl@XK@wWmXUUVbkJVXnJVI@mknwlKXL@`l@VI@UUaVKÞnaVm@aÇ£XWU@aÇUU@mbkKm£@WWL@@Kk@klUbWKUkUU¯UõÛmUUaVUU@WU_W@kVkJ_WKkV@bUL¯¯±mk¯ġğÑ@UmwKUaka@am¥ÝIUWmk@wmţLKʝbȗKWĢklVbX@VVknÇV@XUVUblJXn@J"],
                        encodeOffsets: [[126372, 40967]]
                    }
                }, {
                    type: "Feature",
                    id: "2112",
                    properties: {name: "铁岭市", cp: [124.2773, 42.7423], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XJm@¯mXUlnVbUJU@bV@UJWL@VXLmJVbkXlJXxVL@b@V@n@b@`Vbk@lxknV@VVV@bUL@bV@@bVK@VXLWLXJ@LV@nbWJ@IUVx@LVJUXVxVx@VV@@LXJWL@VU@@L@VnL@bVVmVX@@VVInJmbnLWVnVULVVU@VVmX@@JVzl@nVVKVXÞ@mk_lmUUWV_nJlUÞÑÞVVUVVLUVJ@IVna@@KV@XwWknwnKlalUwaĉÝwJl_@aUaKUUU@WU@WXUÆ@@UVK@n@UnVVblK@bllb@bbW@Xbl@UlnLl°°b¦nKlVnIV@UWU@WXkw@am@nm@aVw@I@KUaVIm±XÑlknJVnVJaX_VaUaVKmwnkmmn@lU@U@mnaXlKUmUIVmklaUK@UlUVUW@UkVma@UUU@JmUU@@bmbKWV¯XUKm@ka@UVKVk@aUKmLkKUUÝUmbXbÇJ@k@WU_@m@klm@UXKVaUI@KWUXaÇWkaWUkWUL±U@lUU@UJI@V¯JmIm@@aU@Uwa@UV@VkIV¯aUkWkb@bVL@@VVVUXW@Ua@@bÝbUVÝ@LmUkVUbVllLUV@LXWbUXm@U`@kxlnnJlbnIllLXlVlUXmVKnV@L"],
                        encodeOffsets: [[126720, 43572]]
                    }
                }, {
                    type: "Feature",
                    id: "2101",
                    properties: {name: "沈阳市", cp: [123.1238, 42.1216], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ȚĊÜ°bLlÞxUbUn±@ÈnVÆL@xnLlUVbxkImJkn@V±LUxkV@bbKVKnzVl@L°@VaxÞUlbôxVV@@V±bn@llXLöXĶnal@nkVJVI@aU@@aVK@aUUUU@lmkwl@Ua@_@a@m@U@aUKWwkIlWUanIWK@UXKVIU@@aVVIUamVknW°n@WI@KUmULWnkVkUWKkkmJkamIkmlw@V_n@VWXaW@KVUkKUkValUnVK@ÞVUÞa@a@VbX@VWUU@U@UK@ala@IkKmUUa@U@VkkWVwU_@KÜUXbl@V¥XUVmXakÅlUUkIm`UIUJW@UIKmkm@UUJImmU@VUXU`mIUbUK@LJUUl@X@UbJkU@nm@Uam@@aUmLKwmWXUK@kUaÇa@JUIUa@aKVUUXmUy_@lmbkLUKWLX`n@bVL@JXLWX@Vnb@Vm@UbnVmL@V@x@LUbVV@V@LUVl@mb¯U@xU@UVVV@X@VVblJ@bnVKUnx@llnL±¤b@k`VXÆK@kV@¼kl@bWIUl@VmLnbm@@JXXmb"],
                        encodeOffsets: [[125359, 43139]]
                    }
                }, {
                    type: "Feature",
                    id: "2104",
                    properties: {name: "抚顺市", cp: [124.585, 41.8579], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XVl°bUlJ@UVU@bVxV@@bn@nJ°I@UJIVV@V@k²VVKlXXVblÈXWbXV@LVJUbWL@Vkn@l@nV`@X@lÈIWanaÞVVVlLnKVL@bUlUL@Vlbn@VL°WXULna@aV@nV@IVV@VbUnl@VXnKVa@UUnyWkXaaVk@aabnm@_WKXmWanU@alaUl@XJVLVxX@wnKnVlw@V_@a¯¥@UkKWUaUUanK@IaU@WUaVw@klUVyUUVUUÇ@Iôba@mnUma@kXa@UWak@Wal@a@WULmU@U`mIUU`mUk@@UUK±nkJbUam@kwm@@a@UU@Ua@@K@VK@kmKU_UKUUaĉWmkkL@`LnmlkLkbmK@k@Ulmb@b@xUVIUlmVXXxm@JUUk@WUk@akx±@¯x¯UmbKUUVmUU¯UmVVnWkÆlWbUnWVU¦k@WaÛV@LV`UxXllU@@VVbnVlL@J"],
                        encodeOffsets: [[126754, 42992]]
                    }
                }, {
                    type: "Feature",
                    id: "2114",
                    properties: {name: "葫芦岛市", cp: [120.1575, 40.578], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ll°XnV@XLVb@VVbnb@VLVV@VVnXxlKnUl_na@mlImJnxlLaxVbUVVUVUKVlnnV@lmXLÈWkxVV²bVLm@Ula@UX@XW@UWaUUUUVan@V@lUXxlIXV@yXLwXXW°nblJnan@Vz`l²nVVVl@nUaVKbVKnXVaUaVUynXK@kVK@X@m@mLXaLWU¯w@a@UVw¥°ó¯¯y¯UÇ¯»w¯Im¯ÇUUl¯»ţKċÑţķm¯w@mU_ómk¼VnU`±IkbVlnnU¼±Lk`@XWl¦UbmVUxkXVlkbllUVb@bkVmx@XVV@Jb±aULkKWXkWmX¯aUJmIkVm@xU@n"],
                        encodeOffsets: [[122097, 41575]]
                    }
                }, {
                    type: "Feature",
                    id: "2109",
                    properties: {name: "阜新市", cp: [122.0032, 42.2699], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Xnb°lVlnXVJLlVnl@zÆxnK@bblKVLn@@VaVLVK@L@Vl@XVVInVVKVwlUXwlKLVVb@aV@XlUXbVW@nlWnXKV@@V@XUVVLUVV@@bVVV@@ln@VbVUXVIxVanJ@UIVWL@UV@@¤V@nInwWklnIVxlnzUVÇJ¦VVÜLĸUnW@aV_WĊXXaKnkl@nmLa@alUVw²K@UlmnIlJwaVUkmK@wÅKmU@Ç²VmVaÝwkKaÛ¯șĉķ¥ğ¥@kUWkƏīÝ@@akUK@KWIUm¯nU¯JmwUVmIkJÇLm@UImJUU@aW@U@@nUbJabXVWn@UVmX@V@b@l@L@lUb@xnÇabk@@xVJU¦lbXÒ@nUJ@Vmb"],
                        encodeOffsets: [[123919, 43262]]
                    }
                }, {
                    type: "Feature",
                    id: "2107",
                    properties: {name: "锦州市", cp: [121.6626, 41.4294], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nJ@nlmVnXKl@@°n@@¦VbVbUlVL²l°@Æ²ÈV@LVknVbVVnnWVU@XmWUabIVa@mV@X@@bVVnIVJ@nÈKlInJVUnx°IV°mVnXJ@LLlV@b@ÞƐĬXllV@Ġ¦ĸ¦naWW@In@manK@UVkXJ@alk@»lU@ÅLUWl_@a²£Kkm@kwVmULm@akIUa@U@WUUVUaÝ@ğwkmĉ£UW@@bÇL@ma@_mKlXUwKLţÓ@UWw@K@UI@mU@UV¥@°UnJ°@@_KUwW@UnaWUmmI@mķwUaÇLóVĵwÝUUW¯¦Ux@Vb@xV°XKWbK@n@nW@UL@lWLmzUVVbUbmWXXWJbn@Vkl@LlVUn@xnV@bln"],
                        encodeOffsets: [[123694, 42391]]
                    }
                }, {
                    type: "Feature",
                    id: "2103",
                    properties: {name: "鞍山市", cp: [123.0798, 40.6055], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lxĠÞ@bV@@w°Vna@UkV@K@UUUVa@K@w@UnKmUVan@@Uma@UXWWK@IUK@amW_XKVLlKna@kmKVak@VU@VmU@anIÆan@aUVnb@blLV`ÞLlUbnaKn@naVU@¥°IVK@anUUKVaUVak@mJkXUVwkVUUa°U@W@WlkXWlIXUlJlaxIVVXLll@nLV@lLXlKĊz¥maUlkXaVKX°yIla@aVkala@a@¥IUy@WmXa¯kU@U@mmUULkmm@¯VmnLVU@a@U@±w@VWIkymLUUkJWXJkUmxk@xUI¯`mUULm¯m@kxVVbWV@UVIUx@bkVVVxUbVV@V@zJVXUlnk@@lkLlLUU±Jkm@UIUVLUVU@K@UnnV@l@LlaUJ@zn`@nWlIUVUUUV±Ln@nmL@VUVkLVlUxVLVlÅXma@@akLmWUX@JUnVJVkXJ@X@`WXVUVUIlbW@bVUVL@`Un@¦U`@bUV@z@Jm@@XV`LUL¯J@IVKmKÅI@JnWVnLnVxV¤z@bmV@VUV@bUL"],
                        encodeOffsets: [[125123, 42447]]
                    }
                }, {
                    type: "Feature",
                    id: "2105",
                    properties: {name: "本溪市", cp: [124.1455, 41.1987], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lb@VnlnVVUb@VJ@nnJ@bmXUx@xVbkbkWLUxnl@Ul@xWx@nUV@¼UllknkK@bmbnlLVJX@VIVJn_lJVVXUmnU°VVVUnVVLna°V°w²@lwbl@XVl@VVIn@wWWnUVkJVUw@@anaVk@@lnLlalKnkmK@_lKnlĊXVbVVLV`nL@lUL@@L@VbV@@V@bn@lxn@VbalI²mVL@Vl@nV_VVnJV_@nVKV@X@bkXbl@XblylUUk@Xa@UVIlK@UUWVULlm@UUUnKWU@K@UXmXVa@U°KVUUWUk@aUVKkaWkKUknaWa@U@m@mk@aUJk@@_WKkLmxl@nUJmIUWlIUaVWVXn@xWLk@@aJUI@U@UVVxm@UVkmb¯VUU¯JWU@Ån¯aUbÇ@ÇlLmWXkbk@UIÇVUXWwÇnk@±aU@@bUVUKUXmV@kaUm@k_±l@XwVa@kVK@UWmVaUmVUUakLUWWnÛKVW_m±VnU¯@Uma@Xk@l¯V"],
                        encodeOffsets: [[126552, 41839]]
                    }
                }, {
                    type: "Feature",
                    id: "2108",
                    properties: {name: "营口市", cp: [122.4316, 40.4297], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĊĖÆn¤°Ċ¯ŎWô@xXbwnKl@nX@VUVKmL@VU@UxÝ@VlbxU@VUb@bk`IUlVUnV@@UV@@JnXlK@b@nbÆWUkUKVwUklKVU@UnK@mm²KVUVVVUJXk@mm_@yVIbk@K@kmUm@VLV@VUKVUVJn@l²IVVKklK@kl@kmVUWI@y@UUUVawUUUl@akmmVaUKmIUaJk@wkaóIWWÛL@UlmUIU@WW@UnUUm@wmIVK@Kĉ¦@bWKk@max@bWXkamK@mVkKmxÛaWX@xUlÝnJ"],
                        encodeOffsets: [[124786, 41102]]
                    }
                }, {
                    type: "Feature",
                    id: "2110",
                    properties: {name: "辽阳市", cp: [123.4094, 41.1383], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@`VzWnVUVL@bVbVJ@IÈbVb@lVLXWnxLnKVb@n@Vbn@mV@lIVa@@WkVVI@KVLVanJV_VWUV@nnJVIVn@na@alLlmkVk@»VU@mXwwk@@VmkVwXKllaUa@wVwnW@amI@mUI@VaUUkmm@UkaL@UIĉyLWkkKU@mKk@kWKUUJwkbkIWVkJWXkl@X@X¯VVbUVlUxVWlnI@lUbVUbVLmV@bUL¯J@¦UVmbm@LmbakVÝKU_kK@amaVUbm@ÅbmJ@bVUn@UVl@UbnL"],
                        encodeOffsets: [[125562, 42194]]
                    }
                }, {
                    type: "Feature",
                    id: "2111",
                    properties: {name: "盘锦市", cp: [121.9482, 41.0449], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vbĸx@nnJVnXmb@VXVxL@`¯@mI¯V@U¦@VV@nJ@V@LXx@VŤÔKLVxWknL@`b@nÈK@a@VXĊ¤nVK@aVU@UnU@ayU£UwmmKXUm@IÆJnLUL@J°IVKKU_@Wn@@I@yVU@aV_@¥Vm@_UKUV@aXkaVJVUUXW@_@WWIUlUIVm@IVW@IU@@VU@mUVVkJ_l@aVa@UVwka@UÞVwV@@UnKLVU@UmWk@mLxWa@wóUVUIÇÆĉ¦¯¦¯xʟJ"],
                        encodeOffsets: [[124392, 41822]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/nei_meng_gu_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "1507",
                    properties: {name: "呼伦贝尔市", cp: [120.8057, 50.2185], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@m@Łkklô@£kJ°ýɅķÑó¤ğLĉÅlÇğŁW¯¯ƥóÿlwkţÈéÝƛó°ÞÅxV¤ĉĖWƒ¯lȭţυ̃ɱÿķƅˋğɱřÝţϙȍƧĊţ@¯kWKUKm¹Å@ķJU@ƧÑƧō¥˹Ɔ@L@ÞVLn@VōČWJX¦@JŻbU@ţÞmVU@ȁýóbkWWLÅ¯UWġkmó±UŹôV¼ƽ¼ł̥ĖƽǬʉxĉŻȗKΕ̛ʵƨʟÞ˹»Ƨţ»Ǖō˷Ȍ±ȚʊĠUɾɜɨmÜ֞߼˸ƅȂ¯ǖKˢğÈÒǔnƾŎŐ@Ċbôô̐¼ƒ@ĊôĊÞĀxĖƧL±U°U°ĬƒČ°ÜêɴȂVł°@nxŎèbÈÞȌ΀Ǹl²IlxĊl²ÒmôĖÈlĵºmÈêVþxɛČʉÇĵVmÒÈɆôƐŰǀĊ°ÆǬĮƾbyĊ@ĠƒXǀċm»ôw°Ûk¥Çm¯çkkÇǫţǕéX_ĶWǖīŎaÆĵĸĊ@ȚȘĊLĢĉVÆĉʊÇĕóaU¥ĉ°mkÅ°ġUĠřk°mÑČÿÛƒWĸ£ʠÆxÈÞŎÞ»ʈ²ĊÇČalÒ°Ť±ĸzĊKÈ²m¤Ŏ@Ò°¼nyȂUźīǖƳÈē°@ÝĶ@Èkl¥ÇçkxkJXÇUÅ@£k»óƿīÛ@lÅJl¥óý@¯ƽġÆÅanċ°é¯¹"],
                        encodeOffsets: [[128194, 51014]]
                    }
                }, {
                    type: "Feature",
                    id: "1529",
                    properties: {name: "阿拉善盟", cp: [102.019, 40.1001], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƏnǟƨʫŹɆÿ°¯ÆV²ˢżÿ@ÝÆŁȰ¯ȀƳĉó@ğky¹@īwl£Ź¯Ŧé@ÇÇxŋĉƩUUŃōLÇĵóÝnóç@ó@ġƱ¥çWUçÆō@éçťKçȭVһƽ̻aW¥ȁ£ʵǊǓƲɳÞǔlżÞmĠóĬȂɲȮ@ÈĢŮźÔnĶŻǠŎȭгŃċóȭţΗÆƑÞƧÅΫóȘǫɱȁġlÛkÇ°ȁÈnõl¯ôÞɛÝkĢóWĊzÇɼʝ@ÇÈķlUČÅÜķnέƒǓKȮŎŎb°ĢǀŌ@ȼôĬmĠğŰōĖƧbЇƧōx@ķó£Ål±ĀƧīXÝġÆêĉK°Ýʇƅ@ΌʉżÅÒϱʈ@˺ƾ֛।࡬ţશóЈèʞU¤Ґ_޸Ƒʠɽ̦ÝɜL׈ɛϜóȂJϚÈ@ǟͪaÞ»Ȯź"],
                        encodeOffsets: [[107764, 42750]]
                    }
                }, {
                    type: "Feature",
                    id: "1525",
                    properties: {name: "锡林郭勒盟", cp: [115.6421, 44.176], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ʶĬĊIȘƨƨ@ĬÛĢșŤĉĬĀóUÈŚÜènŦƐȤȄłϰUƨťƾÑ܆ğɲƜǔÈèʈƲĊƞƒɆ¯̼V˺Ò˺ȂŤVĢêUÜxĀˌ˘ƨÆ°ѢmÞżU¼ÆlŎ@ĊçŎnÈÒͪŎźĸU°lżwUb°°°V£ÞlĠĉĊLÞɆnźÞn¦ĊaȂīġŃ¯Iĉůl»kÇý¥Ŏ¯én£ġÑÝȭxÇ@Åçķ»óƱŎ¥çWÿmlóa£ÇbyVÅČÇV»ÝU¯KĉýǕċţnġ¯»ÇōUm»ğÑwƏbċÇÅċwˋÈÛÿʉÑ°Łkw@óÇ»ĉw¥VÑŹUmW»ğğǉVÿŤÅźī@ř¯ğnõƐ@ÞÅnŁVǉóJwĊÑkĕÝw¯nk¥ŏaó¦ĉV¦Å`ğÑÑÝ@mwn¯m±@óƒÛKˍƏǓ±UÝa¯lōșkèĬÞn@ŤġŰk°ċx@ĉ`Ƨĕ°@ţÒĉwmĉ@na¥ķnÞĉVóÆókĉķ@ÝkƧƧÛa°Ç@ÝÈUóbÝ¼@ÛÒV°@V¼ˋLÞɅŤŹǠVÞȗŤÇĖÅōbȁƜ"],
                        encodeOffsets: [[113817, 44421]]
                    }
                }, {
                    type: "Feature",
                    id: "1506",
                    properties: {name: "鄂尔多斯市", cp: [108.9734, 39.2487], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĶL²ĬVłƑkkl@ȎŘWńÈĬȗ¯ºlz@ĠĊôŦôÒĠ°kÞÜn@¤UĸèĸbŌÈXĸLlÒĢxɲÆ¤ÈÛƾJÈÝ°UÅĶ»²VW¯ĸJôbkV@ôlbnĊyÈzVôab@ĸÞUl°yǬ²Ǭm°k±lbn°@È»JXVŎÑÆJ@kLÆl²Ġ²ʊůĊġřóƛÞÅ@mmLUÿóĉƧ@»L@`ČĸmȗÑţů±ĉğl¯ĀwÇçƧŤÛI@±ÜĉǓçō°UwôǫůķƳÅ±bÅ£ÓÇwnÑó@ȁƽ@ÇƧĢón»ŏĕóĊ¯bÅVȯÅImōKULǓ±ÝxċŋV±Āȗ°Źl±Û@WÒȁŚŹНŚÅèŌô¼°ȰɞȂVĊ"],
                        encodeOffsets: [[109542, 39983]]
                    }
                }, {
                    type: "Feature",
                    id: "1504",
                    properties: {name: "赤峰市", cp: [118.6743, 43.2642], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɲŁĢǉĊwƾōÞĭ°_ŎŃźȹƒUČÿl»¯ôķVÿǬƽɅġÅÑǫ»̐ʟȣU¯wVWÝÈġW»Þ¹mÝƒɛŎÿŎōͩůV¹ōéċóŹÅVVĢǩʈ@Ėċ@ķÛV°¯xÇÅţ¥»°Ûôĉʟ¥WýČ¥wç»±mnÅķ¥ˋVbUÒġ»ÅxğLƧbWĖÅx¦U°ÝVóŰlô²@¥ÜÞÛôV@²±`¦¯Ý@ÅVÒō¼ô¤V²ŹĬÇĊƑţxç¯Lk»ʟlƽýmłÝÆƏ@mö°Ġ@ŚŹĬţÆUĀĠǊĠX¼nźVUÒ¦ĊxÈ¼@ôlx¯łʊÒÜĀˌÇČxÆČÈƐaxÒĠn¼ŎVÈ¼Ģ°ŤmǖČĊþLV°ÞU¼ċÈUÆzÈa¤ôbknXĀè"],
                        encodeOffsets: [[122232, 46328]]
                    }
                }, {
                    type: "Feature",
                    id: "1508",
                    properties: {name: "巴彦淖尔市", cp: [107.5562, 41.3196], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²@Ζǀݴʶհĸƒ¦Ķ̒Uˌ¼ӾÇƾ¼̨UÞĉƧéÝ»ĕĉƐȍōǪakóó¯a@ôţaV¯Þ¯°@²él¥ĵğťwōxó¯k±Vó@aóbUÇyĉzmkaóU@laóķIX°±Uĵ¼Æ¯VÇÞƽIÇÜÅ£ɱġwkÑķKWŋÇķaķçV@£mÛlÝğ¯Ñťóǿƴȯ°Åł@ÞŻĀˡ±ÅU¯°ɅĀźƧʬmǠƐ"],
                        encodeOffsets: [[107764, 42750]]
                    }
                }, {
                    type: "Feature",
                    id: "1505",
                    properties: {name: "通辽市", cp: [121.4758, 43.9673], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôƲĸ¼Æè@ÈȮwƾ»ʠĢ¥VÆ@²¥@»ŎÑ¯ĊJŤ£k»ÆÇX¯̼ōī°aX£ôƾȁź¥aôŤĢL°ĸ@Ȯ¼ÈÒʈŚôVXůÆaĠƛÈKķĉôÿ@ğÈĉ»ÇVnĉVwXĠÝ°ČÿĸwV¯¯ǵ±ĉǫÅÅm»²Ż±ƽIm¥ţÈķ@¯ƧJV»ÞUÝç¯UġºU£ţóaÅÅlƧī¯K¯ÞÝğL̑ȍƽ@ōŎōĀƑɜnÞÝºX¼ÇĢÞUX°xVʠȤ̏Ǭ¼ÆÒɆĢǫƾUĀóĸ°k¼ċĀƑVŹȺōń¯`ÝĮƽŎĉxġǊɱłō¦"],
                        encodeOffsets: [[122097, 46379]]
                    }
                }, {
                    type: "Feature",
                    id: "1509",
                    properties: {name: "乌兰察布市", cp: [112.5769, 41.77], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ʠǠÞĸɲȺƒÒȂƛŎaÆÈĕȘţUÝźǟɆţÝˌKU»@U¯ÜÑ@Þ»ôaVÞÇÈ@¯ÜbƨƨÞlĸ@ĊôlôÅĊUÝĸm¦bmĊ@nĊxŤÑ@¯ƨĖĊ_@Čwl¯ȭLÝ»ƽ¯ķůǓ@ÇǓbċÅÅÆwÿĠÇU£óa¥¯aŎğĠţkw°»¯ůlÝĵkÇ»Ý°ɱƧǫaóôɱ»Çk¯ŃóʇŐŻĉǊŻĢ¯ÒÈUl°x°nÒĬónĊğ°ÇŚĉ¦ʵV°°ĬÛżÇJȁńʇʹó˂ƽŎÆţ¦"],
                        encodeOffsets: [[112984, 43763]]
                    }
                }, {
                    type: "Feature",
                    id: "1522",
                    properties: {name: "兴安盟", cp: [121.3879, 46.1426], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÆXnlŎ°@LVLĠþxĊUȮĊnUĠV@żaW¯XIŎġ¥Ý@K@w@K@I˺ŻŎ¦ƨƨÒŎIÆ@X@VºnX°lŎ@ƾĉˤƒȘǷȘÑÝÝÞbVţĸÿŤxÈĖƐêÇKnĸ¥ô@ķÞUnÒl@UÅaīˋ¯ÑƧx@±kXřƐƏÛéVˋ»lō¯ĉÅÇÓǫÞĖġV@ğ»°ĵÇÞǓ¼¯mÛÅŃĉĠÇƾb²çéż¯VğÞml»ōÑVç»V¯¯ĕÆU¯y°k¯¯V»ôÇÑ°a@ŹkġKţóbŹ¦ƽȂóW¤¯bĬ̻ŎW°ÅÈl¼ţ¤ĉI°ōÒ@¼±¦Å@Uġ¦ʟƽ¼ÞĢÒm¤êō°¦Èþlk¼ĊŰ°JĢńȁĬ°żnÇbVÝ¼@¼óĸţ¤@°Ånl"],
                        encodeOffsets: [[122412, 48482]]
                    }
                }, {
                    type: "Feature",
                    id: "1502",
                    properties: {name: "包头市", cp: [110.3467, 41.4899], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@źxżĀǔÆǬVȘĀŤ¥ÅƾōôˁʈͳȂŃÈIÜŻ¯ī¯ōm¯ɱĖ¯ķÒÝIÝ»ÅVlÅôÑġğVmÞnnWçkWÜXƝÆwU»Șĕ£ĉÑğ±±ÅkK@lÅIōÒUWIÇ¼¯@mka²l¯ǫnǫ±¯zkÝVķUôl²ô°ŎwŦxĶĠk¦±ê¯@Ý°U°bóŤ@°bôlôǩbŎƏȎĊĖÞ¼êƨÝĊ"],
                        encodeOffsets: [[112017, 43465]]
                    }
                }, {
                    type: "Feature",
                    id: "1501",
                    properties: {name: "呼和浩特市", cp: [111.4124, 40.4901], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ʶUĊ¥ÈřĠ¯ĉômīÑ¯mwk¯ÇV°ÑżġĊǉǓɱţǓƝóX¯ɛÒóa@nÝÆôƜŚĉĢʉŰĊÒ¤ȗĖV¼ÅxWƞÛlXXèmÝmUnĠĢóÒkÆÆUÞ¼ÞJĸÑ°ɲĕ°Ŏn"],
                        encodeOffsets: [[114098, 42312]]
                    }
                }, {
                    type: "Feature",
                    id: "1503",
                    properties: {name: "乌海市", cp: [106.886, 39.4739], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ș°ÇīXŃŗ@ȍlkƒlUŁ±īĵKō¼VÇôXĸ¯@ťê°źk¤x@Ĭ"],
                        encodeOffsets: [[109317, 40799]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/ning_xia_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "6403",
                    properties: {name: "吴忠市", cp: [106.853, 37.3755], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nLV@VLaÞbn@@l@bUVlUVzVx¤kÞVèXn@nm°a@UÑ@VXnV@VaUVKUUU@@U@@KVa@U²@wXkWnk±lLnU@UmmVKnIVWnI@UK@UK@@UVKXkmWLWUXmlkVwUyVa@ww@aVIK@aVÈwKlLVV@LnVVVnUÜ²°WÈIUÆ@nÞ¼@¦@UÞUVW@UxUxVnbKb¯ÞU`VbǬV@XXÆVVl°InmnUô°¯anam£WVXKXmkôaVU@Vak@@wman@K@UÛUWKXUÇ@UIb@alW@akLUKV@@Ukw±InL@kmwkWmk@JUIůVmnnU@m@UKVKlkUwknVUKmbkI±KkmVkKb@U@aVkUmn`kIlaUK@UUKmbUIÝUa@mUa@am@UUULUK@bmKkbWI@WXwlkXWa@k@kKLVkkK@L@JUVmzUKlwUUnW£XVlKUwVU@aXI@aWaUw@W@_nam@¯UkWVkUWaU@nwmJkUVkWVUmUkJ@ImbUa@@WÅ_mJknmak@@mXaUV@xU@@VUnkV@Vn@`ULUbWLXVW@kbUJ@XW`@nÅĖWJ@m°@xxbnUaw²lÞ°xŤIVVULÛWbbkVVXÆ`UbVL@kx°LlV@VWbJn@bl¤ULV°@lmL@£U@@aUwmKULVxUVVx@@kU@mK¯LÇa¯@"],
                        encodeOffsets: [[108124, 38605]]
                    }
                }, {
                    type: "Feature",
                    id: "6405",
                    properties: {name: "中卫市", cp: [105.4028, 36.9525], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°@Èb°KnL@lV@@UwVUUwVKnLVx@bV@¤@nK@k¯UVKk£@amIXa@UkU¯Klw@UKVaÅ_UWlUaXaÜVKUUţJ¯wÝ±kxVbmaw@wn¯@XIÆĕm@X_@WVIlaX@WUXKVaVK@_Um@lUVm@U@Vw@VUÛwm@@W@ImKUkU@UaaX@wWaUKkw@UVaUamLUnk@»±`¯@kW@UaykbI@VWJkLWUkJwU@n¤mL¯wm@Um²XVWbnV@bmxVkxUblLUV@kVWKU¼kU@mn@JnV@bUnmJUn@k@XlxLVVnKlLVV@@LkKULVbk`WL@lkXW@kV@UÞUlÇXlkaUbmV¯@@L@V@bkb@xlWbbW@±@UJ@IU@mVkVxV@@lIlln@Vm@VUbl@JLmKÛXmVkUKULU`@LĉwKUXlVUl@VbJX¦̼bÞxŎxɜĖĠŎaô@"],
                        encodeOffsets: [[108124, 38605]]
                    }
                }, {
                    type: "Feature",
                    id: "6404",
                    properties: {name: "固原市", cp: [106.1389, 35.9363], childNum: 6},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Vnn@°xnK£mV@xlIXVlKXI@UJlazVbX@l°@²_@¼mlVnKVbUb@VlxVLXb@xWbVbV@VlnL@J@Xn@ÜxbW@nl@nblmnIÆ`@X@Vbna@aVUUWVk@kbWakbU@VwW@_l@nmn@@alVlk@UkmVak@@aUXaL@¯@KVa@axWI@KnkVaVJn_lJ@X@m@nVanUVb@mXLlJVWnLlaVVaVX@KXVVkVKlknKVa@aVU@KXb@klJUknUm@K@_UW@alIUamaU¯kJma@IUK@U@@UW@@aXLVVJVaXIKlaUkUV@ambUUJkIWJ@wUIV@JU@UwV@@Um@nU`@UkUmVUxWUUV@aÅb@aWXkKUUUUaWK@wnm@IVU@aXwm@UmVaUalk@anKUwlUwlkK@wmaUkmmIk@VmkUUbW@UVUnW@kV@xkVmbVnU@UbUV@ak@kkW@kLW¤@nV@VU@W_UVUU`VLUV@IUVõVULU@UUUJ@wmkUJ@WI@l@bkKkbVVbVbUL@UUJ@Vm@@L@xbVVVLVlVwX@Vb@bmUkbk@@JWIUVÅw@Km@UkWKXxWLÅ@UVUnWK@xkVW@KULwWVXVWzXVVKVXkVV@VUbV@UVV@@LXxVL@VbLnKVLVxXVmb@l"], ["@@@J@aU@LWK¯UUxVVn@ĠLUW@UbUUUa@KUX"]],
                        encodeOffsets: [[[108023, 37052]], [[108541, 36299]]]
                    }
                }, {
                    type: "Feature",
                    id: "6401",
                    properties: {name: "银川市", cp: [106.3586, 38.1775], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UwVK@UVWÞUbwV@knV@@KU_VK@Kn@W_XWlL@Vn@Ċw@Ula@Wanamī@a»ŋó@aÆÅɲÿUaV_°ÝaLaUmVwVwX@VUVÝ@@¥Ý»@mVÅÇJ¯XÛ±VUmUmU@KUUkKLÇxU@bLUJ@bx@xUbVzUxklWnXVKnXWlUL@V@VL@VL@mJUXmJULnn@VmVkK²mlXWlx±@@VUb@L@@VV@VVULVUbU@WmU@Ò@V¯bmn@V@lVnUnVWXVl@¦VVUn@x@XL@¦lXxVb"],
                        encodeOffsets: [[108563, 39803]]
                    }
                }, {
                    type: "Feature",
                    id: "6402",
                    properties: {name: "石嘴山市", cp: [106.4795, 39.0015], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@U¯ķó±ÇÛ¯ķmbXb@kb@Vĉxm@@UkKWXX`m@@LULV`@L@mU@lUxaÝVUX@VULxVkLWV@JnVLXVlUV@zlVL@V@bn@lU²WVLlLVbUVxUx@xǀLxôÒkK²VaU@wXa@WÈĉUa@bÈkm@¯"],
                        encodeOffsets: [[109542, 39938]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/qing_hai_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "6328",
                    properties: {name: "海西蒙古族藏族自治州", cp: [94.9768, 37.1118], childNum: 7},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@V£°@laXô±źwô@UlżaÜnKw@Uaa²LmÈLÆÈxlaUawÞmÜbÞUnJ°akôÑkwÝVğwÇ@ÝkkV¯¥@ò»nŤ¥XImw@mVwa@ÅwmLkaWw¥l»kçó»@WÑĉğ@ĉŃUwóřVómĵ»Ý@VǕ¯kÝĊÅk°ÓUklkU±IÇÞk±@ƽJ@UġIk@W¦VÑșÓÅnťKULn¯X@¯mUÛ@WÅmóKknōbxÝ@U@kw@ÿÇLţÝUkmwklċVÅU¦LkUWlÅÑ@a@ÅÑ±UóġŹ¼ÈĉmŻ@@wkwKl¯Uġ@lÇUÓ¯_Waĉ²Åló¼VbknKÇÅ@ƧĢō°Ý@ğWÅxUUm@ÝXÛWULUè¯@mbUaLbUWġxIUJWza¯by@ōÈóLU`ÇXUlUĉV¯nmÛbǕLklUĉVóaġƏbġKţnkbÝmmnÝWȭÈÝXţWókUÇl¯U¯ġUɅĀ@°¯¯VÆnmJ@ĊķnóJUbÝXUlVkL@lVxnnmb@¤Vz`ÞÞŤ@VnÆJV°bUôJkzlkl@²ó@ÆÇ°kĖÇbÛU@lmbXVkzVɅĀXˢlńĬŹ@éÅ@ĉńÆ°ğbUlɜ_°@xŦkbVbƒKĢŤVŎ°@żÈźlĊôKôb@nôxŦÆ@ôŎL@þÆb@nnWˌbÈxInaŎxlU@Ñ²±ğVUĢƨbɲ@Þ¥ôUUķWVô¯ĊWʶnôaŤˁ@£nmnIôǪK°xUXô@Ŧa°mkXÆÞVŎkĊ°ÞLÈôyVaIlwX°UVwĢÑÜKôw@nV@m°nmnÜɞ£VbmXn°ÜÒ@xx@Vb²UlbkxVnJUnVVĊ°KČm°nxÇnn¤±¦@UXVV@lVbmVVÈVxÒ°IbźaČbVw@VLƾÑ@Ŧô¯ĊkôÑ"], ["@@@@nòVaw²bVxxÜaČVô_ĊJIVmLa°@Ŏ¥XlK@klKVbUb@nUĢnaÈ@lmǬ»Ġ¯nmnƨVyÑǖĠ»ɲIn@@ÅĢƳ@¯°ôVKÈbVIÇ¥¯@Ýó@ÑnīWKkk@¥¯ÅaX±VÅw@±Ġ¯@»nWmw@@¯VUUWçKĉa±VkkV¯wx@UJx@bknÇbmÅ@Uw±U¯¦UKm¯I¯ť¼ğĊ@ÇŹÈ¯@Ý»ÇnˡJbÛèÇnÅK¯ġĠŹW¼Ålm@¤n²Ýb@b¯l¯@Å¤W¼nV@x°@Vx@lbUblbX¼WÇ²lU@¼V¦@bÇlVxUbVxÞbVbm¦VV"]],
                        encodeOffsets: [[[100452, 39719]], [[91980, 35742]]]
                    }
                }, {
                    type: "Feature",
                    id: "6327",
                    properties: {name: "玉树藏族自治州", cp: [93.5925, 33.9368], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɆÿĢV°°VÈklVôŤXÞWȮÇÞXnmÞnlaŤmĢLƐaĢôbĊUVlkǖKÜan°mĊUVVkÈWV_ôKŎÇ@z°abXyVIJĢwVXaKVbna°@VçVKXÜÞWn@VVÆwXĠÞ@Ŏ¯ƨġÆ@ÈLlmUaô»ÆkĊ±Xb°`ÔVkÈĢ@Vk°Llx@xż@ĊnÇź»ôĢ²VÆÒ@@bÆÒXklVKV¥ÆČUklnxlç¥ċç@±m¥wÅJ@VmÈIléÈa°U¥@kÞVK²ÑW°w²ÑK²ñyÆÝVmw»kkWĉJWUVÅwLmÅ@@mwkn¥VÑ»°°@@»¯LlaJônVUÅ¯U@W¯UmÑ¯¯k@WykU@¯wV¥kVwţk»wWÇĉĶçKÞÇaĉbIlU@kwWXU°w±@UKn£WĉKWxkĕVamwXw@Wmnk@aVkbĉLlImmwUÇWxnÝJn@¥ÆkwaXÜĉ¯ÅV¯¤mkx¯kķÜ²VWôŹVU@V£¥@°wn@m@¯@UbUôķmn@ÆÛ@ÇýVaUÇĊV@Çlğ¯xÝŤlVÈÈVx¤VxkK@@x@kVĖġ¥kIWbXŎx@nxÅUW`_@±UaLUxK¯WbkVlbbmLÛÆWIUwWkwÝV@kIéUbUUkV¯Km¯k@UmÝ¯m¯mLÞĉÛUmġ£UxkKm°Lwk@kVmKVUk@¯a¯ĢmóKUUxImlÅnÇbXèVVU°@@xXnm@¼ğ°@²ÆxU²WÆb°@¦llXLmĬ@ÒÞô°@È¦UJÇaLóU¯@°ġƴ@Æ@mɱJğ¼ǕÒUzƧmnmğ°ǫ¼knÇ@bġmmV@VaUaLkl@kLWō¦¯@bKUnJĉIó`ċUÛbwUw±axbñUm@@babÇÅXmƒÝÅôVbÞblUÞVÞU°VUx@UV@l`¼nL@ĊLW¤kXķWġXUVVVķUbVb@°kVVxÈa@Č¦ĊbaźJU@ÈVl@XkôaWĢÞ@laĸUÆb²mÞLĠÞÑôbÒĊaJVbm¦"],
                        encodeOffsets: [[93285, 37030]]
                    }
                }, {
                    type: "Feature",
                    id: "6326",
                    properties: {name: "果洛藏族自治州", cp: [99.3823, 34.0466], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÞVŤÈK@ĀlxV@Þ@wŎalmôLnXÆÜ@nV°@°WmVKŦLÆmȚÔÒUX¥l@ĢJV@ƾI@wW°Ån¥kÅÝVwôÈç@lÑĊĕaJnaÆLVw°kny°UnkÆVČĊll¦Vƾ@@nUźÈÇIn°XwÞKô¦VWV£@£°ókċ±Iam¯Va»ČĉV¥°@mk¥l@Ċm@aUmwX@wÆxmĢ_`VnÆbKVw@@nUVğVmVVöIll@@çÛm£UÇw°@VU¯»m¯JōĖÅLa@»ĉĢ±`U_k`ÇçókXlK@akÝÞ£WċkÝkxJÝ¯ÅwxķxmIÅx@k±J@ýŋ¤UkmV°ÅÝxkwmġnÝVU¦ŤlmóXk¤UKç@mVkK@klī£m¯VUbW¯¼ċb¯ĵam¼mVXm@k¤ÇXÇbU¯J¯¯È@bVXVÒ¤V¼kxÝV@lVWxÛ¦W¯mKnlkU@nƑUĉÝ@ÇºÛċUĉ¥UÞÅz±òL±Ò¯xX±ÒLÝU@lV¦¯ÇbkêÇJnU@ÆIxn¦@²Čè¦è"],
                        encodeOffsets: [[99709, 36130]]
                    }
                }, {
                    type: "Feature",
                    id: "6325",
                    properties: {name: "海南藏族自治州", cp: [100.3711, 35.9418], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vxń@ĊĠĊXÒ°UƾĕÞm°£nb@@LUUWÛº@nlÆǬĠ£ÞV°UXbVȂǵé@kWanm°@xzK°¯ĠVVkwLnm°kÞxÆa¥@wnĉÆ@_l_VwmĸèŤÅČU@Wn@ÑmKUnğK@°¯UÿV£nmLlUUÛé±óókkmnakV@Ç°óÝXWəÞťIţxmmVÛUVȂÓnWyȁĉkV°WnkĊa¥_K°ÿWna@mU¯wlÝIU¤UXó¥ÝLx¯WmJÇÈŹmV@ƽ@Uk¥ĉkċÅUml¯Vmz¯lUxÅKmbIbĉĖkÒ@ÇèóUxÆÞlm¦Æ¯X@x@²ÝlÈJV²klVl¯ÔlĉÆÞ°lUǖÞ@Ķ¼nUôôŚ"],
                        encodeOffsets: [[101712, 37632]]
                    }
                }, {
                    type: "Feature",
                    id: "6322",
                    properties: {name: "海北藏族自治州", cp: [100.3711, 37.9138], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ōmġxƽUm±LǿþġÔ@kxmWb¯I¯mIUx@bbŹVÇkĵblĉI¯¥Um@Æ¯È@aóUlČ»@w»wXaó°ţçÝkUaV¥ÅbÝw¯lmnKlxUğU¯°Lyw¯@mnXbl@êȁǶUWa¯VÝUğ¤ǫkÅ@mÜ¹XVV@K@ma¯¤ÝnƽĖ¯V@¼ôlèk¼¦xXlbnKÆx@bUx@nnxWJţ¦m¼ñ@°¦lUÞlÈ@ĠxÞUlxÒól¯bmIÝVÛaÝnxVbkbÇwÅÇKn±Kbb@VxLmÛŻbkVó@Źxó²Wkb@¯U¤źĊ@lUX°lÆôUlLXaV°wxUb°xÜôÈKVkÈmlwkÈKwKVUŤĉŎ»»Il¥na°LV»²¯Üy@wĢ°ĸwlwĢw°±_lVk@°bÆ¯z@l_@Ģ±lÅVlUaÞLVnKlnÈ°IllČawÞÑ°xUU@wVkmĠLô»KÞýôaÞ¥ôĀÞmÆmUŎV¥Èl°²°a²¥V@@wamm@Ñn@Æ£żVĠ£@W¯Þl@»@Uk@"],
                        encodeOffsets: [[105087, 37992]]
                    }
                }, {
                    type: "Feature",
                    id: "6323",
                    properties: {name: "黄南藏族自治州", cp: [101.5686, 35.1178], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôl²ôÜêVVkKmnU¤VĀ¯°@LmĠVnLÈL@alb@al@n°V_XmWUÈamaVIn@naV£óVWU£°axÈ¥@aĊwÈ¹@óağbm@kw@maÆw@In¯mm@UkkWÑÅ@@kċÅçVkÝJÅkVykŹl¥@¯ĢUÜX¥òýmmXÝÅlmU@£WlyXW»Åbl@aI»k@klm@UxUUV¼¯XlaUnķI@x@¯KĉUU`ólČ¯ô@¤ÞJk°xVn@mbX¯ĀL`¦ĉbml¯XUlȂĊXzmȁÔUÜVUnnŤwŦJɚÝXÞW¯ô@ÈlUbmln"],
                        encodeOffsets: [[103984, 36344]]
                    }
                }, {
                    type: "Feature",
                    id: "6321",
                    properties: {name: "海东地区", cp: [102.3706, 36.2988], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@Òb¤ÆI°ôU¼°UnnWx@b¯L@lUUWbXxWlƨnxVUllXVUnL@lȀý²KVnƾĢwV»@mÞ£nÆÞÑmLKUaVżĕWVk²ÆÝ@Xw°@ô@a°wóUUmIkaVmÞwmkny¹VÿƧnÅm£X»naV±Ýw@ab@am¯ĉVó¦kÝWKUU@WanUb@ôÇºĉxb@Ç¦w¯bV¤UXôU¤bmm@UJnbÇbXVWn`¯Umk@@bka@bÇK"],
                        encodeOffsets: [[104108, 37030]]
                    }
                }, {
                    type: "Feature",
                    id: "6301",
                    properties: {name: "西宁市", cp: [101.4038, 36.8207], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@kmKVUWkVkUmwƧXkWwXaVV@k°K@aXwmmV¯V»¯óÅJ£amX@ċVţÆķçnUx`k`@ÅmĊx@¦U¦blVÞŤèô¯Wbx¼@xċ¼kVôbÇ@Å°@nV°¦ĊJkĶalÈźUa@aVwnJ°°JanXlw@ĢÓ"],
                        encodeOffsets: [[104356, 38042]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/shang_hai_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "310230",
                    properties: {name: "崇明县", cp: [121.5637, 31.5383], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@uŏu»GPIV±ÐɃŜ{\\qJmC[W\\t¾ÕjÕpnÃ±Â|ěÔe`² nZzZ~V|B^IpUbU{bs\\a\\OvQKªsMň£RAhQĤlA`GĂA@ĥWĝO"],
                        encodeOffsets: [[124908, 32105]]
                    }
                }, {
                    type: "Feature",
                    id: "310119",
                    properties: {name: "南汇区", cp: [121.8755, 30.954], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@`yĉNǕDwǏ»ÖLxCdJ`HB@LBTD@CPFXANC@@PGBKNECCBB@EBFHEDDDSNKAUNBDMNqf[HcDCCcF@EFGLEBa@ACoCCDDD@LGHD@DJFBBJED@BGAEGGFKIGDBDLBAD@FHBEF@RFDMLE@SGANFFJBANPH@@E@FJjRIACDMDOEKLFD@DbDAJI@AP@BGHFBCBGDCC@DCA@CECGH@FKCEHFJGBFDIHACEDNJDCVFBDCRKRLDLITB@CjNJI^DBCfNVDHDFKHAFGDIICDWBIF@@CFAjFJNJBBHD@CJ@AEFJ@@DH@BFBCPDBMFEQGDIFCNDHIP@HDABFACBJFHEBSZC@DP@@JDBƤ~"],
                        encodeOffsets: [[124854, 31907]]
                    }
                }, {
                    type: "Feature",
                    id: "310120",
                    properties: {name: "奉贤区", cp: [121.5747, 30.8475], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@~T~JjZdDbLXDLCB_J@@FHFZJJIAGH@HGR@BENBLID@@LFCDF\\FpDBDb@FAHKFE@dEDDdC\\GreNMACVMLBTMCCFCEGFAA@DAFDLMHA@OD@BMEWDOC@AS@KGAI_DcKwÕísƝåĆctKbMBQ@EGEBEJ@@MBKL@BJB@FIBGKE@ABG@@FMFCPL@AjCD@ZOFCJIDICIlKJHNGJALH@@FPDCTJDGDBNCn"],
                        encodeOffsets: [[124274, 31722]]
                    }
                }, {
                    type: "Feature",
                    id: "310115",
                    properties: {name: "浦东新区", cp: [121.6928, 31.2561], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@EN@JJLNHjLJNR^GRYVBNZJRBV@PDvbLNDN@LGNER@nCNQNuT_TIVFV\\Z\\XnDrI|[Ʉś²ÏJUHOƣ}CA@IO@@CYDATGFIEDAEBBAGCO@GJMCEDCJRHEFANOCADAEG@@CI@FE@BDIC@AGIAIMiEEB@DE@AJCXJDCJEHGBELGCUCeMAD]CIJiM@DSAKJKCLQDQACUECDMIFCBDJGECHAEIWCK@GLMCCGEACNKCEJG@MMBMC@@CIJUINT@JAJSTEPZZCP"],
                        encodeOffsets: [[124383, 31915]]
                    }
                }, {
                    type: "Feature",
                    id: "310116",
                    properties: {name: "金山区", cp: [121.2657, 30.8112], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@L@BIHFN@@EE@@EFBDGDAADVDD@@EF@CA@IIsRE@GDAF@BF@CV@|FBCHBLCNHAFCADBMDCFZXHILBVEEQA@MWFARJJ@DCX@@TEFBLHAAERE@AJABRPBNK\\BrJ\\VHGND@CNADKDADQjGAGNC@GJ@FCFFHC@JF@@dLBDSFADHVG\\DTEPDDHJALIJkJDJCDIPE@YDCBiK@DONE@EH@BAF@HLJA@EIA@ALKNA@@FIFAFHR@NALadsæąyQY@A±DŉXUVI^BF@FFF@HBJEDFFGFEBSRkVEXGHFBMFIVW@GAEEFOIAIPKABGWEKFSCQLQBSEIBC\\FdBLRR@JGACFDDEF@AWB@LJJYNABBA@CUEGPaO_AIE@MYMFIGAEFECHSAAKAO\\[JEDB@E@MMA@@AGBKMGDFFCDDFEDFJF@NPBAFLHFH@EDDHBADDC@DDCDHHCDDFDABDAD@FEFOBCJ[D@HEDDNJBDDHABJIBBvGLBJAH"],
                        encodeOffsets: [[123901, 31695]]
                    }
                }, {
                    type: "Feature",
                    id: "310118",
                    properties: {name: "青浦区", cp: [121.1751, 31.1909], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@RUNKdOFDJCbRFMLAHPLDN@JGL@@APBWYCKN@TU@SHGCEJIDIJKVIZVNM`iNY@CIE@CA@KBOEGEUFCCSADEIEFCDDDIDDHC@CKIeDCG@IG@DHWFEEGCH@@GO@@O]CNpeEQDBFME[JC]DGF@CKOA@QSB@GB@@GW@@ED@AQIJIAAFE@@DO@CFI@KNG@CDACAFEGKGBEGBDCCAIFCCLIECFI@MBCLDHGNAHSF@DMB@EEKBA@@C]DEICFG@ADBHGFKCDAKKHKD@@FHGAANGEEFCHKCECBCKG@ADKCNE\\[A[I@@mGBDQQEO@BCE@AI[AML@JGACLOAFKEMM@EQKC@CUCBCCBCHEA@FF@@FM@GEAJK@GNF@EXPH@FD@M^@HIADJCFDBER@DK@@DE@CAKFOCCBDHIBCNSB@GFC@GQEEOWFICGDUAEJIDBTAHJHEB@DIF@NE@H|HBDBEH@DKBAHEF@HEEUB@FGFGCCCE@AHOB@NH@PRLVNNFBX@RCPbAvMtBfH@DJF@ELBFA@EH@HNED@FFB@HLC@CJ@@DJ@PIRf@HE@CFF@GPHD@DKE@FFBEFFD@DEFCA@DD@IjCRFBAHFDKD@HF@@PM@H@BlbDJDBFEF@DLXB@HCD@@IFCBIFEJD@FDC@FBALLF@PAACJERACAJCBD@EL@JD"],
                        encodeOffsets: [[124061, 32028]]
                    }
                }, {
                    type: "Feature",
                    id: "310117",
                    properties: {name: "松江区", cp: [121.1984, 31.0268], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@DLDFRN@FNELPBDKHB@INK\\BBJF@ADP@RFCRHA@nJ@B\\[\\MFLDBCH@DLDADFGLEDFFMHBBGH@EC@GLLLCBLDHEAGBCH@DEFJ^C@DB@LAFFA@CNE@GTMBGHKCAD@NEJFDKJDDJEDBCDHAAFLHFHBEBDDCH@LMJ@DEP@@CF@BEJBJIBRC@@FX@@HA@@HTA@RPBDLE@CHD^\\INFAERCfFMo^D@PP@@HG@HDFFXECGH@@JDHfCLJ@DGDCCCJCCEDJFCFTBDDVEHFPFLAB@NBFCFKFC@CHIACNOHWHCAAFIDD@CDAGEI@ACFMF@R@R_@GQED@EGFEQEDE_IAHKAEXCQUOQCUDEN@ZI\\DDmAMHCICDSOC@EG@BKHIGMIBCGOCSF[CUHCGEBCTKA@cE@@IGDEEEDI@@HMDBHiHCRCBCLMB@DMCGH[UqI[AMLOAAQIB@BQFBFGBAKFE@SW@CDI@QIEBNXB@FRUFKAGJYWDENCCADBBEMGKDGAAD{EU@@DAEE@CB@HQFJt@JDBE@@FC@"],
                        encodeOffsets: [[123933, 31687]]
                    }
                }, {
                    type: "Feature",
                    id: "310114",
                    properties: {name: "嘉定区", cp: [121.2437, 31.3625], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@F@LI@IDKJADKIEJICADGACFECCJ@HKCAFOHAJI@aCBEE@ICAEB[GFGCKL@FGEIFADMLCAEJM@ELQECEIG@BE^QKKLQCA@EHBIGQ[GEHOMGGDHKH@JOECFCjCBEFDNCACMBCILGTABDLEEOEIG@GFIMM@CGKFBFCDE@@GEAGEEACIcGaHMFITIHDN[AKF@FS@OA@BK@IHM@KCGOKBENaQIDECcPMLQVFHFB@BFBKLGD@FAJOVGIACQ@A`LPCB@JEF@RU@ANS@@RCL\\HIFpRBFRBBDKLLDADJDGBFDABHBEDNF@DGBBBADKDAHC@\\JJFBDEH[DEFDH\\LX@XLBLbT@DNJLDCEL@VJABJNDHB@HBHYFBAA@GNFB@@AFB@AFABFLFBHFCL@HJBAFBLC@DN@HN"],
                        encodeOffsets: [[124213, 32254]]
                    }
                }, {
                    type: "Feature",
                    id: "310113",
                    properties: {name: "宝山区", cp: [121.4346, 31.4051], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@mÖoÖi½[s[YEUJU`SCIEBCCWJY_LIICDWU@@FaBCJIB[ICH[@@CDKEE@MK@@IMCAEBCH@AMFI@SMGEFGB@FK@BHCAIFJNQD@FEBDFMBKGACG@ECWH@@CDDTOEEBGEK@GC@EE@GPHFR\\JHGA@FDBKRLL]RAFH@FJFDKR@FINBFKDCNEBFJEHK@DLEH\\HFADB@JFFDA@bIJGBEPDBGLI@DDEFBDCHDBIJJFCLIBCL@JKJE@ADHDBHJ@HIBBDFHBBAEIJ@BJFAVL¢"],
                        encodeOffsets: [[124300, 32302]]
                    }
                }, {
                    type: "Feature",
                    id: "310112",
                    properties: {name: "闵行区", cp: [121.4992, 31.0838], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@T@@ELE\\BCMJGJSNEbGdHDJFBJAFIEIFCEWG@@gMENSFCVJFAxR~B@IH@AIiI@GE@FGEAFQPDRiV[\\DFSGMHAXHDOMCJCDETBBNVJJI@DD@ANNNH@FILDDMFBDHNDHKL@XDFGLD@EHGFD@DDB@CDDHCDAEAHG@ABOJ@BIaC@CECLKPFNCDCJBiQEIF@@@OGBMIAEEBMTHF@NKEC@QFEGA@EBCKAACHCLJHEFHHB@AFCAIEACIC@HG@KCCDC[ECEED@KC@KJMAAFQ@GHG@BHIJYIGE@EI@A`KDWCaKcCiY}I}S[CYJM@CFDVPRRVWDFLBBG`JCFRFEFFHC@RF@HQ`Q@E@ENBDJ@HFCB@DCCEJBBGDGXMPBDGJ@DEDELEDMA@DJF@DMZ_jMNYUUJILCJIJDFGH@TSVM@DLXZ"],
                        encodeOffsets: [[124165, 32010]]
                    }
                }, {
                    type: "Feature",
                    id: "310110",
                    properties: {name: "杨浦区", cp: [121.528, 31.2966], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@V@CXJDKJZ`XIDDFADJvSRMDM@mFQHM@KCMKMuaOCU@BDAJSX@HKJGD@PNJCJWAGT@R"],
                        encodeOffsets: [[124402, 32064]]
                    }
                }, {
                    type: "Feature",
                    id: "310107",
                    properties: {name: "普陀区", cp: [121.3879, 31.2602], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@F@@FHDL@HFFAPFCSDC@@XGFDH@BDLHNACEFA@ERCIMJEDBAGL@@EHAFENHHJ\\ONQBQCIBC[MKACKI@GGGH@I_G@CW@[DMHCDIBMTDHN@JNHEH@FJFPKFACSBKHDJNABDMDECAFiDEDFDIPG@GLHCNH"],
                        encodeOffsets: [[124248, 32045]]
                    }
                }, {
                    type: "Feature",
                    id: "310104",
                    properties: {name: "徐汇区", cp: [121.4333, 31.1607], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@RADL\\NCPHFfLJaJ@FWLGMGIK@IFMDOYYFOTSBI@IMSAMSACFIDNDCPWGGBHNET[CU\\QjOCERFBEHF@@HjJBJG@@J"],
                        encodeOffsets: [[124327, 31941]]
                    }
                }, {
                    type: "Feature",
                    id: "310105",
                    properties: {name: "长宁区", cp: [121.3852, 31.2115], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@HFFB@HF@DCAELENSJADCNG\\CX@@D`H@JHGHHJ@BINBFUGEDO[MCKQB}AwQEBUIEDMTNF@hH@FXEDFJEJIB"],
                        encodeOffsets: [[124250, 31987]]
                    }
                }, {
                    type: "Feature",
                    id: "310108",
                    properties: {name: "闸北区", cp: [121.4511, 31.2794], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@CSG@BQGODUPWTOBQAAFMECKBGEMFKEOHADDJARMR[PGI@TEJBNG@ADBFND@JL@@NFFCL@D\\@DG\\JJADI"],
                        encodeOffsets: [[124385, 32068]]
                    }
                }, {
                    type: "Feature",
                    id: "310109",
                    properties: {name: "虹口区", cp: [121.4882, 31.2788], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bA@E@QHSXBDIMI@OHCLI@GTWBIACQAYIOFGCENBBARSPOXCVHPARH@DT"],
                        encodeOffsets: [[124385, 32068]]
                    }
                }, {
                    type: "Feature",
                    id: "310101",
                    properties: {name: "黄浦区", cp: [121.4868, 31.219], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@NEHFLAFDHDPEAMZUHQQ]IMKJG@EPERABHBGRUCCNGV"],
                        encodeOffsets: [[124379, 31992]]
                    }
                }, {
                    type: "Feature",
                    id: "310103",
                    properties: {name: "卢湾区", cp: [121.4758, 31.2074], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VDHQGABAFQFOH@LIiKKHEXI@IbAFZB"],
                        encodeOffsets: [[124385, 31974]]
                    }
                }, {
                    type: "Feature",
                    id: "310106",
                    properties: {name: "静安区", cp: [121.4484, 31.2286], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@DLLB\\NPGLFHUDMYABEeKEVMAAJ"],
                        encodeOffsets: [[124343, 31979]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/shan_dong_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "3706",
                    properties: {name: "烟台市", cp: [120.7397, 37.5128], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ŤLLllVń²è°xżĢĠÆlÒŤbV¤ĊXnlĢVĊÒÈ°ĊŰÞèL±@џn»VUźċ²»ÆkôVɆkĊŃ²kŤVVwUUVmUa@KkU@mUmmk@UwUkmW@UVIXa@mw@aKULax@Uk@UbWU@yULmK¯@kXVUwm@@JUUknWKUVLUbU@wWykIa@w@mUI@aUVynIWak@@Wbl@@knmK@wnIl°Kna@V¥ğ@ġUķ»¥@UōJX¯¤k@wmI¯k@mwak@@lX@bUJ@VbknWxkLkxlLVlkLmb@bU@bU@VbU`Vb@nL@mbU@VnUVmnU@mm@kIUWVIUKVkkUJUnmL@VmLUaVWaXamU@U@KUUmVUJUVÇwğnm@mXĉV@l¯xnô"],
                        encodeOffsets: [[122446, 38042]]
                    }
                }, {
                    type: "Feature",
                    id: "3713",
                    properties: {name: "临沂市", cp: [118.3118, 35.2936], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bXll@zlV@lXXmkbVVlU@Vn@@Vmb@XKVXWJ@XXl@ÈbVLUl`@XXV@VVUxVbUxVb¦@WnXVJ@bnVUzl@°ÆxUKlU@mUUnUlUVWVUnVV@XX°V@Vll@VkaXVl@Ux@bmbXLlKlb@b@bUJn@@b@n°x°K@an@@UlLVKVbXb@bVVnK°LVa@UVa@XwKVxnLU°@naV@UWUkWULmVwÝKUUla@aó_@mK@aUU@WUkwVm@aVI°W@@IUw@a±¯@¥kUVUm@awkw@K@kVKk@maXalI@alLWXblaVLVUV@LnK@l@waXaLlnUlLmV@n°J@_VmnIVym£UKmI@WnIVm@anUVmÇ_kġIÅWUXÇm@U@Ý¯Å@@naWIVW@IkK@klKn@naWImk@abkKkLWnWkLWmk_@UaVUKmLUw@mn£WwUmUaóV@UkUm@UKULUwmJUX@WW@XÒzVblJXWXk@UVWKX¤UL@xU@@VUaU@@XmVkLmWkXUyÝLmKXnV@n@lx@bWLnVVn`knULmxUlWLXVb@VK@z¯x¯¼WxKUn@bk@lVVVz"],
                        encodeOffsets: [[120241, 36119]]
                    }
                }, {
                    type: "Feature",
                    id: "3707",
                    properties: {name: "潍坊市", cp: [119.0918, 36.524], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l@@UK@@L@bX@@VlL@JLUVnX@`ÜXn`V²mJ@bU@@nb@l°xnnĸVÆ°@Ċ£Þ@lWnÑnkʶJmó°w@kk»V@»¥k@V@kw@wVmaÅmaô£ŎXI@mlnKla@mV_UK@kUkw@alWIU»m@WUIl±UUÅUbkJ@a@wUKUaVIÆmXIWaka@m@Ul£XKVw@UIJUkmJVkU@aWKImV@UxmL@bX`WXU@U`ÇkUak@@°UblXkmLUKmL@VULóVk@@Vlbn@Ub@ċaUJUbIUlVLUVVbVKXVlVXU@mb¯@VmKUwLWx@Ub@VUb¯KmLUU@aWaUaULkK@Vm@@b¯L¯w@ma@m@UUU@U¦lJUXVmkb@nmXVWkbIVxUV@VUbWLXVLW`Ux@nk@Vn@x@VkJ@V`mXk@VxV@lVI@VULVUIV`°bVXXxV@VWVnL@xVUb"],
                        encodeOffsets: [[121332, 37840]]
                    }
                }, {
                    type: "Feature",
                    id: "3702",
                    properties: {name: "青岛市", cp: [120.4651, 36.3373], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@nUJXL@blVUnIVlIVJ@UxWLk¤@V@nlbXbWJÅnUJVbVL@x@blIaÆVVVk²VJ@XnV¼JkX@blxlV@VLU`@nkbLkm@nWJōó¤bnÆbUn@xlxU@l@¦@¼Ul¼ĊUnW@nĠmÈxUVIVnUVV@LV@nVWbXbUVbnK@UnKVmVIllUVLUJVXlJ@nnV@nmVUUm@Vna@K@mUaV_UaV@aV@@aanlKUkKklwlKXwlma@UVI@akW@l@bnxl@°nJxl@°£WŎIUÑn»lamô¹Ŏ¥VaUUkmkġWɱIUUŹ`@kk@ĉƨřV¥_Ç@Ĭ¤ÝL¯m¯£ƽóķwUW±ī¯kōaĉĕkğmó°bW@UKkLUaVmz@V@UxVn"],
                        encodeOffsets: [[122389, 36580]]
                    }
                }, {
                    type: "Feature",
                    id: "3717",
                    properties: {name: "菏泽市", cp: [115.6201, 35.2057], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@¥IVUÈmÞ»@UlU@Un@VW@UVmkk@aVUUKVÝ@UVknK@UV@VVnIV@wnmwmKXaWaXI@UV@Vy²blkVKkamU@kb@Um@VmUkmKmkXKWwkU@Ul@UnK@UVUUmKXwUVLwKU@@Wl@@wUkV¥@@I@W@_V@VWUw@UUa@aaWa@@_mKUwl¯amzmV@WKnU@kWLķaUKbÝVmV@UWÇbÛ@X°UbW@XmVlk²UJUbmLÇxÅWUzl¯Ll@VkKXUbWJ@bU@¯@kbLmKka@l_WXºVbUz@Jn²V@¤lXnV°Ln`WbXLôVlKVUxXnlXLlU@bVV@XJWLUVnVV@@nl°nnVKÈbVXÆJU°VnXVkV@@xVL@Wlb"],
                        encodeOffsets: [[118654, 36726]]
                    }
                }, {
                    type: "Feature",
                    id: "3708",
                    properties: {name: "济宁市", cp: [116.8286, 35.3375], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nam_nKlVLXaIl`_@KVVXI@m@w@@k@Knô@n`VbV@@LL@KVVn@VX@VLJl@VUUU@Uam@UkwKWaXamkJmIUVUÈblaUnV@kVKl@@lXL°kVJ@VÈnVJUX@VLXl@xVLnU@VKV@aIUaV@bĊUxKkVJXUlVUVaI@WUI@KlUnwmWk@WXIWUL@Wna@Um@@UVkUUlanWW@kkU@ykWkaWVUlÝbUU@kJUIU@@JmaókLKÇUUkKWLk@WbkUUabmKn¯°¥V@XwV@VanaVaU_@Wlk@WÈ@VUÈVVÛmaklKÈ¯lLVUX@lK@aX@@kV@VmV@VwnJV_UWUwXam@kW@wVUkKVIUUVmU@UV@IVK@aUL@aV@LmUKmx@ômLkUWJ@nXmlUxUL@VknVUU@VL`Ub±LkV@kUKÇbÛ@UWó_mJ@Wk@@X@VLxUKVWxLVnUV@VmL@Vk@VlVXxWLnlLnVlUnn@@VlaV@nlbULkl±aUzU@@VWJXbWbnLnxm@xUmJUUU@@VmLUl@VUÞVLUV@bllUn@VUXm@@VkV@VÝ¼ÇnUVJ@¦nnlnVlL@Þb°KVV"],
                        encodeOffsets: [[118834, 36844]]
                    }
                }, {
                    type: "Feature",
                    id: "3714",
                    properties: {name: "德州市", cp: [116.6858, 37.2107], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@¤@VmbVXnVVbVJX@ll@zlVInl@@bVxUbĠl@ÈblaIxXVWb@L@nULWVXXWWLnL@`@LUVVL@lVnJU@UUkanVôôb°¼VÞXIÜbČabôWXÞWÈzÆmnLVJ°ÈnlV²lbnW@@UUVmnwmkkKWkla@mVIUKUaaUwmnJU@@amIk@@bVlkX@mmUklUUa@_UaUUV@wwWkXmW@I@WUaÝU@UXaWUU@UUVW@UUUWUn¥nUVa@m@k@alU@wkLWa@UUm@@wnmUwla@anKn_@alK@Ý_@@WUUUmlkaIyU@UwU_Wa¯yU_mWUwkImm@InWWUk@@UVWVkW¯U@VL@b¯b@l±¦@VV@lUbV@kxVnUl¼XV@b@lV@nIWxnb@UULxÅxm¯aUwU@mUÅVÝKULm@bmKUXó@"],
                        encodeOffsets: [[118542, 37801]]
                    }
                }, {
                    type: "Feature",
                    id: "3716",
                    properties: {name: "滨州市", cp: [117.8174, 37.4963], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vb@`bVkVlnV@nlWUk@al@nJ@bV@InmVxbVbVLUJ@nkblXlLnlmxnUV@V@mXnlbĸ@nnVxb@lnXV@UJ@nVxxnxVbÆVn¯ƒĕ@@wÈçUÇlķVIb@Çmk@¥k@UkUK@aWakUóJW_UW@wkkWK@U@K@XUUkmUUalKXala@U@kkWlkÈl@kVmVIVmU_awnwVW@wwU@wU£wkJWIyUI±bkVUJ@nmVUklXmx@lnbWkVUkLWxkKUUmUkbJ±LÇxUKmkUmkkWamUaVkJÆ_²KĠ@UW@wU¥nUWwK@aÝUkÅVaVK@akLW¯I@bnbVx¯JWñWbUL@nV@VmbkUUV@IÇak@@bWak@WJUJWL@bXV@@VJlb@zUlUUImnbVmz@°UV@VbV@@V@L@xLmKUnmJVXJ@VkLW@UVUL@b"],
                        encodeOffsets: [[120083, 38442]]
                    }
                }, {
                    type: "Feature",
                    id: "3715",
                    properties: {name: "聊城市", cp: [115.9167, 36.4032], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ô@VWnLan@VKÞLÆUnVV@xVbn°ÆwwKVV@maXwmJU@@k@aWUk»VUmlw@UVa@kUU@²¥@k°a@aK@UU@mmm@ówÑ±¥¯@@wKmwI¥kU¯UmakJmIUaVkKUkm@VUUaU@UaKUK¯@wUVUIUKVwk¥wbV@xn@lWnXxlL@`XlJX¦l°XxW¦@¦Uln@@@Um@@VXVmx@¯bllUnUJ@VULVn@bxVVL@bVlnVVblVÈnVlIVJLôlJ@xl²"],
                        encodeOffsets: [[118542, 37801]]
                    }
                }, {
                    type: "Feature",
                    id: "3705",
                    properties: {name: "东营市", cp: [118.7073, 37.5513], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ͬUǪlô@°Uw°ōĠ¯»Ģç»XÇ@wwƑaÇkwVƑ¯@ÅķUmm¯w@ka@mV@@anIU±m_ÛW@_mWVUK@IkK@UW@@a@K@L@Vk@±U@UV@lm@mUU@kLmxV¤@xVx@xUXmxxbV`UnUJnU@lÇkkllX@l@VkbWbkLVbnVVlWV@@L@VXLll@xVXX`ôIlVXb@bVLVll@@¦nlÈ@aUJkĸVÈÇè@x"],
                        encodeOffsets: [[121005, 39066]]
                    }
                }, {
                    type: "Feature",
                    id: "3701",
                    properties: {name: "济南市", cp: [117.1582, 36.8701], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²¦Òôxn@nn@V°VlXUUX@Vl@XVmX@JnnlJVxnXV`°zXbV`VxV@zJlbkVnVV@X@`@ÞkL@bm`mL@bkbxnVm@xn@VV@XbKl@xkV@b@l@nUbmVm¦XVVV@VUXVVV@XVWb@VÞVVb@X@JnXlWXx@xUVV@aVKVUX@lK@UIUWnIVmnLK@w@K@UU@a@UVU@¯nyUmanVJVVk@ykaIU@@WU@aXKIVXIl@Xb@al@Èb@JVUlVna@UmU@VKXaòX°IUwma@aU@UU@wVW@Ñw@aI±`kbUkwUmJ@UkmÇUUkmKknUV@mJUkaWka@KmKkULmyXa¯_@WmImmbLmUkVUbUVJbUkkWJkUlIUmkLlK@knaVmkI@mWaLUKUU@@VmLUVLWK@UUUWUkkVmx@Vl¦"],
                        encodeOffsets: [[119014, 37041]]
                    }
                }, {
                    type: "Feature",
                    id: "3709",
                    properties: {name: "泰安市", cp: [117.0264, 36.0516], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n¼WnxL@x°@¥Uk@nwlUVlXVV@VXLKVUnK@UV@VVLKXb@nlJUnmb@lkLKlVnJklVXIllVaIVUValUnVKannnJ@X°`WbnzKlVnL@LbXlbVlnI@VUU@UmV@U@U¥@VmV@@_Ua@m°@@kmUUm@UVmn@nX@@aanJVUVLmlIVJn@nkVLVa@KVmVLXVVL@@U°bn@VaV@@K@aVkbWaXUVymU@aUImWX@¥UaVwUaVwUUU@WW@k_VUKÇa@nmxkV@LVJ@XJUbVkUWVUIlLwĉVaU@VbJ@bUUL@mVUK@wWkK@UVWUIÇm@UUI¯lWK@kk@UL@lmUVkbÇaUVVnJlInWbXbLxVln@VbV@VUV@kIUK@UWm@UU@LK@KU@Uam_ó@m@L@l@@x@nWJUU@L`k_JWbUKkmLn`mb"],
                        encodeOffsets: [[118834, 36844]]
                    }
                }, {
                    type: "Feature",
                    id: "3710",
                    properties: {name: "威海市", cp: [121.9482, 37.1393], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VbUnVVUxĊ¼¼ô@ÞÑ¯WǬLŎUÆW¹UÇō¯ÑÝkţţóġóLł̥Uwm¥kÝmkkKóbÝ@U¦@mb¯LkmJ@xLmn@lk@a@X@lXbmJUzV@bVJ@n@xblJXzxV@VaKVUXLlmVV@In@VxUlW°@nLVK@zXVVal@@VwbVKL@bnx@WbUJ@VnXVlVxl@nnnV@lV@L"],
                        encodeOffsets: [[124842, 38312]]
                    }
                }, {
                    type: "Feature",
                    id: "3711",
                    properties: {name: "日照市", cp: [119.2786, 35.5023], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UaVUUKVkJVaVIČb@Vam@ka@Ul@UôVK@UnKVLnKlkWVa@¯l@VbÈlV_V@XWW_@anKVwUmVw@@UnyUVblKVLX@aô¯ó¥mÛĊÿÈ¥Þ¹lUī¯Kĉ¼ʟbÇVUUXmakJUnmV@bUnmJ@XnJVLn¤UzmJUn@`¯ImU@nKVkkmKWbb@xk@mL@KUUVUKkbWaXkK@bkJWbnbl@UL@lL@lxx@bnUVlV@¦²°@bVx@J@¯XUJ@bUnlxVX@VV@bL@nô`@bkbVVÞLxnU"],
                        encodeOffsets: [[121883, 36895]]
                    }
                }, {
                    type: "Feature",
                    id: "3703",
                    properties: {name: "淄博市", cp: [118.0371, 36.6064], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nlKV@nVn@@kVU@²VVaU@wmKXU@UUWwUW¯aU_JUVVK@UJU@kUw@UlnWU_@lI@U@wUml@@mVwX_KWUXKVa@UVUUwJlaXWUn@mlanUVWkIV¥V@VVVI@a@akakLWKna@aVwk@WUbUlk@k@U¯UWWU@mUUVUXkVmVVV@nkVLVÅw¯k@WVXbaUl@bV@@b@xkVVXVxkJ@nk@@VLUlVbVXUVVUzVLVbUbVVWVkLmkJ@n±@UxUVVkV@bx@ÒUX@xVVV@°JXlK@bULUblÆÞV@bLXxmV¦V@xXVğ@±LÅ`IUlVbnbXllVnnlVLÈwK²IlanVVVlLwXlKVlUXma@knwWlkVnU@mVIUl²aVJzXJlI"],
                        encodeOffsets: [[121129, 37891]]
                    }
                }, {
                    type: "Feature",
                    id: "3704",
                    properties: {name: "枣庄市", cp: [117.323, 34.8926], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@yUUUkl@@aVmLXw°»°w@yL@UUaWXKVknwVKlm_UmmUXK@aw@k@mUWmUL@@@£@KbÝV@akwaULmbUKLUU@lm@°mL@nUJVxVXU`mIUxU@UnU@@lW@@bkLW@UVkKÇ°kLlbnUÜÇUUVÇ@@Xkl@XV`UbmbUbU@WxU@¯¦m°nLaVblVXal@XKlLVVÈLKôlnbI@V@VJI@lVVÞaVkXU"],
                        encodeOffsets: [[120241, 36119]]
                    }
                }, {
                    type: "Feature",
                    id: "3712",
                    properties: {name: "莱芜市", cp: [117.6526, 36.2714], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lmnLVlÈVln@VnIVlxVla²_JlUUUVVw²@@mlInlKXUUUVaUaKUVyUUWVUUaVkUK@l@@mlIUwUWlU@w@aU@@LU@Ubm@¯a@V@UKWUUKUn@LUbUKmlm@UIkJnUKUVmIb@b@mWm@Un@VVnnVl@¯@@nVb@`U@Un@¦@V@VUVnV@"],
                        encodeOffsets: [[120173, 37334]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/shan_xi_1_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "6108",
                    properties: {name: "榆林市", cp: [109.8743, 38.205], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ýVnIW»W@»kUÇLÝU¯¥ÇIUWWÑUWwX¯m@»n@ÜÈķô@a±kČ±wÑmwçċmU»ÆkkVyImĉÿ@Ý¹WnwÇVÅazmmĉ¦ókVmxxU¼VkVm_UlVlk°IVkmJa¦kLmmV@XmKnlUôVXbb@UaÇLğÜÅw£mKnmċwÅ@UkbmaVn@m¯aUJm_k@kWXyl@@kÅamwLUÞmWÅzUKUk±@b@nnKbX¤mzVVxÇn¯@ÒknWVUbkķÈÑWkk@VaU@mUkbÝÅ@Ý¥ÇbkĬXV`kLÇVmalUUanV±nwmkJ@In°KVw¯UnÅ@¥U±bUU±mWbÛKWnUm`UƒVK@bmnmÈÅ¼@VL@xxmŤ°n@VmK²VllKkô@êÜV@VXLlm¦UV°Ș¯²ÿ@¥@ÆĊ²ImĶnnb°bKVĸLlÞ@UȮÜ°IVÞÝÞlx@ķĀWUxèÆ@°XnlĊĖ°mnV²V°ÒÆ¦aÞ@zll@bÞĀl¼nKĊ¼óÈb²±IǪÒ¯ĖV@lxnVlkJlaXwŌĉ@VnlÆĕUÆLèŌŤôxÈlU@xlaUċĕXmIWmnkVVVW_@aÈWUUmk@¯çVm»±W¯n¥VmkXw±ÇVw"],
                        encodeOffsets: [[113592, 39645]]
                    }
                }, {
                    type: "Feature",
                    id: "6106",
                    properties: {name: "延安市", cp: [109.1052, 36.4252], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@kkÇmImUwVkUU²WmVkm@m`mIĢĕUVa@mXÿVVkyUýĕ@l_UmnWKVkţ¥awğ@@aôWakUma¯¯a±£kxmmxUwÝ@xmUb¯KwóÝ@kmm¹Ub@lklVbmnnVUV@xUknƧJUX@LÇWkwLķƧÅwWJkLkþĉxWzJUnÇk@Ɛk¼ÜÔÈKè@°lÈÆk¦ln@l¼@l¯L°UUVÇ°¹`m¼mXkbUaV@U¯x@¦ÇUUmlmUVmnnmlkw@@¦ÅÇLmx¯Ikl@¦mÆ°VUx¯Lm@JInlmxU²mVbkVbUnÈlKU_WlīÈaÞ¦Æ@ÞlanV@VUbl@XlÇÒĸlVaUXlm@Ñ°ÈmUwUnyW£amL@ma²@lVVLÆynXÝVKnxÆb@lk@WzX@lln`IV°b@nmUnbaVlÆ@ČxmnnL¤ÆxĠÛÈKVb@aWaUókVmnL@WUnnKl¥bnIlU¯JlUkVkn`lUUV»wnwlUôĊ¥nnyÆb"],
                        encodeOffsets: [[113074, 37862]]
                    }
                }, {
                    type: "Feature",
                    id: "6107",
                    properties: {name: "汉中市", cp: [106.886, 33.0139], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lKnb@nlWb°bkxĸwVb@łnlĊ¥L@XlÈVblÈKbakVwôml²`n@nVKlk²xŎ°¦VUJĊw@çnWçÞVkUóÛ@¥kwUmX¯WÑk@UymIUwlUn¥mUk²a°¯V»@ÝVÈÝċÅÅVl»@l@a°±@_kammÅba@m@Å¼KknõĠ@m¯LÅwLVxmb@¼kV@mw¯wVakKW»X±¼¯Vkxb¼W@nx@x±bóakb@ÝmU@ķÓÛLkVUmk¯¤ÝLUlÝ@Ýzx@x°bmX¯aUJW¯k@bÇWwÛwWx@XWlb@VÈUlwLnl°VlUô¦U°¤VUxVXUxlbkVVlI°ÅVlU°m@kÇU¯xUlLUlVL@b°ĠInĠ°ÈnK@xÞa²naUyXUKVkWô¼Èaz°JXUVÇV_JVz@nb"],
                        encodeOffsets: [[109137, 34392]]
                    }
                }, {
                    type: "Feature",
                    id: "6109",
                    properties: {name: "安康市", cp: [109.1162, 32.7722], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bĊaƨèwôô¼b°aXVÞVUÞ@aXm¥kImx¯¯V@anU@UÇéğL@¯¥V£m@ÝÈbKX°wČÿb@xÈblxÈ¯ĊmÆUVnÈ@ƨÜLĢ¥Źn°VnnKaô_ÈwUaXmnW¯klLXÇō¦ÝaÅVmbğUn¥±wÅéVan¥U»°am¥£Ý@wVw¥nUÑUmmVwmķIÅaóVWxkblb@ból@ğÒĉ¤ċX¯XxkÇ@óÆÅx@xķ_kmÝÇ£kblb@`¯²@bk@k¼ÆUČÆÞÇÞU@U¼¯°±bVlnm¦kVVxnJVz@lÒXW°nVlx@¦ôÜVUlÝXèm@è"],
                        encodeOffsets: [[110644, 34521]]
                    }
                }, {
                    type: "Feature",
                    id: "6110",
                    properties: {name: "商洛市", cp: [109.8083, 33.761], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²nlôb°aVwnKÞI`°wXôw°VĊ°@ÅÞÆVzÞK@x@aLÅ@b@nLl@lnmnLVwabVVnbU¼V°blbÈ@ĶŦb@nÇ@amIyUI@ĠVmôUVwkwlanJ¯lwó¥@an°J_@nóƒó@£l¥UwmaÑ@Um±V_J£JUW¥¯@_k¯¼mUVUè¯b@wmL»ğVmağI¯¤ċIUWXKĵ¦ķaJUbIlUóVmk@WÅÅÇ@mUÅVnĉÇ°kwÇa@waċĀ¯xWLÇa@ÞnU¤°¦@ĠKÈê@VmV@bU°°nwlJn¦WbÝ@V"],
                        encodeOffsets: [[111454, 34628]]
                    }
                }, {
                    type: "Feature",
                    id: "6103",
                    properties: {name: "宝鸡市", cp: [107.1826, 34.3433], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@£@°Ib@¯°ynŹaUlU£Umĵĉ@@ylUÞ@@£kWU¯WaU£¯ÇV¥@kb¯wn¥ÇkUÇnU@¯±kULm@m±_kónUxlbaÇLkUaÇkW@Kĉ¦km@ŁUaķxlw¯aXak@mmakL@mÛ@¼m@lXV`nKU°°@²¤UÈ@VxmôxKlVV²aVwXlaVlx@UVnÇnk°VVLlkIJÇk¯V@knÆn@lznmlVkzVVVx@Uxz@x±¼VxxUlkb@¼ČkVXlĠkôV²wLUKlwJ@aIV¥Þn¯Ün@nkl²kÆ@°aVbnI@Ťn"],
                        encodeOffsets: [[110408, 35815]]
                    }
                }, {
                    type: "Feature",
                    id: "6105",
                    properties: {name: "渭南市", cp: [109.7864, 35.0299], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@ÈôLxU°Þ@mÈnl¤nUôLwX`@ÞÝLUmLôôbVbnºlnÞ@ôx°LanVwÞ@Vxnwnlw²¤b°°bVnlXbó@bĠ@xb¦ŤVXġ£W¥ƽɽó@ýóƝÝ»£XmƅĊkU@ókťaĵÇ@aka¯UV»maUUabUxmKnkm@kmK@xó@¯n¯KÇ¦@ôÅèlxkx°nƾ¯KU¯WķL@VÝIUbyWbX¼Ç°"],
                        encodeOffsets: [[111589, 35657]]
                    }
                }, {
                    type: "Feature",
                    id: "6104",
                    properties: {name: "咸阳市", cp: [108.4131, 34.8706], childNum: 14},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@IXyĊwlýKlXIVaķ»a£¯aVU@awÈōaL²»VUln°WÈ¯W»XazVaÞJ@U»@¯Ýbğwly@£kÑţ±WÑ@kaIUn@¯ómţUbU¯lÇIÝb@¤Ý@kV@zĊ@ĶnVV¤kVbmź¯z@°a¯J@¤@bUxb@`xUÔ±ºVXWUnUJLĢ¯ÈKlblmÈXŎ°U°LlkÞK@Èxl_°ĶUÒkbl"],
                        encodeOffsets: [[111229, 36394]]
                    }
                }, {
                    type: "Feature",
                    id: "6101",
                    properties: {name: "西安市", cp: [109.1162, 34.2004], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°²@mVVÈÈl¦m°xla@U¦°ÈV¤XbV°lXÞaÈJ°kVaŤVôn°@mVJlb@XÒŤ²lÒ@¤kzĠxÞa@°¼ĸK°XV°Lƽ¯mlwkwÆç@óÈ¥°L°mô@w@aÆK@b@wÝLyÅUÝÆ@ĉ¯¯UóxW¯x_ÝJmLUx¯bóak±mÝUUW¯ba»óóxƧçĉbaĉxIUV¯¥ō±wl"],
                        encodeOffsets: [[110206, 34532]]
                    }
                }, {
                    type: "Feature",
                    id: "6102",
                    properties: {name: "铜川市", cp: [109.0393, 35.1947], childNum: 2},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÆxĸƨKlxÈXK@VWƨIlmV@wVUmUnmUalk@kVaUaóaónKVÞK@ÝW_xóKmVk£ÇmnÝ@¯VwóK@Ç¯XkmVU±¼KbÇŎx@bUV°b¤b¼ĸUb"],
                        encodeOffsets: [[111477, 36192]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/shan_xi_2_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "1409",
                    properties: {name: "忻州市", cp: [112.4561, 38.8971], childNum: 14},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vx@lnbn¦WlnnUm°²VVVVVnUnºlz@l@J@kXWVXl@La@KULlbnKlLnKLnKÆXn°bVV@bUVl°Un@LnaVJUbW@UX²l@ČwlVVIWnkÆa°anVKn°UW¯@aVUVk@Un@aV@ValwUanmWUk@WVUUanaVwnLVl°@nk@mVU@UVK@wLVKVU@K@UUKVUV@@bnLaVaôlIXmlKX_°KVV@bVV@zV`kblIVUlL@bnV@VĊllVlIXW@kaU²blKVnIlJalbXXlWVn°JnnL@l@XlJlaX@XW²@l_VmnKUblU@mnkVK¯@U@ma@kX¥VmakkLa@a@WIUUVXWWnk@a°a@kkm@kUUmJm@WUUUIk`m@VkaWWkXKmXk¯@WKLkak@±bw@aa@aka@ma¯@LKÇÅkKWbkmġ±ÅULUKVVkm¯LUVVbUwUW¯bmULxWJ@klmkUm@@KnwVkVK@akw@@a¯bKknVUIb¯mmbk@UbmKUL@xUU@klmLUlVXIVVVUVUU`mLXVWbXnW`Å²°xmxU@mĉwU@mbU@UmbkVW¦kJ@X@`¯Im@UlUVVnb@bWJXnmbJUUUUa@UamIkax@@x@b"],
                        encodeOffsets: [[113614, 39657]]
                    }
                }, {
                    type: "Feature",
                    id: "1411",
                    properties: {name: "吕梁市", cp: [111.3574, 37.7325], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@a@w@wlbnJVb@VbVVVInaWmXI@aaUmVUVkn@°J@_W@lIX¥lUnaVV@naV@xĊnV@wn¯wÆ±X_WmXaWUnKV_VVUUUUWJkUVnKlk¯@@kmKUaÅ±KkU@WmI@WUIlUUmVwXw@UlUVwV@LnbW@anU@UaVkô@l»n@naJnUÈLVaÆUUVmVKV²L@mU_lK@UVWkUa@a@U¯aUaÑóÑUbKk@@ak¯mVaUwVÑkWUmK@UUKmXUWÝwUaLUU@aWJUUU@UaÝU@WL@VKVaVI@WnU@alIVK@kImIkJ@m@@@_K@x@kaW@U@Vmn@UK@mIJUXV¤XXWlkKkkK@XmJVakImJU@ó¯LWKUV@nUVLkxmKkLma@kXKmmLabLmK@V@mXVÆUxX@`nLaV@@VmLUVnLlLb@°²nx@bVUxlb@V¯bUV@zVXVĊXVx@lVn@VnnmU@LlJXVz¯VWVXbV@bmnVUVkÇþÅ@XVxmbUlVUlnW@Xl@VLXÒ@bÞJ°¦Lò@nUb@°X@XbmVUVnb@xx"],
                        encodeOffsets: [[113614, 39657]]
                    }
                }, {
                    type: "Feature",
                    id: "1410",
                    properties: {name: "临汾市", cp: [111.4783, 36.1615], childNum: 17},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nW@@UnLKabKnnWL@lnblKnLlwKVU@mVUXL°KôV@nIlJUbnI@WlLllLXkWWU£VWInJ@VL@nm@UVX@lb@@wL@`@n@V@lw@nVmVXWmwnUla@_lKwVlUn°xVKVXXWlUVVI@K@Kn°KwlVlU@kna@V_WnmUVm@kXml_@mLlKXw°m@_ôJVUV@Xl@UaV@Va°Ilk»VwUkVmwUmmVn@V¯@KUwmK@U¯wUVÝ@mJUnWK@@UnKVa_lykUmKÛnm@x@UUlwVkXW@a@U@@K@kIVnammVakUl@wX@@k¯@VVbml@°UbULmlVbnbÅK±VKVXUJWa@ULWaUU@@U@aWK@UkxUKLUUUJ±UkL@V±kk@kam@UV@l@LWl@n@VVUxLlUUx@VUVU@aIUlL@°mLUbkUUaWUUaUU@aWKLWJ@bUL@VUVVbU@m@a@kmKmnĉlUKXWUblbxmIkU@xWb@lkVxLXmzVV@bklVVUzm@bk@Vx@xlU@lUbVnl@Wxnl@n@UbVmLmb@`X@lUX@@xlnkLWaUJnnWVVn@l@bULVV@lV@XnJVX"],
                        encodeOffsets: [[113063, 37784]]
                    }
                }, {
                    type: "Feature",
                    id: "1407",
                    properties: {name: "晋中市", cp: [112.7747, 37.37], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@lInJlJ@ULkJ@bmV@XUJUbL@UXKV@ÞVbV@VVXI@bVVKVbÞxVXnWVL@VnLVlXÒUVxUb°nl@bl@LVaôÒÒVb°b@VnLnnV@lmn@lbUV@JUVVXkl@lUzmJ@xXklbUnJVUbnUlbV@nlLX@lakV`Ub°@XVJnUL²KlxnI@KV@lbUbVVKnVl@zlm@U@nI@WUaVl@@mVU@XkW@nkVKV_Vwy@knwVa@XalU@Vnml@X@VLKVaÞbnnlJImVKnVVVInVlU@m@mXK@UmyUI@mWUUakamw@wUwmLkakwVmKw@wUam£y@am_W@UU@knmmamU@WUa@knw@UUUUV@nJm@mVUkKVUUUkKmwKULKUImV@lUnnm@mbUK@°bUnmbUmkkWUb@am@UXkK@a±@V@ĉÅVUXVxUVkLWl¯@@bULUlm@@nm`XlWakIkmVUbUL@Vm@kI@@Km@VaXI@W@aU@kUVU_KbJkkÇb@nkKmLwÅW@kVUUVU@WUIJmIXmma@_kyVaUUlkUm@kUx¯Lm@L@LUJUkVWXUWUL¯wVmUkxkL@`bkmVnxXUWUnm@kxU@"],
                        encodeOffsets: [[114087, 37682]]
                    }
                }, {
                    type: "Feature",
                    id: "1408",
                    properties: {name: "运城市", cp: [111.1487, 35.2002], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VlnJwkaVaXWVLĊknmnLl@@bnV@UaVU@UVK@aXIKXL@bVVVbXVVblVaVnK@¯KVkJ@bVVU@UVwkVKVwUUm@@Xk@K@kVUn@lbl@²l@UlK²VVIVVKVLlw@VXL@b@VV@VXbVK@XbVIUWLU²ÆLmaUankVKVa¯@nkUaU°@n@@kWaUVaXUW@IXKVw@UWU@W@@UUU@mn@`m@UUULkUmJIU@@UK@U@anak_@wmKUwmakVkmKVk¯bw`kwUIÇx¯»ÇaÅmn@@mmUkV@wkKW@kxmLUkĉLÝkxÝw¯lóVUmV@ĀVVX¦W¤kz@`Vx°²ĸ@Ul@xêĸǊ°¤VVlXLWnXxmV@nUl@"],
                        encodeOffsets: [[113232, 36597]]
                    }
                }, {
                    type: "Feature",
                    id: "1402",
                    properties: {name: "大同市", cp: [113.7854, 39.8035], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²£yl@ČĖ@bĸĢbĸXaKŤnn@ŎôllÈxnVnÞÇV@bnXllL°KbVb@J@b@UxlKXLlKlXk@UlkJlkUVKXUÇVIVm@_nÇLalwVnU@UUwma@aaÝaLmUk@@W@U@@XwVWÝUUUk@@VmLKV»nwUwaUL@`mzJUIVUaUwKUaVIlJôanÑlLVUn@a@VV@@UUwVK°Vn_lJÆLéW@UUUÅ@»lm@aÞIVwXWUUkkm@U@aU@mwU£VWU_kWmXwW_°yUkkK@UÇK@kkUVymóKU@KWIbUak@mJ@bkbmLkUmkVUW¦@lnb@@V°ULml@nkVaVmLUnk`±@XWW@kbÇ¦X¯WxI@xmbmxXlWV@bÅUz@Jb@bÞbU@Wbk@xk@WX¯VÛWÝbÝUkVUU@alI@a@akLWam@U¯UUmÇL@K@aU@¯VUkKmX@`@kJ@nVUb@lbVÆXVWULU`VbkLUV@XWl@bXJ@VbV@Vl"],
                        encodeOffsets: [[115335, 41209]]
                    }
                }, {
                    type: "Feature",
                    id: "1404",
                    properties: {name: "长治市", cp: [112.8625, 36.4746], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@UkLky@IJVa@mÞaWy@_W@_WXVlUVw@nw°K@mUVamVkU@mmmnLVUmKXaU@IlKVUnK@UmWkX@WV_V@akU@aKWIXyIUVmUnUa@WaXUVKVmkUWVkULU@@VbKbIUm@mbVLxWUUkn±V¯wbÅJUbmLkbmKÅKbVnUbVKUbKUbmLKmbaKkUm@UnnVnxUVlUxl¼k¯JUbU@Vbk@WU@UVóI@`¯nWxkLK@nk`Wn@lUnVnmXU`@mb@lkV@VnklVVUblz@`nbWnnJIVJ@XUVVUV@lÆXxnKlL@maÈllIaLV`UlVV@@b@XJWUb@n@L@lJn@@UVKVaUlnlJXbkWn_@mn@VkVK@a°@XklKVUUwVWUĊÆ@U²@@blLVWn@@bVaXllVnnaVma@¯VLnan@mVm@knUVJ"],
                        encodeOffsets: [[116269, 37637]]
                    }
                }, {
                    type: "Feature",
                    id: "1406",
                    properties: {name: "朔州市", cp: [113.0713, 39.6991], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XXWVXVWnnlnn@èÆ¼@xlVnblVÈUVl@blnLÜĊmUkU@Ua@WI@aXk@WVUlKUaV_VKXWUUÅka@VaU@mlI@@_nWLVl°UV@@b@LÈKVn°V@VnXblK@b@bkJ@bVVlUÞVÞaXÜ°UXWl@wl@XaV@Ýa@aa@IVyÆ@aXUWknwna@wJXw°WÈ¥kI@W@kmKm¯IUmkXWWkabkImJUkL±aVb@lWXkJUkĉk@UmU@aKkVUkJlaU_y@UU@aUU¯LW`kLWnkJóbUbmK@aU@UVVL@VL@UVULK@xUL@VUV@nml¯@UkmKUxmbVbUV@XlXVmnVbkxUbU@bm@@VUlUVb°@VX¯m"],
                        encodeOffsets: [[114615, 40562]]
                    }
                }, {
                    type: "Feature",
                    id: "1405",
                    properties: {name: "晋城市", cp: [112.7856, 35.6342], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lVLbanLnKVaLVaLUVaUmaÆLnLlanKVaÆIa°x²UlmVVXwUKna@VnJaLa@UV@@alUkKVKnkmmVwUkw@@kxWUXW@@mk@aUa@a¯aLkKmwkUm@kL@K@aWIXmVXWkUVakL@UVKw@aUK@UUKmLU@¯nKUwVUIWJUWmka@UXJk@UkmW@kLWKVx@bmI@VUaVU@a¯@UUmVKmX@±`kÝKVxUL±akL@VbLkKmV@XWVUbVXb@lm@@lW@@xklVUbnnmbUlJ@@L@@Vb@WXUlkxVV@wn@ÜmnLlVkz`UbmL@V@XLmVnIÞ@VU°x@VnLxV@LU°"],
                        encodeOffsets: [[115223, 36895]]
                    }
                }, {
                    type: "Feature",
                    id: "1401",
                    properties: {name: "太原市", cp: [112.3352, 37.9413], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VV@wVKnLVal@na°naVJUlmL°a@b@lx@bULUlmx@Ln@lVknl@XIwKVn°aVXVxUaVU°KnUlUVLKÆV²ĢlnXalLÈÆLKUaVkUanmWUa@WwkUWU¯y¯Ñ@anIl@@aVUmIymULUUVakaU@@LmJkw±LKmVUI@W¯VaU_lkbW@kK@mUkaVmVaUIVmalkW@wnIVy@klkWUUVI@UVkam@knU@mmmK@bblVUX@VkLV`@n±KUULUnVVÅUbÇKmVImbm@k¼ó@Ulb@VmV@bXmaK@UUxkVV@xWUxVnkVVJ@XnJ@XlV²LÆVbnL@l@°"],
                        encodeOffsets: [[114503, 39134]]
                    }
                }, {
                    type: "Feature",
                    id: "1403",
                    properties: {name: "阳泉市", cp: [113.4778, 38.0951], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°@nb@lb@bbb@x²al@lbKXU@mkUWkkmUUVwV@XUW@naVklKXblKnLnLVanImaXKlLaV@U@KUKWalXK@£WKXUV@VUUUVW_V@W@@K@UIWmXUmULnJkImmÝaUbLK@UWk@mnU@kVWb@Ubmx@lzUx`UULml@XWl@UV@nk@UVb@XJm@@Vknyk@zJnUV@bk@mJ@b°Ò°zXVlVXx@bXVmnVbUlVb"],
                        encodeOffsets: [[115864, 39336]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/si_chuan_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "5133",
                    properties: {name: "甘孜藏族自治州", cp: [99.9207, 31.0803], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@aXam¯wm@±°wUwV@UaVw²KU@UU¥a@£ÞôxKnkmX¥IUÝUwlk°V@ÈKUwlkUyV¹mx²XllÑW»lw°UŎnJl¯°V@wôIVÇnnUllLVÇLô¼XW£@±@¥k_ÇJkUékwXa@Llw²Vxbm¼ÈxlLÈVWÞn¯mÇÑUÝlÛkwlĉmULmwUJç@wkm@ÑlUXÑôġVaUÑ¯@wķÓkbVmnU@@y¯IķKV@¹aé@kmÞU°¥@a¯@anKlblU¥@óğç@Çw@wklaçÝ±k¯±@ğÝUÛmÝ¯w@kb±¯akXWÜkXUÆÇU¤X_ƐwV@¤XUbUIUlÇUkġ@aXČmlUlèUV@mVk¦Vx@¦±¯¯¯anlW¯nÅw@w°KVak£m@klKknÇU»óKīlaUaV£@¯@ÆUVÛÝÇXÇlÓlŹ»WUğJ¯£mxLĵôºXVlUll²bllxónn°ÝU¼mJU¯nV@êĉ°Uĸw@m@¯kmXamÑ¯aUwÝKU¥mÅn¥Wmn¹n±ƑƆÇôXê±ǊnUôlĖkȂVÒ¯¼VnȮ¯ĀnƆĢ@k°V°¯ĢVlkVxm¼X²Ŏ@VxknWÜ°U¯nÆÝ@`ôÝ²ÒÇznmX@xè°K°ÅUČĬóĖÝó¼ÅêÒbmk@V@Òl@nĉÜêx@ĖmlÅJ¯¦óxȭ°Ým¯LĵèĀ@Æl°żX@xmkV@z@°blnÞ°J@bn@Æ¼UVUóóL°X°ÝLxUn°Ĭn@lnL@Æ@nKÆxnUnVInĬmÆnxŎ¼ĊIĢóÞ@ĊƨbUmV¥lkwnLmÅÆ¥XwU@wwUÞ@alUUÅUVkkm°aU°Ó°w°Ub°a²K¯ĕ@ÈbÞĊa»XVm°InĬk¼VbaJô£VĊankůnÜU@anKnĮbÈmÆ»nIé£Ġ"],
                        encodeOffsets: [[103073, 33295]]
                    }
                }, {
                    type: "Feature",
                    id: "5132",
                    properties: {name: "阿坝藏族羌族自治州", cp: [102.4805, 32.4536], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l@@þ²I@lVL°wnJ°UĸŎèIlwV°¤nĮ¤ÝlèL@@xlè²ôĊ_ĊġVÈôJżīlbXÆÈVkxÇVn°¦Üb@è@nn@@°UÈ¥WÇ_Uala¯¯UÇk»mVwk»k²°VxlL@¤_@x`ÈĖöb@l²alXa@bnK°¦VK@nnWmx@nUnl@@llĉk°l°UXkmW@Un`kÇLWÛÈVxVVlVk@lIXb@ylXÈWĮWŤzy@mI²J@n°@VJ°aÅ@ŎkVÇkaUwKVwV@nkm@±ôkôĊJ¼InÑm±nIÞXÈĊxĊUÈbÜyÈ£Vkw@kVUVm@a»ÜbÈmUXwÝxUn¥@°ġÅaJVkaW¯Û@W¥UŏĶ@¯kUŃ@aI@mmanwÞW@mw°»Uřk¹±WxVx¯¦U°zţWw@°ÇVÑk¯@y°a£@mnl¼aÝÝakwU±aĉImlĵn@m@kkV¯Ñmĸ°xl@XVÞmlÛÝĉUÅ¥mwÅ¥VaUwXġċaVůÛŹlwU¯Uó±xÛV±¯¯n¯mċLmnĊm@_kJWaXmwUĉK»@mwXÝUÇkKÇw»naUw±kxK@WbxlVêlÈIl`@¦@²X¤Wó»KUÈKkkmVmUÈóJ@x¯Uk°Imō¯VxkX¼Òkk±WwnUºVzklVxLÇ@¯UklVxÞVJW¦nmlLówÝ@¤b¦V@VV±LUxVbU@Vx¯x@²n°xnWbb"],
                        encodeOffsets: [[103073, 33295]]
                    }
                }, {
                    type: "Feature",
                    id: "5134",
                    properties: {name: "凉山彝族自治州", cp: [101.9641, 27.6746], childNum: 17},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĶóKnw°¤ĠIXV¼kźÔkÈWÞÈÜUVÅ°@@U¤VbkbĬôL¼ÈVlmLlkn@l¤Ub¯L@xÆx°mXmk°b°°²@¥Uwl¥nU@VUkçVnkWċbĢ@lÈVVkJVaVW@£UƏxW`£ÈVVÅlWXÛlW°b²la@°xnÞVÜĠÞ²@l°Þ²èkbl@xÈx@Ġènal£nUÇ²@ÞKnn¤@¼°U¼nVXUbnĠUVbUlV°LX@lVèÜUnK@_yXVyUwmIU»VkÇ¥ÿkkV¯m±n@n¯ÜanVVÆz@bwÜbm@wa@kmk»@a@VUUów@nb°mXmnVbÞVôanwJak£lwLÅnÝ@wl¥IÇÓ@UL¼kVÇÅó¯kVmmw@n_Vn»°LÅ»@éÇçŹīVÇÝ@ÝğUaVÝ¯ķlŭġl@óÞÛċ@¯nkUÓm±IVġUwóKUn±¯Kw»KÝVnl@óxUwţ£ĉUmÅÇÝKÝUlmK£UV@ÞÈW¦Ò@Ĭnny@nÒmV¼@°Vbl@VlnUUwl°a@@llnk°lbnKWĀnUVxU²Åm¦ÛÇÅaUVb@¦m`móXUmmxÅ@±Þnè²U¯»mVm@wU@wÝÝmLa@VÇUkl°¯VlkV¦UmxaULUèVx@kIUxmWV¼¯VmÈ¯UnlÈ@m»ÅVWxÅbÅğW@km@kVV¦mlnn@ōl¦ÅÆxk"],
                        encodeOffsets: [[102466, 28756]]
                    }
                }, {
                    type: "Feature",
                    id: "5107",
                    properties: {name: "绵阳市", cp: [104.7327, 31.8713], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ńlV°@ŐĵVX»ÆUĊÑJw@È»m»£°Kk@ÇnÑÆ@w°JUwnw@wbVb@VlźLUwa»aUklyUUVakwWXwWUxkLmn¥mwkUXlJw@aIk°X¥W²l¥aUIlmkklÈL@m°nlWUaW@V@UaV¥@ak@Çk¹K@aK@kKkÇX@VU@kx±VèkIWwUVUkkKÇ@a@wkml¯@kUWn£WaaVwnaVÝw¯@UaWxnJÅUxUma@L@mbUU±VVnkxUÆVm@kkKW°X@¤ÇUkÆÇnU¦¯kmLVwÅK@UóbÇÆV¦L@±êX¦mVÞkÜÝnWU@k¯wķn°ÒUlln@@ĶmnkĊJ²bVlxÞbÞbk»mn@¤¯bz@l°UÒ¯È@xŤXyV¯°¥Uww²XlºVŚ¯¼nx@XÝmxnb@nJ@b"],
                        encodeOffsets: [[106448, 33694]]
                    }
                }, {
                    type: "Feature",
                    id: "5117",
                    properties: {name: "达州市", cp: [107.6111, 31.333], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Uxn°bnlUnÒÆnn@n¤LnxlUV@Ælx°XXxl`XVWLè±nÈb°b@²x°KÜ¼°ĉV¦lJnU@¦ÞJÞğmLÞ»xUlbVÆannalVÆX@lnŎVmUmaÅXa@aWm@£@wĉJVkkkkmnk@mna@alKJ@ÞwmÅÅ@ambkU@KUġKU@mak¯±a@aĉÑÅaVwXlw±V¥l@@ak@@£mĉÝónWV@nÝÇÇxUmbaVkkk@m@m°ÝýXmakÅī@@mb@@xmnb@mxkWL@¯b@WUXmWWKkbm@kxXmm@LUlxlêóKnUallLlLó°m¯JVUK@xK²Āô¦l°"],
                        encodeOffsets: [[109519, 31917]]
                    }
                }, {
                    type: "Feature",
                    id: "5108",
                    properties: {name: "广元市", cp: [105.6885, 32.2284], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÆLĊx°»Ŧ¦WLÈ@xÞKÜ°ÞnVxÅĀlÒnJ°a@wV¯l@XWknKnwVÈ°XXalX°VI°bWna¥@w°n@yÆ@nkÞ@°¯lJn°IÈlUlXÅ@ķlUV¥VUUÝÞUU@UwJUkĉm@ýlkWUwVwWJk@VUKlUkaVUmLkm@@UIk`@UmlUkV¯ÇXKÝ_mm¯@U`kwml¼±KV¯¯Vk±Vk±kzmaKUnÇ±bk¦±X¦¯WlJ@bxkIWVlxnm¦nlKVwXWxXlxUbVVkzVlb¼bVxŹKUk@Uaa@xmxVx¯Ix@ÅmÒ@Èl¯L¤n¼"],
                        encodeOffsets: [[107146, 33452]]
                    }
                }, {
                    type: "Feature",
                    id: "5118",
                    properties: {name: "雅安市", cp: [102.6672, 29.8938], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ln@xèVInxVKnĊklxkÜVÞÒnÈm°nx@¼ĊLVnxWXblI`@nmĉnKČôÅlUÑmUK²¹@ÇÅVÓÅ¯VýÞWUVmXÆbnwKUÿ@UmmIUb¯¥Uw¯ÇmçmanUm»UUlk¤a¯bVU_WĕmÇÅ±ĢUlUlÛVçkU@W¯KUVkUağVmaVWUmV»¯@»m£mÝL±@ÈmVk¤mb@ô¦kVkamL@b°@b¯¦ÝVn@lêb@ºUĸL°J@zV@nmUlaĸÔ@x°VÒUbóĢÒWkV@Ò"],
                        encodeOffsets: [[104727, 30797]]
                    }
                }, {
                    type: "Feature",
                    id: "5115",
                    properties: {name: "宜宾市", cp: [104.6558, 28.548], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VlÈnlXnWLX`m²nV@b°xĢçlnVmnn@@°UzlV°nÞÒkxlw`UnVbmL@albÞKÈÛmÜ¼°@XÇ@wmW@ÅKĊLlVLVŎçÞL²±ğkw@Uy@¹lKXlKVa@wČ@w@aÇU¯n@@wġakaōK@Å»VakUWmķwkbğ¥mLak@ġÞ°¯xVVÞ@VxVVWxXlxU@k²WVÅULmèULVĊklĠVJVx±nÅ¯¦mwğ@mlğkkl±@kUk@¯±ÇKkxl¤bImx"],
                        encodeOffsets: [[106099, 29279]]
                    }
                }, {
                    type: "Feature",
                    id: "5111",
                    properties: {name: "乐山市", cp: [103.5791, 29.1742], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@kVkÆkV²UlºÈIlxLXèÜlUXUmkbVèx°@@¼°Knnn@mÆIUbnJ@bVI°b°±@nK@mVakkKl¯nbmĸèl@VnÈlUUwwmwnm°¥LlLnU@VaImbkmKnk@mbLVJVUUVnkVmb@a¯JUaÆkk¥IW¥KlwÑmÝU¯kVy¯@@mmnUkmġè¯w@aU±mnW_XKWmkÇmUkóbUÝUanmW¯nma@xVôUV@b@l¼n@lb@xnÛaxa@yUÅmUÛbm°@mn²U°llĀÈ¦lUV¼nJVxUzWz@`mL"],
                        encodeOffsets: [[105480, 29993]]
                    }
                }, {
                    type: "Feature",
                    id: "5113",
                    properties: {name: "南充市", cp: [106.2048, 31.1517], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@È²VmLnblyl²²UUl°U°²L»knlx_V°@nnÞ`WL°ÈUVlnkV@l_JV@n@lnKV£ÇUV¯m@laXUUbVx@VkôJU°Jn@wUk°wnUV_nJmknmm¯Vwk¯ó¥±ÿL@wLVUkUbX¯mykI@a±Kk¦ULmaXVm¯Kz±klUIVbÇJkL¯lUÿUlUkJUmUUkVVklKk@@aU@J²x¦kĬ@¼±ºXnWbxU@xx@lL@bLlº@Èl@bU¦Vb@U@XbVkX¯m@nÇKkllknJV"],
                        encodeOffsets: [[107989, 32282]]
                    }
                }, {
                    type: "Feature",
                    id: "5119",
                    properties: {name: "巴中市", cp: [107.0618, 31.9977], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VUlbkVVLUl@XIUxVxXkl@þĊnVlIVx@VVÝVÞUVU¦kV@ĸWÆô²@VÞn@Vaôb²W@K@XUmÑUW°¯°Ina@y_lWn¼lLUbô¼Kla@nkUyôÆx°@n£Ý@¥mVkIU¥Ċ¯Û»¯L±w@¯aÇa²mçKXUWk_Ww¯WwÅk@UkVmwK£@mmmÅmÑkVmamnnlmIU`Vm¯xVlx@m¯IVóIUl@UwVaVWkb@nU°VÈU¤"],
                        encodeOffsets: [[108957, 32569]]
                    }
                }, {
                    type: "Feature",
                    id: "5105",
                    properties: {name: "泸州市", cp: [105.4578, 28.493], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VVXwVKnwnVnl@b¯xmKUbVn°°X°@blLènV@Vnl@ULnmmUnaVV_ĶV@wnJl@@kkKVólaUwnJmwUlm@aUaôKVnJWbÞ@VwVLX¥VV_Þ`wWÞŹmmnIn¥W@kWV¯@°kILk¼Ç@k¤±XknmÝ¯UlÅÛKWV¯klUwkLÓ@U@w@ġXVWX@UbVbV_kÇVlU°lnwŎ¦ÞaÆ¯nmm¯Um¥nkVmkl_ó¥¯UÇl¯@Lk`¯ķLUy¯@mw¼ķ°ġ_ÅU°mlnÇVUÞ@_JUnVUXblĢb@x@mV°Èb@xċ@@xUbkLWkL@ºzV@lxĠ±²"],
                        encodeOffsets: [[107674, 29639]]
                    }
                }, {
                    type: "Feature",
                    id: "5101",
                    properties: {name: "成都市", cp: [103.9526, 30.7617], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°n°m²°ÜUw²ôV°VkxÜźUŰČbĢlaÈL»@kwVÇ@nÛÆ»ÈUÝ°Kl_V°U`Vbn@VbÈLaVU@ƨ»VnIlUUa±lIk±@VnKmÅ@WaK¦lVōkKÝ@maXÇmw¯IU@kVwUmVIçÿU±Å@¯È@xK@wLUbÇKÅ@mÝ£@yóUóóUxkI@WlIUabaVĀLmxÅaWUnVÝXUþÆ°UÔÈÆ@±ºLnVVÒkóÆ"],
                        encodeOffsets: [[105492, 31534]]
                    }
                }, {
                    type: "Feature",
                    id: "5120",
                    properties: {name: "资阳市", cp: [104.9744, 30.1575], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@èUJVnxU@lV°JnxWÈnbÞ@lLŎUk¥LXbÆ@nmLU@zlbXmlnVynLçJVbUnómUnamUan¥lKV_²aValWôn@nbVK°¯VblW@kklUnlV£°W@wUXk°KVwmVkwVyVI@wkmVÅ_Umm@Uÿmbk£xUaVw±V¼V¤kLWxU@UkbyXóm°V@@zÝÒkKn±U@@_VVkÇaVwnLWalm@@kkVVl¦kIV`±n@wKk²aVUUV¤nkxmUkVWVnLUbVb`kUUmLUmX@`ÅbÇXbWLXn"],
                        encodeOffsets: [[106695, 31062]]
                    }
                }, {
                    type: "Feature",
                    id: "5104",
                    properties: {name: "攀枝花市", cp: [101.6895, 26.7133], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@bKÞnÞ@xV@xnUn°¼V±mç²ÝÆ@wnnVWnôn_@¥UaVbÆÈÜn¥Æ±VUwVmXÿmLkal¯km@k@¯bkVxmVUkk@Ua@¯»UnmÑ@mzm@īÑX¥Ç@ÝxU¦ÅÇUkx@lbUWVXmV@xĵĖ±@@¯xUÆLnÆmx@nXL±lUUVwKWak@WxkbÞĉbUn@@@xó¦Ŏ"],
                        encodeOffsets: [[103602, 27816]]
                    }
                }, {
                    type: "Feature",
                    id: "5114",
                    properties: {name: "眉山市", cp: [103.8098, 30.0146], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Vx°¦VanJVn@baVbkJ@XlJVwôôôV@zÞ¤@nÆÈLVaK@xL@w°ÇÆ@²VĀmWXKWaÈÆa@_nWVnKVlV_UaVamKXUWwnmmwÑm£@ynUkWĉUkWVkkV±çkJmkKK¯¦mnnxxVxVÇkUmk@çķnmak°LllUb@nmL@¯²¯aUJ@amIVaÅJnm@mm¯L@»¯@wUçanlVWVÛkWçKkwÇJk¹±VUÅlġV²ÈÆnXĖV`U°ab£lkVVn¼mVnbèÈn°"],
                        encodeOffsets: [[105683, 30685]]
                    }
                }, {
                    type: "Feature",
                    id: "5116",
                    properties: {name: "广安市", cp: [106.6333, 30.4376], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VlIVkVĀVk°lKÈIUaVJlk²yLn°UWnbVKl¥²L@blJnzW°alV°Inô¯KkKkkbVmôLkéwVk@KnnWlwn@laXLnXVW@X°a@XKlnw@man@w@na@@wĕġġwUkUWb@mk@¦¥mUÛb±yÅn@bml@kV@lknVbmVnlmbÇk¯bWyk@V_UamJ@I@WaVXamIVWkUkbVaUUx@VnkVU¼bkKUxmK@WxnV@n"],
                        encodeOffsets: [[108518, 31208]]
                    }
                }, {
                    type: "Feature",
                    id: "5106",
                    properties: {name: "德阳市", cp: [104.48, 31.1133], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nUW¥²é@K¥UÈÅôa@VÆLUxnKl°V¥ÈmlÅÈV@£WX¯lLln@UVÅlwUm²UVVna@@KnbVVwÆImXwWkIVwÝĕVUaIèmKUzkmWnka@y@l²kJ²VbVkmJUƧ¼@UVbÇKUam@Ua_¯VUk`¯LVÞÇÅ¼mÜ@UÈx@l¼ÇKkbWVxUbÆ¦nxÆ¦ĊV"],
                        encodeOffsets: [[106594, 32457]]
                    }
                }, {
                    type: "Feature",
                    id: "5110",
                    properties: {name: "内江市", cp: [104.8535, 29.6136], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@²èlUUllXĊVXlmV@zn¤ÒnxmnXxlUnVlwmU£VVUbl±L@x²mU_lJ¥UklU@ln@kXbmKUxÈblUU@`V@²mlLÞÑ@yU@¯ônWzaVlV@XwlKU£»aVaUwm@mwUVUwklVÇ²LlKVm_@ykUm@mUçkKmxkIUÝ@LUJ@n±kºLXb¼@mmIXa@mamnkWKUx_U`UklwUwmUbV²akbmkn@`UmÒVxUbI`UaÝÈ"],
                        encodeOffsets: [[106774, 30342]]
                    }
                }, {
                    type: "Feature",
                    id: "5109",
                    properties: {name: "遂宁市", cp: [105.5347, 30.6683], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÞĖUxlJXVb°@xUÞmbUxbXbm¤VX@lk°ln@xbÈ@lLVlVUXxlJç²UlwV@@UÈWlLw@wVwXaWm²¹@»lī¥w±I@V@bl@kLUllUVVn@mmUwXċbVb@VUkbmamW@ka@k@laUa@¯b@mmwó@@lkXUa¯°LUamm@ókXUb±bU`kLm¦bnVmbnVmô"],
                        encodeOffsets: [[107595, 31270]]
                    }
                }, {
                    type: "Feature",
                    id: "5103",
                    properties: {name: "自贡市", cp: [104.6667, 29.2786], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lIÞÇbV_JVaUwnÑV@_lmnlab±UVanVxkxVlV_`wVLlXnmnb@WbnJ@n»WaKl¹²@mVI@KÞVlJnw@aW¯¯¯UmVanL°w@akmmUxmULWxUUÝKōèUKUkĉKL@ÆnX@xWÈ¯@Û»nÇÜÝLka@bKnUaVm_xkLX¦Jl¦ÅlVb°I@bnaUmlUVUVIUKa@nmlnLlnaJUbV@"],
                        encodeOffsets: [[106752, 30347]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/tai_wan_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "7100",
                    properties: {name: "台湾", cp: [121.0295, 23.6082], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@\\s@pS}aekgKSuSsMß`¡CqZ·be@Q^o@gieMp]}}Ľc_Kk{ùA¡r[uom@ÑĥJiq©mŉq¯Bq]ÙYgSåk_gwU­isTEĕiqiUEkue_OSsZaWKo¡­qycY£w}ĩĕS§Z©SN¥SyLÑ¡±Ks^IYPdY[UoFp}´\\¬\\j]eÜò¤¡ā a\\bnUãº¹Ìs¼j®[cíȈEĝĆ`ļf¶®K|VØDdKGpVnUFjpHF`B[pMºxÖjbpÎxp¬|ÎŸÜÒC²®ÜApZG~dÞàV¨|¸`|²tx~\\~|dFf^zGĄŚhdL\\hĸ¼OªP®lV`p\\]Xpllæ¤CpQ|oF}fMRiNSon_²qämMNM\\"],
                        encodeOffsets: [[124853, 25650]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/tian_jin_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "120225",
                    properties: {name: "蓟县", cp: [117.4672, 40.004], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@EUDAEI@WNMNCBFAHFFNACDJDPBD@@GD@DIFFHEFGDBDEQOFG@EI_KG@OcJQM]RMEKBGPG@[LaCIICBWKCEEG@WBQHCDFD@HSLEJI@IHWECFGAAEKCGDBFCBSBIDCKKHEADMJMFABKOKEQAA@IEEG@GIQAEK@OZEESMOLlu@SLUTYFQCMG@@SQUAYKAACA@IB@BDB@B@DC@@BGAEFAA@BEGKJCC@AGAIHA@@JC@QEIP@@A@EGIDC@O@C@@@@CJCWKABFLBBEBSQGBAAMIEM@AKBcJEN@BEBCFMAEFEF@J@BG@BFABECKFG@AFQ@@F@BEB@@A@@AAAKAE@GFGDECEFEECBKIKDELDFEDYH@EIACDCHKBEB@BAAC@ADBHABKJIAIJICEDGDCD@@A@A@DHCHJHDFEFGBKRKBGIK@GIMHSBCH_BOJECCJCFKKMD@DNJEDEGC@OJCJHRUL@HRJ@H[DCNKDZHCTFDHCFFKR`TANVDFZRDLFARB@HPAPG`ILAR@TERNDFNHDLCLDDCXDYbHF@FEB@LDDVE@JPNfXPINCVDJJD@NJPAJHLXHDNANHhB@DPNLRMTBFRBHHr@`NBFEBOCCBIAQJDHCHLHFA@HSDCRLFTB@HEFLNF@PELBDJALFLTC@EPFLLP@tUHQJDfIHGTB^JTCPDLKAIBATFPADIEGECEMJ@JIAIHGECFEAGDI\\SPOXAFCL@BQTQBBTMZECYGAHA@GJAE@HCAEME@IECFKJADDBABLTHHG@ILEAMNDJCDHEBF@@JNFJELDFKTOT@JETBFFHBHEHKI@@IJEJ@XKEOUMS@AF@CEB"],
                        encodeOffsets: [[120575, 41009]]
                    }
                }, {
                    type: "Feature",
                    id: "120114",
                    properties: {name: "武清区", cp: [117.0621, 39.4121], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@FWôµ@IFCLIB@EHNBp]AGEAKAEDMGZKFGBGME@ILGP@HEFB@BXMEAHUGC@IHCLOD@X[NWHWPKAEF[@EKIOL@EKGBNMJ@EIEHKBIC@BAKMIACCFQZCF]DB@ERAKADIHGEIBCGIIECFaGLZO@EFCNGAGDGAKL@BMG@IE@ADSDEH[JGC@CGA@BMDeK@EIACFE@@GG@FIAMM@CCGC@EM@ADE@CFMAAGHBDKIEAJG@DOGCDEKAGIS@KFCHKAEHIE]BeKNO[IFIOELC@A]GMBKVYCDDgGAICARc@MW@AQE@DGI@@AQ@@BKBAIQQYEFW@CEADIGGBCEIiMEMF_LGEKMBBDWEBGRC@E_CHYGCH_IAED@FFBQh@FGJaJ}AHRAREF@bE\\C@CT`FHC@\\BBF@BID@HGDDJ@@FAHKBARECKDAZBJIVNHCTA@EREAMLHDAFFBVFFC@RNRETHD@FOJMACH@CAB@P@DF@@FGDWE@FFSIEMKQDYCCHKb^JADOCIDGNDBdBCFJB@EC\\A@BJEA@JAAAD@HHD@LFBCFF@BERDHNhZQHMBGHOACCEBWEGD@PSJKCGEUD@CINLFGHE@AJK@HDABBHTB@F`DBFLBBHEDARCFG@ABJBAPVFE^FBGLGCFG_BMLEXGAAFE@@JNRVJHFALFBEHQJCTbNDHCF@PlFLJSXCHFHfVBTNJ\\BPJXC^FAVNFCHFB@FFH@JF@\\ABCFD\\BDMCAAJKQBGAILOEGHILECQLWFENJHADC@QxNHFJNLDFA@CBA@DUÂmR@FBL@BD"],
                        encodeOffsets: [[119959, 40574]]
                    }
                }, {
                    type: "Feature",
                    id: "120115",
                    properties: {name: "宝坻区", cp: [117.4274, 39.5913], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@TZbB@JHD@DODCLM@AP@LL@BNH@ETFN@`E@DNG@CHLBCJA@AICFKDDBKA@\\N@AFNAGRBFjFFFL@DHLBLFQPcXAZMJ]GAVHAIZJFNE@JpDRRDCLFDGXA@EFF@CFFPDfEBDB@DCHCFCJDJIJBLI@I@CB@@ADBB@FALADGDC@@H@BB@FZGFCCE@@FMLALJDAFFFEFDFCB@@AHCF@L@@BBB@BB@FC@E@@R@BEL@HEFD@G@AH@AIB@@@FEFEBALDDEFAFO^IF@JCBBFPNJJ@D@PRDCEKBAXL@BIFD@T@JE@BHHJORFDI@@B@JGH@@B@BDDLIFFHCD@D@DEE@BAAAB@DAF@B@H@NGLJLMRDNMfGIEPMI@GDAKK@KIDIJ@GE@CFDN@FE@GFEPGV@TCDFKHBBF@RW@DD@@ID@TJFKIKLI@EP@IGBCLAEKLEN@KSHIGYACSD@SEAMBBMGEBMQBCMIGKFB[D@HDLPHDBC@IFITDLG@IIIFGVBNJDLN@VIRI@YIAIHIC@CLKZCBEE@JECEIHEAKGDGECBGEEM@@DA@CCCBBEGA[GEDBBoNAAH]MKiIAWKQoIIPMFQAEEDMH@FMSUYIeF@EK@BIOEKJEBICFKaKPFAFSE@LWCCFMHDDEKESBOGBKIEIODLG@CCDEQCEDWEMDIEIB@EHGEEDAEAa@@HqDEJGF[AECCFa@WCEIKAAEQB@FCAE^YDERDDJBLNABD@AJGLJF@FNIAMLH@FPKLJ@FE\\BFOLGXMXW\\C@KPGD@JHDGVFBWN@AEAGFO@KH@JNFAHEHYLNHFCLBFBBHo^MAFGA@KJED@Jó¶EX"],
                        encodeOffsets: [[119959, 40574]]
                    }
                }, {
                    type: "Feature",
                    id: "120223",
                    properties: {name: "静海县", cp: [116.9824, 38.8312], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@NGFMDATCNDR@CCbINEHNJA@C\\EEGVE@IhE[wepc¢·²^QEKIEKIgiQDkehY£uSDBMkUDOJDHC@GF@CAFBFEN@CQ@BeP@@G@HD@@MHQKi@[IGCOCESE@GMA_OcCGDu`a@VZzKDkJBLNXGDqKEWE@cFEFA@ISIi@@KMABJGBcMuFEzGVH\\ATSEUBeALCEMG@CEBUHUCGXaBPtUBBFIBFTDFF@DDKBFNGBJPHXDDMDCLJ^mBIHIL@LR\\@LCR[@@z@NFD@LLBNb@RHDBNTPT\\F@BJF@BXCFBHHBDLFB@HODADE@@JHVXCPDHCFTLBBFNCDCCCU@@GAABEHHZHBCAEdEjFDD@GfD@DXFCHF@ERFDLBH@"],
                        encodeOffsets: [[119688, 40010]]
                    }
                }, {
                    type: "Feature",
                    id: "120221",
                    properties: {name: "宁河县", cp: [117.6801, 39.3853], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@BFLBFJXDb@DEFD\\BHEFIrC@Gb@FBCBFFGH@FJAJFNCXFFCRDCFDDH@CKJPJFALPHTALFCFGCENDDKXF@ETEBObLELJDFALIPFAJL@@FfEZJTVENG@CNFFRBNEJOpJLRBXjJNLG^BBpMAAFC\\HHBAFDADDB@@CN@FFAHFDCHLHFBJGFCFUNKJJTD\\XUXF\\^F@DDDQXXBRLRCBDFEVCDLVDpUl@LEDJHAPRFGL@CETGPBTCDDVI@CFF@GFDCCVGLKEK[Y@MECISG@BKNSCGCKWEAaEBEKNGFSECO@GGM@GYI@DÅCMLHPTF@DJHAVVNKEGDETJ^[TJNNd@NOAMFYJ@@GFANDPEJB^aOadSTQSI@MHBDIEOKCG@EEFCKCqXO@@DMFENCDDHCCGJ]AKFoDaGGHYFDHKJiCMFGC@EQ@AEHGAC@IEAATKOHGIC@IXIFEoGE[JCFCDHNmRADFZMF[EEBMO{GU@AOW@@]ZeHBDEHBKEfQkuIWBs@EC@d[@[^EDMTKCEEcI@cDAB@FCBCACmOCG{PYHeBgPwPFDDALFFFCHQGSD@BHFAR[TaFYXMASUiGFL@DQNCJI@@D@PLDN`ETEFIGMCGBCE~CAIFDPEHGEQPHJADFJGHCJLB"],
                        encodeOffsets: [[120145, 40295]]
                    }
                }, {
                    type: "Feature",
                    id: "120109",
                    properties: {name: "大港区", cp: [117.3875, 38.757], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@JFFL°_`ONJKDDFIFZN xlb~yFVNRrdJGzDPVFBCTNND\\UR@E`F@@Ip@IWGUoawOEE@ÏDgK{İEEMFëCb@KwOCDHHKBDJCDEEEAGHOABFABMCgDLSQ@CFEBMgYIDQINE@AUSwSAdYEHQMEyK[KI@GRMLE@@OqOoBOnpJ@BmEAFHL^FDB[C@BBDVFAHFJENB@sNEjQAMYsUgCSBGDJH@\\LjGR@NC@@G@HO@AfR@DM@EFEADBE@@HGDICCPlVANTC¤vgZlfRChjLJ"],
                        encodeOffsets: [[120065, 39771]]
                    }
                }, {
                    type: "Feature",
                    id: "120107",
                    properties: {name: "塘沽区", cp: [117.6801, 38.9987], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@|ODHnPBDADEDA@CB@ddJFFLDNSFC\\]\\@@cFD@nACOMW@M@ITURBRZNHNWRQoOj½fcqAqeiDÿÍyÓįFL|Ch@ÐFFxPpbHVJXo@@JCTR^BPABQA]^MB@bE@@FQBFVJRH@FXtPNZSBAja@@NDTLJrQTHFXZFB`"],
                        encodeOffsets: [[120391, 40118]]
                    }
                }, {
                    type: "Feature",
                    id: "120111",
                    properties: {name: "西青区", cp: [117.1829, 39.0022], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@LHAHRHATh`LHNHDG`HDGZ`D@FQDAHXFACNAFLVRTBFOfHDCVBFQH@HSXHEPFB@LDBF[bDbLFKJBFLADBDjLvCPEI]FGEIGCBEUSjcFiBIVWfaHCjN^HtwBBFGPBJGjFBEGECGDONMFAP]TDHQOWCMGAMHKIJEIGQ]aDlUG]VGEGDC{PEbBZmE@@GH@BCA@FMQCFMYMJECELCMI_P¯`]R±¡¸odfx\\gF@JUFFH[F@DIBGMMFaJDDQ@MCSDCBENMH"],
                        encodeOffsets: [[119688, 40010]]
                    }
                }, {
                    type: "Feature",
                    id: "120113",
                    properties: {name: "北辰区", cp: [117.1761, 39.2548], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ROHFFGCOJEDB}DFHANDJHFEFSM_KC@O@CJ@DIRM@CEKKALFKACHoLSJSIBETDJaEIIE]E]K[MYUYQILC@GF[MGNKEK@A@BCWECAIFEFYAGFOMI[OFuDiKACBCEKIAELaKaCE\\CA@KEAFOWGGTG@ERUACDeGEPSAUQKHE`FNjNFJADHHCJFB@DEXZFRRBJLA@AR@@BJ@CHF@BRX@@NQdDBBJhHCCZDLUNA^H@BKDPFEJ\\JMPfL^AJFFGLBDGLET@HJLBCFHDCPH@BIJFCLGABHNBDEF@BCN@@FHDDDN@BNEJH@@HF@DEJB@FfLNC@AHB@DHD\\IFGTCBCF@@JNH@ALKHBHCHBDMFEP@KYbHDEJF"],
                        encodeOffsets: [[120139, 40273]]
                    }
                }, {
                    type: "Feature",
                    id: "120110",
                    properties: {name: "东丽区", cp: [117.4013, 39.1223], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ZV\\N^L^FJFFJIbSCAFTJTIpKDGLBEKLBjHTVNBZWbE\\SBQGE@ATCRHDGEEKECBECxOhOfAZGA_YEEWSGqRKISC@Mb@BiTAMYsOEWG@IQEURA@EF@@acUOXQRYCUDCHDTEF[SUEgAYDcVGJM`iAWDWLQRMHUHgDsDBLHJFCFDFGHBFFVEAGHCJN@RJFPIhBD\\FENCPWA@LFBAFHBEJUEARCDIAEDQBRNa^"],
                        encodeOffsets: [[120048, 40134]]
                    }
                }, {
                    type: "Feature",
                    id: "120108",
                    properties: {name: "汉沽区", cp: [117.8888, 39.2191], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@LMEI\\MTABKN@FCDMH@COAcH[AoēAM¡Wa[MeqpQRMXMGQYQASV@J@NNXDPmBAtJXlveRLFGACFGAYf@^X@BPV@|HNPFA\\FNEEYBCnQGMDCDE\\IHFpEFWJ@JJDGHLPBSFB@JBDGHBFR@@FHDNEjDLICGZEHGbHpCLE^BHIDDCGDCFMNE@CP@rWLDEDFFH@"],
                        encodeOffsets: [[120859, 40235]]
                    }
                }, {
                    type: "Feature",
                    id: "120112",
                    properties: {name: "津南区", cp: [117.3958, 38.9603], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@TLv@CNHFFBHGZFETNPhCVGNGRQXKXCjBN_HIdUZChBVF\\TFECSDGVCZDRQPWdVNA^]RBBAAOQ]DSE@F_Q@[VMCSMADUECOHycIqMQEU}zkawENRDENB@ADG@@HF@YnaAOF|CDFHUHH^kVbCR^JHIFLJNGHBDNPXGRSCO^EBMNCPDHHFAFiEIHOAEH"],
                        encodeOffsets: [[120045, 39982]]
                    }
                }, {
                    type: "Feature",
                    id: "120103",
                    properties: {name: "河西区", cp: [117.2365, 39.0804], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@d@hZNFdcLYXKRCtCMOFSYEGHEAGEDMu@SKAAsx]GMTGt"],
                        encodeOffsets: [[119992, 40041]]
                    }
                }, {
                    type: "Feature",
                    id: "120102",
                    properties: {name: "河东区", cp: [117.2571, 39.1209], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ZBVFFIGABEEA@KXBDOFM[EACJgOIE@QIMGDBHUFEEGAEHECEDGIAKQDWLKZcdQPEP@FOFBJTJ@HNORJf@DBCN"],
                        encodeOffsets: [[120063, 40098]]
                    }
                }, {
                    type: "Feature",
                    id: "120104",
                    properties: {name: "南开区", cp: [117.1527, 39.1065], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@NMVDCG\\E^B@HlB@YEDS@CHsNSiMGDebUXAJEjidVTAFHDFJ"],
                        encodeOffsets: [[119940, 40093]]
                    }
                }, {
                    type: "Feature",
                    id: "120105",
                    properties: {name: "河北区", cp: [117.2145, 39.1615], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@DBXFADB@L@LFHM\\NHED@JKZRb]QMRAFCJBDCBQYADMCAe@QIMP@GSIAIPE@E[EGH@ZEF]^HJAXK@KF"],
                        encodeOffsets: [[119980, 40125]]
                    }
                }, {
                    type: "Feature",
                    id: "120106",
                    properties: {name: "红桥区", cp: [117.1596, 39.1663], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@J\\PNHEZBFEJELEL@BWGI^]FEkA@G]A[FDHUCMNEHJ^"],
                        encodeOffsets: [[119942, 40112]]
                    }
                }, {
                    type: "Feature",
                    id: "120101",
                    properties: {name: "和平区", cp: [117.2008, 39.1189], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@DT@FCHG\\FFOROMEgYc@"],
                        encodeOffsets: [[119992, 40041]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/world_geo", [], function () {
            return {
                type: "FeatureCollection",
                offset: {x: 170, y: 90},
                features: [{
                    type: "Feature",
                    id: "AFG",
                    properties: {name: "Afghanistan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ࡪ͇وŐǬϠڐŶӂʮǚڦ۾ǌƀ̚ІɣʪҴMوǯʲĹ،˒˰ǋ˖ϪԈiżŬĘͺβ̈Ҕȏĝʱʪ¡ý۷ͪ˟̊ǰώĊԼϖׂ×ࢀAƬʋӧĥяƹ७ĭࣗǭӫλȤΣĪллΛ͑ɳ̡ߛͦ։՗ɅΥԕ²ԋ͡ɿ̳þٝŋğɻسDҵӇ܍થΓבôǝȁԇņ࠿űටіހހåզُƚßՔ˟ڢάҢιŮɲؒ΂ਸ"],
                        encodeOffsets: [[62680, 36506]]
                    }
                }, {
                    type: "Feature",
                    id: "AGO",
                    properties: {name: "Angola"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ȸصʌԋȘ˕͐ѯ֊æˤŠҬşŲɀɂӨԶ®ƤіHñ̡৴RfՉǞ͕ūԑÖԫ˪̷­ৃȼüκsԴŴϦ¹ĘʹĩСƨϿů̿î́ყZᦵ֤ۋպԽ໳΁᎝Š׋Ж₭ŵÏԃϞկ~ԉƝЙǅÿՈŜ݊̂ޒªΰ˚ݶȨΆӘռːϐĘج«ӊʣ̜ɡԚȵԎ®Ǩʶͬʭ߼ǣ֚сՐĄǎΌŔʒg̎ĸៜ["], ["@@ɉėɣلͼδʪƘ̀˽̩ǯƍɍλ"]],
                        encodeOffsets: [[[16719, -6018]], [[12736, -5820]]]
                    }
                }, {
                    type: "Feature",
                    id: "ALB",
                    properties: {name: "Albania"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ń˷ŢέΒȳiə˗ŧ»˙ϷСƛÐgȂү˰ñАîֶŖʼƗƂÉˌθаÂƿɨôǴɥȪďȨ̂"],
                        encodeOffsets: [[21085, 42860]]
                    }
                }, {
                    type: "Feature",
                    id: "ARE",
                    properties: {name: "United Arab Emirates"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ƭ¤ɱڂƂ۞uԖ{ֺ֪ظՠՎԮǆ˹ŖڑѕGçճƪŝϝǑE΅ʓΏuͷǝǱᡋъ͏࡚Ț"],
                        encodeOffsets: [[52818, 24828]]
                    }
                }, {
                    type: "Feature",
                    id: "ARG",
                    properties: {name: "Argentina"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ߗ§ѓ̔ԑx࣑@Aሞ͒ϵрؿનԋ୲ȿϙп"], ["@@Ӵ؇͠ڰॠƊǷ໶ോۊŷਆاࡾ͡Ŧχࠡ౧ࡒɭ़ŷڔƈނ٢Ǝݐжǈфӝiڣۻҩ֟΁ॅࠃ૭ଧȽڥɣࡹT࠷ǽȇÝիËѫ੨ܙŗ׃Հν§Ч߯ઁఛ҉။ǩउĎǰԅǣػƺщԋ̏ࡱř̪͕߱ɗŜ࠳֨ʧҠˆʢѧޛʻڭԹūࡋȣ҇ߏEڃљʋؿؙࠞߦǝ˿ݭ঳Ӄձটލͧ΅Ͽ˔ࢍ֔ӡΟ¨ީƀ᎓ŒΑӪhؾ֓Ą̃̏óࢺ٤φˈՒĭьѾܔ̬૘ěӲξǄę̈́ϵǚˢΜϛ͈ȝॺ͸Ǣƙ਀ȠࡲɤݢԊ̨ʭࠐEޚَոo۰ӒࠎDޜɓƶϭฐԬࡺÿࠀ̜ބռ߂צԺʥ͢Ǭ˔ඔࣶд̀ࢎĹɂ۬ݺશȱ"]],
                        encodeOffsets: [[[-67072, -56524]], [[-66524, -22605]]]
                    }
                }, {
                    type: "Feature",
                    id: "ARM",
                    properties: {name: "Armenia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@୞ƀǨə͌ƣǛɁ҄˽ʁˋΦɫϘƏl׋̣}΃ӢHżχCʝɤǩuͧʖرȼĄФƛ̒"],
                        encodeOffsets: [[44629, 42079]]
                    }
                }, {
                    type: "Feature",
                    id: "ATF",
                    properties: {name: "French Southern and Antarctic Lands"},
                    geometry: {type: "Polygon", coordinates: ["@@ը˃ߐĿǅɽϣಇÃq҂ŮΎÊǢ"], encodeOffsets: [[70590, -49792]]}
                }, {
                    type: "Feature", id: "AUS", properties: {name: "Australia"}, geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ߺ́ҜŘپǊԎÉÐঽ˽́ēگ̉ɰ׍בǧ®ԫԭܘŗֈӝܸtϬռõ"], ["@@̢ڇբ̈́˦ΡЖ͟đϋǴܛŸнɄĹɬܕąѥ˖֭࣬ѭצЋ֞λŋȯӔՃࣧ͜ͲȂ;ηȴźƢࢹ׬ԩϸ͋ڀڹʀڭtӏËԳА܋µݓơϵɩݡjӕǕ׻χއثЭ̫ٱ˫гʝܧ͕нɅػŉׁªˇӕ̇वޡ·ϫ͙ԕέ۟ψԥƪżѬҝǃ݁؉ܩɪӉƄӑÔ߿ʐիԮƻْțьЭ;߱ĸˢРȯزЧ׉ݝƷѮҬŶӞ͘ЬãجہܑԿ˽͏ڛٽΊ~ҀԿ،ѹ̀ǂȘઃԚןz߯Цຓāછ̝ख़˫ߡÈࢻљܯȗǉѱ̳Ϳ܉qՅõݑƶ׿ğֽԁ҃ʕуʁЗˋؕ֛Bࢽ՜ҋǄlӖкŘƚȒ̠ĺאģӼѻࡖƏӒӎͭնsʚϋͰĽڄӓڔřΪτε˳ެиʑʞ͗aјеڎă˄țʦĠӠǢȸŘрęӮΎ؀Úٕ΢׀ۀˬЦΪٜ̰ϤàɴĻڎ̺ԚĤŶȀɞüҬoࢨʖҚώɊ҆ӲѐͲvҘט܎ΠܩΦǚ̗Ј˂ТψǻĸٖҠаȮͨцƜ`ɼτĭdɂτŦОŔبϫҲӽՂMՖÿǱҦДڪϜɘſȾκӒԘ̒јıۺǂeі؛ˢ҂Ū֎ȻҀ·ۼɋʈĐԶʵӬʊ͂ñȠǊϬеɡ͉҇ͻ˿Įͱʙп̗ЭÔʁڜҫ٨ˏѠ́؈ӻʂBѰɍŶʷߤ˵ֈ˼ǐҊǠόľҤʰڞŝОÔʔīӔŌنǈǠŽˬȮѾǆҦtʈ̸̾ʂЩÎՃȾķΛ̨ёÚӇ̥"]],
                        encodeOffsets: [[[148888, -41771]], [[147008, -14093]]]
                    }
                }, {
                    type: "Feature",
                    id: "AUT",
                    properties: {name: "Austria"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Û΃ӁCǎǻ˧էǇƗܽsщȏۛÞயɐȉ̊ࠧƣĭǅԗŢѕxϝƶźȴƬʪ²ьɹŤɜݎ׸ƮЖ}ˀǣþƜšո̠ń̒ϰز˓ӀΆ̐ÚٶʱЂªϰǁãŃČ̅"],
                        encodeOffsets: [[17388, 49279]]
                    }
                }, {
                    type: "Feature",
                    id: "AZE",
                    properties: {name: "Azerbaijan"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ʞɣψDGŻ΄ӡֽŒщϰƃ͆Ǫv"], ["@@ϊËƞɈԈͺѴѵђ׭ϺʸɧۗãƣٵƟ̭̍ȝvзȽ¥ԻѲ̂дʝʚ̿×যإk׌ϗƐΥɬʂˌ҃˾ǜɂ͋ƤǧɚȶƎضʍҐ¹ŘĲбҔɔŚʀ׀ԙ"]],
                        encodeOffsets: [[[46083, 40694]], [[48511, 42210]]]
                    }
                }, {
                    type: "Feature",
                    id: "BDI",
                    properties: {name: "Burundi"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Á০ɃϢԜßʲӎҀÅ¸ͧǸȏT˗ȹǭ͛ѫ̧̥΍"],
                        encodeOffsets: [[30045, -4607]]
                    }
                }, {
                    type: "Feature",
                    id: "BEL",
                    properties: {name: "Belgium"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@؜áުǪՐοҦȝħ֧ɕĝһܿϦћßדІϷͶϷ`ũ̒ڪǔ"],
                        encodeOffsets: [[3395, 52579]]
                    }
                }, {
                    type: "Feature",
                    id: "BEN",
                    properties: {name: "Benin"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ۛįȹ׆ኞǛǦЮ̇̌ʱʞņѶ̀ĨǠξЪĀȀʤˮʘ̠F٘ә˩ȎӽǓͷĘɧСԳʵʳǁՉt՗µണ"],
                        encodeOffsets: [[2757, 6410]]
                    }
                }, {
                    type: "Feature",
                    id: "BFA",
                    properties: {name: "Burkina Faso"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ֹɐϽ̍Ƀϗǰƥ˦ϙǾÅӦɮΤo˴ښۢŬּɲȴОœΚǢŘɎٴϖǆˀ޼ΒҦŢɀǇՠJáСŔϣӀչНॺȏmֻǿʣЩÿǟν˿ħ݁lϳâ˓ƉωÖร¡qӉŘم"],
                        encodeOffsets: [[-2895, 9874]]
                    }
                }, {
                    type: "Feature",
                    id: "BGD",
                    properties: {name: "Bangladesh"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@i׽̉ŶÆگʉѬµєǅКΕӨޟü΋˃ҳΧǠũƵʃĠ͗øŽۖ̅لƜԒԫɤȆ̪Հ̼؅Ѽ֮̔ږεВ£ô׏ߞřު^Ӟƛϯ܅ϕµʷӍҢѥƎ՞ɶFѶ೯"],
                        encodeOffsets: [[94897, 22571]]
                    }
                }, {
                    type: "Feature",
                    id: "BGR",
                    properties: {name: "Bulgaria"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ʎΉ͚Ö٦ſ௾«иɌবȜ̩ؒӴĕѥΏ̫׹˔ӏܣŒࡥ˃Uлޅÿס̊ڧɱة|Ñ֊сːƒŢĝĴƘˌ͌ˀСδ÷̬ȸȐ"],
                        encodeOffsets: [[23201, 45297]]
                    }
                }, {
                    type: "Feature",
                    id: "BHS",
                    properties: {name: "The Bahamas"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ȵ£ɇӜ̿ʐǾՔʨۣ̎Jӥ"], ["@@ࣷƅÏ̴Ђäֈ{~ɕ"], ["@@ƟׯƷņ`ѮϓͪCĪڐϗ"]],
                        encodeOffsets: [[[-79395, 24330]], [[-79687, 27218]], [[-78848, 27229]]]
                    }
                }, {
                    type: "Feature",
                    id: "BIH",
                    properties: {name: "Bosnia and Herzegovina"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̦FȿσМ͓ūЃȡƽû˙țūҥݓ͈ͅΘ͋Ȅϭ̾ǻʺЩϾǬΒ̞ȕǼǨϾnܠƓ׈\\Ϟȅ"],
                        encodeOffsets: [[19462, 45937]]
                    }
                }, {
                    type: "Feature",
                    id: "BLR",
                    properties: {name: "Belarus"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@߼Mࣰ̈́ȚӄېːÿϔԜƚ͖ࣘࢮɁŢȻѲĴࠒȧĊЁǷɧՄս΂Ƴ»Ʊ֦Ʃʎɡ͝ǿڳǉÿȠ˧ȸ՝ܝ¹ʵȁÃхͭĆݷ¡əȞ̿ƥ́ŨڍjफȬࡕàٱmҡɩГeϐʷϴԌǢLͰɷ͌ϊ"],
                        encodeOffsets: [[24048, 55207]]
                    }
                }, {
                    type: "Feature",
                    id: "BLZ",
                    properties: {name: "Belize"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@OŮĸƴı̞ԔǄZHūǄGaɭƋεôŻĕ̝ÀăīщǓɟƱǓ̅ʣ@àॆPژ"],
                        encodeOffsets: [[-91282, 18236]]
                    }
                }, {
                    type: "Feature",
                    id: "BMU",
                    properties: {name: "Bermuda"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@OEMA]NOGNG\\Q^McMOI_OK@CQSGa@WNLVWHFLJXVFGJ`ZRTDLeeWKIHGIK@@[MQNi`]VDTBHCJAPBJLVFjT^LV\\RJZRn^RH`TfJjZHHOTTFJP_NOX[EYQQKMEJOLANJH@HQHAARF@ZEPS[U_IcRQXE@EEKKOCGGCQCOGISKYGUC"],
                        encodeOffsets: [[-66334, 33083]]
                    }
                }, {
                    type: "Feature",
                    id: "BOL",
                    properties: {name: "Bolivia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@य़͟گӳ؈વȲ۫ݹ؅ŗ͡୆ҋऺˆ߾ѳ΢ŏ؆ЫֲՌ࣢αۺȖ˰ƭ̶͠рh܎¤נǸ˶ܩഠزíѠnȈʪ݀;Ѷ͂સƚęؽļ͓ãࣰ֛ݫऴƑ̻ͦ֨ǕΐʑՈTӦʟӟǐʕZγʓa͒এྖūӟĜͧҞɽȤԹƫڋɯρĄӏʿǥaʶ޳јޭ^ัʓЕ݋sҋͥ৕ƉǸ"],
                        encodeOffsets: [[-64354, -22563]]
                    }
                }, {
                    type: "Feature",
                    id: "BRA",
                    properties: {name: "Brazil"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@૮ନॆࠄ֠΂ۼҪjڤуӞеǇǒӜŖӼBҦ̡ƴ̿Ƌ̻į͔ýޔƿʤ֥ɪ΃ǏࢱǈÈଜʝҴˀǦăӐɰςƬڌȣԺҝɾěͨŬӠྕ͑ঐʔbYδǏʖӠӥʠՇSΏʒ֧ǖ̼ͥळƒ࣯ݬä֜Ļ͔Ěؾષƙѵ́ܿͽȇʩџmرîӃƟϡĪÈ౨ۏӷݏv҄ͅ֏¶ǲΰұԞΓݴɜƶA΢ԖʎċҔɊ̈Ôϼ०ֲێǊŔŴݴϚᘰpθſӔύ̬LؐӀƒǚē͐ӯĔYՀ࿖k˦̂ɸˉǐӷǂļҨѻٸÆǌʲشȞΊƐĮΤ׸ʆ¯Ǯ܅ðśՊ֞ϓɒǀþجŅڜȿʐȤ؀žल̮͎̾ŏʂѪȜȗŉσ̀ŵȖϷɷ̏ƅ܏ɌыÔϳԬϿЮ¥ĢǒˆϠƦ˚ɢҬíȲҚçøǢƗǘĎʐͺõЈĒӔǱξǥʺɪȊŘɿДÒ͒͊ʴؤӼޒ˺¢ȺҫҼ฽҈Ƒxׅمەʾʩ๤Ɓࡃٔր੐̟ඊԡШӱƏҫ঎ʶ࿐ѹఴఔ۝੸व٪ʏܖ̦˅˸੭Ɣԗͯ൹ёշஅୡՙोثܯȿgɻءÒ༽ɹಓęօˇͧƫ૱࡛઱ƛࢁڹηȟԋ࣯Fೕ͓סύवʗ঩ڝ܅࠯ũطƔҫƽࡓȏЧחҥट๕݉ڗ֯Ͻϥߛ։ӑɷӈψЊӟֲڇҬࡹՠ̹{ࡅٰձę"],
                        encodeOffsets: [[-59008, -30941]]
                    }
                }, {
                    type: "Feature",
                    id: "BRN",
                    properties: {name: "Brunei"},
                    geometry: {type: "Polygon", coordinates: ["@@ͬ̾܎ҢЯ·՛Бǭ˹ϥѦ"], encodeOffsets: [[116945, 4635]]}
                }, {
                    type: "Feature",
                    id: "BTN",
                    properties: {name: "Bhutan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@΂ˍÏԩۇ{ۿÈՇſޅ͊kǚ֌زҒɈ׸șѺqπɥ"],
                        encodeOffsets: [[93898, 28439]]
                    }
                }, {
                    type: "Feature",
                    id: "BWA",
                    properties: {name: "Botswana"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ǜƭ˄ӡॎइήĝD̑ʚՑٰŹ՚ϝ஑أݭع˩֓ʧ́ҙãƧГďʽ՝țہ¤БɾΟĸХșȵГЉʧпϑ׻đȇ̐üԠӽߚɧŲAរࠤ|Ჾشಖ͎̎΍՜ͤʮDӂȎưÙ͔ڣ"],
                        encodeOffsets: [[26265, -18980]]
                    }
                }, {
                    type: "Feature",
                    id: "CAF",
                    properties: {name: "Central African Republic"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ۜÚƺɎƔgȾȏ੔͐Τ͠Ѭ̌ĉ̐ʂüߺ½߆ϴ؊ࣺю;ՐƜĪΫӜԿF΃ƋΓÄʻ̆ʍٖοҢͻT˗֠ѫΖεɆԋغͩƊˉˣęաpكĘ̹ïųȱ˕}ͧǲधнϥĎŗÝʥԕطǐؙĊ՗̴ۓ˸҉˓͛яùדգ²֩ƘԅѻѯޱėʐϦϧ˔̳Ѡï̠ЇѮæʢċΞÞٴȬƴц࡜"],
                        encodeOffsets: [[15647, 7601]]
                    }
                }, {
                    type: "Feature",
                    id: "CAN",
                    properties: {name: "Canada"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@؎œުxЯ΅̵Å੥Φȿˬ͆ʸ̎С"], ["@@Хcઝ˂ޯІ̄î૆Ɂ࡮Η|Ʒ"], ["@@хŝൡϢʥ̘ݩ̌Ưʈࡻư͕ҜðȚࢨǿԨŵ߄ė˺̃дЋ࠼΍Όҩ"], ["@@։ܿո˴֠ǵ̏̉ݚɱϰȴ࠼ʵʹ؛טƞņѿʼԷΝ݉ϝփǂǾیɻńইܯԅצЂ߫Ȳࣙ¹࿅~ŹʠԼ̐λɬ۸Ԓࢄ೾Զӎܲ̂϶ǋɫ҅Չ"], ["@@@@@@@@߰äʥ॓ܶگͯDԑϪ̵ϮчʾƻτºˎЂŋ"], ["@@͡ѳχîəʢ Î͖ʦΆkɈǣ"], ["@@ঝҧץnǿɪزϲ଼SiǍ"], ["@@ƼυјżӨɗं˽४ʽöЍؤÞ׶˥ݙ˃ಳȬҽϚ࠭ҁ஡ѣ˿Ӯଗăܴдņڌ˺ޔ؈å"], ["@@ष¥ȿЪΦҼޖŜپɷXέħřձʛ"], ["@@Է̍ଉʬۃğଫϘ݊ʼטζࢼʃԎƯʦǅԠ͍"], ["@@G࡭૰ڄ৐եʡح߾֥࢚؈ؖܨ°ईஞÝఔūૼй¼зس҃פ҇ŃУ࿩חୡŻࢃʨʣуߵ۽ʓοই֩ளÇڏΡÇձ঍Ŀਉڻ࣭ु͙ڏ±উంƕϜ޻ϼّ୲ǔ༞εࡀ͋׺Ѕ੆ɳࢸΟ൶µࣴąƍܫʼࡋ،ळనߗ٨˚ҔࡺѭೢףѶഎЀ॒לҮהç֭֘܌৷لলࢤνݾ˫ಾגȘ෸ɫࡸć۠ɚ޴˵ਚӣʮ͙ຄÛ}۷˪ਜ਼ގſ،ӵ௖Ұߦऔ֌ϸٺݣબੳघ৙͵Յ૤Ӂݰӓംɏբˍͬ܃ټŏͶͅÖऻ؍́׽̏൯̗੏ۑ෇ƋᅛǮుPࢇÍ۱׽ੳω௉૗ॵޡ܌Ɛഘૄᄈ۪సČݔЫߍ֟ˊࣟ˜هતп൸ŨࡆीÎ؍ժ̥ਣսᇷԁ࠯ͽय؁ٓÖ܆ฤ۞഍णĹջӆBନύʐ֛ƛ˧ɚٙىʱٹ̕ϡΥŽˏ¥čȹ໽A౥MϛƷࢵ؃Ŀßˍ͝ޗBࠛGϛƅƊǑøʯeďષлࡽſউ҅Ɂ@˷ƂĥŦnĔȂ̎ЂҦʘӺǙܴǵނ࢕ЂľƬūĺɳ@ǛƆ¥ȤǍēɥ¾ĊȡĊćɚٵːڹ˪ࠑ͘߁̨ݧʃ˝Sਕɔڻŉࠁʺ࡫Ɔו¾ʻƜƫҤ˳IE͓჏BᮝA᭯@ᡃ@ᠿ@៙@ᢡ@ࠛ@᠁@ᛷ@őF྽ࠜ׵δຽΐҳݖŤԨ੻ΨƧڴ৭؎iѠҲКwՌෙ՘࡭ॠՁ׾ޑϚ֣ΈѿѢࡇ˕ࠇҹݛւדπࠋɸࠟ|JⷎNᷲ༬ȭ೘Й࢘û݆ΖৰˀఢĹ఼τ൘Ⱦ־ΑظȠȊЄ׈ęෆݫ૦֬ŖّਔƐ͆ʖৰ·౼Λዸ̭ୄƛࠖÄଊэ஁зຶǷᗘĲܒƦࣆԋࣴьࡩΦժ˼৾ڦĎڴȩࡊҗरä๢ϛಬƄ௬oĭԺݞƦದ˵KߑՖڠڰuϞࡊ࣑԰কͺäघশ؎ૌƇࡘχଞॅݗЭ༠ǝ"], ["@@нϿሎʬୠщॊіސ˟یࠛфΒ׭ࡰ݊Ŭ࠲Ƈश͹ՆࠉʼץථеະЉĝσൡã՚͓˱ູ̯Ƃฃɪঋ»ཅ˷ᒃű๻āҕІଫɮݙģਛږ֔ĚಘƜஈરƦྷȞᅗã஗jѷ̴ዎͲಗ[ืɚ۶ـגͮᖬԠ࡬ǋ"], ["@@݉ևಹך˸Ş૸ٔȁ"], ["@@öɵࢿ|ࣟjࣿőʑ¼ऍѾ̠ИÈነěชң"], ["@@ڎԽޤڴᒆΈ෺ࢅůջဒʒߒͮሀыୄЏŊν༚Ȑ࢘՗᎐ܸͩ͹ߐ޻໯ϹጘչೲȁீޙೖÇʽכ้ঋਗά೓߲ઙĿŁӕࢪӥଜϯΌɟմࠩ́׿੕ɪᑏڨஎܣ࢔ԕƎ̉ᗱͲᅩӤ৳Ц̌ʂయќ௥Т`ʑᝡƅ܃˾ֆؤ཈dႸņ˫̜̊оચࠊɳϊ͕˾౿Рၳ˺՞ɆࢷԺ݋´ڏ˸҇ʛ຿ŅᵝȈᄫʚഹŴۥ̐࢞Ϧ஝Hˉ࡚٦ݨࡺ΄ᓪɢأի"], ["@@৊ǯຄńɖʑ޷Е౜αƱݳ൝͗߳ê׉͎ᐡٮjˎ႖ĽएռসР"], ["@@࣓عय़Խ݆`кѮΨ࠰ɮცྈȱళݟ৉Ǎ"], ["@@ᕍЙѷςኹѺήΤ׌ؘܰւࠑԦᭊƀ஬ǧᒰ±ࠄʑࣖΝ੍ɃᏝןਫי@ν"], ["@@ҙ͙௝Øৱɖ҂Ϛீɨܼ̬̍ˇ"], ["@@ٞϵљϣس൱đࣗƈjӬ൝ÝÁٮࣜౌ˺ஂµÜŎ"], ["@@̙͢ݠƘࢢƪЩԝЋ᭗Žᑯη౩mŅ˜პϊ④ĳ୯Ʈପࠐ߈ɾᛄ˳๶ӻฺÛறߨޔ̪ࢄĭ˲Џ"], ["@@ढ˓ကFܨˡȑ́८ȍՔȧଊ௬ë೸ǼႊðീÏ࣒ͅȊ΍ԽɟభǷ੽ĸᜱŻႫcഫļᖁ˔̃ҦĹжࡇξ჋ĺঅʼ͂ΈႾÁ"], ["@@ŗ٣٩̇޹£༝Ϋ഍ŹଗǼ@@ුؼႮծಆ[ସŬ"], ["@@ϣy༽Âɡɼၜ]מƻĵĩ"], ["@@༩ʋఝ˔ڼˎ௮Đஈſ˩ʥ"], ["@@৽ǏඉBbŤࡴʦҌદǝ"], ["@@కǥۃȚέ͂áΎજӪÅ৐̇ɫ̣"], ["@@͜Ε൏Ĥ൩˘ሏߺʠ৫ȮÕ͐࿶ŕᗢ̫ٞЍ"], ["@@০˕ଽʟ༇ك๥Óდņࣗ΄^̦ڔɢ໡Oए˨ՑϠ׌ώ׊ʲࡴÎοȖዜ¨੶҅මǵ൞ǃڒև"], ["@@ᖢßᅮŅ໤ɫɡᏅη᎙ǟݻȉᆬJጡԙേʃ෯ۇႿƓՙǡᡷěୈĿׇƭ۞бߙ˽ಛʃЋ͡୫ʣŞȏ෬lȳᖟԋᔧɴឿŻధĸཟªĿЖ༊Ȑб؆ԢÐᖤγ଩բഹǈڼ͘๰Ȩʄ̊஋͠ΥѠᘞڒĝ಼̪ቃĬ᰽Á๣˸۩ͼগʘȁ˺దǈঘ࿲ƌం̺ਬ©ࣤɽٔҒૐƈບĢᢲҀĝ᝚ƚᆔÁᆒÁ"]],
                        encodeOffsets: [[[-65192, 47668]], [[-63289, 50284]], [[-126474, 49675]], [[-57481, 51904]], [[-135895, 55337]], [[-81168, 63651]], [[-83863, 64216]], [[-87205, 67234]], [[-77686, 68761]], [[-97943, 70767]], [[-92720, 71166]], [[-116907, 74877]], [[-107008, 75183]], [[-78172, 74858]], [[-88639, 74914]], [[-102764, 75617]], [[-95433, 74519]], [[-123351, 73097]], [[-95859, 76780]], [[-100864, 78562]], [[-110808, 78031]], [[-96956, 78949]], [[-118987, 79509]], [[-96092, 79381]], [[-112831, 79562]], [[-112295, 80489]], [[-98130, 79931]], [[-102461, 80205]], [[-89108, 81572]], [[-70144, 85101]]]
                    }
                }, {
                    type: "Feature",
                    id: "CHE",
                    properties: {name: "Switzerland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƫŹȳϞƵіwá΅χƙةŀǻ͹ЏơƄһ˵Л¡αǶ˽ςБſ^ϠؚҾɈϤûɲƞ܎MǦǼ࣒ʱ"],
                        encodeOffsets: [[9825, 48666]]
                    }
                }, {
                    type: "Feature",
                    id: "CHL",
                    properties: {name: "Chile"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Bም࣒@Ԓw˧ͻܛʻЭӻä؏ʨ࢟ŨੑҸ࡫Ҏୃशۘǭ୼֗૜̟ѢϬ˘ֺޠΎװı"], ["@@͢୅؆ŘĺɁ˿ࢍࣵгඓǫ˓ʦ͡ץԹջ߁̛ރĀ߿ԫࡹϮฏɔƵCޛӑࠍpۯٍշFޙʮࠏԉ̧ɣݡȟࡱƚ৿ͷǡȞॹϜ͇ˡΛ϶ǙĚ̓νǃĜӱ̫૗ѽܓĮыˇՑ٣υôࢹ̧̐֔ÄgؽΒө᎔őުſݝPЙȷݷ̣Ɖ޹Σoॅ˚१ג@@ਲ਼ӔˁՒʄӰх֒Ņ෤Φ߰ࢴٰౣʔߞݒ˸ඊत̏Ѯგ֝ɠʿ਻ՉŠ˂ல˺༒ϮָʍࠎéूΠԨപ׈എΤబȗ఼ʤۚĵਞӮਆưྺ˒ნˀሤÕ൘ǩ஄ќɌɦњЬֱŐ؅ѴΡ˅߽Ҍह"]],
                        encodeOffsets: [[[-70281, -53899]], [[-69857, -22010]]]
                    }
                }, {
                    type: "Feature",
                    id: "CHN",
                    properties: {name: "China"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ԑഓΫۏѷ܂ĩخӶࠜڦَϨʡƣԓ", "@@ܩЗۏʺyܢаϠࣾɾӚoȊ͍σσșӟ"], ["@@ฬˍ঺ׯͼ߃౨Cܰͨ൸ʜѳݱ͙̭˽ः֡ࠇ৵ƪܝ̑ɜܙť঳ѕwLяթӺͯһಙαƀѹܩЍ˂ֽ׭ऑҋۃա୭ʑأϽࣝɭ҂ϴǭ͞ږ֠ѹѲܷ̓ॉ׏ԫթ࠙¡ѓϻѸ֩یƏϕڔʕस׶ݚ͝լuƌѱஓɻϻҏࠇућיࣜҥͦࠝԞޓ֮٥_دՅɯȪ҃ӶʻŻۃɇڗҷ÷ؗࣧڹિޭোିޡୟۻृĩԣύ̃˘Ӈй୭сࢵŹ˻ࢱҭ·ə؎Ȧ͘ૻːЇƍࡍɔЏ΀ƄӜޏƶЙܑ̀҃ࠇīڡJ҉ȳѥūŶ॥҃x÷Ȣ}Ύ؝ʓεƸر͂ʔۤՏǎȧޜࢱƓĴাߔۮۚ{٠νȨ˭ӶӭÙࣟŲ˴ΜϿԺ׳Ν۵ȸॷ՗އسڳĿοɦѹr׷Țґɇ֋رëڌԟǭওĈोȖڿτٵǔ˯ЖҽŦࡓոکʴΑȩଢ଼טࠛՒɽऐ׾őіͭјĐۆࣙঠ൧ͼʝ٦ةϼƫʌųӎ͜ԛȔ˟ďɇިʈȔśȠߤЈ׈ǐࢸő͆՜ંĲͮ̚೜ҔŠȐãӐּɔݱฦဘͲјȈ؆ຒဠˡҲϞ¢ࡆۦĀٖ֔͢èɚו۸ѽப̿׆ڱ͕ঙ̢ηূƝଆŝ৪ԻԲġϤޟӲӿऒnჄȉ૤Ŝࠦůఔԛ৮BόʽঐҌബ̈ాঘ̒׾҈ך˰Ƌˤˍ͔ѴըӀùࡺǝ࠸Ѿ౲͚؞֊נʆ௠ŐڐĥĠ̘ݿזګː٥̳ࠣžӇŃɏΆר࠾Цو৚̓ஆՎQτݸࢾҲːWҪңȦۜмਰƲ૜vసʡ݈̱԰ࡏ̀α̊ԩ̶ࠕ"]],
                        encodeOffsets: [[[124701, 24980], [112988, 19127]], [[130722, 50955]]]
                    }
                }, {
                    type: "Feature",
                    id: "CIV",
                    properties: {name: "Ivory Coast"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ϣUוǒ՟Wহƥ׍ʍ̯ࠫǋvÞۖĄŀ}ͨΣΚˉÈʕɲǾώčО ʔƄB¸ξÝǌĄŜ̸ĶȹڨȗΎæ˸ǘÞŊúɸųٮOƸʖƢgʎĦžΫȞłΌŰϚǽƦ˥Ϙǯ̎ɄϾֺɏɠ஡Ο۷ɕेθܣͧ"],
                        encodeOffsets: [[-2924, 5115]]
                    }
                }, {
                    type: "Feature",
                    id: "CMR",
                    properties: {name: "Cameroon"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ľ°ӻŇԝŒЋÅ൅nŬڒ͟֊ϧƚǟϖɋŦXɶɎתЎ߸ʒRԄӮ͈bҾΉ־˲ĀΔȌͺžь҆ΊǞךǲȊŢѨɜ՚۾ٲ¬˨ĠƲͫͰˌʂ¶ͮ՟Ê֏֏ҜޅҷTʁÏϥČǻЅӸөμƛŠΏˆ׃ſɩх࡛ȫƳÝٳČΝåʡЈѭð̴̟џϨ˓ϥĘʏÓґڛȤڷɜ੗"],
                        encodeOffsets: [[13390, 2322]]
                    }
                }, {
                    type: "Feature",
                    id: "COD",
                    properties: {name: "Democratic Republic of the Congo"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@»ঙͶŕˑ̗͓ɟ͍ѫǯϷ±ګț͍OهʍɹԃŗÝýҟɄϡÂ৥ưޝċѧǘӣӤҹҒ੕ͥĒ૿ƙɣĵʇՙȊχƫষĻࡇɨƫט͝ɲƴìٟࣟR·Ҧ̳ΨٟŠȋѰԣ˅ڧŞ˫ϢՕüϽqµʾ́rϥºԳųιtȻû®ৄ˩̸ÕԬŬԒǝ͖eՊ৳Qò̢ѕG­ƣԵɁӧűȿҫŠˣş։å͏Ѱȗ˖ʋԌȷض៛\\̍ķʑh΋œşʼɊĘμƎɎ̪ǰɚđ˼͐ҜSÄʃ̼ƩӶՄӨШɆː۔θࠆϬўքМĪˌt̰Ǝ̆«ӊŀݖǐԾʦ҈¸Ԕúה͜ѐҊ˔۔˷՘ؚ̳ĉظǏʦԖŘÞϦčनоͨǱ˖~ŴȲ̺ðلėբoˤĚԘۙϘķɤƖϲÅҶǲȦΫ݊֏"],
                        encodeOffsets: [[31574, 3594]]
                    }
                }, {
                    type: "Feature",
                    id: "COG",
                    properties: {name: "Republic of the Congo"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̿˾ʩƗͻγۏࢸٖҪ̓֌˾ɂ֦ĺäό҆ЗݐʴЈł֒ĝڀЉӺζ঄ȽǘسçɻѢÔξ੘ڸɛڜȣÔҒѰ޲ԆѼ֪Ɨդ±·ԓʥ҇ǏԽĿݕ¬Ӊƍ̅s̯ĩˋփЛϫѝηࠅۓɅˏӧЧӵՃ̻ƪÃʄқT˻͏əĒ"],
                        encodeOffsets: [[13308, -4895]]
                    }
                }, {
                    type: "Feature",
                    id: "COL",
                    properties: {name: "Colombia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ΫȤЭ˨ʅƅ܉Ŝȱΰƽ_࠿Ӓŕʺ̼ÚтȢ̦иÊΞՆ͐Ѵ̳ȦǄӦȏސǸɚƃ܄ͻ҄ņТ˔ÑǂʠțӶĺŬѢـהΌĚT˦ƺ܂ӖϸՊfäǪڂéڌъ͞ȊОК̖»ɚɛǍ˱գƕɇп͗ʋʓ̷Ĺ׵ɷӭѢÇņϭȄȁâ͹ĳ̵ǫȸéȨ̉ઊĄӦŃעܡͼĚ؂­ӐĪ̔ƟƱҍȇ˯ß׻ǜ֑ʆʟȉэл̨ȃɠ̋ʰ࠹ǁĻǏӸɷˊ˥́࿕lZԿӰē͏ǙĔҿƑK؏ώ̫ƀӓoηϙᘯп҂ʣpժࡤٟϾԍị̈ƤҧɝصŀӵࢤϳɐˍІ֑Њɡā"],
                        encodeOffsets: [[-77182, -155]]
                    }
                }, {
                    type: "Feature",
                    id: "CRI",
                    properties: {name: "Costa Rica"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@җȆǟǮĬƤȄɷȪͥǔ́ņÅʖəƮÄʑǗȩȓɸˑĊŗǞLʮŎˆʁŠȖǌŴňֆɝȖŊˊéƔǥʜÇȪǲɈҙ͖ͷЂΩ͗õLͷǪűűıƱëǟ©Ǖ"],
                        encodeOffsets: [[-84956, 8423]]
                    }
                }, {
                    type: "Feature",
                    id: "CUB",
                    properties: {name: "Cuba"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ܨÑڊW߄˹̭ͮ޺Ĩ̔ȡ܈ԳԺϛˢ\\ԆǟÕʁئٌ΅ıȟ֑Ń֡¥׃âளą֜Ҷ΁ɔէÈ̃ʐȥӎӃ޵ɦʥǬભž̋ǐ̀ɀࠗ¨׿ѧΏ[ťȳеğΫĂѺʸǼ̤ϞȈіǎَĄȰĢ"],
                        encodeOffsets: [[-84242, 23746]]
                    }
                }, {
                    type: "Feature",
                    id: "-99",
                    properties: {name: "Northern Cyprus"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÐJŨȮ؄Yކʢ֧ΧÔƿęǇÙűj¥iĎÑ¾ǋVɫïƿ¬"],
                        encodeOffsets: [[33518, 35984]]
                    }
                }, {
                    type: "Feature",
                    id: "CYP",
                    properties: {name: "Cyprus"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ãࡱͿЩŊȟͶЎǀ«ɬðǌUÒ½jč¦ŲiǈÚĚ"],
                        encodeOffsets: [[34789, 35900]]
                    }
                }, {
                    type: "Feature",
                    id: "CZE",
                    properties: {name: "Czech Republic"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ϯǂЁ©ٵʲ̏Ùҿ΅ر˔ӃΰѕȬėΠƧʠؒǾ̸Ⱦ׾ǎɂǆɜīϒĖЊ˓ؼñ¿ɳҘǧŲɒּĥĄʿز»ϮЯʡCŽƯȕÅȑǇ¡wý˹ēϋbšȁ"],
                        encodeOffsets: [[17368, 49764]]
                    }
                }, {
                    type: "Feature",
                    id: "DEU",
                    properties: {name: "Germany"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@d͗ࡔțS̗ࡢǂҾɰॊͧІˋȞёɹɣ̨̙Ⱥ҅ß́Έ՛ϑĕɛĬɁǅ׽Ǎ̷ȽؑǽƨʟĘΟіȫӄί̑ϯ̟ŃŢշýƛʿǤЕ~׷ƭݍţɛыɺʩ±࣑ʲǥǻ܍Nń״ьֺ௅ƸЇɘ´ςǗȐĨ֨ƗࢢԎ@Ɉ͂Ⱦޔƿ˴ǐǲ۰°Ƽȃ֮вȓ̀ӈٌōՠŸ"],
                        encodeOffsets: [[10161, 56303]]
                    }
                }, {
                    type: "Feature",
                    id: "DJI",
                    properties: {name: "Djibouti"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ȤʹΑӏȩήɯ̱҇ȅƬȭÏҷb_ʮßɶ˴Ѐ̐ϊήñʪȴ"],
                        encodeOffsets: [[44116, 13005]]
                    }
                }, {
                    type: "Feature",
                    id: "DNK",
                    properties: {name: "Denmark"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ԋڹ࢟ӄŝΒ௼˨ˎу"], ["@@ȵ̓ʡĞ؁؁ɮХ՟ŷًŎͽҲ}࡬Ɣɪʌʦ݌À̐ɴڮʂѝʟ˙ĶɽҘŵ"]],
                        encodeOffsets: [[[12995, 56945]], [[11175, 57814]]]
                    }
                }, {
                    type: "Feature",
                    id: "DOM",
                    properties: {name: "Dominican Republic"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ŀƞپIӾɏɜtƴ̕ҠhʡϐЮ̷̯ͿЍǼϫˡ¢ƱƵ͑½ŷȲˣťͳֻɏƆ§ʎjɬɍʦȲƚÞ͒óҜ"],
                        encodeOffsets: [[-73433, 20188]]
                    }
                }, {
                    type: "Feature",
                    id: "DZA",
                    properties: {name: "Algeria"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ᮩཽᝩ࿷இϑटćU՘ϵƌԹʊȧЀᬻᆴᬻᆴṕᎠfǌ@ÊQ঺ബب࠼Ÿێɦ͎тচͪجӢòϞ̶સƚƸ͜ɛǲ̃ࢲ¹Ԟ́ՠ߰ҠࣦƢՌΎ߶ʰ෎Ƭർæшůߊͨ࣌P΀ȝֺ¾ǟћƄߟȡۙԭҵôمۊԃRȯԮ͹Ϊຝ˖ݏ°ϵƧۇÔϥŃҟòՇͫΗӺؓέ̘ҵϼƸڒϷςՃ"],
                        encodeOffsets: [[12288, 24035]]
                    }
                }, {
                    type: "Feature",
                    id: "ECU",
                    properties: {name: "Ecuador"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@҂غǻξ͍ϵԉςǞʀƙބ̎ŴƺԼ͆զÍ΄ҢǸ׀Ͱࡀӑƾ`Ȳί܊śʆƆЮ˧άȣŞٓʽճࣷ࢟য়ͧԥܵǃ֣Ӆ΋ΙъͻĞ΍áw̮ʈȨıΔ"],
                        encodeOffsets: [[-82229, -3486]]
                    }
                }, {
                    type: "Feature",
                    id: "EGY",
                    properties: {name: "Egypt"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɽͷǹىɫѩȝƥ˩˔ϛϒ׵ஸđùΐࢯԪࡋٌವ̴ҙ˒ӃݮछǗƣճ঒ݭƨǣΏ@Ὁ@⁩@@ᶶ@Ჴʥڲɐ԰Żά̤Ж૦b߲ɝ࠲ʛϴſ٨ˊΌʊݎêװŃɮеȜ˜ڨȣټ³аɄւ෽"],
                        encodeOffsets: [[35761, 30210]]
                    }
                }, {
                    type: "Feature",
                    id: "ERI",
                    properties: {name: "Eritrea"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@˻˖ΉӰϋ˒ɏܷ̄ͶֻXȭǬӯȡԛϢʽط঑ǬęʹβఀĊ֒ˆʴؤƐьӒӦঃɴޗҢУବߏҲӍҖӝˀ˿аʧʩȳέò"],
                        encodeOffsets: [[43368, 12844]]
                    }
                }, {
                    type: "Feature",
                    id: "ESP",
                    properties: {name: "Spain"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@¦״΃θஒ؆ਊƱ૾NࣂƝۦªമͰ͛໺ϡ̨ǺीϝআŊ®ӥߓ֓ઁǯõ˱ԩү͕ہ͞ӑӟϑǹճىǗש٥੧_ߟhՃ͍̓ͅЩê̵˴ʃӚ޷žé˦̶̀Śɬ̃ʢɶրͳԌδèЈƎŬZپϲɪɻфөƝŁӹCɁЬ΃ū̥ɇ"],
                        encodeOffsets: [[-9251, 42886]]
                    }
                }, {
                    type: "Feature",
                    id: "EST",
                    properties: {name: "Estonia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĮӸ̱ŁՓ̘ñӘਫ਼ɼ੔Ũ࣮Ƒࢂ|Ŵƣׯӝʞ޵ΫˉۙDܡ̸ρļ܏Ʃ"],
                        encodeOffsets: [[24897, 59181]]
                    }
                }, {
                    type: "Feature",
                    id: "ETH",
                    properties: {name: "Ethiopia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ԜϡӰȢȮǫּWܸ͵ɐ̃όˑΊӯ˼˕̏ω˳Ͽàɵ`ʭҸaȮÐȆƫǽ̴̕ҧ̴Й̛͎ᩨঽۺNᛛᡃફݟףաeɯ˅ַB͹˴ލΙʝΓ֕àȃĬȟwˇT੟܌ב@˹ˢ@ҾѧƘӻࣴϥȚƧʹэЦԧÒ˸ӐҀrŲʰ[ݲʞࢠЊɾĎ΄ήٜԔи΀ࠠƆܠ঒ǫʾظ"],
                        encodeOffsets: [[38816, 15319]]
                    }
                }, {
                    type: "Feature",
                    id: "FIN",
                    properties: {name: "Finland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ūיಀ֓ޡى঎ख़֡ܛݴس΅յఘֻ́ѓޭӟᅡੵໃá๑̯ൃǯӡҞ߿ˠȈࠢСݶАӪނՆ኎࣮֖Ǭē΢ୟЈ˳͜uಒ಻ֲ૩ЪԊɞतѻલ¦ࣘȭߠϊЬ؞ಬ˶઄ͯΡכ"],
                        encodeOffsets: [[29279, 70723]]
                    }
                }, {
                    type: "Feature",
                    id: "FJI",
                    properties: {name: "Fiji"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@̂ʍƓѭԳŗҩļąτ͖̀ϤĻȼƐ"], ["@@՛ǯŅ̼оǤˊ°Ӱˀ@ЧՕȷ"], ["@@é­@ШǨĽЗ"]],
                        encodeOffsets: [[[182655, -17756]], [[183669, -17204]], [[-184235, -16897]]]
                    }
                }, {
                    type: "Feature",
                    id: "FLK",
                    properties: {name: "Falkland Islands"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@৘Ԍ܎ȿԌʹڦϙʥ̋ଋʥϙ̌܋ϙпϚ"],
                        encodeOffsets: [[-62668, -53094]]
                    }
                }, {
                    type: "Feature",
                    id: "FRA",
                    properties: {name: "France"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ˣ٭ϡǠș֢ǜ̺ը͎Ɯܛ"], ["@@הЅќà݀ϥȊñʎjЈɗெƷыֹŃ׳ɱƝϣüɇؙҽ]ϟВƀ˾ρʁʚ̿̅ʯɐٱҖŃĩηݿӅစɬ௧˗ĩԑঅŉिϞ̧ǹ໹Ϣͯ͜ѢԎǆူࢁࢤإю౹͒čؖઠǾථɏˇॎߌέዠپʨێܾǞŪ̑ϸ_ϸ͵"]],
                        encodeOffsets: [[[9790, 43165]], [[3675, 51589]]]
                    }
                }, {
                    type: "Feature",
                    id: "GAB",
                    properties: {name: "Gabon"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ࡹࡔ։ۚԙࢄ˨ǾˎȲؔǜخ˴¶௢SOৠЌÆԞőӼňľ¯ÓνɼѡشèȾǗεঃЊӹĞٿŁ֑ʳЇݏ҅Иãϋ֥Ĺ˽Ɂ̈́֋ٕҩ"],
                        encodeOffsets: [[11361, -4074]]
                    }
                }, {
                    type: "Feature",
                    id: "GBR",
                    properties: {name: "United Kingdom"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@҉ֽًǦԱ[ǦҊǥ҈۴ࣔԳ"], ["@@࣋ࣧࡦŘऄIɕۅݯݩࢄÃäĕݠ঱ֺƇԬढ़ʈͧৰǅķ՝ѓʗͲѣݱѯ૳Rෝɱϻǒ։ϿޥĪם͍ҁǘ௼ࢨݪǺOBಽƔʃͰ࢜ʺҡҐǆռఢ÷D@ŮӤ֛Ԯ_\\৵ƨȧɬ̨ϒˡɴҍЇ·߶щє̨ࢆٶھڤá০ì"]],
                        encodeOffsets: [[[-5797, 55864]], [[-3077, 60043]]]
                    }
                }, {
                    type: "Feature",
                    id: "GEO",
                    properties: {name: "Georgia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ųάȿִӟ̲ҭĬ̯ʴĺĲ܄ƝఆƋଦЕƦƻԚƂ޶ǭʴ·Նșɓřвғŗıҏºصʎȵƍଢ଼ſ߳Юࣅ¡"],
                        encodeOffsets: [[42552, 42533]]
                    }
                }, {
                    type: "Feature",
                    id: "GHA",
                    properties: {name: "Ghana"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@೉ӯҳ˽ݳʑݡʆͨηܤɖैΠ۸ɟ஢ŗنrӊฤ¢ϊÕ˔ƊϴáÕʿΖџC؍Ąڍɂ̫ȅݳäйɢՓȈ̍"],
                        encodeOffsets: [[1086, 6072]]
                    }
                }, {
                    type: "Feature",
                    id: "GIN",
                    properties: {name: "Guinea"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ʃtǡͷʁJǏǴÈͶΗԨɕħǵmɳ³V̮ƇɘʔǻΜɹ̜ڥDțǁɵoƝǷīɹ҅σρӼ͛͢ɋŊȿǖħϊūȂʓƐώЦʮeɖƘȄDƄŎï˨ĢĖd˶МU؀ȱȄlÚĤҜáŨ´¶̭ƆBɖŒƔɸɇάãɲǺ˖ŒȬŠǚuȈȁĴɳΆΙǣɏ˙ǴĊŀį«ʡʲʍǗÝå˷Ș΍Ⱥڧ̷ĵăśÞǋ·νƃA"],
                        encodeOffsets: [[-8641, 7871]]
                    }
                }, {
                    type: "Feature",
                    id: "GMB",
                    properties: {name: "Gambia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ņόࣶzȎȦˊ`ͨȷʼIˢƚǞʏεȋιdέǰ̷ȗƭQȫŝއl"],
                        encodeOffsets: [[-17245, 13468]]
                    }
                }, {
                    type: "Feature",
                    id: "GNB",
                    properties: {name: "Guinea Bissau"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@҅ΘΝÈȕʀLŸʯǴÁǶѼƌ˦ɦĨ༈c˵ġĕð˧ƃōȃCɕƗʭfύХ"],
                        encodeOffsets: [[-15493, 11306]]
                    }
                }, {
                    type: "Feature",
                    id: "GNQ",
                    properties: {name: "Equatorial Guinea"},
                    geometry: {type: "Polygon", coordinates: ["@@ƿŴ़̀െmPয়௡T˳µ"], encodeOffsets: [[9721, 1035]]}
                }, {
                    type: "Feature",
                    id: "GRC",
                    properties: {name: "Greece"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Ҡ˱ٺ¶شÑqƣҜĶĿʛ௃íTƒਁǎƺΦ"], ["@@ʹՁȥĥԟ|ѫĀৱɓ׌ҿяƋҳAѻўƿȁȊԅрЁ̓ǿҴϯжʑ^ӅޥɠʜѕՓĕ͈ݏ֏Yۍμ̿ڦƧ֒͝ϮљӐÉʆϸТ¼˚˘Ũjɚռö͌ȀҖgƒƦǆت{ڨɲע̉ކĀVмЦɝ"]],
                        encodeOffsets: [[[24269, 36562]], [[27243, 42560]]]
                    }
                }, {
                    type: "Feature",
                    id: "GRL",
                    properties: {name: "Greenland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ᬜԆ᱒ੴ̴ᲈĄ䀦Ŀ㉊ڗ༅͕ộ⭏ćшƫᲐĠᡚ́࿈ʴۦ̝इӧᒞ̺✘͚ᠼǋҾΫ⃝ױӃȕ᧑ơወ¡ছؕگկध৚շಽ൧ˇ༂ѽȢ܋࣍ýઞܡህÑঈ΁˟̑இŽ୥E੆֩\\Ϗပΐћɣଌȿ઼ԣ͈ڱກǉ٫͖ਣӘ˼֭উѵᕖ୆¯ᖯܵᗿڏឧ́ओIࢅ͓ୟࢱᅵכׅ૧ȷ஽ȝܛԱ[כыտോڧͺٿϗ۝љࠍஅ½఍ۈဿLࠁҢ֕ࠐฝਲэոŗݮ୓ޢ̢ئ֗̒ࠪচొ̺ͨΘǬڀॡ̕қůݯţਏ˜Éְ͢҂ެ\\႔ɟ෿Քݩ˾࠷ş۫ȼम޴ԝ̺ڗ׈ৡࢼ੯͚XΚᖷӮᄻÖᖟᏅ×ইˌวՈᕂ˄ၚ¬≹ɖ቉΄Ś͜ẊИᶎИ̪͘ᗗ̠ܺͰ᯲ז௢ĚΓϘጲɜᣚƂᣖRࣺʽᕺҨፘ̽୺áპ˙ፅҐŘή"],
                        encodeOffsets: [[-47886, 84612]]
                    }
                }, {
                    type: "Feature",
                    id: "GTM",
                    properties: {name: "Guatemala"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ћƦԻfϩǖҍΌrʖĮȠšƾКۆ઄Ft˸Ƌ¾ġǺ̵Ț̹ˬϜDBӂ޸BަUOڗßॅʤ@˚ƱòŰʘŃϥ͍ЉɻÏǉâǑǧɇȟ½¬ıƿġ˽Ƀ}ŭ"],
                        encodeOffsets: [[-92257, 14065]]
                    }
                }, {
                    type: "Feature",
                    id: "GUF",
                    properties: {name: "French Guiana"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@͉͑ГÑŗʀȉʹɩνǦɈΪòϤƢή͛ӸáֺѪܠ˸ğؤȥࢸۿƔ·ӻޑʳأ"],
                        encodeOffsets: [[-53817, 2565]]
                    }
                }, {
                    type: "Feature",
                    id: "GUY",
                    properties: {name: "Guyana"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ր̯Դյzџ̈́o҈Чͪ̇Ƈݱԛɕ°ȣƹџϊ؏ːAŎӃԢܳȱҫî˙ɡϟƥ˅ġǑЭ¦ԫЀÓϴɋьƆܐɸ̐ȕϸ˿ŶŊτțȘѩْ֩ɬɲiϲԬƊȾƾ˽̸ô̬ږӲ"],
                        encodeOffsets: [[-61192, 8568]]
                    }
                }, {
                    type: "Feature",
                    id: "HND",
                    properties: {name: "Honduras"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ơˀʭòÐʹŗĞǣÒσĳŔʩƈǷǚʛìǨɈáǒÐǊЊɼϦ͎ĔȂƨʊ\\þåž¦ϸùϲv˒ĢİĦˎ©ȪÉɘnǖòϨśƄkʲƿʐį̏Źɜɳ˽jśŕ̇ŋɃAȅŃǙƛźĕ{ŇȩăRaǥ̉ɳƹıđĽʛǞǹɣǫPȟqlЭūQĿȓʽ"],
                        encodeOffsets: [[-89412, 13297]]
                    }
                }, {
                    type: "Feature",
                    id: "HRV",
                    properties: {name: "Croatia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ȳ͗ˊʇ͓̓ϝȆׇ[ܟƔϽmǻǧ̝ȖǫΑЪϽǼʹϮ̽͌ȃ͆Ηݔ͇ġƛ߃̶ӣ̢ޑʠ۹ؤǞØϥΞe˲եƄʱγʝˮn̆bגƸƚ˸ƍͤgGɼ̈ĒĈͺڞɠˊĻؼέۜǉ̼Ų"],
                        encodeOffsets: [[19282, 47011]]
                    }
                }, {
                    type: "Feature",
                    id: "HTI",
                    properties: {name: "Haiti"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ԢܰƁôқÝ͑ȱƙɎʥiɫ֏ƜЅÍԡÔϽƿ҉ʾö˔ޜśيã̢ȈϧθP͎ՋžȌɶ"],
                        encodeOffsets: [[-74946, 20394]]
                    }
                }, {
                    type: "Feature",
                    id: "HUN",
                    properties: {name: "Hungary"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@˨ըǍǼӂDÜ΄ђɋ̲ğ۸ļäǚͮ~ЦžĜÃЂŀȠȢˠ¼࣒ʭǴĒҲɭÎɣԡǭЉ֫ԕ֭کǁԽ١ə̻űۛǊػήˉļǍ˴ƗV"],
                        encodeOffsets: [[16592, 47977]]
                    }
                }, {
                    type: "Feature",
                    id: "IDN",
                    properties: {name: "Indonesia"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Λe૝ך޴ǒѴʭ̎ʭ»ɩ"], ["@@ܙȁĳĶø˸ΰԢࠨͬĐǓfʫշع"], ["@@̢ɣԲèȼΥॿǛ׉őҍP̀ӚҤPɤ̖"], ["@@ūұ౅ʅૣľE̬ښǪՂʥ֔Üݬ̮"], ["@@ྔċȂΌ༘З̪կీƵਐӿय़͋ऍ͸ݻwࢍØ޻ưঅ͎؝ČΓŁ໕ΌƣΰޑØּߤ৶·ڴ͡ΒÛŘ̗"], ["@@ѝֱćنƬ̠Ǭ˴ȒʗCЏ"], ["@@̿˥ׅƸǏΰࡘ¢Ⱦˣ"], ["@@̨ٝۿΌۯìӃÅׇȦҦਠऎʕ"], ["@@ɼയ࢈ԉ۰ࢼ८ԔݜBܘ̉خ̛ࣘǇbᩑbᩑݟې࡟ǜȷʇ੡}ΦۂՈɺɕࣲЕ۸࿃܆ۗêృަʛУ͑óȏ̮GκٛЮ̢ࣞ״gëɠ௵DͩԄݥƺΡдଈȰњ˜ഘ·Ƃ̹"], ["@@ڭ࠭كǉ߱ǐඓ¥ܽŧţٍݪݛҒϠ༪˸çϯλŪιӯ͙݉ߒ੿Ƶ˿ݲॻQտ҅ʙ̐͡Мی࠙͗ȻɶŊ͖؅ӲØࠌ֕ʭîওறՓũίʚʌޜŽ߸ΛPʻֺΎվŤښф౎ǮΎ܎ذپʛ੖śॴࠨ؎Ʀȉ"], ["@@©ܽџĈŷԝΌѷɽĵ͹Ւʟ੺ǚڤ˨̨ÔҝӸóĀ΃"], ["@@सާহį˫ֵݿַ߱u࠷͕౻ŭ̚ॕϙͫԤ׳´лːৃ̟̩Оս¯ۗĬŹૺнɺЕܘŝ݀ĮުԂ֐Ɩָ֗ӅըǠ՜ÑӪъЖôߒɽۆǶњୠ͔̈̆क़ॲ@ܰƙӍݷآߓơϭ"], ["@@छkۻ۰અۊέԚٍۄзؾٕ୴۪݅ʙܠ̳ڀݵՊѭܘمҺࢗऒóђզಢǋݔࠓٮ֫ҪΓߔࣙࡢ_ۺֹӠ۳٘ϥͳۉӖ̞̅sƜו̊ҵؠõФՏɁ਱ಟ"]],
                        encodeOffsets: [[[123613, -10485]], [[127423, -10383]], [[120730, -8289]], [[125854, -8288]], [[111231, -6940]], [[137959, -6363]], [[130304, -3542]], [[133603, -3168]], [[137363, -1179]], [[128247, 1454]], [[131777, 1160]], [[120705, 1872]], [[108358, -5992]]]
                    }
                }, {
                    type: "Feature",
                    id: "IND",
                    properties: {name: "India"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ࣚটďۅͮїѕ׽ŒɾएࠜՑ୞חՑϟ͛޻ࠀͅߊЭરһସŉӜёٮāৠȝ۪bĪͪŋՖÞβԠǮìڋlǙކ͉Ոƀ܀Çۈ|ÐԪ΁ˎڴŀވشॸ՘۶ȷ״ΞЀԹ˳Λ࣠űÜ͇̍Ʒèԫ׷Ʋછׅ~ӓҩ۵§ХϏۗځȒࢇȏ˹ĚΣгȥѵ೰ɵEƍ՝ҡѦʸӎϖ¶ϰ܆ӝƜީ]ߝŚóאБ¤ڕζ֭̓؆ѻԿ̻ȅ̩Ԭɣƛԑ̆كžەţֱ̫Zਛǩ´ك҃ӻ௃֡ळ঩كՋ࠷ջCϭлȹݳ̝Ͻ«ʥٙǪધ®ۡΣߙI෗ѣ¡ϣٙʰˣދʃ˱֯͵ʍߑ޸ϳ୴͑ࡒ̍Јѿ߰ȻੂơՀޅ଼Α࿀ʣ੾HৰǍ޾௣ԉףĶ઱৲И̤ʝͤড܊֖֔ᇜCǗܞҽюĩ٨ջϘऒࢢঊÙ࢞ࢢՄ࡞ࠄࡈ_״ܒӠڳд֪݂̇̕Ьβ౤ȱपŰߺ۸"],
                        encodeOffsets: [[79706, 36346]]
                    }
                }, {
                    type: "Feature",
                    id: "IRL",
                    properties: {name: "Ireland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƒ׷ًݣ๯ӹ஑Ŷڼ࢚ѭࡢତڄٌϼǦ҇ǥ҉Բ\\ٌǥ"],
                        encodeOffsets: [[-6346, 55161]]
                    }
                }, {
                    type: "Feature",
                    id: "IRN",
                    properties: {name: "Iran"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@݈ǌװӔ֚{τƾװýघэڤğ।ݓظòۻ΁਷ɱؑκŭΫҡˠڡàՓِƙæեݿݿжѵ͸ԓߦυx݉ДƋêϯ௉ѡ̓উཌྷʪࣷȖेŊΧਐЕƪ٣ƭࡑНਇ˦ࡑ٦߳ʈ֗ߘا૪ҍƋՕ˦̻͝ҭѴS҂ˍ@Ɛ،ѝٔ਍Ң׉ߜȜپц̂ÙӬտʨխ৊ҟڨǐʼʿ६ּʈƄͅъϯ־ő̤~রئ̀Øʞʙ́гԼѱȾ¦ˈإߖǩ׎у஠ƟಾɞĄȞ"],
                        encodeOffsets: [[55216, 38092]]
                    }
                }, {
                    type: "Feature",
                    id: "IRQ",
                    properties: {name: "Iraq"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@րʧÚӫх́țٽ׊ߛ਎ҡўٓƏ؋ˎ@TҁҮѳӿ¤֟ê؝߭༟äᛍၖఫךৡɪ͹৾ᇶ࢔͆৬āؘҢȺјԾΰž঎Ň̐ɉЖƚծ৉"],
                        encodeOffsets: [[46511, 36842]]
                    }
                }, {
                    type: "Feature",
                    id: "ISL",
                    properties: {name: "Iceland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@șիॊֵથٙᝓֹܣƵૉŮᚑˈࠠψᆧЪ๪ǎʘᄋȜ֨նౠŰಸ֭౨Ҝ੒ʃൌ҄ආÑ"],
                        encodeOffsets: [[-14856, 68051]]
                    }
                }, {
                    type: "Feature",
                    id: "ISR",
                    properties: {name: "Israel"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƥ˅̣Ŝǫ֓ɂĥɋřɛЄŖp͛нഉց෾ʔˢË¶ɞϼǠيŤɆzVˬCþƦɤ\\`·ŕŵhM"],
                        encodeOffsets: [[36578, 33495]]
                    }
                }, {
                    type: "Feature",
                    id: "ITA",
                    properties: {name: "Italy"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@̟ڋŲʹǭѝٝ̈́ёĞ୩ѐŞќজûࡪĠْò"], ["@@Ԍ׭ş૕ϣÂ΁˫͇ɞ২ȓӒҨ¥рʼ"], ["@@ரɏĝЯȬΧڝŪہ̗²зĻʇˠё߀чцۛदڱچLȲȃɽǗݪ̥ؠʩܜѫĔƿƽ̛үϼܳƐΝի؈̷ıѫΗ¹҅ܛΕÝHʲǢҊǼǶ͝ӤʱшΑŀʛδգƴεͶثÆٿϜޑմ֯ӜʿࠪйĮہˤϯŕӝϵΓÕĪθҕńɏٲ̆ʰʙ̀ʂβǵМ¢Ҽ˶ƢƃАǼͺتĿψƚâΆԘšĮǆࠨƤȊ̉"]],
                        encodeOffsets: [[[15893, 39149]], [[9432, 42200]], [[12674, 47890]]]
                    }
                }, {
                    type: "Feature",
                    id: "JAM",
                    properties: {name: "Jamaica"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@֢÷ҀȫƔɯןeʭƗҹƊӑ̪ĶȔΜÎȒ"],
                        encodeOffsets: [[-79431, 18935]]
                    }
                }, {
                    type: "Feature",
                    id: "JOR",
                    properties: {name: "Jordan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ʀˆपͫ࿪ࣆͺ৽ǅų၅у࠸࠿ˣƛƑ˭ٙřȩ̡εʵधƆŨоഊo͜Ůʚ@Ԥ"],
                        encodeOffsets: [[36399, 33172]]
                    }
                }, {
                    type: "Feature",
                    id: "JPN",
                    properties: {name: "Japan"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ņ˽ҿԕΉːљțɝӭշʈRЊҬԆӌīΊΜؠǹ"], ["@@́ڡƤсѩף੹Ѓ๏½ணॡ͔֡غษȃষЃঝe࡞أ֗෗իΝН͜ȶݶՏʒͿ־ߐʶѲՈࡌѢ؞ָာʤ࣎ǣࢠ๺֔Б௾ࡀӌ͜ՈਈƟा΢ՎࣀƸҞୗ}ڻޥࡍbࢁ"], ["@@נǵרΤȈहఝɯ݁࠱೓ָқँण]ř࠴д٨࣌²ʖ୐ʜټন࢓٤˯"]],
                        encodeOffsets: [[[137870, 34969]], [[144360, 38034]], [[147365, 45235]]]
                    }
                }, {
                    type: "Feature",
                    id: "KAZ",
                    properties: {name: "Kazakhstan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ӕƹ્דο׹̹KɱЊ੫ǡێХNÚࡆ৓ؘ෷ßডũߣݶۋ͆ಥ׼ƽðᓗӹᶽљ£יچ֧ɼॕǩχ˧±ȲȶΖǅ̊অ˺ϛݮҩɆ˜ࠊāؘ܎ƎܼűƲࠎƭԲ࠿£܍ȴঃσ޵ǭяƌĐўՙ֘دw܉֬ӞِʕǢڢऊࡺӣŀؘჄࣴಾtᇢ׉঺ͻࢼΠ೰j੺ѥʔʠ୼ɂЊഷ׀߮Цƿɮ߮ɔ؅ֺϬ˼Ḯ̈ШȺᑆ̴ݰΒຢǹ˄ࢉ࢚Ȳઆ˹éҝ߮´ᑌߎ̭ˁ੶٭ሠᒑ҄ѰୄӛீɎҪƯКӟטǋΨΥ઎ŒѾԣٕ֓ۥÿ¡ࡅұϝဟˢ؅ຑїȇဗͱݲลֻɓäӏԭŬу̠ఝĖඃx̧ġ஥ΞӉǧŽӹ൩̂փşȉρ"],
                        encodeOffsets: [[72666, 43281]]
                    }
                }, {
                    type: "Feature",
                    id: "KEN",
                    properties: {name: "Kenya"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ӾۙיͱȹΕ̿Õšףˑ͹Ǐ֑ͷ˥஻ࡀËӤᵁႌƙĢSࢺʊ;а֌̨ؔσ॰įтЉ׎ԬԈ֬ֆѨƗ@ҽ˺ˡג@੠܋ˈSȠxȄī֖ßʞΔގΚͺ˳ָAܽ॑Xᵣ"],
                        encodeOffsets: [[41977, -878]]
                    }
                }, {
                    type: "Feature",
                    id: "KGZ",
                    properties: {name: "Kyrgyzstan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ȊςքŠ൪́žӺӊǨ஦Ν̨Ģ඄wఞĕф̟Ԯūşȏ೛ғ̙ͭઁıͅ՛ࢷŒׇǏߣЇŜȟʇȓཟŵਡ˘࣫ÝĂӜࣴƕ̮ʸٖĉ੾؂঻ѸױȽإ͂۶ծʟĊ"],
                        encodeOffsets: [[72666, 43281]]
                    }
                }, {
                    type: "Feature",
                    id: "KHM",
                    properties: {name: "Cambodia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@΁Ѭыࢄȣ২ՠۨઘǆ߀ťۚ͡Ϟׄݖ̱Ȝ֕Ļ৕ඳ٧τԙࢥÓܫͷ۱Ū"],
                        encodeOffsets: [[105982, 10888]]
                    }
                }, {
                    type: "Feature",
                    id: "KOR",
                    properties: {name: "South Korea"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ܨযȺխPॷ̓ҥݽǉڥΏݳïĥҚƼـχ࢔ذƚֻܘÂúϒ͞Ϝצ¢ΨÈŨȮ"],
                        encodeOffsets: [[131431, 39539]]
                    }
                }, {
                    type: "Feature",
                    id: "CS-KM",
                    properties: {name: "Kosovo"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ǣŃPĘ́ȩĐǳɦƾȌȪÒŜ˨ư²Ţşƾ¿ŌƅƒǎƻŢLĥȳĳĳ×ȉӹŻ"],
                        encodeOffsets: [[21261, 43062]]
                    }
                }, {
                    type: "Feature",
                    id: "KWT",
                    properties: {name: "Kuwait"},
                    geometry: {type: "Polygon", coordinates: ["@@Ǭχõȓ˔هשuȽАݟĆ؞߮֠é"], encodeOffsets: [[49126, 30696]]}
                }, {
                    type: "Feature",
                    id: "LAO",
                    properties: {name: "Laos"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@˚Ϝ܆ڹܸ¿ٕࠦھٍÎǛ̉ӯyʣƨࢯԅoݬȸࢮ֧³ԎηʸǴ̲ܐնøȡ҄wŵ०ѦŬӮڏϖޅਚO͚ܹ՝ɗʉ̟৔ԉۦ঳Ռ݋َ׏ɄץƵ࠿ݕ̲ϝ׃ۙ͢"],
                        encodeOffsets: [[107745, 14616]]
                    }
                }, {
                    type: "Feature",
                    id: "LBN",
                    properties: {name: "Lebanon"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɣ[ýƥ˫D̘ۄмעfϘ§Ɛͣқ̓ȷҟ"],
                        encodeOffsets: [[36681, 34077]]
                    }
                }, {
                    type: "Feature",
                    id: "LBR",
                    properties: {name: "Liberia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɗQࡽАޅٖ܏Ң֣ըȪː¬ʔϜҘϺϺǶnɖĨΘԧÇ͵ǐǳʂIǢ͸ʄsʓĎНǽύʖɱˊÇΤΙ~ͧăĿÝە"],
                        encodeOffsets: [[-7897, 4470]]
                    }
                }, {
                    type: "Feature",
                    id: "LBY",
                    properties: {name: "Libya"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ק̷ҿҤ೧βρՄڑϸϻƷ̗ҶήӹؔͬΘñՈńҠÓϦƨۈ¯϶˕ݐШȜðΠėΒ־͔ʶːЦʌ´٦দ́ΜðۮƓ૞ϓЀݛݮǍஆΙࣆйЦɔЖϮț٠˂Ф؄ЀׂŘ଒ǣ˺ϑ̺Iˌƛ࠴ıȲˣ̣ЕżΫɏԯʦڱ@Ჳ@ᶵ@့ॱGYΙ‧ྐ‧ྒࡓҟ"],
                        encodeOffsets: [[15208, 23412]]
                    }
                }, {
                    type: "Feature",
                    id: "LKA",
                    properties: {name: "Sri Lanka"},
                    geometry: {type: "Polygon", coordinates: ["@@ų࢓ΙʇܵȓЍڜƫீϠ഼׆ұϺסО࢓"], encodeOffsets: [[83751, 7704]]}
                }, {
                    type: "Feature",
                    id: "LSO",
                    properties: {name: "Lesotho"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̆ʩʳУƛ˛ҳſƹˍ̛ċؿ٨҄ՐҖ͢ϼǠξʵ"],
                        encodeOffsets: [[29674, -29650]]
                    }
                }, {
                    type: "Feature",
                    id: "LTU",
                    properties: {name: "Lithuania"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ãɊĚɲχƄࢡƨǱ۸२ʴඬÁࠜĊŞǩ҂Ã߲СĀϓۏˏșӃ࣯̓߻NȫʶљĜ"],
                        encodeOffsets: [[23277, 55632]]
                    }
                }, {
                    type: "Feature",
                    id: "LUX",
                    properties: {name: "Luxembourg"},
                    geometry: {type: "Polygon", coordinates: ["@@ǘȏ³ρʍiȉòĞҼɖ"], encodeOffsets: [[6189, 51332]]}
                }, {
                    type: "Feature",
                    id: "LVA",
                    properties: {name: "Latvia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@نЮՆߊ˼ڜعڪhǊ٤ܐƪςĻܢ̷ۚCКȕîС˒ӷ͕ࣗԛƙ߱ТҁÄŝǪࠛĉණÂ१ʳ"],
                        encodeOffsets: [[21562, 57376]]
                    }
                }, {
                    type: "Feature",
                    id: "MAR",
                    properties: {name: "Morocco"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ԒΥߜÎࢊȃκU͂՟ºԝ̄ࢱɜǱƷ͛ષƙϝ̵ӡñثঙ͍ͩсۍɥ࠻ŷഫاRহŷ@@@p҉Ա˓ȑϡ@̥Ŋ۹ě˛ٻʿÕЁ੕ୟ࣡ˣୋ΅ϗĵ̡ቅãaD ϶͒ɮ˞ѪÃ˶̀פҴՖ˲ƊɞӬp҂̤Բ̪֔Ւ࡬f\\ц͔ްĢڎָтɠۮۮȿਸ਼͊ܢŔѶդ֨ࡈϦخΐ֘࢈˄ԪؤI"],
                        encodeOffsets: [[-5318, 36614]]
                    }
                }, {
                    type: "Feature",
                    id: "MDA",
                    properties: {name: "Moldova"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ȨŮ֒ĊؤʽΊϞɥÑ˵̪ƏŨΗ̊ɇÏűƾčɝ×ӷ|ĉŜǫãÒƭɱˍƥ˽ɁĝƯϦĘΪςӝԂˉΠʹʠʯĈ"],
                        encodeOffsets: [[27259, 49379]]
                    }
                }, {
                    type: "Feature",
                    id: "MDG",
                    properties: {name: "Madagascar"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɠΥȺ։Ɗঢ়ɒϽĉЗƩʙ˷ӰǁʝǈثõΥɵȗ¿܅ͧওб୅ԯཧ͑ୟϛইہȣܻΡӛɊڙ̜ɳѺÇݘ̑ڠù؂Ʈ؄ϰƢD˪Дِø՚șЈǃՌãޠ̊ҺŔՒмҶǤ̶Ʋτ\\ӐӎۖԮʦцŗάΦĵҪ׎fԐ˦ϔ̊ί"],
                        encodeOffsets: [[50733, -12769]]
                    }
                }, {
                    type: "Feature",
                    id: "MEX",
                    properties: {name: "Mexico"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@͙݅ƥ؁Õ૷ąЧƤқʺЧǚٳ֎سȞӏ͢бࢾɝΐΙ݄ɾٚĎؼưՊƠՖ΂ȨӬè۸Ƣʖ֬ɚࢶȚݔԚîȬǱЙҋԁȥԝƸƥűγɁٽɅɎǭcǃY̝ԓƳĲķPŭޥV޷AAӁϛC̺˫̶șĢǹƌ½s˷ઃEЙۅŢƽĭȟqʕ्ࣞџ˘ۇɖҷÓګ́чĉץɜؿǄ޹ϬؿŠ्ϸ۱ВɃɤҹº࡯ˈΓϦࣗӊсՌȧЦ˪ĈđʈȖɔJ̄˱Ϙùͮ˭ъ݋࠴ࡋڀУԼܝ΄ƷȴŸԲѓȞӹФȽהҍæӣѸϿФˀҍو̓٠^͔؇ͬ˫ӑɴƇͿƔЕĆف̀΋خׁƒȡŸÓŎ˽Ƭ\\ǜթʮɇǴ̕Նё˨ޯʠρɸϿ²ѷКͶϡ̨ϑqƭΝ̱ƫJɛԞջӎ؃РїɈؚŵҖЏʺֿϒŏŇɃɖԭȰӷӦÖÚΊ³̸̼Ϝ٩׶ӱɶ̱Հ̷վϳڦͿݲॖÞ੪ĞÿǑ౔СኀףဪPژ@DΌผ@̪̕јˇԀσ˨ѭȾҥѢʩۤʥՊڒۊhפͱфֹ̄ӯӸӏȂחɾЃپʹ׮ȁ͞|"],
                        encodeOffsets: [[-99471, 26491]]
                    }
                }, {
                    type: "Feature",
                    id: "MKD",
                    properties: {name: "Macedonia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ńOǤӺżȊ˺¶ϴbтˏÒ։ǅƑƥҕh͋ǿջõΑȴšήń˸"],
                        encodeOffsets: [[21085, 42860]]
                    }
                }, {
                    type: "Feature",
                    id: "MLI",
                    properties: {name: "Mali"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@˰ƶƘӶˊpזɻӄǖ͖ÇŴȈ⁚^ȈךƣļЛ⋈Л⋆౾dᬼᆳᬼᆳȨϿԺʉ϶ƋV՗ठĈFካҟ֗íԭݛƃ଩ï̳̗ա՟Iȿǈҥš޻ΑǅʿٳϕŗɍΙǡНŔɱȳūֻڙۡp˳ɭΣÆӥ΋ůȝŁŽάʍĥơhƷʕ٭PɷŴŉùʱʎ¬ʢĿİǳĉ˚Ǥɐ΅ΚĳɴȇȂǙvȫş˕őɱǹΫäɷɈƓɕőƅAµ̮ʾí̽͘ʀǓӔԺ"],
                        encodeOffsets: [[-12462, 14968]]
                    }
                }, {
                    type: "Feature",
                    id: "MMR",
                    properties: {name: "Myanmar"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ӫηץϥࣥΟƳО݅ՔؗΈօ̭ܵ̃ƹȪу֖ڙĪҷ_ϵ͠ދң޵Сࡷăذʴ٠˯ӼæࣸͽѤ˛৔Ʊਗ਼εۢօуॕ׳ҽöԳȠ̂ਪǫ޾څॺļ̢ӭņ׭ۆÅڰ̊ŵj׾дȦęΤȐ˺࢈ڂȑϐۘ¨ЦҪ۶}Ӕજ׆׸ƱçԬ̎ƸÛ͈ӮÚˮӵξȧ|ٟۙߓۭĳঽࢲƔȨޛՐǍʓۣز́ζƷ؞ʔ~΍܏յǳ̱ӓȗ"],
                        encodeOffsets: [[101933, 20672]]
                    }
                }, {
                    type: "Feature",
                    id: "MNE",
                    properties: {name: "Montenegro"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÁǀηЯÊˋǫÞɽ˞εǖĢƜŬҦ˚ȜƾüɠƟŬśˠě͌ǧçïƽȋɧó"],
                        encodeOffsets: [[20277, 43521]]
                    }
                }, {
                    type: "Feature",
                    id: "MNG",
                    properties: {name: "Mongolia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ࢮƢ྄ܤ౬Єܴʳ࢚]֘Ͻ࠼ௐɁࠈגͿӶࢊࢊश΍ނįনɍǈؿஜΛߐƺਫ਼ŌࡆōࠖЗԚѕެT੒Ƌޜȼૈƒ௸פԌĝѰ˭ৌêХهק࠽ɐ΅ӈńࠤŽ٦̴ڬˏހוğ̗ڏĦ௟ŏןʅ؝։౱͙࠷ѽࡹǞҿúѳէˎ͓ƌˣי˯׽҇গ̑ఽഫ̇এҋϋʾ৭AఓԜࠥŰૣśჃȊऑmӱԀϣޠԱĢ৩ԼଅŞুƞ̡θ͖চׅڲன̀۷Ѿəז"],
                        encodeOffsets: [[89858, 50481]]
                    }
                }, {
                    type: "Feature",
                    id: "MOZ",
                    properties: {name: "Mozambique"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@لæ৞ʁɖńגt̚ʦԌaऀ͜ڞӤƊϕ࠷ľ݅ಿƨЫʣ׷͙׍՗Եޏ͉ृСॉ͓ࣕƵוׯ΋ȗí׳ЌُǔӱZʣƪ¦{ࠗƋϷȤƝűΓΗ̗ۗ˳য়ҕρ̳ðΟɊÉíѵّRïϊůϖí̠ƬपɓװГஂࢬ॔ɜ؆ŶúĨӶƉʞغǐ׌E੠ѥ˒ЏÔǹȼϳǰ۫gÅ̼āװᢈۘӚЕɴüͨɅ¸͵ǯϷØסոԱʲ׌ζǰíઊΙ؈̣˖̅]ɽદɾٔ"],
                        encodeOffsets: [[35390, -11796]]
                    }
                }, {
                    type: "Feature",
                    id: "MRT",
                    properties: {name: "Mauritania"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@և־ԗؤ֍ɞГʚҵUЧǽйð˽ˏïҐɺаŀߊģࠨĵкČмɑЎѵδǾˬᾔMǃ௎ȴќ߀øᒸ᪂©F౞Ṗ᎟౽cМ⋅М⋇ƤĻȇי⁙]ųȇ͕ÈӃǕוɼˉoƗӵ˯Ƶ"],
                        encodeOffsets: [[-12462, 14968]]
                    }
                }, {
                    type: "Feature",
                    id: "MWI",
                    properties: {name: "Malawi"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɽٓɾથ̆^̤˕Κ؇îઉεǯʱ׋շԲ×עǰϸ·ͶͧɆɳûәЖѵɔʮޮ˄̈Ǉۢǚڼƞɪɉ܌Ѕϐ࠘ƽǜɵ˶Ϲɾଡ"],
                        encodeOffsets: [[35390, -11796]]
                    }
                }, {
                    type: "Feature",
                    id: "MYS",
                    properties: {name: "Malaysia"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@àћֈĶ˞ΈȘýӸԓΜ֛¶֣ęϡĆ˿Öӻ̒ɵͤݑe˳׫Éߑخ঵ښįђӟ֚ś̡۠ҜĠؔȃΤƤƮۈρ"], ["@@أ˹ܯƚॱ@̅ॗ͓̇љୟۅǵߑɾЕóөщ՛Òէǟַӆƕ֘؜˽ٮǀǜ܆άǂ৖Ǻ׾ڔЬՐϦѥǮ˺В¸՜а٪אшڀͼHќыιֆɻ۬ʧÑ֝͡¥ƮЧ"]],
                        encodeOffsets: [[[103502, 6354]], [[121466, 4586]]]
                    }
                }, {
                    type: "Feature",
                    id: "NAM",
                    properties: {name: "Namibia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@رٌؖ͡ȃࠊȷ،˯ಒm৒ŅҞ͛Όѡۜѳ৘ǽՆۃࠐ»٢КǆԊƞհ}ԄϝŶÐ₮׌Е᎞ş໴΂یȒհµͨȍPéӁȍʭC՛͍ͣΎಕ̍س{ᲽࠣBយA᷋ݣѕҋÕՇǄϗÔƗάͩɰГг"],
                        encodeOffsets: [[16738, -29262]]
                    }
                }, {
                    type: "Feature",
                    id: "NCL",
                    properties: {name: "New Caledonia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ېԵѨϭ͉ȫҥɪ׹ϚէѼ։פś˶β[Һ˹φ˷ˎɻ"],
                        encodeOffsets: [[169759, -21585]]
                    }
                }, {
                    type: "Feature",
                    id: "NER",
                    properties: {name: "Niger"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nּॹȐОҿպœϤâТբ̴̘ପðݜƄîԮҠ֘Eኬஈϒᝪ࿸᮪ཾ೨αӀңר̸ȸಯ̾ɓ`ˋΔ˽ǻί͕ၻ«ધੳߋγૉΔ̵CեբmčЃʁµˋƻm֩ंȟځҷٱʔҍ¸ʏşӯ~ӷΧѓq৯ѢЉȵѓb̿͆ࡅ̼ࣗıɕǻşӗʋ͹ÍݣٗӚ̟E˭ʗ"],
                        encodeOffsets: [[2207, 12227]]
                    }
                }, {
                    type: "Feature",
                    id: "NGA",
                    properties: {name: "Nigeria"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ࢍ̡͉¬͓ȉڥl҇Ղˡ؊שֆكYݍB¶തs՘ǂՊʶʴТԴėɨǔ͸ȍӾ˪ÎݤʌͺŠӘɖǼࣘĲࡆ̻̀ͅєaЊȶৰѡєrӸΨӰ}ʐŠҎ·ٲʓڂҸȠ֪ँƼnͬͯğƱ«˧۽ٱɛՙšѧǱȉǝי҅ΉŽыȋ͹ÿΓֽ˱ҽΊ͇aԃӭʑQЍ߷ɍש"],
                        encodeOffsets: [[8705, 4887]]
                    }
                }, {
                    type: "Feature",
                    id: "NIC",
                    properties: {name: "Nicaragua"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̃ˆϽͺȁ˲Ο˄сϜĤžƒŵÚÒʾŀȔŬRkЮȠrǬOǺɤʜǝĒľƺĲ̊ɴbǦĄQňȪĖ|ƜŹǚȆńɄB̈ŌŜŖ˾iïă§ȉĐ̫ȗ˹ěͷυ®ɏtϙŹĉýΫÌɛǣɋ ɩźƏȩǱʛÈƓǦˉêȕŉօɞųŇ"],
                        encodeOffsets: [[-87769, 11355]]
                    }
                }, {
                    type: "Feature",
                    id: "NLD",
                    properties: {name: "Netherlands"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ۦyǀ˳Ƚޓɇ́ԍ@ƘࢡҥȞՏπީǩ؛âѠɲ݀ఆଲΘ"],
                        encodeOffsets: [[6220, 54795]]
                    }
                }, {
                    type: "Feature",
                    id: "NOR",
                    properties: {name: "Norway"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@᥆ؙઍɣऄՅෛ͵ڵû΢לઃͰಫ˵Ы؝ߟωࣗȮ઱¥णѼԉɝԷūփནƊɝҵ߭Hևױ࠿झಫ஁̨˹̇ͫ࠯bձ޿¾૟՞э˥ধֻۧυӛ֝Ԫဋঁ૫ȟ୏є̛ࣚˇ኶ޞզᕠ۶ဌࢂ໤୦፺ྴඦلᘼ੊ᇎπ൪­౮ۢ໖ພǘ"], ["@@ም΅๝Ȝ׆ɐԕˎეǚͮ̿ொȍ"], ["@@᪖صᑟͥұأ݅ǁЍۡৣᅵԢނ̘ఽʐ࿕܂ٷڄᘎ̜Ң̋஦\\͊˼௾੖̋"], ["@@࿮̏ఝҍ᝱ı៙ƖƫɴஹdँϬᣴɼ௞ȫࡘʤᑺȽ"]],
                        encodeOffsets: [[[28842, 72894]], [[25318, 79723]], [[18690, 81615]], [[26059, 82338]]]
                    }
                }, {
                    type: "Feature",
                    id: "NPL",
                    properties: {name: "Nepal"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ÝαŌՕĩͩ۩aয়Ȟ٭ĂӛђଷŊયҼ߉Ю߿͆͜޼ՒϠΒȪڪʳࡔշҾť˰ЕٶǓۀσौȕঔć"],
                        encodeOffsets: [[90236, 28546]]
                    }
                }, {
                    type: "Feature",
                    id: "NZL",
                    properties: {name: "New Zealand"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Ȓ΋װ;ʐΡBΝ̹ϳչإїͷ̴З٭Yܗ̓ɣջӋࡗڇϓнʇޝlխˢࣱÐƗ̰Ҍذ੐ࠦժǀ׾͌ܜѰԎѦώظ͈ɆŰҶלϴȆΧ"], ["@@،ࢫlָϜɯŲًڰ˛֨ãӒ͎юĭȯݗʯӫٛjɡʭþαūƻͅҏзֹ٭ͯƟɘΕŨӞ۔˟ҨࣛͲz̦؈̌ƚ٨լͻ֜vƪБΎڋݔΗת̸àҚұٺɑʂݡ"]],
                        encodeOffsets: [[[177173, -41901]], [[178803, -37024]]]
                    }
                }, {
                    type: "Feature",
                    id: "OMN",
                    properties: {name: "Oman"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ֹ̻ϟªǩȧƉэļ֗ÿĻϯFԽ̻ćХȓǯԹP͡ɃJͻПɷҩĂ֗˳ϱ³˝טٿ൴ᠾ࠾֖၂ϩתv͸ʔΐFΆϞǒƩŞèմіHϖֵҸ̧؞ŋӼƳϜӕɨ˧̞ŃCȉ̩ԃƅɽΟˏ"], ["@@ŉƳǅ˺ʔ˺ľñā΍"]],
                        encodeOffsets: [[[60274, 21621]], [[57745, 26518]]]
                    }
                }, {
                    type: "Feature",
                    id: "PAK",
                    properties: {name: "Pakistan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@تϻʞ٥൨ͻ߹۷ऩůౣȲЫα̖݁̈֩ڴгܑӟ`׳ࠃࡇՃ࡝࢝ࢡউÚऑࢡռϗĪ٧ҾэǘܝᇛD֓֕؛Ɇʣ؀٭٘໻ǁിeஃŝ̈́ঊொѢéϰГƌw݊ߥφͷԔеѶඨѕࡀŲԈŅǞȂגóદΔ܎ҶӈشCĠɼٞŌ̴ý͢ʀ±ԌΦԖ՘Ɇͥ֊ߜɴ̢͒мΜĩмȣΤӬμࣘǮ८ĮѐƺӨĦ"],
                        encodeOffsets: [[76962, 38025]]
                    }
                }, {
                    type: "Feature",
                    id: "PAN",
                    properties: {name: "Panama"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@˫ʎǵҒȺɢɅÎƿˤлɸοÁǝ̇ͻɁǽĉǩВҗɯŅŧŭϷ©ơԈŋƛˡ¸ǝ͸·ÈɓİέCǻĩŶªǖìǠƲŲĲǩŲK͸͘ö̠̝iǱͲĀæɴȵЮÔΨɄԜǞ˺ʤҬ·ĉҶώơ˜ʧ̈́ɵĹūȜӵǁʟ˓ÒŅС"],
                        encodeOffsets: [[-79750, 7398]]
                    }
                }, {
                    type: "Feature",
                    id: "PER",
                    properties: {name: "Peru"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɥљћɋࡅӘñΈရࡊທࣾ٫԰ΏۜƐʎ܅ાࠣ༄ߍီ΅Ϥ˃ؤٷպױͼ˖ϒПߢʼךڢՎĲΓʇȧx̭ΎâͼĝΚщӆΌǄ֤ԦܶৠͨࣸࢠʾմŝٔɢĂ֒ЉˎЅϴɏӶࢣضĿҨɞ̤ƣԎð٠Ͻթࡣʤoрҁݳ œųۍǉ॥ֱÓϻɉ̇ČғԕʍBΡɛƵΔݳҲԝǱί֐µ͆҃ݐuېӸÇ౧ϢĩӄƠܪടǷ˵£ןg܍͟пƮ̵ȕ˯β۹Ջ࣡"],
                        encodeOffsets: [[-71260, -18001]]
                    }
                }, {
                    type: "Feature",
                    id: "PHL",
                    properties: {name: "Philippines"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@Đ֏ºҽ˹ޑ̫ࡨϽэˎإʉϿ঩Ӧɿ؊ʰЎՑЈˁΑЃثҵƑʖ͢۾ՌʀҜ̈́̔ϝٔɰƎϒרv·ٰڼЋêхÐ̱"], ["@@̟ˡˁՍ˃ʝԫ׈ǦɤɂɾĢԸҨ¸Ɖ֣جߺāߡ"], ["@@ૣߕЬט؈԰Ԏ׊Ѱ࠲Ʈۅևҧѳֿ"], ["@@Ԏʹ՘BgΗϳΣՕʧϸÒєŽА"], ["@@ʀभ٫ɞj˭ȶԯЍȋעʧªƁԘӶãY͈ԣٜ߮mɴ̻"], ["@@ɟܩέоѓ٘ܚ̡̈"], ["@@ԮʉʶɖüɇƍΑ˼׻ɛۥӷ˥ƁڳȊڝѾġϊĲਾүăҙ˜ȫēϯٻЮ̵Ѵɍ̯՗ԊރůлȆ¨ΎˀɊʣȘŇ̡бӚűμߨͺˡĔೄ˜ހԘA"]],
                        encodeOffsets: [[[129410, 8617]], [[126959, 10526]], [[121349, 9540]], [[124809, 12178]], [[128515, 12455]], [[124445, 13384]], [[124234, 18949]]]
                    }
                }, {
                    type: "Feature",
                    id: "PNG",
                    properties: {name: "Papua New Guinea"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ɽčε͔ρՔǷ٘ŜĆĜʡʬȏРՑЈ˵ŝɽ"], ["@@ѯçƃɽҟȱћȟѽBۏʔӑɺêʺݬũҠàŶЖŦrĆѽӐÜʂ˼Ҹ̚ġӸԌfǜƏgү˯ԡ"], ["@@ݤտղࢻӖω٬ƛʥǁࣀΝġʏ֋ÏȷɔܟĦࡕŴٷ՚ӉҦѧ݀ભπ܇ʇԡˣńإڇ˿һƖࢅaᩒaᩒภ׃༊ӓׄїҴхŸӵඔԱȲѽޛěȄ֕"], ["@@ʿɡǁӸȝ͘ϝ˞ӍΪ؇ʚɺȮҒɻ˸ȁΜȫʹΛ͊ˏĶѧ"]],
                        encodeOffsets: [[[159622, -6983]], [[155631, -5609]], [[150725, -7565]], [[156816, -4607]]]
                    }
                }, {
                    type: "Feature",
                    id: "POL",
                    properties: {name: "Poland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@·՜à̂ȹ̧҆̚ɺɤȝђָʘ಼ϴ੒˴࠼ƙÚȱ߸Yਚħ໶^њěȬʵωɸ͋KͯԋǡʸϳfϏцܻěɽзįރۥɒϗǿ¶ߙ͔؁šЇĒӹǵч̖Ήŕ³¼ϭаر¼ăˀֻĦűɑҗǨÀɴػòЉ˔"],
                        encodeOffsets: [[15378, 52334]]
                    }
                }, {
                    type: "Feature",
                    id: "PRI",
                    properties: {name: "Puerto Rico"},
                    geometry: {type: "Polygon", coordinates: ["@@јõưǕɋɃمLӫ·άŢŬیK"], encodeOffsets: [[-67873, 18960]]}
                }, {
                    type: "Feature",
                    id: "PRK",
                    properties: {name: "North Korea"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Şƥ͉ºη˵ʣ˷׽ѣȅƫƧ̓ʝ֓ƏηɥηįġͰƋӈσŧȭΧÇץ¡͝ϛϑÁùСǆĵƿʙéǀɑüɥƆɰφȤİõƶɆҒÅƎөĠЇɤۄբऒҌ־׮ЎˁܪſѺಚβͰҼժӹ"],
                        encodeOffsets: [[133776, 43413]]
                    }
                }, {
                    type: "Feature",
                    id: "PRT",
                    properties: {name: "Portugal"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̦Ɉ΄ŬɂЫӺDƞłӪɼуϱɩYٽƍūЇγçʹԋɵտ̄ʡřɫ̵̿ê˥ͷɓѷŠџġŸڂÿԬϓþȩ͈äռͰ̨ÒͼǪԎkΤǙ̠˲"],
                        encodeOffsets: [[-9251, 42886]]
                    }
                }, {
                    type: "Feature",
                    id: "PRY",
                    properties: {name: "Paraguay"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ͦ৖tҌЖ݌าʔޮ]޴їbʵʞҳÇଛࢲǇ΄ǐ֦ɩǀʣþޓİ͓̼̀ƌ̢ƳAҥŕӻǑӛƍݏށ١ړƇऻŸࡑɮࠢ౨ťψࡽ͢ਅبۉŸ໵ൌ"],
                        encodeOffsets: [[-64189, -22783]]
                    }
                }, {
                    type: "Feature",
                    id: "QAT",
                    properties: {name: "Qatar"},
                    geometry: {type: "Polygon", coordinates: ["@@ÇؔɨѲɰĜʬˁdӯǽӳɵÑʫǖ"], encodeOffsets: [[52030, 25349]]}
                }, {
                    type: "Feature",
                    id: "ROU",
                    properties: {name: "Romania"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@δǶԴġՠGϸȳ˺źبĄɄȠΠ@ʰćʺʟˊΟӞԁρėΩưϥϒƹЂƊϠƟpɏПǹʯĀɻ৥ӳĖ̪ؑফțзɋ௽¬٥ƀ͙ÕʍΊƵƦȚƘȷŀ˃ȋөʔßΌԟȢĥˌҕͤڪǂԖ֮Њ֬ԢǮ"],
                        encodeOffsets: [[23256, 49032]]
                    }
                }, {
                    type: "Feature", id: "RUS", properties: {name: "Russia"}, geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ࡌ๫కˤԫ்ࠌࡳyוُԒսٱƻ۸Ĥࠊħ࣢Țٌ૴ӯࠜôରަϮͭϴϐŠɔ։̆ߵuࠟΎࡑ"], ["@@໵]ਙĨȒτ୊˚ࢢƧψƃęɱäɉ"], ["@@֦Ƚțؐᗸű࿨޻࠭λ൛ēsࠑͳǩ޽~ٗ̊ૣʖȉθ࡟Ǝॗŉҗ̎Ǽ̸৓ȥϚЃӉΣ@„Ꮪٛᔺ࠳ïԷ"], ["@@ः©ƭˌੲΖ@ַ"], ["@@ળ»@ָň܈E௒ʉïŗࡽȩ"], ["@@ౡMႣĤƧ¬ߘͪੀþஞ͏ĸə"], ["@@ॿͩഉø༛ͨȪ˖༨ųᑔɗ"], ["@@ډرᶽzඃȣမղҎ׀૎ǂᕞᴬѽ"], ["@@ӹóᩣŊɟώູɦūҒ࡮ǶҞသܒޙĺ፨݆ɩϢሤѺ᪪բ᫠ǀ෴̸࿐Ŋאͩ֟ʻᲗз᢭Џᤙߝఫࠍ೉߱Ǡۥྎۏ"], ["@@ɨгސȲឤYቈЧڬ̿ȽѧङʝᕅүفʟਬşఖɃݴǄєաτɔഊƂ᧪ƑȴϽ↲ů´ٜᄼƥഄLബѷϮ՝ӹΙੌڋ೔Ϳ߸ࢦഖϙ෢ɦྼʵؤʀൖş؅ޮૐζ䢀ձܐӿᔲٛ₎ǄာƑ۪΍Ĺؙਜʇ૴Ǥ๰vཚǑཪĢะݛਪˎڷ՞ϐώᧆɻფºᝂБ୲ν@”MKઇσઝÖݶҁԄەϲɧĮΏɑɝ༧Ǿ᚝مݛĭ౽ן௛ԧ̱ϣய׊ᔗڇϣ̸ߵΫ૱Ř˓ց৙߽ͻड़ȋő௣ޭΫ۱Δα฽ѕ̅ॡభȳʥ࡟ே޳ׂ̳έ௬ҵለИ୘܀ԆªϾರȊຊ੒คࡺຢڢڮஆ৷ëԍۗᒉइۍਖᓧ˷ᑃටۚԧሙɕಝēÔ؊ಯŶ਩ЭᢵƠ᪏ʟᨩ࿛ủጝ೚ŁаՃࠄȅ՞оईÃௌऍ܍ځ࠽ë্ϛഉ్௓˯ׇଙ঑ଇॻթӹ૩ӱՉYՇФૻؙſ˩ŝƦKѐіxŦ঴ɛܚܞ̒৶Ʃ֢ࠈ˾ऄ͚̮Ѵݲ൷ʛܯͧ౧Dͻ߄হװหˎ̵ࠖ̉Ԫ̿βԯࡐ̲݇షʢ૛uਯƱۛлҤȥXҩұˑݷࢻRσஅՍ৙̈́োéѯˮԋĞ௷ףેƑޛȻੑƌޫSԙіࠕИࡅŎ੝ŋߏƹ஛ΜǇـধɎށİवΎࢉࢉ΀ӵࠇב௏ɂ࠻֗Ͼ࢙^ܳʴ౫Ѓྃܣࢭơ͡çѽԤઍőΧΦחǌЙӠҩưிɍୃӜ҃ѯሟᒒੵٮ̮˂ᑋߍ߭³êҞઅ˺࢙ȱ˃ࢊມǺݯΑᑅ̳Чȹḭ̇ϫ˻؆ֹ߭ɓǀɭ߭ХസֿɁЉ୻ʓʟ੹Ѧ೯iࢻΟহͼᇡ׊ಽsჃࣳĿؗࡹӤڡउʖǡӝُ܊֫ذx՚֗ďѝѐƋϥӽ߿Ƒ࠳ࢁކߕĉ֣ࣼফԇ͹ƝɇωÌֿԚɿՅȚʳΈ޵ǮԙƁƥƼଥЖఅƌ܃ƞĹıੱ܂य़̈́ܩӴؒƈۤ۰ҹͪఌ΄uȀݯƉώѠɼ߼ÖƄ˪ȅҪ΀ѰWʚఉ˚ӭUԯЀ١ƃ੩̐lǒ̗θڟ¤éʼɀǞ՝ӈࢋąʭ¦Ƀȑ̽ȷ՞ȟ˨ǊĀڴ͞Ȁʍɢ֥ƪ¼Ʋ΁ƴՃվǸɨĉЂࠑȨѱĳšȼࢭɂˑӸíТЙȖάˊʝ޶װӞųƤक़ҬࢡЎᅢ੶ޮӠ͂єగּΆնݳش֢ܜ঍ग़ޢي౿֔ŬךڶüොͶࢀ̈൦ԕᘨȧṺो٤ЋÆ֓टѳ൏ɡ⏷ٔ؟Ńൌ؛ÂϵÆ࡫ઌʯڂɓňРԑΰ՘͈᎖Թ۾Ȳ֣؜ዦࠖޢµ޸̋Ӫ׀۫ԄЪԊءԶᚠˑӔҹ੡ĻNҳڌ˽ಜǼȶ՚ჶАᰪܞي£ࠣԙਬĕ׼˼༾xఢΐफ़ԏॖ֌ࢡӢѪˤ២ʫ୒ʿᴾॣ֚ѰࡡѺ{ǴৣĈˢЌ҅ټ}ː༄ݾրކزǒᕮɛǬұߕڽԺˋ˒חȏଵऒԧέ֕࿫஝०ŭ̢ͮऎɎɞжܮЎөӌϼֈࣿêȫҲڢࡈણۆຒ֦șװмnѴүͧ߷࣐Ƶϥ؄ඤͦლ¬༈ӏݛ۪ċࣆศǞ፾ᆘŌہѮংւॲx࿎иᕠŐ˪ɲᕂþیȋሴҀ໲aɶδߤΨጤΈ෸˗ଥȷበŹ"], ["@@ⵙ͕ໞીےĦقÃᒈӋʟͿ"], ["@@૽ōݱÛśƏঙƑ࣫ȦӐʾል~࿞ƶ౨XǢɧӘȬߊƐఞǿ͗ŷ"], ["@@ᆳĿᚉʎඅ͎٣׾଩ǔᔆָᆎȎ࿌чኬ߻ȹݯ"]],
                        encodeOffsets: [[[147096, 51966]], [[23277, 55632]], [[-179214, 68183]], [[184320, 72533]], [[-182982, 72595]], [[147051, 74970]], [[154350, 76887]], [[148569, 77377]], [[58917, 72418]], [[109538, 78822]], [[107598, 80187]], [[52364, 82481]], [[102339, 80775]]]
                    }
                }, {
                    type: "Feature",
                    id: "RWA",
                    properties: {name: "Rwanda"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ͬӃµӵʏŁѿÆʱӍԛàþҠŘÞԄʎɺȰďԈʸ"],
                        encodeOffsets: [[31150, -1161]]
                    }
                }, {
                    type: "Feature",
                    id: "ESH",
                    properties: {name: "Western Sahara"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@oҊŸ@@ÉeǋEౝ᪁ªᒷ޿÷ȳћǄ்ᾓNǽ˫΢bCቆäĶ̢ΆϘˤୌୠ࣢Ђ੖ˀÖ˜ټۺĜ̦ŉϢ@˔ȒԲ"],
                        encodeOffsets: [[-9005, 27772]]
                    }
                }, {
                    type: "Feature",
                    id: "SAU",
                    properties: {name: "Saudi Arabia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ŉΪʩʨÝͲѡ̞҃۴ʁۆׇ׀ϑƐ֋ߠīאӾӕञϿ͠ґǨˡӖ°ȎɹѦʕȊ͝زԟڴѓ־лIžҦ̌ļͲनƅζʶȪ̢ٚŚƒˮˤƜ࠷ࡀ၆фǆŴৢɩబיᛎၕ༠ãݠąȾЏתv͠ܥаȓƠִ̏Λ¼΍ċ˩ł˯ʎɽŐ˟ŲȵʬǕɶÒǆ͍ș࡙͐ᡌщǞǲϪש֕၁ᠽ࠽ᝑ͑޷ϙ׻ࢥϹƕɁˬ͏§߻ĎƷČॹmɫùΉɔɝЭĒΟρˋ"],
                        encodeOffsets: [[43807, 16741]]
                    }
                }, {
                    type: "Feature",
                    id: "SDN",
                    properties: {name: "Sudan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@śhdмĵ̀џͨĵ؄ĶبϳÌÍȇԍ©Ȭʕðԍңңл؅џđ۹Ӫͅǥđʓџǃǥ࠵@řǦ؃̡ƝɳîѝӬƟɲ؃ŗɱϵɏݣ˿ǁʳğå ̅ʎÃʼƌΔE΄ӛՀĩάZȰ̱ʜUӦǭ͖̍µĎ̰ɒΖħΐˢʴǫȞɞ԰ϨئܦÏ¥ ZΚॲH@း⁪@Ὂ@ῼ@˔ࠗȁƳŪࡻ্̰͌ȷҠ̳ыӑأƏ˅ʳĉ֑α௿ĚͳƅܟͿࠟԓзέٛč΃Љɽʝ࢟Dĳ"],
                        encodeOffsets: [[34779, 9692]]
                    }
                }, {
                    type: "Feature",
                    id: "SDS",
                    properties: {name: "South Sudan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Xٽűʯѿq˷ӏԨÑюХƨͳϦșӼࣳ֫օԫԇԫϭסFگȟՕȊ΋ɭ݉֐ȥάҵǱϱÆɣƕϗĸԗۚƉˊعͪɅԌΕζ֟ѬS˘ҡͼ֯͠ʴĠ̀ǂɐݤɲ϶؄ŘƠɱўӫɴí̢ƞ؄Śǥ࠶@ǦѠǄĒʔ͆ǦۺөѠĒм؆ҤҤïԎȫʖԎªÎȈϴËĵاĶ؃ѠͧĶ˿cлŜg"],
                        encodeOffsets: [[34779, 9692]]
                    }
                }, {
                    type: "Feature",
                    id: "SEN",
                    properties: {name: "Senegal"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@΍ٺн̚φǄРמȦќ˾ːкïШǾҶVДʙ֎ɝԘأֈֽԹǔӓ̾ɿî͗ʽŧ³қâÙģȃk׿ȲЛV༇ɥħ˥ѻƋƏ٢ވkȬŞƮR̸ȘήǯκcζȌǝʐˡƙʻJͧȸˉ_ȍȥࣵy"],
                        encodeOffsets: [[-17114, 13922]]
                    }
                }, {
                    type: "Feature",
                    id: "SLB",
                    properties: {name: "Solomon Islands"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ɾ˿חN͉ԬԈȯǜ"], ["@@͝mԧĎǫżÀͮֈƁ˜ǭƎə"], ["@@ųƹحܰǫԈ˺@̠ڥʹЗ"], ["@@ǛڅΦҟ̠̿˪ŰĐϮȫېϭȢˉ"], ["@@Ǘ³οȒ·Ί¨ƖԈΡͰ˛"]],
                        encodeOffsets: [[[166010, -10734]], [[164713, -10109]], [[165561, -9830]], [[163713, -8537]], [[161320, -7524]]]
                    }
                }, {
                    type: "Feature",
                    id: "SLE",
                    properties: {name: "Sierra Leone"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɧØ؁ͺѩ҈Ƨ̬Ĺت҆τĬɺƞǸɶpȜǂڦCɺ̛ǼΛʓƈɗṶɴ´ϹϹϛҗ«ʓȩˏ"],
                        encodeOffsets: [[-11713, 6949]]
                    }
                }, {
                    type: "Feature",
                    id: "SLV",
                    properties: {name: "El Salvador"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ġȡӡ^̡Ą΍ǘұÀʃǶ~Ů˾ɄǀĢ«ĲȠ¾ʜëǸǙʪƇœτĴǤÑŘĝÏͳ"],
                        encodeOffsets: [[-89900, 13706]]
                    }
                }, {
                    type: "Feature",
                    id: "-99",
                    properties: {name: "Somaliland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ϛԩד۫۹Mᩧা͍̜̳К̳ҨǾ̖̲҈˚ƹǒΏϜΗкGߊɌࣴĴ݌ʼиÆ̚ƶӎKaE΋Aࡑ@ѫ"],
                        encodeOffsets: [[50113, 9679]]
                    }
                }, {
                    type: "Feature",
                    id: "SOM",
                    properties: {name: "Somalia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ѼĎЊ˾͈FpɵýӧHѳǯ̣ʁࣥЙयԱ੷ܝ௷ܓवধ଩ࡁڹష࠯޳ٕँৱȗѷȍȣӽۚWᵤܾ॒ɰˆբfݠפબᛜᡄה۬ϜԪ@ѬBࡒFΌLbːhϰŰ"],
                        encodeOffsets: [[50923, 11857]]
                    }
                }, {
                    type: "Feature",
                    id: "SRB",
                    properties: {name: "Republic of Serbia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ԡȡà΋Ӫʓ˄ȌȸĿșƗƶƥȷȏø̫Тγ͋ʿƗˋĞĳƑšϳa˹µØĴĴĦȴšKǍƼƑ ŋƆƽÀšŠƯ±ś˧ȩÑèð͋Ǩ˟ĜūŜɟƠȢŬЄЛ͔ɀτ̥Ë͔́ˉʈȱ͘٢ɚԾҖͣĦˋ"],
                        encodeOffsets: [[21376, 46507]]
                    }
                }, {
                    type: "Feature",
                    id: "SUR",
                    properties: {name: "Suriname"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@৔ǙĞưڶÔࣚɥѩܟâֹͤӽƥίóϩɉΛӓǲЇđ͹öčʏƘǗ÷ǡҙèԡܴōӄˏBωؐƺѠ¯ȤԜɖƈݲ"],
                        encodeOffsets: [[-58518, 6117]]
                    }
                }, {
                    type: "Feature",
                    id: "SVK",
                    properties: {name: "Slovakia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@´»ΊŖш̕ӺǶЈđ؂Ţߚ͓ɷɓǏ͹ǳđ࣑ʮ˟»ȟȡЁĿěÄХŽͭ}ãǙ۷Ļ̱ĠёɌċ̆äńŢȂόa˺Ĕxþǈ¢ÆȒȖžưʢD"],
                        encodeOffsets: [[19306, 50685]]
                    }
                }, {
                    type: "Feature",
                    id: "SVN",
                    properties: {name: "Slovenia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ۜÝъȐܾtǈƘƘUǎ˳ڝɟć͹̇đHɻͣh˷ƎƷƙבȈúȫΨĞа"],
                        encodeOffsets: [[14138, 47626]]
                    }
                }, {
                    type: "Feature",
                    id: "SWE",
                    properties: {name: "Sweden"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ࠁוƀԥ೹ڭྱܡؓஃײףߦүޗॅ࢑ȝ͍තӋ޿৳ĆӅڗঃˉߐ۳॔ٓஐφӜּۨ˦ন՝ю½ૠղ߀࠰ä̧ͬ˺ಬஂࡀञֈײ߮GɞҶཔƉŬքԸ૪Щ಼ֱv಑˴͛ฃʃ"],
                        encodeOffsets: [[22716, 67302]]
                    }
                }, {
                    type: "Feature",
                    id: "SWZ",
                    properties: {name: "Swaziland"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ǡύӭěԅҖS̄ɰ̀ĂʔʐÒшƵŰϕðω"],
                        encodeOffsets: [[32842, -27375]]
                    }
                }, {
                    type: "Feature",
                    id: "SYR",
                    properties: {name: "Syria"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@࿩ࣅऩͬgNŖŶ_ΈȸҠҜ̈́Əͤϗ¨ÿٞȶΌɤȀɤȀ°Ҹ˞Ǐऎɺ҂ƿۖFॴ̀Ґaक़žїԽҡȹĂؗͅ৫ᇵ࢓"],
                        encodeOffsets: [[39724, 34180]]
                    }
                }, {
                    type: "Feature",
                    id: "TCD",
                    properties: {name: "Chad"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĎЄաnDզΓ̶δ૊ੴߌ¬ન͖ၼǼΰΓ˾_ˌ̽ɔȷರࡔҠ…ྑ…ྏ¦ ܥÐϧإɝԯǬȝˡʳĨΏɑΕč̯̎¶Ǯ͕Vӥ̲ʛYȯՏƛэͽ؉ࣹ߅ϳ߹¾ʁûĊ̏ѫ̋Σ͟੓͏ȽȐƓhƹɍۛÙƀɪ˅ׄşΐλƜӷӪǼІϦċʂÐҸSқކ֐É֐ͭՠ"],
                        encodeOffsets: [[14844, 13169]]
                    }
                }, {
                    type: "Feature",
                    id: "TGO",
                    properties: {name: "Togo"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ڱǳȇ̎ɡՔãкȆݴɁ̬ăڎD؎ΕѠÖˀ݂kŅѵʲʝ̈̋ЭǜǥኝȺׅ"],
                        encodeOffsets: [[1911, 6290]]
                    }
                }, {
                    type: "Feature",
                    id: "THA",
                    properties: {name: "Thailand"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ݭϬܗeŬڈ݉Káऋґ௯˙ݏÌ؋ն΀ދưܭҶӓԚĭѤѧ˝·ևĵßќۇςƣƭͧ͒ƝжҁӄПЌƏӳǃҲĠԾʚ߬ТࡸҤ޶͟ތ`϶ĩҸ֕ښȩф̄ƺ̮ܶ·ֆՓؘН݆ΠƴϦࣦצӬθӔȘθʷ´ԍ֨ȷࢭpݫࢰԆʤƧӰzǜَ̊ÍٖڽÀࠥںܷ܅˙ϛ޿Ŧગǅ՟ۧȤ১"],
                        encodeOffsets: [[105047, 12480]]
                    }
                }, {
                    type: "Feature",
                    id: "TJK",
                    properties: {name: "Tajikistan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̭ʷࣳƖāӛ࣬Þਢ˗འŶɈާˠĐԜȓ͛ŴӍࡿBׁØԻϕύĉ̉ǯͩˠþ۸ʩ¢ĞʲғȐα̇ė͹Żūԇj˕ϩ˯ǌ؋ˑʱĺӀࡘǹض؟ȨɔφۮЌҬˌբ૲ȜǩϵŤɹΎv"],
                        encodeOffsets: [[72719, 41211]]
                    }
                }, {
                    type: "Feature",
                    id: "TKM",
                    properties: {name: "Turkmenistan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ñۼطॣݔڣĠगюׯþσƽ֙|ׯӓ݇ǋƻרŪ࢞ٽ˶Ɏֺ֏¸Ȇ۾ߊȵ݈ˎؓԎʉӔڱɋď؛ʿհψ˨ॖǪ֨ɻךڅњ¤ॆ\\Əцܖ̂۾ӦଆѹĜڡ͐ǣࣦˮƳаࡽ०ׇոЃ࢞Щ૤ΫwԥʩЅɤſ̙۽ǋǙڥӁʭڏŵǫϟهŏࡩ͈"],
                        encodeOffsets: [[62680, 36506]]
                    }
                }, {
                    type: "Feature",
                    id: "TLS",
                    properties: {name: "East Timor"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĲȤܢȌזˀŀ͆Ľ̯ɫ࢕ο۳ʋeʬďǔ"],
                        encodeOffsets: [[127968, -9106]]
                    }
                }, {
                    type: "Feature",
                    id: "TTO",
                    properties: {name: "Trinidad and Tobago"},
                    geometry: {type: "Polygon", coordinates: ["@@ӚŊǮصۭġƯúʒɲiͪ"], encodeOffsets: [[-63160, 11019]]}
                }, {
                    type: "Feature",
                    id: "TUN",
                    properties: {name: "Tunisia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ΩພԭͺQȰۉԄóنԮҶȢۚƃߠǠќࣶͺךĵ}ы܊̲ÒǉпЫMϱ̆ȽōܫփхǄқѤaɄЍ͊ſ³٥Хʋʵˏֽ͓ĘΑïΟЧț"],
                        encodeOffsets: [[9710, 31035]]
                    }
                }, {
                    type: "Feature",
                    id: "TUR",
                    properties: {name: "Turkey"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@஺͗ঐżܤõলѬࣆ¢ߴЭƜ̑ăУزȻͨʕֻʇˀ५ǏʻҠڧЕƙ̏Ɋ঍ňίŽॗŽҏbॳ̿ەEҁǀऍɹ˝ǐ¯ҷɣǿɣǿ̱Ϡ͈͂ԟí۱ȖֿәౣĥڹҊࣟȗΑׇĳ߻҄ࣻeӽ࠶ؗҰЦٸՓВठߨಒΜྀٔŏ৞հ঒ʄർlุף"], ["@@۫ҏ˃Ϻ\\ǦȦĦʺՂХɞࡦ˄ܤőĴ͓ܼ˓Ƶȵি±Ωʷ"]],
                        encodeOffsets: [[[37800, 42328]], [[27845, 41668]]]
                    }
                }, {
                    type: "Feature",
                    id: "TZA",
                    properties: {name: "United Republic of Tanzania"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƚġᵂႋÌӣ஼࠿ϱਙ¸Ӊՠ̩~ɓɳԓ¶ʭÇГ̌Ճΐ̰ࠡǿڝӣࣿ͛ԋb̙ʥבsɕŃঢ়ʂكåɽଢ˵ϺǛɶࠗƾӉʨՕƘͯƘΗɈґ੖ӣҺǗӤČѨƯޞΎ ̨̦͜ѬȺǮS˘ǷȐ·ͨʐł¶Ӷͫӄ̎Ķऄ[ႎà"],
                        encodeOffsets: [[34718, -972]]
                    }
                }, {
                    type: "Feature",
                    id: "UGA",
                    properties: {name: "Uganda"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ः\\̍ĵԇʷȯĐPوȜ͎²ڬǰϸ͎Ѭ͔ɠ˒̘͵Ŗ¼চΌɮՖȉڰȠעEԬϮЊ׍İсτ९̧ؓЯ֋ʉͽTࢹႍß"],
                        encodeOffsets: [[32631, -1052]]
                    }
                }, {
                    type: "Feature",
                    id: "UKR",
                    properties: {name: "Ukraine"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@̾ɄȒʮ¥ࢌĆ՞Ӈȿǝêʻڠ£̘ηkǑ੪̏٢Ƅ԰ϿӮVఊ˙XʙͿѯȆҩƃ˩߻Õџɻύڡã֑˕޽«ܣ̻¸ԹЪȭࡨ¼Ǐ̛ँơଛӟұǠȄЂࣽʘƨǈߪ˪ʑȔಯɆË̼ީĻ̷ҧٱةϟƠЁƉϑƺɂĞƦ˾ɲˎÑƮǬäĊśӸ{ɞØƽĎÐŲ̉ɈŧΘ̩ƐÒ˶ϝɦΉأʾ֑ĉȧŭΟ@Ƀȟاă˹ŹϷȴ՟HԳĢγǵÍɤұɮǐͺɸɔȀµɑϘބۦиİĜɾхܼДҢɪٲnࡖßबȫڎi͂ŧ̀Ʀɚȝݸ¢ͮąÄцʶȂܞº"],
                        encodeOffsets: [[32549, 53353]]
                    }
                }, {
                    type: "Feature",
                    id: "URY",
                    properties: {name: "Uruguay"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ղĚࡆٯ̺|ࡺ՟ڈҫӠֱχЉɸӇεՇॉұاǚғěޥΰ֫ԟҬÞլǾȈS࠸ɤࡺȾڦ"],
                        encodeOffsets: [[-59008, -30941]]
                    }
                }, {
                    type: "Feature",
                    id: "USA",
                    properties: {name: "United States of America"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ũƕȽŤ|ɾƓ̨¦ĤƤƎÍǔ¸þÜe͐ƙƬñƌőɊ̍q¯͟ǵˏſ"], ["@@˭ÑƟǮīèQÀĈî̘āɘŹëĵ"], ["@@ĝ҉|Úĸа"], ["@@­µÓŻŃȒɤŚêÃʐ˥"], ["@@ıĉ˱ƴªÖŸĈȘijȝ"], ["@@Ƭңʼƛז½࡬ƅࠂʹڼŊਖɓ˞Tݨʄ߂̧ࠒ͗ں˩ٶˏĈəȢĉ½ĉɦǎĔ¦ȣǜƅɴ@ŬĹĽƫ࢖ЁǶށǚܳʗӹЁҥȁ̍mēĦť˸Ɓɂ@ঊ҆ࡾƀસмfĐ÷ʰƉǒϜƆࠜHޘAˎ͞ŀàࢶ؄ϜƸ౦N໾BĎȺː¦Φž̖Ϣʲٺٚي˨ə֜ƜώʏAଧռӅƢ˝࣋Пࡷ̃ࢱʝѻӿƛȋSѽˤѽΒsė̬ʦȇãʇ֥ƋЗhةƥλ¥ӥ¥۫ʏఀǂʠǃ୳ʥ՗C|ĺʭɷʚǹ׽ؑ٧×Ɏȁª˟ɀǪҍȼƭ^ͅˏ͛ҿڡûʺֲѕ͎įۦǉεǴՑևƀׂ˓ߛʊÍĖ̃ŠࡁՕدࢇʝցӱнÁэ̱ţ˭इձӁЍЅӽŻׯƪ׍ˬܗώשLεЊঅ֥͛ȿԡʣŃЯĺƁς͋ȖѻܢϹٞű͢Ǥ֐ɽҦٻ۲͟źࡑϡƭ¦СϼՃȺोŁݗĤٙÍΏſƲɟaͽǴǓǇō̵Ů́ǃ؍طѺܻĿ؏ȚԹÏۻȝއح࠳γҝБȕϗUׅ¨ЕǄ˹͝{׭ȂٽʺɽЄȁטӷӐ̃ӰуֺףͲۉgՉڑۣʦѡʪȽҦ˧Ѯӿτїˈ̩̖ป@C΋ڗ@ဩOቿפ౓ТĀǒ੩ĝॕÝƙіխӚϻĴğʌһ¦̝ɪޭĊɉƌĹҢࠁࡊ۩ୠȚχˤٯ۴řۆ҃ҞȀۢܜˍ٢͠ߊĸނĺނƱૼˇܘʓ϶ĸǐ௒˷҂ߋȺɜƇې˷ێᛸ@᠂@ࠜ@ᢢ@៚@ᡀ@ᡄ@᭰@ᮞBაAF͔˴J"], ["@@࠽͋ѕɐŽЀބ̘҆Ÿ֐ÉΤʻܫЍ"], ["@@ԧŽսƾԛɮࠦƞښùĂ͑"], ["@@԰ǅԾĒڸɛ࠲őéĝُǱٕǾ͋Ʋݍµȧôº̈́"], ["@@؊ϛώǌහ»¹ȕ౾ƛࡨČᄚ˅ྤā٨ŉ૦Ǝౢʧࣲŝ@@MᷱIⷍࠠ{ࠌɵהρݜցࠈҺࡈ˖Ҁѡ֤·ޒϙՂ׽࡮य़ේ՗xՋұЙҥ͂ݍˌʃܺએںҍߎ߯Ä೷rটʌ჉ࢎߩǄ฽̜୑í࿻ϬৃΨटǯǦ׏ҫÁঁǫ݉˱झǳťӶϚࠚࣀʶɱɂੱҵֵ֑௅ױؚСߏ׿ࣗΗࡁʱȻωಽѡ˅ϿছΫֽÞ޷ɻ࡝˹ۧ˫෹ʉſƘऀϾࠔʸࣆҠਬĨвΈ୘ԊȈǚب̒ƢْђӸॹʫ˓Ơҕ̧շюɧ̝̽м࠿ͳԩBïԄƲ̮ե̚થǇ܁ЀַȬIӈ٩Ϊ͘ӘۆҸ̚њںÖ־ƇڴМ؎ï٘ʼƻϨҹưج͖ԩWࢻǽʯȃڏȄஏĥ௷ȬΛ͸੟Ӧ୾ΘመШ۔@ŕнᄢڽԶਕ͌ױр߫ΨଽˈҺѲ๰ਗ਼ϦȨФ࡬ЎࠊĪཪώޜÉಐ҄ౚǭ"]],
                        encodeOffsets: [[[-159275, 19542]], [[-159825, 21140]], [[-160520, 21686]], [[-161436, 21834]], [[-163169, 22510]], [[-97093, 50575]], [[-156678, 58487]], [[-169553, 61348]], [[-175853, 65314]], [[-158789, 72856]]]
                    }
                }, {
                    type: "Feature",
                    id: "UZB",
                    properties: {name: "Uzbekistan"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@xԦૣά࢝ЪշЄ॥׈Яࡾ˭ƴࣥ͏ǤěڢଅѺ۽ӥܕ́Ɛхॅ[ᶾᓘӺƾïದ׻یͅߤݵঢŪ෸à৔ؗÙࡅЦMǢۍ੬ɲЉ̺Lπ׺૎הӖƺʠĉ۵խئ́ײȾ়ѷ੽؁ٕĊ΍uţɺǪ϶૱țˋաЋҫۭ ɓυؠȧǺصҿࡗهǰҳN"],
                        encodeOffsets: [[68116, 38260]]
                    }
                }, {
                    type: "Feature",
                    id: "VEN",
                    properties: {name: "Venezuela"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@yȣӱĭ˜ϡYѭυӥ͆ڙδÆȌ؈ʻ̒§َਸ਼΀řІ̎ˆ̞ןל_մҵ˧ݮQ࣌ĔӖϕٞĻҼʾXɄਨ¼৖\\܉ʛ˼Їڦ×ِЯƆڧѬn͢ȣڕӱó̫˾̷ȽƽԫƉjϱɫɱّ֪Őʁ̭͍ऱ̽׿Žʏȣڛɀثņƿýϔɑ֝ŜՉ܆ï°ǭ׷ʅĭΣΉƏسȝǋʱٷÅҧѼʯ࠺ɟ̧̌ȄюмȊʅʠǛ֒à׼Ȉ˰ƲҎ̓Ơӏĩ؁®ͻęסܢӥńઉăȧ̊ȷêǬĴ̶áͺȃȂŅϮѡÈɸӮĺ׶ʔ̸͘ʌɈрդƖ"],
                        encodeOffsets: [[-73043, 12059]]
                    }
                }, {
                    type: "Feature",
                    id: "VNM",
                    properties: {name: "Vietnam"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@૭ܗ۫ߍȁ׍٠ࢭ޺ળނԱԞګϪ།ŕ๓۫փ१եۇ۫਷ޱ̧ՠʀ֬دӌܬ͸ࢦÔσԚප٨ļ৖ț֖ƶࡀɃצٍאՋ݌ۥ঴৓Ԋʊ̠՞ɘ͙ܺਙPϕކӭڐҊȴڢIࠈĬܒ҄К̿ސƵƃӛАͿࡎɓ"],
                        encodeOffsets: [[110644, 22070]]
                    }
                }, {
                    type: "Feature",
                    id: "VUT",
                    properties: {name: "Vanuatu"},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ˣō˭ςɤՆӗ"], ["@@ƌڱɥŀǩ­ťɴi٢Дʵ"]],
                        encodeOffsets: [[[171874, -16861]], [[171119, -15292]]]
                    }
                }, {
                    type: "Feature",
                    id: "PSE",
                    properties: {name: "West Bank"},
                    geometry: {type: "Polygon", coordinates: ["@@@ԣŭʙЃŕɜɌŚɁĦǬ̤֔ś"], encodeOffsets: [[36399, 33172]]}
                }, {
                    type: "Feature",
                    id: "YEM",
                    properties: {name: "Yemen"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@؉ɥǋύo˹࠷Οഇϻݩףυ±ʥºӭΑ՗ǉ۷©ɃµǿɛəÕŻɇеlˍœ׉¨ɓӬzҠƍʜǑتʋΊǚ¤đϨĸǊξςˌđΠɞЮΊɓɬúॺnƸċ߼č͐¨ɂ˫ϺƖ׼ࢦ޸Ϛᝒ͒ڀ൳˞ח"],
                        encodeOffsets: [[54384, 17051]]
                    }
                }, {
                    type: "Feature",
                    id: "ZAF",
                    properties: {name: "South Africa"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ǏŧΣяɻћӇ׻ोࢁףԋًϣ࢛͙ѓ«ŇɷԛŰеǅ࣫ǊԙĹΏ¬ࡿͩܓƃԱͅϡoΣ̚˳fαϒśŏɦLӰ˙֞˔ƴs٤ս޼х܈AF׽તДдͪɯƘΫϘÓՈǃҌÖݤіB᷌ɨűӾߙûԟȈ̏׼ĒрϒЊʨȶДЦȚΠķВɽۂ£՞ȜĐʾƨДҚäʨ͂˪֔ݮغஒؤ΂UОƛ˲Ķ҂ċД஁ɔׯƫऩî̟чƶʏÑāʓɯ̿T̃ԆҕӮĜǢώْQȿؑıۥɑϛֵщ", "@@νʶϻǟҕ҃͡Տـ٧̜ČƺˎҴƀƜ˜ʴФ̅ʪ"],
                        encodeOffsets: [[32278, -29959], [29674, -29650]]
                    }
                }, {
                    type: "Feature",
                    id: "ZMB",
                    properties: {name: "Zambia"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ІϏɊ܋ƝɩǙڻǈۡ˃̇ʭޭѶɓᢇۗĂׯٍřӍͯĹ̛̅ßܵۓҭխ˳o˗ĬऱĠƯÚOêͧȎկ¶ۋȑչԾ֣یᦶშYí̂Ű̀ƧЀĪТėʺ̂q¶ʽϾrՖûˬϡڨŝԤˆȌѯ٠ş̴ΧΈҥ٠Që࣠ɱƳח͞ɧƬļࡈƬসȉψʈ՚ɤĶ଀ƚͦđΘɇͰƗՖƗӊʧ"],
                        encodeOffsets: [[33546, -9452]]
                    }
                }, {
                    type: "Feature",
                    id: "ZWE",
                    properties: {name: "Zimbabwe"},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ҁČ˱ĵНƜ΁VՙϞٯźʙՒC̒έĞ्ई˃ӢǛƮ͓ڤलğ˘ī˴pҮծܶ۔̜àĺ̆ӎͰَŚÆ̻۬hϴǯǺȻАÓѦˑF੟Ǐ׋عƊʝħӵŵùɛ؅ࢫ॓"],
                        encodeOffsets: [[31941, -22785]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/xiang_gang_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "8100",
                    properties: {name: "香港", cp: [114.2784, 22.3057], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@}ScTʟ@cWuJÁ]l¦RLj¼BĄà H@TOHCTDDDHDNAT@PEHDDNJLX@BABALHFF@DKHADBBLDHHFBLEJB@GDBBFBADDB@@KFAFBBJJA@BB@@FFDDADFF@FADDDBJC@AFBD@@DDD@DAA@D@DB@DHHBFJBBFEHDFAN@DGDC@DLCBDDCFDlAFBFCBEF@BC@GDAB@FD@DZJX´HĐMja@Ý`p_PCZ@lLnRGSDMFK|a\\Y}­§Mën"],
                        encodeOffsets: [[117078, 22678]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/xin_jiang_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "6528",
                    properties: {name: "巴音郭楞蒙古自治州", cp: [88.1653, 39.6002], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@ÈÒĊanwŎVȮ¦ͪŃĢÜōȂçČéƐżLɆóĊĊaʊŁ±¯²Um»ˌmÈ»VʠţWÑÅ¯ǓéôƑƒğÆīŎī@Ƿwô˺LÞ¯ƨVǪÑƒĢȘV°wĢôk°¯ƒ»΀@Ȃ»ĸǔ@΀͔ôôLɆó̐ÝɜLɲōͪƨóŤK@ī@IU܃ÛmȻţǩÝ˹ÛǉťǓǫō@Ɲ²¯VçōKͿŁΗÇţ»ƽɅƑLÓŏÅÅɱV@ÝĊU¯ÑĊĭÞLÞŎJ±̃XȣˌōlUÈ¯ŎKÆƅ°XÑÜ±nŗġV¯óaUƧUōŁÑ±çɲ¥lĉkğ°k¥nğţL¯ÝÝUƽĬ΁lķ°@ōXÿÝ¯V»ŹLʉÞɱŤĉó°ÝJ¦ÝKÝ£ţÜÈĉ@xǩUċƑ@ky͓¹`U²ĉVġ»ğa¯¥ť@ĉó@ŻÛÛJw¯nó¯ġWƽʩķÝɛwĉĕÝ¼ȭÞķō@ó£Å΀Ƒ¯ôȯÞ¯ȰÆōèĉXÇ¼ó@ÝnºĸÞVƜĸȚUʶõˀĵĖɱŎÝĖVࢰӒѢ°˘nϚVˌÈmɼĵŦW¤öʊõʔ@°ÈXVènŎȁb¯ǫĉ±Èğ`ġwōÔğ»mVVÝ¥ó@ĸķô@bXĶmV²²`Þ_ɴbͪÈ°ÞWĸÈŌmÞkɲÈUÆ»n¼ǬVķĸźô¯°n¦ɄÇÈ"],
                        encodeOffsets: [[86986, 44534]]
                    }
                }, {
                    type: "Feature",
                    id: "6532",
                    properties: {name: "和田地区", cp: [81.167, 36.9855], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƨ¥èź٨ΘƑᩄbUࢯÞĕɲōĶĕöʿVʵķșUƛÝķm¹Þô@È»ĊWŎçÅ°ȯȰÝ°óƒÆͿĉ»̽çnmɱĵƧºóUƽ@±wóL¯°̻L±Æ¯Vƴķb¯VÇ¥ğ²Ǖbk¥ÇKlÅɱġ@ÑóK@ÇaÝXğţxĉČǫķê¯K@ÑaŹƑK¼¯VóaónġwóÞéUġbóĉğÇl¹aUóğKWVÅ¯nÇŋƑķnʇ»óxĉwçÇ°Åw°ċXób±kÈÇJm²ţx@ÒÝŦÇºnó¼n°ÇbUÒ±¼XĸĠłƽXmwĉºzÈÜmnxmx²ĖmÒbnƧêUºĊêÆVóĖóUĉ¼ÅĬƑ°ɆƆŻŚlłÞL¼nĠ¼@ÞÞź@ŎÞ°VɄɴжϼِ͈Ŏ"],
                        encodeOffsets: [[81293, 39764]]
                    }
                }, {
                    type: "Feature",
                    id: "6522",
                    properties: {name: "哈密地区", cp: [93.7793, 42.9236], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WnŐÆĶLĢ¦ţºźlxÅĸƽŚɄĮè@ô²ÞUĔƐńV°¯ĸX¦Ɛm̐bƒ»Ɇa΀ĢƐLˤȘÑnІǉĸÿn¯ĶaŎ¯ĢĕȘ¯°΂la¯¥ǕǔwˤӱlťО̻nŻmɃĕċţUw°WUóƨÅţķ°ýV±óÅǓéʉ¯ƽŁéōǖȁÝƏůǕw˹ǫȗǓƧǕVýé@ĬţLƧôͩɱŎɛK̏ÞɅôóK@²@°ōŘ¼lŦ¯ŰóƜÛlV¼ķ¼°kȰŰĠǬŚÝŎmĖ`@ÇÜn"],
                        encodeOffsets: [[93387, 44539]]
                    }
                }, {
                    type: "Feature",
                    id: "6529",
                    properties: {name: "阿克苏地区", cp: [82.9797, 41.0229], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VÆxˌŎÞŎ°nȂÒ°²VĊ¯VğƾˍǬƨÞÞKÈÞĊVźôɆÞĢèŌôWČ²ŤVÞĸʶbl¯ôn_VÆĸlmÞnVź_ĸ¼ȮmǖéĸW°°ĸJkʠ¼Æw°¤ÈlxɆzČºĶI²ÆǔU°ô@Þ¦UnUĠ¼ŎÓĢxĠ_²ÇĊǬ°ȂamōçUÇW@¯öʓõʉX£ĶťnɻÇUˋmϙ¯˗ӑѡᩃaΗƒɜ°xWƴUxɃÒˣ¤ɅwğʉōóÝŹ±°ȗ@¯Æƒ²¼", "@@ōгwȁ¥Ƨ°ŹÑķV¼ÞêĊ»lĵm¦ÅW@ĀôÈźaɜxÈbÞÆĶIОŘnIÇŃÛÝĊÑĠƏ"],
                        encodeOffsets: [[80022, 41294], [83914, 41474]]
                    }
                }, {
                    type: "Feature",
                    id: "6543",
                    properties: {name: "阿勒泰地区", cp: [88.2971, 47.0929], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ɲˣĊIÈ¥ÅU±Ċýkō°ĉƽó»ĶƽXóʵʵȯƑÅȁɅ¯ĉ@ÇሗK֛@@ˤV֜ʵрƒǬVĸƑŎ@ƆϯÑóķ@ʇ»ķ¦έmlÈĸĊX¼WźÛÞÝѸĢČþĀĊôάVö¼ĊUƨ°°èŎČUÜÆóôVôô²êȘlˌç°`n²ǬĊaÛ°±kğmm»@°ÝɆÛÅÇVaÝVm͔ğôÝÈb@n¯ÜUĢÑĊ@źīżWŤÈǖWôŁÆI²ÓƨL@ĊXmmÑÆ»ȰÑkĶō@ý°m¯"],
                        encodeOffsets: [[92656, 48460]]
                    }
                }, {
                    type: "Feature",
                    id: "6531",
                    properties: {name: "喀什地区", cp: [77.168, 37.8534], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Č@°ĠôÓô@Ŏĉ@Ƴĸ@Ť£ĢlVôWVóřXĉŤêÞ@ƐÒĢÑlèÈV@ĠIk°ÆŘ@ÈÈĀ@ǶťÒğ@@ÒĉlŻ_@ƧĖÅĬōÆ@bźÞnƒlVÝĬWÆ¼ʇÝÅ@ÇÅÈwWóĉ±ğzĬČƨÆÝIĉÝ¯bÇÑĉ¯ʈV°xUŰĊ¤ƪ_ôÓɚI@lȚXȮŎlɴȘ՘¦ɲÆʈ_ɴźôÞʊŎĠɆxˤ£ɄÑVwXƳ¯wɛŹ٧çƧ¦ōُ͇еϻɃɳUÝ¯@ōÝŹ@Ý»mğ»ÝKkŁżřɅƅƒ¯ÆīĊ»ôVôĕÅUĉéV¹ƨémanÑ±ĕnwmwnÇÛyĉ¹ŹlŏkĵèķmōÞġKñÔċKÅèĉzômxȗÿƿI@þÅČÝKÝ°@¼ÈVº@ÅĢÆUċłnÝÆǕČĵJm£ÝJ¦@ĊxV°ƏLċ¼ǩ@m@ÅĢómÇÆğ¹ÇÆĖÞKxwô¦ÆÑÆL²ÆƾU±ŚÅŻĖ@ĬŤÈñ@ǔÇxÈÇƒ", "@@VÇţ°ğUĠ¯mk¯ó¥ķIġÿƏbĉa±ÒĸĀlKU_m»nwm@ÈŤ¦ĉbÞ°±Þżł̦°ĢŁVé"],
                        encodeOffsets: [[76624, 39196], [81507, 40877]]
                    }
                }, {
                    type: "Feature",
                    id: "6542",
                    properties: {name: "塔城地区", cp: [86.6272, 45.8514], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ήnĸ¥ʈ¼ĸ@ôϰÒ@ƅƒōUķƑǫʶпU֛܃LګK@΋ĸ@Æ£ÞġÅĠċLVÝ»@Å»Ýnm¯»nŻĊ@nķŃ@¯ómóÛÝǟ¯aÝóȭ¥ōUmxĉbÇÑ@bUº¯X¯ÆƧbVÒĉnǕw¯°ƑVÇ@kx±UɱnÅK¯ƒĠǠU°ɜL@°xnĬĀŋŎÇLğϱÞέƜkôÅĀǕłĸĊŤUŰĢ°¦ȂϰÜɨ°x@°żǠÆƈČVĠ»ČL°ÇbĊÑ̐óÞlĶwÞɆVÞwǬxǪţÈ¼ÜLŐĶˢ@", "@@óKĵĀV͈ĉłƾǊÆŤzXl°ÆL²¼źôÈĢǔ¦lô°ɜÞʊĠğÅm»ʵƳƑʝȗīV¥¯ĉ°Ñ@ŃÅI»ĉmğnaċƨbVğwġ¯@UōaĉÝJğÑÆŎkŎÞĀlź¦"],
                        encodeOffsets: [[87593, 48184], [86884, 45760]]
                    }
                }, {
                    type: "Feature",
                    id: "6523",
                    properties: {name: "昌吉回族自治州", cp: [89.6814, 44.4507], childNum: 7},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@መL@È°ĊȂɆƒÆĊ£ťôWÓɆbĢÅŎÆ¦ČÑW¥°ķU¯ƏŃVē±Ý@óçĭɃƾřÆķkwŹŤ¹ġ¥ĵKŏÅXmˍщwǓ¤Ƒ@wóōVķ£ɱġôÛa±ÒȁóèţIVƽ¼k¤ó¹ġJmx»ÝU²@ÅÆĸǫŎĊmŎǬ՘"], ["@@Þô°bÞǠôÜôn@°ĸńǶkł¼UÞKğČÆÝĢÅ¤ķ@@ΌڬL܄K@ˣȂ˭lĉÅW¥ĵVÆý@ŃÞēUŃȗƅ@ŹƩǕĉ»k»ÇVğóřXŻKƏċêȁèÛŎġͩń"]],
                        encodeOffsets: [[[90113, 46080]], [[87638, 44579]]]
                    }
                }, {
                    type: "Feature",
                    id: "6530",
                    properties: {name: "克孜勒苏柯尔克孜自治州", cp: [74.6301, 39.5233], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ˎǫĠƽ°UUĉ¯±ȁÑm¯ÝōˋōwUÅ±»ÅƑ°Ș@²¯ɳʇ`ɱÅ¥՗ɳȗōkȭșW@kəJóÔƩ`ĉ£Vů¯wU°ʇĊÈÒ°aĊÞÞJÅċƧīĠyĊ²XôÇxÈÆÆ@ÞʈÅ»XÞīUƑkmŹÝ@aŎÅÆīƨĕ@ż`Ċk@ÑĠ@ŦÑ@ǵÇÿ@ÇÅŗl¯ğJ@ÇUkçġÒƏÑÝ@ţéWĊôŚUóXUġkţ¤ķ@@ƴōĊó@óÔğ¯ċ@@Ò¤kôˣŰ͓k»KX¯ċwƧôğɐÒôIVÆ¯UķǬķn¼ôb°ÒȰVVÈÞ°ĸó¤V¼°V°²êlĢÒUƨ¦ôȰƴĊVV¼ǖIċĊÞɜénČW˸ǸařÈw±īçĸ¤ĊôwĸUĢ¦éǖĬĀô¼lÞkÒ°x°ƆÞxÆV²ǔ»b°wÞȘ¥°nŎV@°ʠèŰȂb"],
                        encodeOffsets: [[80269, 42396]]
                    }
                }, {
                    type: "Feature",
                    id: "6521",
                    properties: {name: "吐鲁番地区", cp: [89.6375, 42.4127], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ôKĉǪa²¼lÜô@ʠê°ĬôȂ²ÑÜbĢóɲĸ¤ŎUô@xƒǔ£ъxˎmÈÛ@_nĕÞōřǫğůlȯ¯ĸ»U»Ükôƛ°ůkť»Ŏŗ@¯@±͓óͿǓ@ķȁ¼Ϳ@Ƒ¼¯°ólġ¯xȗUġƑǩÒƧUÝ°˹Kóx@ǸōĬÅĬƑĠóƒǔêÆ°XÒʟŤUÇ¼ˋnn¼±V²°ȂUŌÝbʟǔɅô@żǬaҎÈ"],
                        encodeOffsets: [[90248, 44371]]
                    }
                }, {
                    type: "Feature",
                    id: "6540",
                    properties: {name: "伊犁哈萨克自治州", cp: [82.5513, 43.5498], childNum: 10},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ĉÆŘȁ̐mÞ¯ĀX°±¼@ƾ¯ƴ°ŎÝþŋ¦WÜÞbȂĉźUÇmwVUȂóô@ȰÝ΀nÆJnƾʠŌLČóǪ¯¥ǔaǖŌaôÝĢLxÆLɲm²VlwÈ@Uƒ°¯ǖxĊmUÑƨa°Å°WV¹aÇɃÈm¥°¯ŹóĸķǫUm»Å¼ÇVɱlÝŋnķÇÝX¯ͩÇɳaÝ`±_U±ĵnWa@ĸóķ¯ǓV±ÅĵJċ¹ɅykwÇ¯£Åxʟ»lķI¯X¯ķêǕȭnķ»Ź`±kÞ@Ýô@Þ°xŤŎIƨÆUxō¯²ǔĬǬlUŚ"], ["@@ÞĀlź¦¯ĸŤKÞċƨbVğwġ¯@ţƽJ"]],
                        encodeOffsets: [[[82722, 44337]], [[86817, 45456]]]
                    }
                }, {
                    type: "Feature",
                    id: "6527",
                    properties: {name: "博尔塔拉蒙古自治州", cp: [81.8481, 44.6979], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ήƛϲÝĠÈKŌōÿmīw@¯ɛKV¯ğǟ°ƑwġKóÞŋbǕǓb¦ǩ°ċôŋKʟƽmÅImͿȯÞó@ȁôUVnxÈŹVȁĊÝabŻ£¯°lóxȂŤĸkĊÞyĊêĊmĢxVƨÈĠXΘÆĠÔźɆţ°LXƾŤŤb"],
                        encodeOffsets: [[84555, 46311]]
                    }
                }, {
                    type: "Feature",
                    id: "6501",
                    properties: {name: "乌鲁木齐市", cp: [87.9236, 43.5883], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WôŚUĠÈl¼Ċ¼ƪǖ@źȘƆ@ýlÜXVŘÞ¦V¼kĖóÒèkĊȁˮ֜@ǫ՗nōĉǬōķÆÅ@±ÞV¼nwĢIôºl£ƾ»UŤJôçó¯īʟéó@kÛ±»ǩbĊóLҍÇǫb@ŻɆóʠǓaŋÞȁVʉłĉbĉɅô"],
                        encodeOffsets: [[88887, 44146]]
                    }
                }, {
                    type: "Feature",
                    id: "6502",
                    properties: {name: "克拉玛依市", cp: [85.2869, 45.5054], childNum: 2},
                    geometry: {
                        type: "MultiPolygon",
                        coordinates: [["@@ɜÞʊĊýVaÅm»ʵƳƑʝȗīV¥¯ĉ°Ñ@ŃÅI»ĉmğnaÝţL°ķóKĵĀV͈ĉłƾǊÆŤzXl°ÆL²¼źôÈĢǔ¦lô°"], ["@@ƾIŤ@UUwōaĉÝJğÑÆŎkŎ"]],
                        encodeOffsets: [[[87424, 47245]], [[86817, 45456]]]
                    }
                }, {
                    type: "Feature",
                    id: "659002",
                    properties: {name: "阿拉尔市", cp: [81.2769, 40.6549], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nIÇŃÛÝĊÑĠƏōгwȁ¥Ƨ°ŹÑķV¼ÞêĊ»lĵm¦ÅW@ĀôÈźaɜxÈbÞÆĶIОŘ"],
                        encodeOffsets: [[83824, 41929]]
                    }
                }, {
                    type: "Feature",
                    id: "659003",
                    properties: {name: "图木舒克市", cp: [79.1345, 39.8749], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VéVÇţ°ğUĠ¯mk¯ó¥ķIġÿƏbĉa±ÒĸĀlKU_m»nwm@ÈŤ¦ĉbÞ°±Þżł̦°ĢŁ"],
                        encodeOffsets: [[81496, 40962]]
                    }
                }, {
                    type: "Feature",
                    id: "659004",
                    properties: {name: "五家渠市", cp: [87.5391, 44.3024], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@çôÑlĕU»¥ÝUŗWkÛ@þVńÝĔ@ńÅþĶUX¦Æ"],
                        encodeOffsets: [[89674, 45636]]
                    }
                }, {
                    type: "Feature",
                    id: "659001",
                    properties: {name: "石河子市", cp: [86.0229, 44.2914], childNum: 1},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lŁǵmĉ@mż¼n°ÞmÆ¼@"],
                        encodeOffsets: [[88178, 45529]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/xi_zang_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "5424",
                    properties: {name: "那曲地区", cp: [88.1982, 33.3215], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ƨʔĸbÜºÞwnxźbÞ°ô@ĶĸIÈ¼ĊJŎÈôUÝƒ¤ǔLÞŎ@ĢȘblôLÇźçÈ¤ôL¥ÞIÞ¯ĶxʊťƨƿÑĉXVķŦ¯ȂKÇǕÑ¯IU£¯Óƿ£VĕÅÞÿÆwƑ£ǖxÞĕ±ÇÝaUÑÈU¯UōÈÝwWŁĵ±ÝóĢÿ°IÞ±mÅĢ¯mÿ¥°UnÑŤĢĕĶwǬŻͪwŎ¼źÇĢĠĕˎŁ°óƨ¼Èam@¥°wǔǖ°ƨÇŤġƨŎŃôbÈÛŎĊ°@Ġw²ÑÞJÆÆb²°êĊUÞlÈ²VÈKĊÒĸĉ»ÅôťUÅÇk¯@ÇÑklÇÅlĢVÑó@°@ÛĸV¯ÇĊn¯Uĕƽ¯m¯bÈ@Ò°Ĭbĵ¼kxķýÇJk£ÝaUÑÅóĶǟkÓʉnĉÝ¼Ƒó»Þmn£mČ¯@ȮÿV¯ĸk@Ýów»ğġ±ǓLōV¼Əèķĉè±b@ÒţUÑóakl£Ó@¯L@ÇlUóȁ¯aġÈÅĕÝLķ¯Ė¯@WĬxÒÈnW°ţôU²ǓÓġ²V°¯ôǔÝLċk»Ý»Ý¯ÞVwÛÝÇōͩÈĉċ»ĉm¯£W¥ţKkóġƏW@¯±kōÈb@ÒÇaÆ¯akóÛÇ¦Ýa¯Ýĉ@Ç»ÛmǓxķƛ¯lVĀÅÞġbÇJUÅVĖƑWzō»ōWn@è¯ÞóVkwƩnkźÇÞÒÞ¯ýğÇUxÆÈnè±bĉÝ»ÈŃwwÞ@m»ÈV@ýÇ°ķxaÝ¯Xċ¥ÈóW@ôkxlnxVÈóĊkŤġ¼@°¯ŰƑL̻Ű±ŎÝVÞVÇÞÅÇakƞ@èğŎĸżƾ°ÒLÞôĠKȰĖźVÈÒĠ¤VôUÈþťL@ôǬÞlÜÈnÇÒUŚ@ĊƨW°°X@ČÇþƴĉÒķ¦@ĢôWĀôłUÞĢǬź°¼@ôV°bUÆnzm¤ƽĸÈ"],
                        encodeOffsets: [[88133, 36721]]
                    }
                }, {
                    type: "Feature",
                    id: "5425",
                    properties: {name: "阿里地区", cp: [82.3645, 32.7667], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Çƾķn£myVÅaU¯ó@¯»ŹġǫVÝóŁXÿġó@ĸ¥ĊÑƳÈý@ċW¯X¯ĉƧ@VřÈÑÇmkÛǫÝ@óŦKÇýVUó£ğÇÑŹUȯĕğLÝóK¯ÑƽķŻĠō@çlƝÈbÆÈÝUÝÞU²ō̼ůƒK°ů@¯UK±ĊƧbōÇmçÈġóÅóbźó¥kīÆ¯ólçKôĵUÅVŃķ¥nÅŏm¯¹Å»@ÑÇóxÝkʇȤU¤ķb@ƒ¯ĊÇx¯ĸĉKm°Āk¦lKnĬȀƾÛ¦WÆÅmǊĉ°ōUţ¤UŎ°ŎKÞłÆǓ¦Þř¯bmUÝl¯Umğl¯£șwÅǫaÝnĉĶk@¯Kō»ĉnaÞ»ťnkmlĸ¥UÅŻkÑťĉVôó°LôīĠUÿĉǕÅz±K¤²ō¤¯Ė¯UÝ¥VĵóÈťÝwķÈÑk¤óWýĵĕVĠVóǓķ°k±VU±ţ¦UǟÝÅJVÑ¥XUċUÅlÛƆǕÆȗƆ¯wŏÞÅ@ĉlÝóÒnUôÅlxólÝôÛ±LÛôÝL@ġ¯X¯ÇUÅ¼óaó¤¼XÒġŎóLk¦ôÅ¼ĸĠ¼KġƆô¦ÆƑÔĉĶ¯ImÒ°¦n°¯ÞlÝČnƒÒKĠÞĕklýƾťôIĖŤÒnƜm¼¯lnżóÞ@Ůó¦ôƽĖċŚn°Ý°ôÈUƜblÞó@ǖô°UÈƆ°XþôôlѢ²Ėm¦°@¤XĊblÜzkºƒĖmXŎWVóÞn°lĠxȚa°»żLźb@Æ°XĠÝȚxĊĕŤaȚ°È@@èŤ¦Ü¼WÞkÈ@V°lŤkŎ±²¦ƐUǉ°aÈÑŎbĢŎbÆ¥ÞIȘlôVÈUbkɲĶnmnXb̼òƾĖŎ@ĢȂÑôÓĠĖʊĊÔ"],
                        encodeOffsets: [[88133, 36721]]
                    }
                }, {
                    type: "Feature",
                    id: "5423",
                    properties: {name: "日喀则地区", cp: [86.2427, 29.5093], childNum: 18},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ĶĖXþôl£ÒĸÇÞxÇŦôUĶÞ¦°V°ĕŎ£±£²LÆyĊǖĀğVóĬ¯KóôUĊŦlÒżVÆķ¦klnŦmÝ¼bĊmŎ¼L@°lĊĵÞmǬbÆȚx°¤Ġkn°VÞkVn°aŚÝǔ¥ÅÝŁōL¯ōVŤ£ŎVĊ¯nǉÆXÅÜ¥ǿƽmīLkl¥ÿn¯ĊL°ķÈw°ĉ@ƑĸaV£ʈȣÞlôwÈ@Ò¼Æ°ºŐnmÆĸ¦UńÆVóĶLèôkÅ°lĬ¦ŹôôaÆôÇĢnèŎÈƨaĉ²VLĢ»lţôĉUÇwkmlw@óôXÇČ¦°WÞbwĸÈ¯@þÇUn¼Ý@xxÇńÞ¼Ċ²amçÅÇVwĠÈþ°ÝÑÈÝlŹƪmlxôU°Ý@çmXŎŎ¼yƒXĕÆUVÈIĢaÆÝUÿ°kĸƜǔwnÜÈ¼Ċ@Þ°ÞbÈ¥Üôl°bÅÈb@ÑaÇ¯UU¯Vġ»¯aV¯Ç°ÅmnÑŤçǬVǬ±ĉ¯¥Vĕ¯Ýk£ōw@±ġÛ°ÇVÑ@Ûa@ČLƳÇa¯¤ÝIĵ¼U¥ƿōķÅţŻókÝóĕ¥¯U»Æ£X¯ġŃÛkÝ°V°ó¼¯èWôÞĖȎkĀƧĀówm¥¯JÅ¹ÝJÝōVVÅaÝƑ@ğŭÇ¯_ĵVnxÅónĵxÇĖĉVÝÈğVÒó¯±Żĉ£ķÆÅLǈĉýţÛ¯VnV¤ÝÈ@°ÅÞÝ¤ŰğŁm¦ÝxóK¥ɱÈUĠôêVôÛ¼ÇWÝçĵaō¦óĖƧlÇĢƑnŎÇV¼¼ºÛ@m¦ƽĉmm¯ÝKÛç¯bŏłĬb¼ÅLmxť°ÅUÝXkÝmĉ¦W¯KÒknÝaVÝè¯KɅńÝKnÞ¯¼"],
                        encodeOffsets: [[84117, 30927]]
                    }
                }, {
                    type: "Feature",
                    id: "5426",
                    properties: {name: "林芝地区", cp: [95.4602, 29.1138], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VÈłVôÈk@°K@Ôk¤lôbVÒŤ@Ñ²açĸĊƐçU»ŎǔKĢ²Ġ¼ôx@ÞlƨĬUl¯ÈLVÞJ°ÜnʊwÜbXêVÞ¯°anaU°wÆ¼ɴÑWÑ°mÈýÈam¥Þ£Ť@¥ôblÞĢź¥ôxÈÅmÝĕÅV»ĉōŤōnó»ÈīķIUĠÑ°ġĸLÞ¯VÒÆ@Āb¼WôÈ@V¼ôóŤKÈÑU»wVǫżnWÒÈx¼lŦ£ĊōŤx²¯@ÆU¯çÆ@¤°£é°k°lůÈó@¯ŤÇÈĉkkÿó¥ÝXķÑÜ@ÒóŚÝ¯°ĉówÇ±¦ÅJUÒĉĀķw¯°mĖ¯±akxÝÅn»lÑK@¯lU¯UVÑ¯óĊ¯mōğVǓƅÞWÝÈÛ@ƿô¯ÜġzÅþ¯ólmôʇġĊÅUͿřŏȁˋŁóÇˡōƧÇbw°Ķôk¦ÒnUþġÒÔkǔķèó@²@ŘōńĵyzġaÝ¤ÅI¤Ƀť¦ğÑ¯¤ķbó¯ó±U²°¤ČÜVnÈÆŚŎ°ôĢþÆzèVĀÇĀÇXŹÑ¯¤ówċķk¦łUÒġzÇ@ÆÝx@²Þ@Æ¤Uô¦U°xU"],
                        encodeOffsets: [[94737, 30809]]
                    }
                }, {
                    type: "Feature",
                    id: "5421",
                    properties: {name: "昌都地区", cp: [97.0203, 30.7068], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@VĖm°ĉÈU°ķÜ¯@@ôUÒġkÆkÈlÒ@Èl°ÈVÆóŦÆ¼aÅĢɄwnōw@¥Ŏ¦°ŹÞmV°wnÿwwÝw@¯mÞŗ°wĠĸkÞğlĔ²¦°@ĕĸwVóal@nĢÇĊn°@¦źUXçǔůĸVÆKÈÝĠ²ÅĔô@lÈ_mzǖlaU¼ôwV°¯¦ĬÈal@ČÇ¼nIxô»ɜ@ƨ¥ɆŁŃǪȁkƛƨȍʊȡóĭ@ÈÇVůÞĸƅmēƨťÅÈʉVǵ°ġVŭÅɧ°ÿnɛ£mķ²ŃóÑUĉ°mÇ»¯@mxUĀ¯èţ°ȁÝçġU¯ÆÇţÈ@°ÇôŰ¯k¯lê¯¤£Å@èV°Å@±°ţwĉŎť¤k»ÇwXÑŻmUǬxV¼ÇÒţLóôU»Ç@Xó»a@ÿÅUÑÝ°ķK¯ĢğÒVĸJÇĬ¼môţŎĊŎU¼ÆĖnÞÇÆówŹ¦ġkÝóa¦ţ@Ý¤n¦ÇbÇþ¯nXÒɳÒÅ»¯xVmbb¯Ý°UWéÛaxʉÛm¯ÝIUÇKk°VƧīķU°ȭĀ@ċ°nm¤Ýnô¼ƒÞ»ĊʊmlÔĵǠÆôVÒÞbl¤ÈIĸþlw»Ķa¯ī@ÑÇ°anƾ°"],
                        encodeOffsets: [[97302, 31917]]
                    }
                }, {
                    type: "Feature",
                    id: "5422",
                    properties: {name: "山南地区", cp: [92.2083, 28.3392], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°ÞUĖ°¦²ĊôÇÜLǖĀɜȘŰÞLĸźêÞ@UÜUŤ°ɞ¯Ü°WŦĀmŎ¦ĢyVÑŁl¥Čĸôx°£źÒWÈÿÈUÿçÅyýóġō¯řÅmÇÛUċ¯£V±²°ôôĸa°£ĠÒŦ¥Ʉ£ÆJÞ£ĢbyĶzŎŃ@ŗ±ô@ĸçlǓÓĢÑVýmÑl¥ĵó¯̻̥ƛǫÝһÇƧĉyţ¼ҍēVĶĉŎ°ĸmÞVÝĸÒÛaċóŹĖèÈÈl¼k¤ÝX@`Þŏ¼Æō¼ÇçĉKUÝÝ£ğ¤@¦ġl¯Òġĉ¯ómóxÝÞğVƴċK@b@ÜUÒ¯ÈĢÜ@²xŎl¤"],
                        encodeOffsets: [[92363, 29672]]
                    }
                }, {
                    type: "Feature",
                    id: "5401",
                    properties: {name: "拉萨市", cp: [91.1865, 30.1465], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ŏ²l@°XĢƐlôŤLX¦°¤ĊnČ¼ÇĊŎͪÞÈÜxU°ÝÞÞ¼¼lČÞKǓ°óU¯Ģ±ǔÔV±ŤóX¯ÇmÑwXī°@°ĕĸÞKÆĖĢÇ°bȂÇŁUV¯wVó¥VÅ£Ý@@±ÞwÅÈ@¥nōťÿ¯XÛɝ°ţ¯ÛVVÝ@ŹéķÝKȗůɛǕÿÛKóÈǫǫUţèmÒn¯Æ°ÈU°b¼UĢV°°V"],
                        encodeOffsets: [[92059, 30696]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/yun_nan_geo", [], function () {
            return {
                type: "FeatureCollection",
                features: [{
                    type: "Feature",
                    id: "5308",
                    properties: {name: "普洱市", cp: [100.7446, 23.4229], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Uô²a@²²Ķ¥V°Ķ²bl¤kVxl@°Ś²@y@ô¦¯@xxVxUVbVÜm¼ŎĢmºXXWÆ@ĀmmXU°ÅÒm¼Þx°w@°XêĠ°»nV°Ul@k@V±ôī@£ČŃÆ£KÞý@¥k@ya@nWVUVwm£Jknm@wmknXX¥mUUlUnb¯°nkVInlIUw°nmk@@mlanXlanmk@wVWUw_@éĠanmUaÜ£mX¥¯@@óUmÝ¯¯ÞÝlKnxô£»»ĠJ°aVUÝÿV¥ÛbI@wmón¯yÛL@WkÅmÈ`IWa¯K@¯mUnmaXmbmak¯ĢÒÝm¯mV¯KÇb¯KÛWWX@aVknċLUWVkXóW@ka@ób¯Uwmb¥UUlaU¥U£maķKXkmÝ@kwmÑ¯k±ċbUUVakaġ¦kL@`a¯xmÅLUW@ċnÅUV°LkL@b°°@¤²nôôkl°kèÒÈzV¤ÈWôônV@¦@¼Ux"],
                        encodeOffsets: [[101903, 23637]]
                    }
                }, {
                    type: "Feature",
                    id: "5325",
                    properties: {name: "红河哈尼族彝族自治州", cp: [103.0408, 23.6041], childNum: 13},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@°°nÞôV@°@¦WnÛ¤Vbmnğb@ê`VxUX@xÆÞUnnWÞĸĢÈ@Çè@zÛÜWÅêl²KnV¯ĖĊx@bk@@°JÆ£Èblnnm°nlUkVUUwVmKnnVÞxVLX¥laX@@xl@VzÈVmk@b°ÈĸmV¦`WXbUbbX¼°x@aVVkn@lþnXUlVxŤÅyIUkaIŎĊ@lXx@bz@ô¥_V@ln@ôy@al_l`nmÈ»@kmXwWKU¯»aÅ@wmUÝKUaUUwW@w²»@kÆV£mm£VKkÑV@@»nw¥@kÆnllIVlnLVakalknJWmnaUaVÑVVÞn¥m@¯Uÿl@VçaXaV¯UyVLVk@nJlXLlkxlbla²Òl@nVJVkxKlkUaVķÝÑU@Åm¯@±Uó°ğńķĠmUÑ@Ç¯¯Å¼@nml@°¯¯`@w£@¯Çk@»nmċ¯U»I¯LÇĶÛn@bó°Uwm¯UmÇ¯aI@ykIVU¯bIğ¼¼ó¤mwkLÝÞ"],
                        encodeOffsets: [[104243, 23429]]
                    }
                }, {
                    type: "Feature",
                    id: "5326",
                    properties: {name: "文山壮族苗族自治州", cp: [104.8865, 23.5712], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@wô@²¯maUmôUÆx@XbÞInlVUVwJVaUK°¥xmÞXnlKlnna°@ĊČÆwUmnkl@°£nyn@VV@Vak@@kÞÝbmx°Vnw°klÞInĖÞVlKl@Xa°KlVU@JnxU@ÈĢbUKlm@ak_wanWUk°l»k@Wk@lwU_@UalóU¥ÇnkJW@mVXx±bK@nV±a@Åa£ÝK²WknamKknÇk¯aVV¯ĀUÒ¥I@mm¯¯xÅW@@`k@ó»UU¯lm£ÅWlĵw@mmwÅmWU@y±UxmwU¯U¥Ý¥¯£m@kÇVUV°VbklLwUlUImk@±ÑkbkalwkWKkmI@UlUKVzU°WbbUè@kVĀ°@nm¦ÝUUUÒVbmbXnmIkllbUbmKUkkJmkÅ@l¦mx@¼U@lÒULn¤nU¤Å@l±¼@xXxVVVbÞLVn@xÆb°¼V"],
                        encodeOffsets: [[106504, 25037]]
                    }
                }, {
                    type: "Feature",
                    id: "5303",
                    properties: {name: "曲靖市", cp: [103.9417, 25.7025], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@È¦lKÞĕUV¯Um¯ÇVUnVVUĉnĊÇƾLn°°ÈJÆw@lbÞa¦VXJ°¯W¯aÞJVkUa@lKnÅmWUk¯a¯»@m±@ÑkkbWWX_WÓU»_lkÑm@U»m@l@IWċn¯l@VanVUVUVwVxKÈVmUē@n@VÝÆLwVVwnVlmkUVÑÇ°ka@kÿÝaÞUl£ċĕX±±ĉa@UnVnalónk@wlUVmkÝJaW@ÅwóVVnnb±°@óxXLWxn@lÇ¼nmk_k`@bózm@kU@`¦ó@nW@ÜÅXWw@yb¦@ÒlnUb@xlÜk@²Ç@U¯bmy@kV@bb¦U`lLVx@bLl¼Þ¤@°VVÞU@WÞUbJ@nn@lnnmxUUUbK@ÇwklkUVWakn@lbU@@ULVxkKUn°¯Ò@¼km¦m@klȰ@lUl¦@Vl°wnnþĊUÆbUxbVĖU°annaVal@@b"],
                        encodeOffsets: [[106099, 27653]]
                    }
                }, {
                    type: "Feature",
                    id: "5323",
                    properties: {name: "楚雄彝族自治州", cp: [101.6016, 25.3619], childNum: 10},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@mÒXU`Wn@Xl±¦Uxnbl°knmKUxxVôUx°¼ôÒÈ°JlnÞKĠW°¦Vx²JVw_°¥@UV@@wnymknK¯I@²b°£V¥wUV¤nLkÆJÈwôô°l»Č¯ġVUU@@°ÝXl@U»°Å@U¯@w±¯VmUUlm@mÑnIVyUwmak£Vwm±@Çw@n@UxkwlÇnLmkÅ@±kka@kóJV¯Ç»U£lw¯Xalbl¥¯UX@aUaÈL@ÇVIVkaU¯mmakLWkUJ¯Umxn@kUx¯xmWÅīÝkkbŤbkxWmXwWk¯wKkLÅ¤ċń@¤óĬU²@@lk¯VmU¯¼@xV@k°l°kbU°nmVnU@°UVèÞÆbUÒÞnU¦V¼lô@Vl"],
                        encodeOffsets: [[103433, 26196]]
                    }
                }, {
                    type: "Feature",
                    id: "5329",
                    properties: {name: "大理白族自治州", cp: [99.9536, 25.6805], childNum: 12},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lbKVIUa@²m@bxôÒÜxXLmbnl@K°¼kUôxôlV¦nJUÆnm@xÆwbXÆôôLUVwôK@wlmaVw@WknmIUmlnJla@_@kÝmKUaÑm¯Xw°aUaVl»²JVbÆJkôĶĀ²VVkmbVwUówVwnLlmk¯maVw²¥Wk@XmV_WnÑUk@kó»UV¥ÝmVÑÅaÝUçV@¯VUmn¯mVlak¯l¯U@@wğWé¯@¯xÝw¯¯Jċa¯U¥mLU¤bÞȤbÇLWUwmIUVW¼kb`UVb¯L±ĊÛkÿÝKkwKţêUĉþÈV¯ÞVbU°KVk²ÝmImV@kmUkVxm¯KXÈķJU¦V°ULWxL@môb@bkx±LnVUVLnkÜWnwlLÅƒmW@kkJU_VWĊÞ"],
                        encodeOffsets: [[101408, 26770]]
                    }
                }, {
                    type: "Feature",
                    id: "5309",
                    properties: {name: "临沧市", cp: [99.613, 24.0546], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@xĢl`²X°Vx@x°Þ°KXağUÑWbnIl`X²°bxl°V@xVxk¦mbl@xXVÆzX¤Æk°kx@lźêlaX»VUnJVxXÈKaÝȣaV£nKV¦°Čb°I°n»ÆÑV¯nWn@ÿXÅWWn¹ġōn»ÛUaUVUww@w°ó¥@z±@ř¯@kUwlk£±aĵ¯Uĵ¦±±@bó±VÝ@ó¤w¯I@mÅóm±X¯IólK@°UllbzkKlln@@ÔºUmVk²ôÒxŎUVóLbmÈnmbnlax@z@Æ¦k"],
                        encodeOffsets: [[101251, 24734]]
                    }
                }, {
                    type: "Feature",
                    id: "5334",
                    properties: {name: "迪庆藏族自治州", cp: [99.4592, 27.9327], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WXw@akk@yk°īX¥Uóķ¯w@n»UaVaUÛ¯mV¼kÞċô@n¯xÛÒmV¯Ô@x@kwmÅa@UaÝ¯VÅyVa@ÿn»ÝVmankmmÞÅô@n£±ğzÇmU¦VmnÜmbn@°nV@xmzÅ@mºV¦k°ln¤¼õôn@xkÆIUxU@Ť¦VmVkmkXW¤XzVx@Æx¼Þ¯b@lVĸÞVm¼Xm¦VÞ@Æ¹Vón¥ÆKnKX¯x@èĊÈ±łXaÆxnlV@UÛlȻkğV¥m²ǉmÅÞĕƒƛm°ÆmX¤mznÆV¦ÞVVb°bnÞWbn°l@VÈ@VĵĊ±@óInxÆw¥@£ÞW¯ĸ£UUKk±akkkbmWmÈķaÆÇUÈÆW@wmknmU¯"],
                        encodeOffsets: [[102702, 28401]]
                    }
                }, {
                    type: "Feature",
                    id: "5306",
                    properties: {name: "昭通市", cp: [104.0955, 27.6031], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@mnK@wmUÅ¥móXǓŏmX@VmL@xţnk@mlUŻÒğŋ@L@mmLkm@bXÅW¼ka¯lÇŹ¯aÇ»ÝÝ_@m@@a@UklwUm@ak@bUmbmbV¯ĕUaVwÅaĉVmým¯xUk@k¥VUX¤VÈm`@ńÇÜ@ĀknĔkƞÆĠÞUVôƆÞI@UxÆ¦nl@ĊĊnxUÒ°¦Vb¯WUnWIml@xnUbô¤¼ÈxlI»KV@ÈÔJkUĖ±ÆVb@nVÜVUVLwĠlknĠ@nx°¥Æ²mUw@mmÅUl¯UÑÑUmLllIl±@VkwW@w°@U»kUóI°»ĢÑL`nUĠ²lmbôV@nJUxÆ¦X¦l@ŎUV@lVKVÅV£UaÞUnW@¯VU@ó"],
                        encodeOffsets: [[107787, 28244]]
                    }
                }, {
                    type: "Feature",
                    id: "5301",
                    properties: {name: "昆明市", cp: [102.9199, 25.4663], childNum: 11},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@n@VkVUn²°@x°V@¯ÆV¼k@WÞ¯@@VVUĢċ°k¼VĊx¤Ōx°mVkÑÈL°x°X°VmĊLVxUĖ°bX¦VW@kȯlkn@¥ln@»°Ñ¯VmlLUwVK@V@ka@lmXbUlVlkÈx@LVaVVwnmm@km@mIVaÝ@XVUÝ¯U@Ý£k»K@aUwkKV_¥a@alU@nz°aVÈ@@±lÛk@wVakm@Ñ¥az@XxÆW@ÛX@m@y@aWw@kōĉJlbVJzţÆUwVkmWkým@UlU@b¯wVºUVUêĠXUaUbVĊUWXUmkKWnUUUVVVÝ@kk±¯Lk±WkXlVkl@wXbmLVUIVmk@Ubma@kkaVKUkmlXLWnJ¯ÒĊ°@zkºlLUŤn@@nô@lÆnmKkÈlxVw@@mÈx@n²Uxl¤nbVxUzmJÒn"],
                        encodeOffsets: [[104828, 25999]]
                    }
                }, {
                    type: "Feature",
                    id: "5307",
                    properties: {name: "丽江市", cp: [100.448, 26.955], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l@@w°ÓUnÜÑ°w@mČóÝlU»n°VÜUbVbm¼@°xôĸVW¦¯Ĭl@zll@bWxXaX@ÆĠÆaXwl@XaÆ¦n¼Jn@mnKW¯È»V¯°akVanXVwl@VyUĕVUbÈīlaUk°k¯l²VUkƛô@I@mVwĊaVakaÆbUVLaXIWKUwaWÑÅKUaVk°@Uw¯¥XğÝLkm¯IÇóÑ¯»anUl±UĵÿlóÅIaU±Ik¼UVb¯bWxn°ÒVbnLlÞ@@`kbmIkVnJmnXl@Uxbkn@xóLUxVKóóÅWaÅxw@nÅmVôXLlVU¤b¦m¼@ĀbUzUÆ°ÞVb@Æbnx"],
                        encodeOffsets: [[101937, 28227]]
                    }
                }, {
                    type: "Feature",
                    id: "5328",
                    properties: {name: "西双版纳傣族自治州", cp: [100.8984, 21.8628], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l²°nÒlxÞ@nWlLĸnbV¤V¦kbVV¦nax°Vôa@b@lôXlWUVXČKlmU@bWXXÜ°LÈa°LnU°ÞnÑġ°lnba¯¯KWó@kmK@UĉV@k°VV¹a@y_ċl_nÓlL@anI@óWl£VUlkĕlKVwU@kVam¯ÅL@bÝk@VnUbÇbÝwÅ@ċ¥¯lk¼ÅÒ°b@¦nlUn@ÇVmÆbWôU@ÝÅōm¯aUmkWWw@±n¯UèaL¯mLkwl@°mnÈÒ¯ów@VxĀU¤°Į°Xl"],
                        encodeOffsets: [[102376, 22579]]
                    }
                }, {
                    type: "Feature",
                    id: "5305",
                    properties: {name: "保山市", cp: [99.0637, 24.9884], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@X°Il@¦È¼m¼ÞaÞÅlÈxV¼lVôÈÆlLÞ£ÈºlkUUw¯UĕVwĊ@n¦mlnVĸIWÇ°LnUwlVn@lnUnJÞl±U¯LVUa°ÝUÇĊýVŤéLlxÞLĀÜl²ĉ°KUaV_Źé@klw¯lÅW£ÅyUW@wknal¥Uw@wUk¯w¯aW±k_mJaXVÒĠWb¯L¯Ý@wwU¯±Wk_ġwwōKmb@¤bk°lĖôUJVnÅlťU¯°VbnbWxXmÞWUĀLyWzÛKmbUxVKknÝkVĀċ¤Ux@¯m@¦"],
                        encodeOffsets: [[100440, 25943]]
                    }
                }, {
                    type: "Feature",
                    id: "5304",
                    properties: {name: "玉溪市", cp: [101.9312, 23.8898], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lL°xXlWxXnlwaţlaÞlÆĬnX°wVwl@mnw°VVIXllKbnnV°lbUUJ@ÈÇKVb@bW°Vk¦kaWb°kxV¤È¼U°ôI@llbl²@@ó@mm@VţkKl¹@yĉ¯°ÑIXmWKnklVULlb@lnbVal@UnVJUnKWax@lkkUlW²XlK°l²@lÞUUUVVVXmlLVnXWVUĉVaVbWğVéUVU¹W»aVaaWX_U¥nÇķ¯@alUnÇUyk@@wW@kbW¦UKÝwUmmLUnVxUVVlk¯mmnmkÇaÅ¤¯I@l@@aĉw°ĕmUL±kÆéXÜÛ@yÈç@ÇġÝķXmmÝVÅlmnkbmWkb@nl@nm¯VxkJmUJml¯°makVVnV¦WWmnl@xmnlI¤nxUVUmX@b@zl@¦Ýþ"],
                        encodeOffsets: [[103703, 24874]]
                    }
                }, {
                    type: "Feature",
                    id: "5333",
                    properties: {name: "怒江傈僳族自治州", cp: [99.1516, 26.5594], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@WyX£lWlnnUU¥@ţVVwJlÅ@wmöó»£kml¯U¥n¹Æ@ny@wmU@¯mnamÛnUV¥ÈnĠy²m¤@ÆónÝnmlnbÞU¥aV£kUKWómIU¥ókwVól»¯Lk@mnaWKÛwóÑw@a±n@VbUJLkaÝXĉUV`lI@lnXÆƑkKmxÛXmlUKVmU²Klw@aaó@nKXwVKU¯V¥mUnkm¥ĉ@UxVĖ°VxVklmÞkKWĀkVWnl°Lnm@°UxlV@nk¦JVÈ°VÒ@nX°@ÆlUômlnô²nxmłnVV¯x@Èm°XblVUl°@xkXU¤WXXWXÆmkÅJmÞw±bxUīkKmÅVUĖÝèVkx@lXlnk¤LkĖk¦xUL°¯Ė@LnK@b°xVI¥Ua°Ñ@»nm@¹KŎÞÈWln²n"],
                        encodeOffsets: [[101071, 28891]]
                    }
                }, {
                    type: "Feature",
                    id: "5331",
                    properties: {name: "德宏傣族景颇族自治州", cp: [98.1299, 24.5874], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@¥n@°@VwČ£ÿUlÞlmULVwnaÜLXyzKVÿXÝnWXwmaUa°¯VŦÆkUmVIókĕl¯a@£nama@¯m¯ó@óyţbġkÅm±ÛammVkLwU`Wk@VkUmÅlUUKmbkkUVUw¦ó°¼bn°ô¦lºz@x¯@U°nU¤ţU°VƆ@ÈmlnzÞl°¦ÆaxUxLkxWƒn@²ŰW@°ÈXl°Llx"],
                        encodeOffsets: [[100440, 25943]]
                    }
                }],
                UTF8Encoding: !0
            }
        }),n("echarts/util/mapData/geoJson/zhe_jiang_geo", [], function () {
            return {
                type: "FeatureCollection", features: [{
                    type: "Feature",
                    id: "3311",
                    properties: {name: "丽水市", cp: [119.5642, 28.1854], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@VbVl@XnUXKV@¦nxlUXVnKVmnLUV@bn¤lLXK²`nnlJXIVJIVnn°KnnVll@VLXWV@UkVaVKzV@VVaUK@U»VUl@@WnUU@wVLn@Vwl@XW°LVbn@VU@Xl`@XnKVbkl@XVJlUnlVxlL@lnXl@VUnV°°@aUVLXblWVXn@VVUV@L¤VLVUVbnalLUUVX_laVaWVzXKV@@a@KUmImmXama@kU@yVIUKaVa@kXK@aWU@VIUmW@kkVmU@VwUa@K@k@U`@kUKVk@UV@VaUm²Vy@klUUWUkVmUa@_KVaXaXmU@mUlWkaUX@mmkL@wJnVVÅbWKXa@@I@aJUUÇ@VULW@akLmb@K@aXXw@mVmUVkUy@£@aU@@VkUWm@kUKXUWU_mW@wkkmJUUkLWWUXW@IkJ@k@mW_kÓ_UlLm@I@aUa¯m@ka¯LUJ@mVVxUba@LUKkXbm@Uak@@a@Um`IUbUJ@nUVW@@LnVV@lUbVlUX@`@blXklWUmXlm¦U@@V¯bml@@nUb@llnn@VbX@lV@UVULmU@JVnbVbkbVWxU@@nUVk@"],
                        encodeOffsets: [[121546, 28992]]
                    }
                }, {
                    type: "Feature",
                    id: "3301",
                    properties: {name: "杭州市", cp: [119.5313, 29.8773], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@X@l°KXXlWb@²`bIX`l@@bWl@n@VnLUV@V@°¦@l@XVlU@@xVbUb@Vkb@@XVJVzJ@LÞ@VmLUxUJ@LUVxbxXUl@VaÈwbaÞa@Vl@XUVx@V@VLlbnVal@lbVnnLnKnL@VlbVJXalIb@KUU@mVInJUVl@xUVLnU@UÞaV@lkV@UanKL@UlKVUnbÆmn@@nUlVnVJl@@UXUL@WVIVJVxVLXV@IÜKnbn@V¥V@@I@y°b@UUwnk°ÆƨVlUçXm£aÇIkV@WV@@aWIUWUIkb@WW@UnK@UU@kaWVkVIVVnU@UWVUV@VmVkKkWIkVWaULU`UImJUImmU@wmwUVIUWVkUamaU@mVkb@KVU@aVU@anKULVJU@kÛUJUVkkVakU@aVwkW@UWkXmWaULUaUK@XJUUmVU@UVUkJ@ImwmKU@k@lUW@@akKmkamIkWl_UwVm@UkaVUUa@UamakbWlkL@aUalU@mkL@U@UlmK@XkKm@Ýakb@xnXb`nUUU@U@wU@@mKkkV¯U@lULUbVbUb@Va@LºÝb@bLmKx@VUL@bk@mxULWl"],
                        encodeOffsets: [[121185, 30184]]
                    }
                }, {
                    type: "Feature",
                    id: "3303",
                    properties: {name: "温州市", cp: [120.498, 27.8119], childNum: 9},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@ll@xnXV`VXWVL@lXnlV@UV@@b@¤VzUlnVU@nWxW@b@LnalK@bXVKUÈ@VVI@b@J@WbXLÆaUUmI@xlKnn@VWlbkXV@nVWnWbUbL@`VbUnVlVXkV@lUz±VnUbU@@VUlVL@l_@V@l@LVbV@XLV`VÈlxn@lU@aaVVk@XJ@nl@@LU`°LVbL°a@aUVy@anI@aanV@²wÜJX@VVV°kna@WVkaWwU@m@kaUĕÝÝŤnÈaaóI»@±XWkUķ@kV±kwUkWwUÝ»ÛkɳlImaUaWóXÿǬkUnWVmmkKţnŏÞğlUlUx@XWbV@JkX°mb@VULVxUVk@@LWWk@WIkUkJmUkVmI@y@UakLmU@mUUUkaVk@mK@UlUU@UmKmbUUUJ@n@KVLUL@VkJWXX`mnULWlkL@JVLVb@°kxkU@LVV@VLV`UL@VUX"],
                        encodeOffsets: [[122502, 28334]]
                    }
                }, {
                    type: "Feature",
                    id: "3302",
                    properties: {name: "宁波市", cp: [121.5967, 29.6466], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@Ċ¦ĸĀ°nXÞVKkƨƑźÿ°»n@wô¥ÜbU°ÆXÞWóçĉÝ±IUÈ¥@U°wÆ»²mm_@aXVKÞVlk@akk̅@£X»VwÆXWa¯aȗbKƽŰĊxLók@@¯nKUL@xkLÑkWULUUmJUXVU@mUX¯@V`mbXbV@@nn¤WXx@kJ@nVVUVl²UbÝVUVk@Wx@V@VXzmlaL@VlLU`XUVVVUnl@VbnJlnUVVnlUKkbmnnVxlJnxmbU@UL@KUVX@xmb@lk@mnVVUè"],
                        encodeOffsets: [[123784, 30977]]
                    }
                }, {
                    type: "Feature",
                    id: "3309",
                    properties: {name: "舟山市", cp: [122.2559, 30.2234], childNum: 3},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@l΢ƒʠþÆVĢLĊǬXĊÜXôVÑÆwlƏÈóVĭVǓ@ĉwɛkmK@ĉXīWaĉUĵÝm¯ĉwĉ±±nÅ¼¯x@VÇ¦V²JĊÞôèÝXÅW¯VÛaó¦@xm¯¼ŹĀ"],
                        encodeOffsets: [[124437, 30983]]
                    }
                }, {
                    type: "Feature",
                    id: "3310",
                    properties: {name: "台州市", cp: [121.1353, 28.6688], childNum: 7},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@lVIVWVz@bXJl@Xal@°nLll@nVxnVK@UJVb¦°k`UIWJXnÆ@bUJXl@lbWn@UzVV@bVVmVnnJVXnabKUKnUVVUnVLlKVLXaJm£@mU@WanaU_°@VWnV@UVWnIVVVKlXÒlK@wVKL°m@l@ôKwĉƾůUl£@»UVkm@ƅUaÛIŏmUk@mw@a£Wk@ţIm±@ankôUlaUUw¯ōabÇbţmÞÞVĖbl@@nVXxbUl@Xmb¯lUUUW@ÛI±xU@mb@bmJ@bUzV@b¯bKUa¯KV_@Kk@@mWI@lUUb@bkVm@kwUÇU_WKU@Ux@VUnllX@VnJ@UXV@bWL@lUbbVLUJ@zV@lnbWbnnnJV@L"],
                        encodeOffsets: [[123312, 29526]]
                    }
                }, {
                    type: "Feature",
                    id: "3307",
                    properties: {name: "金华市", cp: [120.0037, 29.1028], childNum: 8},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@nbVb@VbUVlb@VUnVxk`lXnJlbnlL@bX@V@klV@nLnx@JlIVU@VUVnVVI@WVLVbVKXbWnXl@VlXUxb@lVUbllVUIÜVnalKX@@bV@@aUUlUwUw@naWWUVaUUaVbLlxXJVk°UlkU¥@ka@LVlXLVlVWznVn@lxJl_@WX_@mVaa@alU@kVVnaKVLlKb@UUaVabnUWmXU@k@yVI@aÅWmXIVJl_¯¥UaVI@LmUUw@mkkmK¯k@Wbk@WI@aUyUXJkU@bU@WLUyXUbkbW`UVVkKmbUaVUUK£@KVUUUm@UWkXWaUKV@b¯¯mUV@UkmW@kkKwUmkkVUI@WlkUamL@Wk_W@UVm@Ua¯KWXk@Uxm@UK@xVmV@Xk@UVV¼@VLUbUU@yULUbVlU@@XlVUVVbU@lXXVW@XUVl@@VUVÈn@VVU@lVa@UmL@`X@`WL@VUX@lUL@xlx"],
                        encodeOffsets: [[122119, 29948]]
                    }
                }, {
                    type: "Feature",
                    id: "3308",
                    properties: {name: "衢州市", cp: [118.6853, 28.8666], childNum: 5},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@XkVKnwl@@aVK@UwnLK@aÞa¹@Kb@UVaUaVaVK@k°VUllnL@V@xV@V@VVm_Wam@wlaÞbn@lL@WnLk@V@VlK@nkVVb@blKXklakw@wVK@kVW@UXK@_W@_nKV@Ub@kVUUm@ÇVU@Uk@VU@WUXWW@kVUaVUkU@WWXUKk@Ukmm¯LmmUJUIWJkImm_±WLkKm£@aVUmKUnLmWUkVmw@¥ULVWm@WUka@UmmLmm@@bUX@@WUIm@UVUK@UVUUUVVJmb@bXnmV¼nnn¦mJUVLV@VW@UzUlVnUbl`UnVl@XU@kl@bmÈUxVk@@J@¼W@ÅaVVnzmV@WJk@kWJ@lXbWbXxmVnlLXb@°lKVXnWbWVXmbV@XlbI@Kn@@x@VLlm"],
                        encodeOffsets: [[121185, 30184]]
                    }
                }, {
                    type: "Feature",
                    id: "3306",
                    properties: {name: "绍兴市", cp: [120.564, 29.7565], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@x@VnnVJnIVJV_VKXblUXJllLUUnU@UVVX@mVUUUJlXUlbV@@VLVmX@@XlaVJVXXJ@b@XU@lUJÈb¤ŌJçVUUnml@@kna@wWVU@LVKV@namwkIUwmnmlaVLkUmVUkmmIUak@VmUUVUWV_kK@UKbnkWyU@@UXwl@VUÞUVak±VUUU@mlI@wXWIWbUKkLUKVmUUmVVLLambUWmIUmnUU@aUUVym@Xkak@W@z@lWVXnmVaUbVb@VakLUKLmbUU@lkV@bbUb@nW`@Xk`Ikwm@mUXyUUkWKUk@Kb@lV¦klV¯UlWIkwKUabVVUbVXXmb@VxxkVVV@bU@@aW@kLmb@lVUIVKmL@bUV@bUV@LalnUV@nbVbUlVXJVUnx"],
                        encodeOffsets: [[122997, 30561]]
                    }
                }, {
                    type: "Feature",
                    id: "3304",
                    properties: {name: "嘉兴市", cp: [120.9155, 30.6354], childNum: 6},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@@blIX@@VÜVUnn@lklKnI°Þl`²LVKVbnbVaVLUVn@W¦@VkVVb@VI`@blLnLaX@VVb@U@XlVa@@kVaUKV»U_lWXU@albk@VllnLVKn@@UVIUw@y°IVVXU@VV@lwm@wVkƾaJLkΡƧƒlLÝUmW¯ķÿĉ¥IŋWnèkVƧU¯ÅmlVx@V¯az@@JU@U¦m@@nVmn@VLV"],
                        encodeOffsets: [[123233, 31382]]
                    }
                }, {
                    type: "Feature",
                    id: "3305",
                    properties: {name: "湖州市", cp: [119.8608, 30.7782], childNum: 4},
                    geometry: {
                        type: "Polygon",
                        coordinates: ["@@kLlkm@VmÛU@UW@kJ@aUK@UnmmU@maÛL@JWUUKUwUIUJ@XKWV@Vk@UIUmVk@mm@ÅnmaUVkL@VKmLVbU@klU@ÝbV@mVUKV@wUkVmIUJ@nVV@LakJWbUIka@UmKmLKmmUUVk@@nmLX`WXUV@@nUlkmlU@UbxVVIlVnn@@nUÒ@°n@@xmb@VbnV@@b@`@L@L@x@blVklVbnnV@aXb°VlU@Wb°ULXWVUVVwÈwÜ»ĸaĠnUVw²X@V@lVU@wlaUUVm@knUV"],
                        encodeOffsets: [[123379, 31500]]
                    }
                }], UTF8Encoding: !0
            }
        }),n("echarts/chart/gauge", ["require", "./base", "../util/shape/GaugePointer", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Rectangle", "zrender/shape/Circle", "zrender/shape/Sector", "../config", "../util/ecData", "../util/accMath", "zrender/tool/util", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("../util/shape/GaugePointer"), i = e("zrender/shape/Text"), o = e("zrender/shape/Line"), r = e("zrender/shape/Rectangle"), s = e("zrender/shape/Circle"), l = e("zrender/shape/Sector"), h = e("../config");
            h.gauge = {
                zlevel: 0,
                z: 2,
                center: ["50%", "50%"],
                clickable: !0,
                legendHoverLink: !0,
                radius: "75%",
                startAngle: 225,
                endAngle: -45,
                min: 0,
                max: 100,
                splitNumber: 10,
                axisLine: {show: !0, lineStyle: {color: [[.2, "#228b22"], [.8, "#48b"], [1, "#ff4500"]], width: 30}},
                axisTick: {show: !0, splitNumber: 5, length: 8, lineStyle: {color: "#eee", width: 1, type: "solid"}},
                axisLabel: {show: !0, textStyle: {color: "auto"}},
                splitLine: {show: !0, length: 30, lineStyle: {color: "#eee", width: 2, type: "solid"}},
                pointer: {show: !0, length: "80%", width: 8, color: "auto"},
                title: {show: !0, offsetCenter: [0, "-40%"], textStyle: {color: "#333", fontSize: 15}},
                detail: {
                    show: !0,
                    backgroundColor: "rgba(0,0,0,0)",
                    borderWidth: 0,
                    borderColor: "#ccc",
                    width: 100,
                    height: 40,
                    offsetCenter: [0, "40%"],
                    textStyle: {color: "auto", fontSize: 30}
                }
            };
            var d = e("../util/ecData"), c = e("../util/accMath"), p = e("zrender/tool/util");
            return t.prototype = {
                type: h.CHART_TYPE_GAUGE, _buildShape: function () {
                    var e = this.series;
                    this._paramsMap = {}, this.selectedMap = {};
                    for (var t = 0, n = e.length; n > t; t++)e[t].type === h.CHART_TYPE_GAUGE && (this.selectedMap[e[t].name] = !0, e[t] = this.reformOption(e[t]), this.legendHoverLink = e[t].legendHoverLink || this.legendHoverLink, this._buildSingleGauge(t), this.buildMark(t));
                    this.addShapeList()
                }, _buildSingleGauge: function (e) {
                    var t = this.series[e];
                    this._paramsMap[e] = {
                        center: this.parseCenter(this.zr, t.center),
                        radius: this.parseRadius(this.zr, t.radius),
                        startAngle: t.startAngle.toFixed(2) - 0,
                        endAngle: t.endAngle.toFixed(2) - 0
                    }, this._paramsMap[e].totalAngle = this._paramsMap[e].startAngle - this._paramsMap[e].endAngle, this._colorMap(e), this._buildAxisLine(e), this._buildSplitLine(e), this._buildAxisTick(e), this._buildAxisLabel(e), this._buildPointer(e), this._buildTitle(e), this._buildDetail(e)
                }, _buildAxisLine: function (e) {
                    var t = this.series[e];
                    if (t.axisLine.show)for (var n, a, i = t.min, o = t.max - i, r = this._paramsMap[e], s = r.center, l = r.startAngle, h = r.totalAngle, c = r.colorArray, p = t.axisLine.lineStyle, m = this.parsePercent(p.width, r.radius[1]), u = r.radius[1], V = u - m, U = l, f = 0, _ = c.length; _ > f; f++)a = l - h * (c[f][0] - i) / o, n = this._getSector(s, V, u, a, U, c[f][1], p, t.zlevel, t.z), U = a, n._animationAdd = "r", d.set(n, "seriesIndex", e), d.set(n, "dataIndex", f), this.shapeList.push(n)
                }, _buildSplitLine: function (e) {
                    var t = this.series[e];
                    if (t.splitLine.show)for (var n, a, i, r = this._paramsMap[e], s = t.splitNumber, l = t.min, h = t.max - l, d = t.splitLine, c = this.parsePercent(d.length, r.radius[1]), p = d.lineStyle, m = p.color, u = r.center, V = r.startAngle * Math.PI / 180, U = r.totalAngle * Math.PI / 180, f = r.radius[1], _ = f - c, g = 0; s >= g; g++)n = V - U / s * g, a = Math.sin(n), i = Math.cos(n), this.shapeList.push(new o({
                        zlevel: t.zlevel,
                        z: t.z + 1,
                        hoverable: !1,
                        style: {
                            xStart: u[0] + i * f,
                            yStart: u[1] - a * f,
                            xEnd: u[0] + i * _,
                            yEnd: u[1] - a * _,
                            strokeColor: "auto" === m ? this._getColor(e, l + h / s * g) : m,
                            lineType: p.type,
                            lineWidth: p.width,
                            shadowColor: p.shadowColor,
                            shadowBlur: p.shadowBlur,
                            shadowOffsetX: p.shadowOffsetX,
                            shadowOffsetY: p.shadowOffsetY
                        }
                    }))
                }, _buildAxisTick: function (e) {
                    var t = this.series[e];
                    if (t.axisTick.show)for (var n, a, i, r = this._paramsMap[e], s = t.splitNumber, l = t.min, h = t.max - l, d = t.axisTick, c = d.splitNumber, p = this.parsePercent(d.length, r.radius[1]), m = d.lineStyle, u = m.color, V = r.center, U = r.startAngle * Math.PI / 180, f = r.totalAngle * Math.PI / 180, _ = r.radius[1], g = _ - p, y = 0, b = s * c; b >= y; y++)y % c !== 0 && (n = U - f / b * y, a = Math.sin(n), i = Math.cos(n), this.shapeList.push(new o({
                        zlevel: t.zlevel,
                        z: t.z + 1,
                        hoverable: !1,
                        style: {
                            xStart: V[0] + i * _,
                            yStart: V[1] - a * _,
                            xEnd: V[0] + i * g,
                            yEnd: V[1] - a * g,
                            strokeColor: "auto" === u ? this._getColor(e, l + h / b * y) : u,
                            lineType: m.type,
                            lineWidth: m.width,
                            shadowColor: m.shadowColor,
                            shadowBlur: m.shadowBlur,
                            shadowOffsetX: m.shadowOffsetX,
                            shadowOffsetY: m.shadowOffsetY
                        }
                    })))
                }, _buildAxisLabel: function (e) {
                    var t = this.series[e];
                    if (t.axisLabel.show)for (var n, a, o, r, s = t.splitNumber, l = t.min, h = t.max - l, d = t.axisLabel.textStyle, p = this.getFont(d), m = d.color, u = this._paramsMap[e], V = u.center, U = u.startAngle, f = u.totalAngle, _ = u.radius[1] - this.parsePercent(t.splitLine.length, u.radius[1]) - 5, g = 0; s >= g; g++)r = c.accAdd(l, c.accMul(c.accDiv(h, s), g)), n = U - f / s * g, a = Math.sin(n * Math.PI / 180), o = Math.cos(n * Math.PI / 180), n = (n + 360) % 360, this.shapeList.push(new i({
                        zlevel: t.zlevel,
                        z: t.z + 1,
                        hoverable: !1,
                        style: {
                            x: V[0] + o * _,
                            y: V[1] - a * _,
                            color: "auto" === m ? this._getColor(e, r) : m,
                            text: this._getLabelText(t.axisLabel.formatter, r),
                            textAlign: n >= 110 && 250 >= n ? "left" : 70 >= n || n >= 290 ? "right" : "center",
                            textBaseline: n >= 10 && 170 >= n ? "top" : n >= 190 && 350 >= n ? "bottom" : "middle",
                            textFont: p,
                            shadowColor: d.shadowColor,
                            shadowBlur: d.shadowBlur,
                            shadowOffsetX: d.shadowOffsetX,
                            shadowOffsetY: d.shadowOffsetY
                        }
                    }))
                }, _buildPointer: function (e) {
                    var t = this.series[e];
                    if (t.pointer.show) {
                        var n = t.max - t.min, i = t.pointer, o = this._paramsMap[e], r = this.parsePercent(i.length, o.radius[1]), l = this.parsePercent(i.width, o.radius[1]), h = o.center, c = this._getValue(e);
                        c = c < t.max ? c : t.max;
                        var p = (o.startAngle - o.totalAngle / n * (c - t.min)) * Math.PI / 180, m = "auto" === i.color ? this._getColor(e, c) : i.color, u = new a({
                            zlevel: t.zlevel,
                            z: t.z + 1,
                            clickable: this.query(t, "clickable"),
                            style: {
                                x: h[0],
                                y: h[1],
                                r: r,
                                startAngle: o.startAngle * Math.PI / 180,
                                angle: p,
                                color: m,
                                width: l,
                                shadowColor: i.shadowColor,
                                shadowBlur: i.shadowBlur,
                                shadowOffsetX: i.shadowOffsetX,
                                shadowOffsetY: i.shadowOffsetY
                            },
                            highlightStyle: {brushType: "fill", width: l > 2 ? 2 : l / 2, color: "#fff"}
                        });
                        d.pack(u, this.series[e], e, this.series[e].data[0], 0, this.series[e].data[0].name, c), this.shapeList.push(u), this.shapeList.push(new s({
                            zlevel: t.zlevel,
                            z: t.z + 2,
                            hoverable: !1,
                            style: {x: h[0], y: h[1], r: i.width / 2.5, color: "#fff"}
                        }))
                    }
                }, _buildTitle: function (e) {
                    var t = this.series[e];
                    if (t.title.show) {
                        var n = t.data[0], a = null != n.name ? n.name : "";
                        if ("" !== a) {
                            var o = t.title, r = o.offsetCenter, s = o.textStyle, l = s.color, h = this._paramsMap[e], d = h.center[0] + this.parsePercent(r[0], h.radius[1]), c = h.center[1] + this.parsePercent(r[1], h.radius[1]);
                            this.shapeList.push(new i({
                                zlevel: t.zlevel,
                                z: t.z + (Math.abs(d - h.center[0]) + Math.abs(c - h.center[1]) < 2 * s.fontSize ? 2 : 1),
                                hoverable: !1,
                                style: {
                                    x: d,
                                    y: c,
                                    color: "auto" === l ? this._getColor(e) : l,
                                    text: a,
                                    textAlign: "center",
                                    textFont: this.getFont(s),
                                    shadowColor: s.shadowColor,
                                    shadowBlur: s.shadowBlur,
                                    shadowOffsetX: s.shadowOffsetX,
                                    shadowOffsetY: s.shadowOffsetY
                                }
                            }))
                        }
                    }
                }, _buildDetail: function (e) {
                    var t = this.series[e];
                    if (t.detail.show) {
                        var n = t.detail, a = n.offsetCenter, i = n.backgroundColor, o = n.textStyle, s = o.color, l = this._paramsMap[e], h = this._getValue(e), d = l.center[0] - n.width / 2 + this.parsePercent(a[0], l.radius[1]), c = l.center[1] + this.parsePercent(a[1], l.radius[1]);
                        this.shapeList.push(new r({
                            zlevel: t.zlevel,
                            z: t.z + (Math.abs(d + n.width / 2 - l.center[0]) + Math.abs(c + n.height / 2 - l.center[1]) < o.fontSize ? 2 : 1),
                            hoverable: !1,
                            style: {
                                x: d,
                                y: c,
                                width: n.width,
                                height: n.height,
                                brushType: "both",
                                color: "auto" === i ? this._getColor(e, h) : i,
                                lineWidth: n.borderWidth,
                                strokeColor: n.borderColor,
                                shadowColor: n.shadowColor,
                                shadowBlur: n.shadowBlur,
                                shadowOffsetX: n.shadowOffsetX,
                                shadowOffsetY: n.shadowOffsetY,
                                text: this._getLabelText(n.formatter, h),
                                textFont: this.getFont(o),
                                textPosition: "inside",
                                textColor: "auto" === s ? this._getColor(e, h) : s
                            }
                        }))
                    }
                }, _getValue: function (e) {
                    return this.getDataFromOption(this.series[e].data[0])
                }, _colorMap: function (e) {
                    var t = this.series[e], n = t.min, a = t.max - n, i = t.axisLine.lineStyle.color;
                    i instanceof Array || (i = [[1, i]]);
                    for (var o = [], r = 0, s = i.length; s > r; r++)o.push([i[r][0] * a + n, i[r][1]]);
                    this._paramsMap[e].colorArray = o
                }, _getColor: function (e, t) {
                    null == t && (t = this._getValue(e));
                    for (var n = this._paramsMap[e].colorArray, a = 0, i = n.length; i > a; a++)if (n[a][0] >= t)return n[a][1];
                    return n[n.length - 1][1]
                }, _getSector: function (e, t, n, a, i, o, r, s, h) {
                    return new l({
                        zlevel: s,
                        z: h,
                        hoverable: !1,
                        style: {
                            x: e[0],
                            y: e[1],
                            r0: t,
                            r: n,
                            startAngle: a,
                            endAngle: i,
                            brushType: "fill",
                            color: o,
                            shadowColor: r.shadowColor,
                            shadowBlur: r.shadowBlur,
                            shadowOffsetX: r.shadowOffsetX,
                            shadowOffsetY: r.shadowOffsetY
                        }
                    })
                }, _getLabelText: function (e, t) {
                    if (e) {
                        if ("function" == typeof e)return e.call(this.myChart, t);
                        if ("string" == typeof e)return e.replace("{value}", t)
                    }
                    return t
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }
            }, p.inherits(t, n), e("../chart").define("gauge", t), t
        }),n("echarts/util/shape/GaugePointer", ["require", "zrender/shape/Base", "zrender/tool/util", "./normalIsCover"], function (e) {
            function t(e) {
                n.call(this, e)
            }

            var n = e("zrender/shape/Base"), a = e("zrender/tool/util");
            return t.prototype = {
                type: "gauge-pointer", buildPath: function (e, t) {
                    var n = t.r, a = t.width, i = t.angle, o = t.x - Math.cos(i) * a * (a >= n / 3 ? 1 : 2), r = t.y + Math.sin(i) * a * (a >= n / 3 ? 1 : 2);
                    i = t.angle - Math.PI / 2, e.moveTo(o, r), e.lineTo(t.x + Math.cos(i) * a, t.y - Math.sin(i) * a), e.lineTo(t.x + Math.cos(t.angle) * n, t.y - Math.sin(t.angle) * n), e.lineTo(t.x - Math.cos(i) * a, t.y + Math.sin(i) * a), e.lineTo(o, r)
                }, getRect: function (e) {
                    if (e.__rect)return e.__rect;
                    var t = 2 * e.width, n = e.x, a = e.y, i = n + Math.cos(e.angle) * e.r, o = a - Math.sin(e.angle) * e.r;
                    return e.__rect = {
                        x: Math.min(n, i) - t,
                        y: Math.min(a, o) - t,
                        width: Math.abs(n - i) + t,
                        height: Math.abs(a - o) + t
                    }, e.__rect
                }, isCover: e("./normalIsCover")
            }, a.inherits(t, n), t
        }),n("echarts/chart/funnel", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Polygon", "../config", "../util/ecData", "../util/number", "zrender/tool/util", "zrender/tool/color", "zrender/tool/area", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Line"), o = e("zrender/shape/Polygon"), r = e("../config");
            r.funnel = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                x: 80,
                y: 60,
                x2: 80,
                y2: 60,
                min: 0,
                max: 100,
                minSize: "0%",
                maxSize: "100%",
                sort: "descending",
                gap: 0,
                funnelAlign: "center",
                itemStyle: {
                    normal: {
                        borderColor: "#fff",
                        borderWidth: 1,
                        label: {show: !0, position: "outer"},
                        labelLine: {show: !0, length: 10, lineStyle: {width: 1, type: "solid"}}
                    },
                    emphasis: {borderColor: "rgba(0,0,0,0)", borderWidth: 1, label: {show: !0}, labelLine: {show: !0}}
                }
            };
            var s = e("../util/ecData"), l = e("../util/number"), h = e("zrender/tool/util"), d = e("zrender/tool/color"), c = e("zrender/tool/area");
            return t.prototype = {
                type: r.CHART_TYPE_FUNNEL, _buildShape: function () {
                    var e = this.series, t = this.component.legend;
                    this._paramsMap = {}, this._selected = {}, this.selectedMap = {};
                    for (var n, a = 0, i = e.length; i > a; a++)if (e[a].type === r.CHART_TYPE_FUNNEL) {
                        if (e[a] = this.reformOption(e[a]), this.legendHoverLink = e[a].legendHoverLink || this.legendHoverLink, n = e[a].name || "", this.selectedMap[n] = t ? t.isSelected(n) : !0, !this.selectedMap[n])continue;
                        this._buildSingleFunnel(a), this.buildMark(a)
                    }
                    this.addShapeList()
                }, _buildSingleFunnel: function (e) {
                    var t = this.component.legend, n = this.series[e], a = this._mapData(e), i = this._getLocation(e);
                    this._paramsMap[e] = {location: i, data: a};
                    for (var o, r = 0, s = [], h = 0, d = a.length; d > h; h++)o = a[h].name, this.selectedMap[o] = t ? t.isSelected(o) : !0, this.selectedMap[o] && !isNaN(a[h].value) && (s.push(a[h]), r++);
                    if (0 !== r) {
                        for (var c, p, m, u, V = this._buildFunnelCase(e), U = n.funnelAlign, f = n.gap, _ = r > 1 ? (i.height - (r - 1) * f) / r : i.height, g = i.y, y = "descending" === n.sort ? this._getItemWidth(e, s[0].value) : l.parsePercent(n.minSize, i.width), b = "descending" === n.sort ? 1 : 0, k = i.centerX, x = [], h = 0, d = s.length; d > h; h++)if (o = s[h].name, this.selectedMap[o] && !isNaN(s[h].value)) {
                            switch (c = d - 2 >= h ? this._getItemWidth(e, s[h + b].value) : "descending" === n.sort ? l.parsePercent(n.minSize, i.width) : l.parsePercent(n.maxSize, i.width), U) {
                                case"left":
                                    p = i.x;
                                    break;
                                case"right":
                                    p = i.x + i.width - y;
                                    break;
                                default:
                                    p = k - y / 2
                            }
                            m = this._buildItem(e, s[h]._index, t ? t.getColor(o) : this.zr.getColor(s[h]._index), p, g, y, c, _, U), g += _ + f, u = m.style.pointList, x.unshift([u[0][0] - 10, u[0][1]]), x.push([u[1][0] + 10, u[1][1]]), 0 === h && (0 === y ? (u = x.pop(), "center" == U && (x[0][0] += 10), "right" == U && (x[0][0] = u[0]), x[0][1] -= "center" == U ? 10 : 15, 1 == d && (u = m.style.pointList)) : (x[x.length - 1][1] -= 5, x[0][1] -= 5)), y = c
                        }
                        V && (x.unshift([u[3][0] - 10, u[3][1]]), x.push([u[2][0] + 10, u[2][1]]), 0 === y ? (u = x.pop(), "center" == U && (x[0][0] += 10), "right" == U && (x[0][0] = u[0]), x[0][1] += "center" == U ? 10 : 15) : (x[x.length - 1][1] += 5, x[0][1] += 5), V.style.pointList = x)
                    }
                }, _buildFunnelCase: function (e) {
                    var t = this.series[e];
                    if (this.deepQuery([t, this.option], "calculable")) {
                        var n = this._paramsMap[e].location, a = 10, i = {
                            hoverable: !1,
                            style: {
                                pointListd: [[n.x - a, n.y - a], [n.x + n.width + a, n.y - a], [n.x + n.width + a, n.y + n.height + a], [n.x - a, n.y + n.height + a]],
                                brushType: "stroke",
                                lineWidth: 1,
                                strokeColor: t.calculableHolderColor || this.ecTheme.calculableHolderColor || r.calculableHolderColor
                            }
                        };
                        return s.pack(i, t, e, void 0, -1), this.setCalculable(i), i = new o(i), this.shapeList.push(i), i
                    }
                }, _getLocation: function (e) {
                    var t = this.series[e], n = this.zr.getWidth(), a = this.zr.getHeight(), i = this.parsePercent(t.x, n), o = this.parsePercent(t.y, a), r = null == t.width ? n - i - this.parsePercent(t.x2, n) : this.parsePercent(t.width, n);
                    return {
                        x: i,
                        y: o,
                        width: r,
                        height: null == t.height ? a - o - this.parsePercent(t.y2, a) : this.parsePercent(t.height, a),
                        centerX: i + r / 2
                    }
                }, _mapData: function (e) {
                    function t(e, t) {
                        return "-" === e.value ? 1 : "-" === t.value ? -1 : t.value - e.value
                    }

                    function n(e, n) {
                        return -t(e, n)
                    }

                    for (var a = this.series[e], i = h.clone(a.data), o = 0, r = i.length; r > o; o++)i[o]._index = o;
                    return "none" != a.sort && i.sort("descending" === a.sort ? t : n), i
                }, _buildItem: function (e, t, n, a, i, o, r, l, h) {
                    var d = this.series, c = d[e], p = c.data[t], m = this.getPolygon(e, t, n, a, i, o, r, l, h);
                    s.pack(m, d[e], e, d[e].data[t], t, d[e].data[t].name), this.shapeList.push(m);
                    var u = this.getLabel(e, t, n, a, i, o, r, l, h);
                    s.pack(u, d[e], e, d[e].data[t], t, d[e].data[t].name), this.shapeList.push(u), this._needLabel(c, p, !1) || (u.invisible = !0);
                    var V = this.getLabelLine(e, t, n, a, i, o, r, l, h);
                    this.shapeList.push(V), this._needLabelLine(c, p, !1) || (V.invisible = !0);
                    var U = [], f = [];
                    return this._needLabelLine(c, p, !0) && (U.push(V.id), f.push(V.id)), this._needLabel(c, p, !0) && (U.push(u.id), f.push(m.id)), m.hoverConnect = U, u.hoverConnect = f, m
                }, _getItemWidth: function (e, t) {
                    var n = this.series[e], a = this._paramsMap[e].location, i = n.min, o = n.max, r = l.parsePercent(n.minSize, a.width), s = l.parsePercent(n.maxSize, a.width);
                    return (t - i) * (s - r) / (o - i) + r
                }, getPolygon: function (e, t, n, a, i, r, s, l, h) {
                    var c, p = this.series[e], m = p.data[t], u = [m, p], V = this.deepMerge(u, "itemStyle.normal") || {}, U = this.deepMerge(u, "itemStyle.emphasis") || {}, f = this.getItemStyleColor(V.color, e, t, m) || n, _ = this.getItemStyleColor(U.color, e, t, m) || ("string" == typeof f ? d.lift(f, -.2) : f);
                    switch (h) {
                        case"left":
                            c = a;
                            break;
                        case"right":
                            c = a + (r - s);
                            break;
                        default:
                            c = a + (r - s) / 2
                    }
                    var g = {
                        zlevel: p.zlevel,
                        z: p.z,
                        clickable: this.deepQuery(u, "clickable"),
                        style: {
                            pointList: [[a, i], [a + r, i], [c + s, i + l], [c, i + l]],
                            brushType: "both",
                            color: f,
                            lineWidth: V.borderWidth,
                            strokeColor: V.borderColor
                        },
                        highlightStyle: {color: _, lineWidth: U.borderWidth, strokeColor: U.borderColor}
                    };
                    return this.deepQuery([m, p, this.option], "calculable") && (this.setCalculable(g), g.draggable = !0), new o(g)
                }, getLabel: function (e, t, n, i, o, r, s, l, p) {
                    var m, u = this.series[e], V = u.data[t], U = this._paramsMap[e].location, f = h.merge(h.clone(V.itemStyle) || {}, u.itemStyle), _ = "normal", g = f[_].label, y = g.textStyle || {}, b = f[_].labelLine.length, k = this.getLabelText(e, t, _), x = this.getFont(y), v = n;
                    g.position = g.position || f.normal.label.position, "inner" === g.position || "inside" === g.position || "center" === g.position ? (m = p, v = Math.max(r, s) / 2 > c.getTextWidth(k, x) ? "#fff" : d.reverse(n)) : m = "left" === g.position ? "right" : "left";
                    var L = {
                        zlevel: u.zlevel,
                        z: u.z + 1,
                        style: {
                            x: this._getLabelPoint(g.position, i, U, r, s, b, p),
                            y: o + l / 2,
                            color: y.color || v,
                            text: k,
                            textAlign: y.align || m,
                            textBaseline: y.baseline || "middle",
                            textFont: x
                        }
                    };
                    return _ = "emphasis", g = f[_].label || g, y = g.textStyle || y, b = f[_].labelLine.length || b, g.position = g.position || f.normal.label.position, k = this.getLabelText(e, t, _), x = this.getFont(y), v = n, "inner" === g.position || "inside" === g.position || "center" === g.position ? (m = p, v = Math.max(r, s) / 2 > c.getTextWidth(k, x) ? "#fff" : d.reverse(n)) : m = "left" === g.position ? "right" : "left", L.highlightStyle = {
                        x: this._getLabelPoint(g.position, i, U, r, s, b, p),
                        color: y.color || v,
                        text: k,
                        textAlign: y.align || m,
                        textFont: x,
                        brushType: "fill"
                    }, new a(L)
                }, getLabelText: function (e, t, n) {
                    var a = this.series, i = a[e], o = i.data[t], r = this.deepQuery([o, i], "itemStyle." + n + ".label.formatter");
                    return r ? "function" == typeof r ? r.call(this.myChart, {
                        seriesIndex: e,
                        seriesName: i.name || "",
                        series: i,
                        dataIndex: t,
                        data: o,
                        name: o.name,
                        value: o.value
                    }) : "string" == typeof r ? r = r.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{a0}", i.name).replace("{b0}", o.name).replace("{c0}", o.value) : void 0 : o.name
                }, getLabelLine: function (e, t, n, a, o, r, s, l, d) {
                    var c = this.series[e], p = c.data[t], m = this._paramsMap[e].location, u = h.merge(h.clone(p.itemStyle) || {}, c.itemStyle), V = "normal", U = u[V].labelLine, f = u[V].labelLine.length, _ = U.lineStyle || {}, g = u[V].label;
                    g.position = g.position || u.normal.label.position;
                    var y = {
                        zlevel: c.zlevel,
                        z: c.z + 1,
                        hoverable: !1,
                        style: {
                            xStart: this._getLabelLineStartPoint(a, m, r, s, d),
                            yStart: o + l / 2,
                            xEnd: this._getLabelPoint(g.position, a, m, r, s, f, d),
                            yEnd: o + l / 2,
                            strokeColor: _.color || n,
                            lineType: _.type,
                            lineWidth: _.width
                        }
                    };
                    return V = "emphasis", U = u[V].labelLine || U, f = u[V].labelLine.length || f, _ = U.lineStyle || _, g = u[V].label || g, g.position = g.position, y.highlightStyle = {
                        xEnd: this._getLabelPoint(g.position, a, m, r, s, f, d),
                        strokeColor: _.color || n,
                        lineType: _.type,
                        lineWidth: _.width
                    }, new i(y)
                }, _getLabelPoint: function (e, t, n, a, i, o, r) {
                    switch (e = "inner" === e || "inside" === e ? "center" : e) {
                        case"center":
                            return "center" == r ? t + a / 2 : "left" == r ? t + 10 : t + a - 10;
                        case"left":
                            return "auto" === o ? n.x - 10 : "center" == r ? n.centerX - Math.max(a, i) / 2 - o : "right" == r ? t - (i > a ? i - a : 0) - o : n.x - o;
                        default:
                            return "auto" === o ? n.x + n.width + 10 : "center" == r ? n.centerX + Math.max(a, i) / 2 + o : "right" == r ? n.x + n.width + o : t + Math.max(a, i) + o
                    }
                }, _getLabelLineStartPoint: function (e, t, n, a, i) {
                    return "center" == i ? t.centerX : a > n ? e + Math.min(n, a) / 2 : e + Math.max(n, a) / 2
                }, _needLabel: function (e, t, n) {
                    return this.deepQuery([t, e], "itemStyle." + (n ? "emphasis" : "normal") + ".label.show")
                }, _needLabelLine: function (e, t, n) {
                    return this.deepQuery([t, e], "itemStyle." + (n ? "emphasis" : "normal") + ".labelLine.show")
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }
            }, h.inherits(t, n), e("../chart").define("funnel", t), t
        }),n("echarts/chart/eventRiver", ["require", "./base", "../layout/eventRiver", "zrender/shape/Polygon", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "../util/date", "zrender/tool/util", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o);
                var r = this;
                r._ondragend = function () {
                    r.isDragend = !0
                }, this.refresh(i)
            }

            var n = e("./base"), a = e("../layout/eventRiver"), i = e("zrender/shape/Polygon");
            e("../component/axis"), e("../component/grid"), e("../component/dataZoom");
            var o = e("../config");
            o.eventRiver = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                legendHoverLink: !0,
                itemStyle: {
                    normal: {
                        borderColor: "rgba(0,0,0,0)",
                        borderWidth: 1,
                        label: {show: !0, position: "inside", formatter: "{b}"}
                    }, emphasis: {borderColor: "rgba(0,0,0,0)", borderWidth: 1, label: {show: !0}}
                }
            };
            var r = e("../util/ecData"), s = e("../util/date"), l = e("zrender/tool/util"), h = e("zrender/tool/color");
            return t.prototype = {
                type: o.CHART_TYPE_EVENTRIVER, _buildShape: function () {
                    var e = this.series;
                    this.selectedMap = {}, this._dataPreprocessing();
                    for (var t = this.component.legend, n = [], i = 0; i < e.length; i++)if (e[i].type === this.type) {
                        e[i] = this.reformOption(e[i]), this.legendHoverLink = e[i].legendHoverLink || this.legendHoverLink;
                        var o = e[i].name || "";
                        if (this.selectedMap[o] = t ? t.isSelected(o) : !0, !this.selectedMap[o])continue;
                        this.buildMark(i), n.push(this.series[i])
                    }
                    a(n, this._intervalX, this.component.grid.getArea()), this._drawEventRiver(), this.addShapeList()
                }, _dataPreprocessing: function () {
                    for (var e, t, n = this.series, a = 0, i = n.length; i > a; a++)if (n[a].type === this.type) {
                        e = this.component.xAxis.getAxis(n[a].xAxisIndex || 0);
                        for (var o = 0, r = n[a].data.length; r > o; o++) {
                            t = n[a].data[o].evolution;
                            for (var l = 0, h = t.length; h > l; l++)t[l].timeScale = e.getCoord(s.getNewDate(t[l].time) - 0), t[l].valueScale = Math.pow(t[l].value, .8)
                        }
                    }
                    this._intervalX = Math.round(this.component.grid.getWidth() / 40)
                }, _drawEventRiver: function () {
                    for (var e = this.series, t = 0; t < e.length; t++) {
                        var n = e[t].name || "";
                        if (e[t].type === this.type && this.selectedMap[n])for (var a = 0; a < e[t].data.length; a++)this._drawEventBubble(e[t].data[a], t, a)
                    }
                }, _drawEventBubble: function (e, t, n) {
                    var a = this.series, o = a[t], s = o.name || "", l = o.data[n], d = [l, o], c = this.component.legend, p = c ? c.getColor(s) : this.zr.getColor(t), m = this.deepMerge(d, "itemStyle.normal") || {}, u = this.deepMerge(d, "itemStyle.emphasis") || {}, V = this.getItemStyleColor(m.color, t, n, l) || p, U = this.getItemStyleColor(u.color, t, n, l) || ("string" == typeof V ? h.lift(V, -.2) : V), f = this._calculateControlPoints(e), _ = {
                        zlevel: o.zlevel,
                        z: o.z,
                        clickable: this.deepQuery(d, "clickable"),
                        style: {
                            pointList: f,
                            smooth: "spline",
                            brushType: "both",
                            lineJoin: "round",
                            color: V,
                            lineWidth: m.borderWidth,
                            strokeColor: m.borderColor
                        },
                        highlightStyle: {color: U, lineWidth: u.borderWidth, strokeColor: u.borderColor},
                        draggable: "vertical",
                        ondragend: this._ondragend
                    };
                    _ = new i(_), this.addLabel(_, o, l, e.name), r.pack(_, a[t], t, a[t].data[n], n, a[t].data[n].name), this.shapeList.push(_)
                }, _calculateControlPoints: function (e) {
                    var t = this._intervalX, n = e.y, a = e.evolution, i = a.length;
                    if (!(1 > i)) {
                        for (var o = [], r = [], s = 0; i > s; s++)o.push(a[s].timeScale), r.push(a[s].valueScale);
                        var l = [];
                        l.push([o[0], n]);
                        var s = 0;
                        for (s = 0; i - 1 > s; s++)l.push([(o[s] + o[s + 1]) / 2, r[s] / -2 + n]);
                        for (l.push([(o[s] + (o[s] + t)) / 2, r[s] / -2 + n]), l.push([o[s] + t, n]), l.push([(o[s] + (o[s] + t)) / 2, r[s] / 2 + n]), s = i - 1; s > 0; s--)l.push([(o[s] + o[s - 1]) / 2, r[s - 1] / 2 + n]);
                        return l
                    }
                }, ondragend: function (e, t) {
                    this.isDragend && e.target && (t.dragOut = !0, t.dragIn = !0, t.needRefresh = !1, this.isDragend = !1)
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this.backupShapeList(), this._buildShape()
                }
            }, l.inherits(t, n), e("../chart").define("eventRiver", t), t
        }),n("echarts/layout/eventRiver", ["require"], function () {
            function e(e, n, o) {
                function r(e, t) {
                    var n = e.importance, a = t.importance;
                    return n > a ? -1 : a > n ? 1 : 0
                }

                for (var s = 4, l = 0; l < e.length; l++) {
                    for (var h = 0; h < e[l].data.length; h++) {
                        null == e[l].data[h].weight && (e[l].data[h].weight = 1);
                        for (var d = 0, c = 0; c < e[l].data[h].evolution.length; c++)d += e[l].data[h].evolution[c].valueScale;
                        e[l].data[h].importance = d * e[l].data[h].weight
                    }
                    e[l].data.sort(r)
                }
                for (var l = 0; l < e.length; l++) {
                    null == e[l].weight && (e[l].weight = 1);
                    for (var d = 0, h = 0; h < e[l].data.length; h++)d += e[l].data[h].weight;
                    e[l].importance = d * e[l].weight
                }
                e.sort(r);
                for (var p = Number.MAX_VALUE, m = 0, l = 0; l < e.length; l++)for (var h = 0; h < e[l].data.length; h++)for (var c = 0; c < e[l].data[h].evolution.length; c++) {
                    var u = e[l].data[h].evolution[c].timeScale;
                    p = Math.min(p, u), m = Math.max(m, u)
                }
                p = ~~p, m = ~~m;
                for (var V = function () {
                    var e = m - p + 1 + ~~n;
                    if (0 >= e)return [0];
                    for (var t = []; e--;)t.push(0);
                    return t
                }(), U = V.slice(0), f = [], _ = 0, g = 0, l = 0; l < e.length; l++)for (var h = 0; h < e[l].data.length; h++) {
                    var y = e[l].data[h];
                    y.time = [], y.value = [];
                    for (var b, k = 0, c = 0; c < e[l].data[h].evolution.length; c++)b = e[l].data[h].evolution[c], y.time.push(b.timeScale), y.value.push(b.valueScale), k = Math.max(k, b.valueScale);
                    a(y, n, p), y.y = i(U, y, function (e, t) {
                        return e.ypx[t]
                    }), y._offset = i(V, y, function () {
                        return s
                    }), _ = Math.max(_, y.y + k), g = Math.max(g, y._offset), f.push(y)
                }
                t(f, o, _, g)
            }

            function t(e, t, n, a) {
                for (var i = t.height, o = a / i > .5 ? .5 : 1, r = t.y, s = (t.height - a) / n, l = 0, h = e.length; h > l; l++) {
                    var d = e[l];
                    d.y = r + s * d.y + d._offset * o, delete d.time, delete d.value, delete d.xpx, delete d.ypx, delete d._offset;
                    for (var c = d.evolution, p = 0, m = c.length; m > p; p++)c[p].valueScale *= s
                }
            }

            function n(e, t, n, a) {
                if (e === n)throw new Error("x0 is equal with x1!!!");
                if (t === a)return function () {
                    return t
                };
                var i = (t - a) / (e - n), o = (a * e - t * n) / (e - n);
                return function (e) {
                    return i * e + o
                }
            }

            function a(e, t, a) {
                var i = ~~t, o = e.time.length;
                e.xpx = [], e.ypx = [];
                for (var r, s = 0, l = 0, h = 0, d = 0, c = 0; o > s; s++) {
                    l = ~~e.time[s], d = e.value[s] / 2, s === o - 1 ? (h = l + i, c = 0) : (h = ~~e.time[s + 1], c = e.value[s + 1] / 2), r = n(l, d, h, c);
                    for (var p = l; h > p; p++)e.xpx.push(p - a), e.ypx.push(r(p))
                }
                e.xpx.push(h - a), e.ypx.push(c)
            }

            function i(e, t, n) {
                for (var a, i = 0, o = t.xpx.length, r = 0; o > r; r++)a = n(t, r), i = Math.max(i, a + e[t.xpx[r]]);
                for (r = 0; o > r; r++)a = n(t, r), e[t.xpx[r]] = i + a;
                return i
            }

            return e
        }),n("echarts/chart/venn", ["require", "./base", "zrender/shape/Text", "zrender/shape/Circle", "zrender/shape/Path", "../config", "../util/ecData", "zrender/tool/util", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("zrender/shape/Circle"), o = e("zrender/shape/Path"), r = e("../config");
            r.venn = {zlevel: 0, z: 1, calculable: !1};
            var s = e("../util/ecData"), l = e("zrender/tool/util");
            return t.prototype = {
                type: r.CHART_TYPE_VENN, _buildShape: function () {
                    this.selectedMap = {}, this._symbol = this.option.symbolList, this._queryTarget, this._dropBoxList = [], this._vennDataCounter = 0;
                    for (var e = this.series, t = this.component.legend, n = 0; n < e.length; n++)if (e[n].type === r.CHART_TYPE_VENN) {
                        e[n] = this.reformOption(e[n]);
                        var a = e[n].name || "";
                        if (this.selectedMap[a] = t ? t.isSelected(a) : !0, !this.selectedMap[a])continue;
                        this._buildVenn(n)
                    }
                    this.addShapeList()
                }, _buildVenn: function (e) {
                    var t, n, a = this.series[e], i = a.data;
                    i[0].value > i[1].value ? (t = this.zr.getHeight() / 3, n = t * Math.sqrt(i[1].value) / Math.sqrt(i[0].value)) : (n = this.zr.getHeight() / 3, t = n * Math.sqrt(i[0].value) / Math.sqrt(i[1].value));
                    var o = this.zr.getWidth() / 2 - t, r = (t + n) / 2 * Math.sqrt(i[2].value) / Math.sqrt((i[0].value + i[1].value) / 2), s = t + n;
                    0 !== i[2].value && (s = this._getCoincideLength(i[0].value, i[1].value, i[2].value, t, n, r, Math.abs(t - n), t + n));
                    var l = o + s, h = this.zr.getHeight() / 2;
                    if (this._buildItem(e, 0, i[0], o, h, t), this._buildItem(e, 1, i[1], l, h, n), 0 !== i[2].value && i[2].value !== i[0].value && i[2].value !== i[1].value) {
                        var d = (t * t - n * n) / (2 * s) + s / 2, c = s / 2 - (t * t - n * n) / (2 * s), p = Math.sqrt(t * t - d * d), m = 0, u = 0;
                        i[0].value > i[1].value && o + d > l && (u = 1), i[0].value < i[1].value && o + c > l && (m = 1), this._buildCoincideItem(e, 2, i[2], o + d, h - p, h + p, t, n, m, u)
                    }
                }, _getCoincideLength: function (e, t, n, a, i, o, r, s) {
                    var l = (a * a - i * i) / (2 * o) + o / 2, h = o / 2 - (a * a - i * i) / (2 * o), d = Math.acos(l / a), c = Math.acos(h / i), p = a * a * Math.PI, m = d * a * a - l * a * Math.sin(d) + c * i * i - h * i * Math.sin(c), u = m / p, V = n / e, U = Math.abs(u / V);
                    return U > .999 && 1.001 > U ? o : .999 >= U ? (s = o, o = (o + r) / 2, this._getCoincideLength(e, t, n, a, i, o, r, s)) : (r = o, o = (o + s) / 2, this._getCoincideLength(e, t, n, a, i, o, r, s))
                }, _buildItem: function (e, t, n, a, i, o) {
                    var r = this.series, l = r[e], h = this.getCircle(e, t, n, a, i, o);
                    if (s.pack(h, l, e, n, t, n.name), this.shapeList.push(h), l.itemStyle.normal.label.show) {
                        var d = this.getLabel(e, t, n, a, i, o);
                        s.pack(d, l, e, l.data[t], t, l.data[t].name), this.shapeList.push(d)
                    }
                }, _buildCoincideItem: function (e, t, n, a, i, r, l, h, d, c) {
                    var p = this.series, m = p[e], u = [n, m], V = this.deepMerge(u, "itemStyle.normal") || {}, U = this.deepMerge(u, "itemStyle.emphasis") || {}, f = V.color || this.zr.getColor(t), _ = U.color || this.zr.getColor(t), g = "M" + a + "," + i + "A" + l + "," + l + ",0," + d + ",1," + a + "," + r + "A" + h + "," + h + ",0," + c + ",1," + a + "," + i, y = {
                        color: f,
                        path: g
                    }, b = {
                        zlevel: m.zlevel,
                        z: m.z,
                        style: y,
                        highlightStyle: {color: _, lineWidth: U.borderWidth, strokeColor: U.borderColor}
                    };
                    b = new o(b), b.buildPathArray && (b.style.pathArray = b.buildPathArray(y.path)), s.pack(b, p[e], 0, n, t, n.name), this.shapeList.push(b)
                }, getCircle: function (e, t, n, a, o, r) {
                    var s = this.series[e], l = [n, s], h = this.deepMerge(l, "itemStyle.normal") || {}, d = this.deepMerge(l, "itemStyle.emphasis") || {}, c = h.color || this.zr.getColor(t), p = d.color || this.zr.getColor(t), m = {
                        zlevel: s.zlevel,
                        z: s.z,
                        clickable: !0,
                        style: {x: a, y: o, r: r, brushType: "fill", opacity: 1, color: c},
                        highlightStyle: {color: p, lineWidth: d.borderWidth, strokeColor: d.borderColor}
                    };
                    return this.deepQuery([n, s, this.option], "calculable") && (this.setCalculable(m), m.draggable = !0), new i(m)
                }, getLabel: function (e, t, n, i, o, r) {
                    var s = this.series[e], l = s.itemStyle, h = [n, s], d = this.deepMerge(h, "itemStyle.normal") || {}, c = "normal", p = l[c].label, m = p.textStyle || {}, u = this.getLabelText(t, n, c), V = this.getFont(m), U = d.color || this.zr.getColor(t), f = m.fontSize || 12, _ = {
                        zlevel: s.zlevel,
                        z: s.z,
                        style: {x: i, y: o - r - f, color: m.color || U, text: u, textFont: V, textAlign: "center"}
                    };
                    return new a(_)
                }, getLabelText: function (e, t, n) {
                    var a = this.series, i = a[0], o = this.deepQuery([t, i], "itemStyle." + n + ".label.formatter");
                    return o ? "function" == typeof o ? o(i.name, t.name, t.value) : "string" == typeof o ? (o = o.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}"), o = o.replace("{a0}", i.name).replace("{b0}", t.name).replace("{c0}", t.value)) : void 0 : t.name
                }, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this._buildShape()
                }
            }, l.inherits(t, n), e("../chart").define("venn", t), t
        }),n("echarts/chart/treemap", ["require", "./base", "zrender/tool/area", "zrender/shape/Rectangle", "zrender/shape/Text", "zrender/shape/Line", "../layout/TreeMap", "../data/Tree", "../config", "../util/ecData", "zrender/config", "zrender/tool/event", "zrender/tool/util", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i);
                var r = this;
                r._onclick = function (e) {
                    return r.__onclick(e)
                }, r.zr.on(c.EVENT.CLICK, r._onclick)
            }

            var n = e("./base"), a = e("zrender/tool/area"), i = e("zrender/shape/Rectangle"), o = e("zrender/shape/Text"), r = e("zrender/shape/Line"), s = e("../layout/TreeMap"), l = e("../data/Tree"), h = e("../config");
            h.treemap = {
                zlevel: 0,
                z: 1,
                calculable: !1,
                clickable: !0,
                center: ["50%", "50%"],
                size: ["80%", "80%"],
                root: "",
                itemStyle: {
                    normal: {
                        label: {
                            show: !0,
                            x: 5,
                            y: 12,
                            textStyle: {
                                align: "left",
                                color: "#000",
                                fontFamily: "Arial",
                                fontSize: 13,
                                fontStyle: "normal",
                                fontWeight: "normal"
                            }
                        },
                        breadcrumb: {show: !0, textStyle: {}},
                        borderWidth: 1,
                        borderColor: "#ccc",
                        childBorderWidth: 1,
                        childBorderColor: "#ccc"
                    }, emphasis: {}
                }
            };
            var d = e("../util/ecData"), c = e("zrender/config"), p = (e("zrender/tool/event"), e("zrender/tool/util")), m = e("zrender/tool/color");
            return t.prototype = {
                type: h.CHART_TYPE_TREEMAP, refresh: function (e) {
                    this.clear(), e && (this.option = e, this.series = this.option.series), this._treesMap = {};
                    for (var t = this.series, n = this.component.legend, a = 0; a < t.length; a++)if (t[a].type === h.CHART_TYPE_TREEMAP) {
                        t[a] = this.reformOption(t[a]);
                        var i = t[a].name || "";
                        if (this.selectedMap[i] = n ? n.isSelected(i) : !0, !this.selectedMap[i])continue;
                        this._buildSeries(t[a], a)
                    }
                }, _buildSeries: function (e, t) {
                    var n = l.fromOptionData(e.name, e.data);
                    this._treesMap[t] = n;
                    var a = e.root && n.getNodeById(e.root) || n.root;
                    this._buildTreemap(a, t)
                }, _buildTreemap: function (e, t) {
                    for (var n = this.shapeList, a = 0; a < n.length;) {
                        var i = n[a];
                        d.get(i, "seriesIndex") === t ? (this.zr.delShape(n[a]), n.splice(a, 1)) : a++
                    }
                    for (var o = n.length, r = this.series[t], l = r.itemStyle, h = this.parsePercent(r.size[0], this.zr.getWidth()) || 400, c = this.parsePercent(r.size[1], this.zr.getHeight()) || 500, p = this.parseCenter(this.zr, r.center), m = p[0] - .5 * h, u = p[1] - .5 * c, V = h * c, U = 0, f = [], _ = e.children, a = 0; a < _.length; a++)U += _[a].data.value;
                    for (var g = 0; g < _.length; g++)f.push(_[g].data.value * V / U);
                    for (var y = new s({x: m, y: u, width: h, height: c}), b = y.run(f), k = 0; k < b.length; k++) {
                        var x = _[k].data, v = b[k], L = [x.itemStyle, l], w = this.deepMerge(L);
                        w.normal.color || (w.normal.color = this.zr.getColor(k)), w.emphasis.color || (w.emphasis.color = w.normal.color), this._buildItem(x, w, v, t, k), x.children && this._buildChildrenTreemap(x.children, w, v, t)
                    }
                    this.query(r, "itemStyle.normal.breadcrumb.show") && this._buildBreadcrumb(e, t, m, u + c);
                    for (var a = o; a < n.length; a++)this.zr.addShape(n[a])
                }, _buildItem: function (e, t, n, a, i) {
                    var o = this.series, r = this.getRectangle(e, t, n);
                    d.pack(r, o[a], a, e, i, e.name), this.shapeList.push(r)
                }, getRectangle: function (e, t, n) {
                    var a = t.emphasis, o = t.normal, r = this.getLabel(t, n, e.name, e.value), s = this.option.hoverable, l = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: s,
                        clickable: !0,
                        style: p.merge({
                            x: n.x,
                            y: n.y,
                            width: n.width,
                            height: n.height,
                            brushType: "both",
                            color: o.color,
                            lineWidth: o.borderWidth,
                            strokeColor: o.borderColor
                        }, r.style, !0),
                        highlightStyle: p.merge({
                            color: a.color,
                            lineWidth: a.borderWidth,
                            strokeColor: a.borderColor
                        }, r.highlightStyle, !0)
                    };
                    return new i(l)
                }, getLabel: function (e, t, n, i) {
                    var o = e.normal.label.textStyle, r = [e.emphasis.label.textStyle, o], s = this.deepMerge(r), l = e.normal.label.formatter, h = this.getLabelText(n, i, l), d = this.getFont(o), c = a.getTextWidth(h, d), p = a.getTextHeight(h, d), m = this.deepQuery([e.emphasis, e.normal], "label.formatter"), u = this.getLabelText(n, i, m), V = this.getFont(s), U = a.getTextWidth(h, V), f = a.getTextHeight(h, V);
                    e.normal.label.show ? (e.normal.label.x + c > t.width || e.normal.label.y + p > t.height) && (h = "") : h = "", e.emphasis.label.show ? (s.x + U > t.width || s.y + f > t.height) && (u = "") : u = "";
                    var _ = {
                        style: {
                            textX: t.x + e.normal.label.x,
                            textY: t.y + e.normal.label.y,
                            text: h,
                            textPosition: "specific",
                            textColor: o.color,
                            textFont: d
                        },
                        highlightStyle: {
                            textX: t.x + e.emphasis.label.x,
                            textY: t.y + e.emphasis.label.y,
                            text: u,
                            textColor: s.color,
                            textPosition: "specific"
                        }
                    };
                    return _
                }, getLabelText: function (e, t, n) {
                    return n ? "function" == typeof n ? n.call(this.myChart, e, t) : "string" == typeof n ? (n = n.replace("{b}", "{b0}").replace("{c}", "{c0}"), n = n.replace("{b0}", e).replace("{c0}", t)) : void 0 : e
                }, _buildChildrenTreemap: function (e, t, n, a) {
                    for (var i = n.width * n.height, o = 0, r = [], l = 0; l < e.length; l++)o += e[l].value;
                    for (var h = 0; h < e.length; h++)r.push(e[h].value * i / o);
                    for (var c = new s({
                        x: n.x,
                        y: n.y,
                        width: n.width,
                        height: n.height
                    }), p = c.run(r), m = t.normal.childBorderWidth, u = t.normal.childBorderColor, V = 0; V < p.length; V++) {
                        var U = p[V], f = [];
                        n.y.toFixed(2) !== U.y.toFixed(2) && f.push(this._getLine(U.x, U.y, U.x + U.width, U.y, m, u)), n.x.toFixed(2) !== U.x.toFixed(2) && f.push(this._getLine(U.x, U.y, U.x, U.y + U.height, m, u)), (n.y + n.height).toFixed(2) !== (U.y + U.height).toFixed(2) && f.push(this._getLine(U.x, U.y + U.height, U.x + U.width, U.y + U.height, m, u)), (n.x + n.width).toFixed(2) !== (U.x + U.width).toFixed(2) && f.push(this._getLine(U.x + U.width, U.y, U.x + U.width, U.y + U.height, m, u));
                        for (var _ = 0; _ < f.length; _++)d.set(f[_], "seriesIndex", a), this.shapeList.push(f[_])
                    }
                }, _getLine: function (e, t, n, a, i, o) {
                    var s = {
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase(),
                        hoverable: !1,
                        style: {xStart: e, yStart: t, xEnd: n, yEnd: a, lineWidth: i, strokeColor: o}
                    };
                    return new r(s)
                }, _buildBreadcrumb: function (e, t, n, a) {
                    for (var i = [], r = e; r;)i.unshift(r.data.name), r = r.parent;
                    for (var s = this.series[t], l = this.query(s, "itemStyle.normal.breadcrumb.textStyle") || {}, h = this.query(s, "itemStyle.emphasis.breadcrumb.textStyle") || {}, c = {
                        y: a + 10,
                        textBaseline: "top",
                        textAlign: "left",
                        color: l.color,
                        textFont: this.getFont(l)
                    }, u = {
                        brushType: "fill",
                        color: h.color || m.lift(l.color, -.3),
                        textFont: this.getFont(h)
                    }, V = 0; V < i.length; V++) {
                        var U = new o({
                            zlevel: this.getZlevelBase(),
                            z: this.getZBase(),
                            style: p.merge({x: n, text: i[V] + (i.length - 1 - V ? " > " : "")}, c),
                            clickable: !0,
                            highlightStyle: u
                        });
                        d.set(U, "seriesIndex", t), d.set(U, "name", i[V]), n += U.getRect(U.style).width, this.shapeList.push(U)
                    }
                }, __onclick: function (e) {
                    var t = e.target;
                    if (t) {
                        var n = d.get(t, "seriesIndex"), a = d.get(t, "name"), i = this._treesMap[n], o = i.getNodeById(a);
                        o && o.children.length && this._buildTreemap(o, n)
                    }
                }
            }, p.inherits(t, n), e("../chart").define("treemap", t), t
        }),n("echarts/layout/TreeMap", ["require"], function () {
            function e(e) {
                ({x: e.x, y: e.y, width: e.width, height: e.height});
                this.x = e.x, this.y = e.y, this.width = e.width, this.height = e.height
            }

            return e.prototype.run = function (e) {
                var t = [];
                return this._squarify(e, {x: this.x, y: this.y, width: this.width, height: this.height}, t), t
            }, e.prototype._squarify = function (e, t, n) {
                var a = "VERTICAL", i = t.width, o = t.height;
                t.width < t.height && (a = "HORIZONTAL", i = t.height, o = t.width);
                for (var r = this._getShapeListInAbstractRow(e, i, o), s = 0; s < r.length; s++) {
                    r[s].x = 0, r[s].y = 0;
                    for (var l = 0; s > l; l++)r[s].y += r[l].height
                }
                var h = {};
                if ("VERTICAL" == a) {
                    for (var d = 0; d < r.length; d++)n.push({
                        x: r[d].x + t.x,
                        y: r[d].y + t.y,
                        width: r[d].width,
                        height: r[d].height
                    });
                    h = {x: r[0].width + t.x, y: t.y, width: t.width - r[0].width, height: t.height}
                } else {
                    for (var c = 0; c < r.length; c++)n.push({
                        x: r[c].y + t.x,
                        y: r[c].x + t.y,
                        width: r[c].height,
                        height: r[c].width
                    });
                    h = {x: t.x, y: t.y + r[0].width, width: t.width, height: t.height - r[0].width}
                }
                var p = e.slice(r.length);
                0 !== p.length && this._squarify(p, h, n)
            }, e.prototype._getShapeListInAbstractRow = function (e, t, n) {
                if (1 === e.length)return [{width: t, height: n}];
                for (var a = 1; a < e.length; a++) {
                    var i = this._placeFixedNumberRectangles(e.slice(0, a), t, n), o = this._placeFixedNumberRectangles(e.slice(0, a + 1), t, n);
                    if (this._isFirstBetter(i, o))return i
                }
            }, e.prototype._placeFixedNumberRectangles = function (e, t, n) {
                for (var a = e.length, i = [], o = 0, r = 0; r < e.length; r++)o += e[r];
                for (var s = o / n, l = 0; a > l; l++) {
                    var h = n * e[l] / o;
                    i.push({width: s, height: h})
                }
                return i
            }, e.prototype._isFirstBetter = function (e, t) {
                var n = e[0].height / e[0].width;
                n = n > 1 ? 1 / n : n;
                var a = t[0].height / t[0].width;
                return a = a > 1 ? 1 / a : a, Math.abs(n - 1) <= Math.abs(a - 1) ? !0 : !1
            }, e
        }),n("echarts/data/Tree", ["require", "zrender/tool/util"], function (e) {
            function t(e, t) {
                this.id = e, this.depth = 0, this.height = 0, this.children = [], this.parent = null, this.data = t || null
            }

            function n(e) {
                this.root = new t(e)
            }

            var a = e("zrender/tool/util");
            return t.prototype.add = function (e) {
                var t = this.children;
                e.parent !== this && (t.push(e), e.parent = this)
            }, t.prototype.remove = function (e) {
                var t = this.children, n = a.indexOf(t, e);
                n >= 0 && (t.splice(n, 1), e.parent = null)
            }, t.prototype.traverse = function (e, t) {
                e.call(t, this);
                for (var n = 0; n < this.children.length; n++)this.children[n].traverse(e, t)
            }, t.prototype.updateDepthAndHeight = function (e) {
                var t = 0;
                this.depth = e;
                for (var n = 0; n < this.children.length; n++) {
                    var a = this.children[n];
                    a.updateDepthAndHeight(e + 1), a.height > t && (t = a.height)
                }
                this.height = t + 1
            }, t.prototype.getNodeById = function (e) {
                if (this.id === e)return this;
                for (var t = 0; t < this.children.length; t++) {
                    var n = this.children[t].getNodeById(e);
                    if (n)return n
                }
            }, n.prototype.traverse = function (e, t) {
                this.root.traverse(e, t)
            }, n.prototype.getSubTree = function (e) {
                var t = this.getNodeById(e);
                if (t) {
                    var a = new n(t.id);
                    return a.root = t, a
                }
            }, n.prototype.getNodeById = function (e) {
                return this.root.getNodeById(e)
            }, n.fromOptionData = function (e, a) {
                function i(e, n) {
                    var a = new t(e.name, e);
                    n.add(a);
                    var o = e.children;
                    if (o)for (var r = 0; r < o.length; r++)i(o[r], a)
                }

                var o = new n(e), r = o.root;
                r.data = {name: e, children: a};
                for (var s = 0; s < a.length; s++)i(a[s], r);
                return o.root.updateDepthAndHeight(0), o
            }, n.fromGraph = function (e) {
                function a(t) {
                    for (var n = e.getNodeById(t.id), i = 0; i < n.outEdges.length; i++) {
                        var r = n.outEdges[i], s = o[r.node2.id];
                        t.children.push(s), a(s)
                    }
                }

                for (var i = {}, o = {}, r = 0; r < e.nodes.length; r++) {
                    var s, l = e.nodes[r];
                    0 === l.inDegree() ? (i[l.id] = new n(l.id), s = i[l.id].root) : s = new t(l.id), s.data = l.data, o[l.id] = s
                }
                var h = [];
                for (var d in i)a(i[d].root), i[d].root.updateDepthAndHeight(0), h.push(i[d]);
                return h
            }, n
        }),n("echarts/chart/tree", ["require", "./base", "../util/shape/Icon", "zrender/shape/Image", "zrender/shape/Line", "zrender/shape/BezierCurve", "../layout/Tree", "../data/Tree", "../config", "../util/ecData", "zrender/config", "zrender/tool/event", "zrender/tool/util", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = .618, i = e("../util/shape/Icon"), o = e("zrender/shape/Image"), r = e("zrender/shape/Line"), s = e("zrender/shape/BezierCurve"), l = e("../layout/Tree"), h = e("../data/Tree"), d = e("../config");
            d.tree = {
                zlevel: 1,
                z: 2,
                calculable: !1,
                clickable: !0,
                rootLocation: {},
                orient: "vertical",
                symbol: "circle",
                symbolSize: 20,
                nodePadding: 30,
                layerPadding: 100,
                itemStyle: {
                    normal: {label: {show: !0}, lineStyle: {width: 1, color: "#777", type: "curve"}},
                    emphasis: {}
                }
            };
            var c = e("../util/ecData"), p = (e("zrender/config"), e("zrender/tool/event"), e("zrender/tool/util"));
            return t.prototype = {
                type: d.CHART_TYPE_TREE, _buildShape: function (e, t) {
                    var n = e.data[0];
                    this.tree = h.fromOptionData(n.name, n.children), this.tree.root.data = n, this._setTreeShape(e), this.tree.traverse(function (n) {
                        this._buildItem(n, e, t), n.children.length > 0 && this._buildLink(n, e)
                    }, this);
                    var a = e.roam === !0 || "move" === e.roam, i = e.roam === !0 || "scale" === e.roam;
                    this.zr.modLayer(this.getZlevelBase(), {
                        panable: a,
                        zoomable: i
                    }), (this.query("markPoint.effect.show") || this.query("markLine.effect.show")) && this.zr.modLayer(d.EFFECT_ZLEVEL, {
                        panable: a,
                        zoomable: i
                    }), this.addShapeList()
                }, _buildItem: function (e, t, n) {
                    var a = [e.data, t], r = this.deepQuery(a, "symbol"), s = this.deepMerge(a, "itemStyle.normal") || {}, l = this.deepMerge(a, "itemStyle.emphasis") || {}, h = s.color || this.zr.getColor(), d = l.color || this.zr.getColor(), p = -e.layout.angle || 0;
                    e.id === this.tree.root.id && (p = 0);
                    var m = "right";
                    Math.abs(p) >= Math.PI / 2 && Math.abs(p) < 3 * Math.PI / 2 && (p += Math.PI, m = "left");
                    var u = [p, e.layout.position[0], e.layout.position[1]], V = new i({
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase() + 1,
                        rotation: u,
                        clickable: this.deepQuery(a, "clickable"),
                        style: {
                            x: e.layout.position[0] - .5 * e.layout.width,
                            y: e.layout.position[1] - .5 * e.layout.height,
                            width: e.layout.width,
                            height: e.layout.height,
                            iconType: r,
                            color: h,
                            brushType: "both",
                            lineWidth: s.borderWidth,
                            strokeColor: s.borderColor
                        },
                        highlightStyle: {color: d, lineWidth: l.borderWidth, strokeColor: l.borderColor}
                    });
                    V.style.iconType.match("image") && (V.style.image = V.style.iconType.replace(new RegExp("^image:\\/\\/"), ""), V = new o({
                        rotation: u,
                        style: V.style,
                        highlightStyle: V.highlightStyle,
                        clickable: V.clickable,
                        zlevel: this.getZlevelBase(),
                        z: this.getZBase()
                    })), this.deepQuery(a, "itemStyle.normal.label.show") && (V.style.text = null == e.data.label ? e.id : e.data.label, V.style.textPosition = this.deepQuery(a, "itemStyle.normal.label.position"), "radial" === t.orient && "inside" !== V.style.textPosition && (V.style.textPosition = m), V.style.textColor = this.deepQuery(a, "itemStyle.normal.label.textStyle.color"), V.style.textFont = this.getFont(this.deepQuery(a, "itemStyle.normal.label.textStyle") || {})), this.deepQuery(a, "itemStyle.emphasis.label.show") && (V.highlightStyle.textPosition = this.deepQuery(a, "itemStyle.emphasis.label.position"), V.highlightStyle.textColor = this.deepQuery(a, "itemStyle.emphasis.label.textStyle.color"), V.highlightStyle.textFont = this.getFont(this.deepQuery(a, "itemStyle.emphasis.label.textStyle") || {})), c.pack(V, t, n, e.data, 0, e.id), this.shapeList.push(V)
                }, _buildLink: function (e, t) {
                    var n = t.itemStyle.normal.lineStyle;
                    if ("broken" === n.type)return void this._buildBrokenLine(e, n, t);
                    for (var a = 0; a < e.children.length; a++) {
                        var i = e.layout.position[0], o = e.layout.position[1], r = e.children[a].layout.position[0], s = e.children[a].layout.position[1];
                        switch (n.type) {
                            case"curve":
                                this._buildBezierCurve(e, e.children[a], n, t);
                                break;
                            case"broken":
                                break;
                            default:
                                var l = this._getLine(i, o, r, s, n);
                                this.shapeList.push(l)
                        }
                    }
                }, _buildBrokenLine: function (e, t, n) {
                    var i = p.clone(t);
                    i.type = "solid";
                    var o = [], r = e.layout.position[0], s = e.layout.position[1], l = n.orient, h = e.children[0].layout.position[1], d = r, c = s + (h - s) * (1 - a), m = e.children[0].layout.position[0], u = c, V = e.children[e.children.length - 1].layout.position[0], U = c;
                    if ("horizontal" === l) {
                        var f = e.children[0].layout.position[0];
                        d = r + (f - r) * (1 - a), c = s, m = d, u = e.children[0].layout.position[1], V = d, U = e.children[e.children.length - 1].layout.position[1]
                    }
                    o.push(this._getLine(r, s, d, c, i)), o.push(this._getLine(m, u, V, U, i));
                    for (var _ = 0; _ < e.children.length; _++)f = e.children[_].layout.position[0], h = e.children[_].layout.position[1], "horizontal" === l ? u = h : m = f, o.push(this._getLine(m, u, f, h, i));
                    this.shapeList = this.shapeList.concat(o)
                }, _getLine: function (e, t, n, a, i) {
                    return e === n && (e = n = this.subPixelOptimize(e, i.width)), t === a && (t = a = this.subPixelOptimize(t, i.width)), new r({
                        zlevel: this.getZlevelBase(),
                        hoverable: !1,
                        style: p.merge({
                            xStart: e,
                            yStart: t,
                            xEnd: n,
                            yEnd: a,
                            lineType: i.type,
                            strokeColor: i.color,
                            lineWidth: i.width
                        }, i, !0)
                    })
                }, _buildBezierCurve: function (e, t, n, i) {
                    var o = a, r = i.orient, l = e.layout.position[0], h = e.layout.position[1], d = t.layout.position[0], c = t.layout.position[1], m = l, u = (c - h) * o + h, V = d, U = (c - h) * (1 - o) + h;
                    if ("horizontal" === r)m = (d - l) * o + l, u = h, V = (d - l) * (1 - o) + l, U = c; else if ("radial" === r)if (e.id === this.tree.root.id)m = (d - l) * o + l, u = (c - h) * o + h, V = (d - l) * (1 - o) + l, U = (c - h) * (1 - o) + h; else {
                        var f = e.layout.originPosition[0], _ = e.layout.originPosition[1], g = t.layout.originPosition[0], y = t.layout.originPosition[1], b = this.tree.root.layout.position[0], k = this.tree.root.layout.position[1];
                        m = f, u = (y - _) * o + _, V = g, U = (y - _) * (1 - o) + _;
                        var x = (m - this.minX) / this.width * Math.PI * 2;
                        m = u * Math.cos(x) + b, u = u * Math.sin(x) + k, x = (V - this.minX) / this.width * Math.PI * 2, V = U * Math.cos(x) + b, U = U * Math.sin(x) + k
                    }
                    var v = new s({
                        zlevel: this.getZlevelBase(),
                        hoverable: !1,
                        style: p.merge({
                            xStart: l,
                            yStart: h,
                            cpX1: m,
                            cpY1: u,
                            cpX2: V,
                            cpY2: U,
                            xEnd: d,
                            yEnd: c,
                            strokeColor: n.color,
                            lineWidth: n.width
                        }, n, !0)
                    });
                    this.shapeList.push(v)
                }, _setTreeShape: function (e) {
                    var t = new l({nodePadding: e.nodePadding, layerPadding: e.layerPadding});
                    this.tree.traverse(function (t) {
                        var n = [t.data, e], a = this.deepQuery(n, "symbolSize");
                        "number" == typeof a && (a = [a, a]), t.layout = {width: a[0], height: a[1]}
                    }, this), t.run(this.tree);
                    var n = e.orient, a = e.rootLocation.x, i = e.rootLocation.y, o = this.zr.getWidth(), r = this.zr.getHeight();
                    a = "center" === a ? .5 * o : this.parsePercent(a, o), i = "center" === i ? .5 * r : this.parsePercent(i, r), i = this.parsePercent(i, r), "horizontal" === n && (a = isNaN(a) ? 10 : a, i = isNaN(i) ? .5 * r : i), "radial" === n ? (a = isNaN(a) ? .5 * o : a, i = isNaN(i) ? .5 * r : i) : (a = isNaN(a) ? .5 * o : a, i = isNaN(i) ? 10 : i);
                    var s = this.tree.root.layout.position[0];
                    if ("radial" === n) {
                        var h = 1 / 0, d = 0, c = 0;
                        this.tree.traverse(function (e) {
                            d = Math.max(d, e.layout.position[0]), h = Math.min(h, e.layout.position[0]), c = Math.max(c, e.layout.width)
                        }), this.width = d - h + 2 * c, this.minX = h
                    }
                    this.tree.traverse(function (t) {
                        var o, r;
                        if ("vertical" === n && "inverse" === e.direction)o = t.layout.position[0] - s + a, r = i - t.layout.position[1]; else if ("vertical" === n)o = t.layout.position[0] - s + a, r = t.layout.position[1] + i; else if ("horizontal" === n && "inverse" === e.direction)r = t.layout.position[0] - s + i, o = a - t.layout.position[1]; else if ("horizontal" === n)r = t.layout.position[0] - s + i, o = t.layout.position[1] + a; else {
                            o = t.layout.position[0], r = t.layout.position[1], t.layout.originPosition = [o, r];
                            var l = r, d = (o - h) / this.width * Math.PI * 2;
                            o = l * Math.cos(d) + a, r = l * Math.sin(d) + i, t.layout.angle = d
                        }
                        t.layout.position[0] = o, t.layout.position[1] = r
                    }, this)
                }, refresh: function (e) {
                    this.clear(), e && (this.option = e, this.series = this.option.series);
                    for (var t = this.series, n = this.component.legend, a = 0; a < t.length; a++)if (t[a].type === d.CHART_TYPE_TREE) {
                        t[a] = this.reformOption(t[a]);
                        var i = t[a].name || "";
                        if (this.selectedMap[i] = n ? n.isSelected(i) : !0, !this.selectedMap[i])continue;
                        this._buildSeries(t[a], a)
                    }
                }, _buildSeries: function (e, t) {
                    this._buildShape(e, t)
                }
            }, p.inherits(t, n), e("../chart").define("tree", t), t
        }),n("echarts/layout/Tree", ["require", "zrender/tool/vector"], function (e) {
            function t(e) {
                e = e || {}, this.nodePadding = e.nodePadding || 30, this.layerPadding = e.layerPadding || 100, this._layerOffsets = [], this._layers = []
            }

            var n = e("zrender/tool/vector");
            return t.prototype.run = function (e) {
                this._layerOffsets.length = 0;
                for (var t = 0; t < e.root.height + 1; t++)this._layerOffsets[t] = 0, this._layers[t] = [];
                this._updateNodeXPosition(e.root);
                var n = e.root;
                this._updateNodeYPosition(n, 0, n.layout.height)
            }, t.prototype._updateNodeXPosition = function (e) {
                var t = 1 / 0, a = -(1 / 0);
                e.layout.position = e.layout.position || n.create();
                for (var i = 0; i < e.children.length; i++) {
                    var o = e.children[i];
                    this._updateNodeXPosition(o);
                    var r = o.layout.position[0];
                    t > r && (t = r), r > a && (a = r)
                }
                e.layout.position[0] = e.children.length > 0 ? (t + a) / 2 : 0;
                var s = this._layerOffsets[e.depth] || 0;
                if (s > e.layout.position[0]) {
                    var l = s - e.layout.position[0];
                    this._shiftSubtree(e, l);
                    for (var i = e.depth + 1; i < e.height + e.depth; i++)this._layerOffsets[i] += l
                }
                this._layerOffsets[e.depth] = e.layout.position[0] + e.layout.width + this.nodePadding, this._layers[e.depth].push(e)
            }, t.prototype._shiftSubtree = function (e, t) {
                e.layout.position[0] += t;
                for (var n = 0; n < e.children.length; n++)this._shiftSubtree(e.children[n], t)
            }, t.prototype._updateNodeYPosition = function (e, t, n) {
                e.layout.position[1] = t;
                for (var a = 0, i = 0; i < e.children.length; i++)a = Math.max(e.children[i].layout.height, a);
                var o = this.layerPadding;
                "function" == typeof o && (o = o(e.depth));
                for (var i = 0; i < e.children.length; i++)this._updateNodeYPosition(e.children[i], t + o + n, a)
            }, t
        }),n("echarts/chart/wordCloud", ["require", "./base", "zrender/shape/Text", "../layout/WordCloud", "../component/grid", "../component/dataRange", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("zrender/shape/Text"), i = e("../layout/WordCloud");
            e("../component/grid"), e("../component/dataRange");
            var o = e("../config"), r = e("../util/ecData"), s = e("zrender/tool/util"), l = e("zrender/tool/color");
            return o.wordCloud = {
                zlevel: 0,
                z: 2,
                clickable: !0,
                center: ["50%", "50%"],
                size: ["40%", "40%"],
                textRotation: [0, 90],
                textPadding: 0,
                autoSize: {enable: !0, minSize: 12},
                itemStyle: {
                    normal: {
                        textStyle: {
                            fontSize: function (e) {
                                return e.value
                            }
                        }
                    }
                }
            }, t.prototype = {
                type: o.CHART_TYPE_WORDCLOUD, refresh: function (e) {
                    e && (this.option = e, this.series = e.series), this._init()
                }, _init: function () {
                    var e = this.series;
                    this.backupShapeList();
                    for (var t = this.component.legend, n = 0; n < e.length; n++)if (e[n].type === o.CHART_TYPE_WORDCLOUD) {
                        e[n] = this.reformOption(e[n]);
                        var a = e[n].name || "";
                        if (this.selectedMap[a] = t ? t.isSelected(a) : !0, !this.selectedMap[a])continue;
                        this.buildMark(n), this._initSerie(e[n])
                    }
                }, _initSerie: function (e) {
                    var t = e.itemStyle.normal.textStyle, n = [this.parsePercent(e.size[0], this.zr.getWidth()) || 200, this.parsePercent(e.size[1], this.zr.getHeight()) || 200], a = this.parseCenter(this.zr, e.center), o = {
                        size: n,
                        wordletype: {autoSizeCal: e.autoSize},
                        center: a,
                        rotate: e.textRotation,
                        padding: e.textPadding,
                        font: t.fontFamily,
                        fontSize: t.fontSize,
                        fontWeight: t.fontWeight,
                        fontStyle: t.fontStyle,
                        text: function (e) {
                            return e.name
                        },
                        data: e.data
                    }, r = new i(o), s = this;
                    r.end(function (e) {
                        s._buildShapes(e)
                    }), r.start()
                }, _buildShapes: function (e) {
                    for (var t = e.length, n = 0; t > n; n++)this._buildTextShape(e[n], 0, n);
                    this.addShapeList()
                }, _buildTextShape: function (e, t, n) {
                    var i = this.series, o = i[t], s = o.name || "", h = o.data[n], d = [h, o], c = this.component.legend, p = c ? c.getColor(s) : this.zr.getColor(t), m = this.deepMerge(d, "itemStyle.normal") || {}, u = this.deepMerge(d, "itemStyle.emphasis") || {}, V = this.getItemStyleColor(m.color, t, n, h) || p, U = this.getItemStyleColor(u.color, t, n, h) || ("string" == typeof V ? l.lift(V, -.2) : V), f = new a({
                        zlevel: o.zlevel,
                        z: o.z,
                        hoverable: !0,
                        clickable: this.deepQuery(d, "clickable"),
                        style: {
                            x: 0,
                            y: 0,
                            text: e.text,
                            color: V,
                            textFont: [e.style, e.weight, e.size + "px", e.font].join(" "),
                            textBaseline: "alphabetic",
                            textAlign: "center"
                        },
                        highlightStyle: {
                            brushType: u.borderWidth ? "both" : "fill",
                            color: U,
                            lineWidth: u.borderWidth || 0,
                            strokeColor: u.borderColor
                        },
                        position: [e.x, e.y],
                        rotation: [-e.rotate / 180 * Math.PI, 0, 0]
                    });
                    r.pack(f, o, t, h, n, h.name), this.shapeList.push(f)
                }
            }, s.inherits(t, n), e("../chart").define("wordCloud", t), t
        }),n("echarts/layout/WordCloud", ["require", "../layout/WordCloudRectZero", "zrender/tool/util"], function (e) {
            function t(e) {
                this._init(e)
            }

            var n = e("../layout/WordCloudRectZero"), a = e("zrender/tool/util");
            return t.prototype = {
                start: function () {
                    function e() {
                        u.totalArea = r, p.autoSizeCal.enable && u._autoCalTextSize(d, r, i, o, p.autoSizeCal.minSize), c.timer && clearInterval(c.timer), c.timer = setInterval(t, 0), t()
                    }

                    function t() {
                        for (var e, t = +new Date, n = d.length; +new Date - t < c.timeInterval && ++s < n && c.timer;)e = d[s], e.x = m[0] >> 1, e.y = m[1] >> 1, u._cloudSprite(e, d, s), e.hasText && u._place(a, e, h) && (l.push(e), e.x -= m[0] >> 1, e.y -= m[1] >> 1);
                        s >= n && (u.stop(), u._fixTagPosition(l), c.endcallback(l))
                    }

                    var a = null, i = 0, o = 0, r = 0, s = -1, l = [], h = null, d = this.wordsdata, c = this.defaultOption, p = c.wordletype, m = c.size, u = this, V = new n({
                        type: p.type,
                        width: m[0],
                        height: m[1]
                    });
                    return V.calculate(function (t) {
                        a = t.initarr, i = t.maxWit, o = t.maxHit, r = t.area, h = t.imgboard, e()
                    }, this), this
                }, _fixTagPosition: function (e) {
                    for (var t = this.defaultOption.center, n = 0, a = e.length; a > n; n++)e[n].x += t[0], e[n].y += t[1]
                }, stop: function () {
                    return this.defaultOption.timer && (clearInterval(this.defaultOption.timer), this.defaultOption.timer = null), this
                }, end: function (e) {
                    return e && (this.defaultOption.endcallback = e), this
                }, _init: function (e) {
                    this.defaultOption = {}, this._initProperty(e), this._initMethod(e), this._initCanvas(), this._initData(e.data)
                }, _initData: function (e) {
                    var t = this, n = t.defaultOption;
                    this.wordsdata = e.map(function (e, a) {
                        return e.text = n.text.call(t, e, a), e.font = n.font.call(t, e, a), e.style = n.fontStyle.call(t, e, a), e.weight = n.fontWeight.call(t, e, a), e.rotate = n.rotate.call(t, e, a), e.size = ~~n.fontSize.call(t, e, a), e.padding = n.padding.call(t, e, a), e
                    }).sort(function (e, t) {
                        return t.value - e.value
                    })
                }, _initMethod: function (e) {
                    function t(e) {
                        return e.name
                    }

                    function n() {
                        return "sans-serif"
                    }

                    function a() {
                        return "normal"
                    }

                    function i(e) {
                        return e.value
                    }

                    function o() {
                        return 0
                    }

                    function r(e) {
                        return function () {
                            return e[Math.round(Math.random() * (e.length - 1))]
                        }
                    }

                    function s() {
                        return 0
                    }

                    function l(e) {
                        var t = e[0] / e[1];
                        return function (e) {
                            return [t * (e *= .1) * Math.cos(e), e * Math.sin(e)]
                        }
                    }

                    function h(e) {
                        var t = 4, n = t * e[0] / e[1], a = 0, i = 0;
                        return function (e) {
                            var o = 0 > e ? -1 : 1;
                            switch (Math.sqrt(1 + 4 * o * e) - o & 3) {
                                case 0:
                                    a += n;
                                    break;
                                case 1:
                                    i += t;
                                    break;
                                case 2:
                                    a -= n;
                                    break;
                                default:
                                    i -= t
                            }
                            return [a, i]
                        }
                    }

                    function d(e) {
                        return "function" == typeof e ? e : function () {
                            return e
                        }
                    }

                    var c = this.defaultOption;
                    c.text = e.text ? d(e.text) : t, c.font = e.font ? d(e.font) : n, c.fontSize = e.fontSize ? d(e.fontSize) : i, c.fontStyle = e.fontStyle ? d(e.fontStyle) : a, c.fontWeight = e.fontWeight ? d(e.fontWeight) : a, c.rotate = e.rotate ? r(e.rotate) : o, c.padding = e.padding ? d(e.padding) : s, c.center = e.center, c.spiral = l, c.endcallback = function () {
                    }, c.rectangularSpiral = h, c.archimedeanSpiral = l
                }, _initProperty: function (e) {
                    var t = this.defaultOption;
                    t.size = e.size || [256, 256], t.wordletype = e.wordletype, t.words = e.words || [], t.timeInterval = 1 / 0, t.timer = null, t.spirals = {
                        archimedean: t.archimedeanSpiral,
                        rectangular: t.rectangularSpiral
                    }, a.merge(t, {
                        size: [256, 256],
                        wordletype: {type: "RECT", areaPresent: .058, autoSizeCal: {enable: !0, minSize: 12}}
                    })
                }, _initCanvas: function () {
                    var e, t = Math.PI / 180, n = 64, a = 2048, i = 1;
                    "undefined" != typeof document ? (e = document.createElement("canvas"), e.width = 1, e.height = 1, i = Math.sqrt(e.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2), e.width = (n << 5) / i, e.height = a / i) : e = new Canvas(n << 5, a);
                    var o = e.getContext("2d");
                    o.fillStyle = o.strokeStyle = "red", o.textAlign = "center", this.defaultOption.c = o, this.defaultOption.cw = n, this.defaultOption.ch = a, this.defaultOption.ratio = i, this.defaultOption.cloudRadians = t
                }, _cloudSprite: function (e, t, n) {
                    if (!e.sprite) {
                        var a = this.defaultOption.cw, i = this.defaultOption.ch, o = this.defaultOption.c, r = this.defaultOption.ratio, s = this.defaultOption.cloudRadians;
                        o.clearRect(0, 0, (a << 5) / r, i / r);
                        var l = 0, h = 0, d = 0, c = t.length;
                        for (--n; ++n < c;) {
                            e = t[n], o.save(), o.font = e.style + " " + e.weight + " " + ~~((e.size + 1) / r) + "px " + e.font;
                            var p = o.measureText(e.text + "m").width * r, m = e.size << 1;
                            if (e.rotate) {
                                var u = Math.sin(e.rotate * s), V = Math.cos(e.rotate * s), U = p * V, f = p * u, _ = m * V, g = m * u;
                                p = Math.max(Math.abs(U + g), Math.abs(U - g)) + 31 >> 5 << 5, m = ~~Math.max(Math.abs(f + _), Math.abs(f - _))
                            } else p = p + 31 >> 5 << 5;
                            if (m > d && (d = m), l + p >= a << 5 && (l = 0, h += d, d = 0), h + m >= i)break;
                            o.translate((l + (p >> 1)) / r, (h + (m >> 1)) / r), e.rotate && o.rotate(e.rotate * s), o.fillText(e.text, 0, 0), e.padding && (o.lineWidth = 2 * e.padding, o.strokeText(e.text, 0, 0)), o.restore(), e.width = p, e.height = m, e.xoff = l, e.yoff = h, e.x1 = p >> 1, e.y1 = m >> 1, e.x0 = -e.x1, e.y0 = -e.y1, e.hasText = !0, l += p
                        }
                        for (var y = o.getImageData(0, 0, (a << 5) / r, i / r).data, b = []; --n >= 0;)if (e = t[n], e.hasText) {
                            for (var p = e.width, k = p >> 5, m = e.y1 - e.y0, x = 0; m * k > x; x++)b[x] = 0;
                            if (l = e.xoff, null == l)return;
                            h = e.yoff;
                            for (var v = 0, L = -1, w = 0; m > w; w++) {
                                for (var x = 0; p > x; x++) {
                                    var W = k * w + (x >> 5), X = y[(h + w) * (a << 5) + (l + x) << 2] ? 1 << 31 - x % 32 : 0;
                                    b[W] |= X, v |= X
                                }
                                v ? L = w : (e.y0++, m--, w--, h++)
                            }
                            e.y1 = e.y0 + L, e.sprite = b.slice(0, (e.y1 - e.y0) * k)
                        }
                    }
                }, _place: function (e, t, n) {
                    function a(e, t, n) {
                        n >>= 5;
                        for (var a, i = e.sprite, o = e.width >> 5, r = e.x - (o << 4), s = 127 & r, l = 32 - s, h = e.y1 - e.y0, d = (e.y + e.y0) * n + (r >> 5), c = 0; h > c; c++) {
                            a = 0;
                            for (var p = 0; o >= p; p++)if ((a << l | (o > p ? (a = i[c * o + p]) >>> s : 0)) & t[d + p])return !0;
                            d += n
                        }
                        return !1
                    }

                    function i(e, t) {
                        return t.row[e.y] && t.cloumn[e.x] && e.x >= t.row[e.y].start && e.x <= t.row[e.y].end && e.y >= t.cloumn[e.x].start && e.y <= t.cloumn[e.x].end
                    }

                    for (var o, r, s, l = this.defaultOption.size, h = ([{x: 0, y: 0}, {
                        x: l[0],
                        y: l[1]
                    }], t.x), d = t.y, c = Math.sqrt(l[0] * l[0] + l[1] * l[1]), p = this.defaultOption.spiral(l), m = Math.random() < .5 ? 1 : -1, u = -m; (o = p(u += m)) && (r = ~~o[0], s = ~~o[1], !(Math.min(r, s) > c));)if (t.x = h + r, t.y = d + s, !(t.x + t.x0 < 0 || t.y + t.y0 < 0 || t.x + t.x1 > l[0] || t.y + t.y1 > l[1]) && !a(t, e, l[0]) && i(t, n)) {
                        for (var V, U = t.sprite, f = t.width >> 5, _ = l[0] >> 5, g = t.x - (f << 4), y = 127 & g, b = 32 - y, k = t.y1 - t.y0, x = (t.y + t.y0) * _ + (g >> 5), v = 0; k > v; v++) {
                            V = 0;
                            for (var L = 0; f >= L; L++)e[x + L] |= V << b | (f > L ? (V = U[v * f + L]) >>> y : 0);
                            x += _
                        }
                        return delete t.sprite, !0
                    }
                    return !1
                }, _autoCalTextSize: function (e, t, n, a, i) {
                    function o(e) {
                        V.clearRect(0, 0, (m << 5) / U, u / U), V.save(), V.font = e.style + " " + e.weight + " " + ~~((e.size + 1) / U) + "px " + e.font;
                        var t = V.measureText(e.text + "m").width * U, r = e.size << 1;
                        t = t + 31 >> 5 << 5, V.restore(), e.aw = t, e.ah = r;
                        var s, l, h;
                        if (e.rotate) {
                            var d = Math.sin(e.rotate * f), c = Math.cos(e.rotate * f), _ = t * c, g = t * d, y = r * c, b = r * d;
                            l = Math.max(Math.abs(_ + b), Math.abs(_ - b)) + 31 >> 5 << 5, h = ~~Math.max(Math.abs(g + y), Math.abs(g - y))
                        }
                        return e.size <= p || e.rotate && t * r <= e.area && n >= l && a >= h || t * r <= e.area && n >= t && a >= r ? void(e.area = t * r) : (s = e.rotate && l > n && h > a ? Math.min(n / l, a / h) : t > n || r > a ? Math.min(n / t, a / r) : Math.sqrt(e.area / (e.aw * e.ah)), e.size = ~~(s * e.size), e.size < i ? void(e.size = i) : o(e))
                    }

                    function r(e, t) {
                        for (var n = e.length, a = 0; n--;)a += t(e[n]);
                        return a
                    }

                    for (var s, l, h = r(e, function (e) {
                        return e.size
                    }), d = e.length, c = .25, p = i, m = this.defaultOption.cw, u = this.defaultOption.ch, V = this.defaultOption.c, U = this.defaultOption.ratio, f = this.defaultOption.cloudRadians; d--;)s = e[d], l = s.size / h, s.areapre = c ? c > l ? l : c : l, s.area = t * s.areapre, s.totalarea = t, o(s)
                }
            }, t
        }),n("echarts/layout/WordCloudRectZero", ["require"], function () {
            function e(e) {
                this.defaultOption = {type: "RECT"}, this._init(e)
            }

            return e.prototype = {
                RECT: "_calculateRect", _init: function (e) {
                    this._initOption(e), this._initCanvas()
                }, _initOption: function (e) {
                    for (k in e)this.defaultOption[k] = e[k]
                }, _initCanvas: function () {
                    var e = document.createElement("canvas");
                    e.width = 1, e.height = 1;
                    var t = Math.sqrt(e.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2);
                    if (e.width = this.defaultOption.width, e.height = this.defaultOption.height, e.getContext)var n = e.getContext("2d");
                    this.canvas = e, this.ctx = n, this.ratio = t
                }, calculate: function (e, t) {
                    var n = this.defaultOption.type, a = this[n];
                    this[a].call(this, e, t)
                }, _calculateReturn: function (e, t, n) {
                    t.call(n, e)
                }, _calculateRect: function (e, t) {
                    var n = {}, a = this.defaultOption.width >> 5 << 5, i = this.defaultOption.height;
                    n.initarr = this._rectZeroArray(a * i), n.area = a * i, n.maxHit = i, n.maxWit = a, n.imgboard = this._rectBoard(a, i), this._calculateReturn(n, e, t)
                }, _rectBoard: function (e, t) {
                    for (var n = [], a = 0; t > a; a++)n.push({y: a, start: 0, end: e});
                    for (var i = [], a = 0; e > a; a++)i.push({x: a, start: 0, end: t});
                    return {row: n, cloumn: i}
                }, _rectZeroArray: function (e) {
                    for (var t = [], n = e, a = -1; ++a < n;)t[a] = 0;
                    return t
                }
            }, e
        }),n("echarts/chart/heatmap", ["require", "./base", "../layer/heatmap", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "zrender/shape/Image", "../chart"], function (e) {
            function t(e, t, a, i, o) {
                n.call(this, e, t, a, i, o), this.refresh(i)
            }

            var n = e("./base"), a = e("../layer/heatmap"), i = e("../config"), o = (e("../util/ecData"), e("zrender/tool/util")), r = (e("zrender/tool/color"), e("zrender/shape/Image"));
            return i.heatmap = {zlevel: 0, z: 2, clickable: !0}, t.prototype = {
                type: i.CHART_TYPE_HEATMAP,
                refresh: function (e) {
                    this.clear(), e && (this.option = e, this.series = e.series), this._init()
                },
                _init: function () {
                    var e = this.series;
                    this.backupShapeList();
                    for (var t = e.length, n = 0; t > n; ++n)if (e[n].type === i.CHART_TYPE_HEATMAP) {
                        e[n] = this.reformOption(e[n]);
                        var o = new a(e[n]), s = o.getCanvas(e[n].data, this.zr.getWidth(), this.zr.getHeight()), l = new r({
                            position: [0, 0],
                            scale: [1, 1],
                            hoverable: this.option.hoverable,
                            style: {x: 0, y: 0, image: s, width: s.width, height: s.height}
                        });
                        this.shapeList.push(l)
                    }
                    this.addShapeList()
                }
            }, o.inherits(t, n), e("../chart").define("heatmap", t), t
        });
        var a = t("zrender");
        a.tool = {
            color: t("zrender/tool/color"),
            math: t("zrender/tool/math"),
            util: t("zrender/tool/util"),
            vector: t("zrender/tool/vector"),
            area: t("zrender/tool/area"),
            event: t("zrender/tool/event")
        }, a.animation = {
            Animation: t("zrender/animation/Animation"),
            Cip: t("zrender/animation/Clip"),
            easing: t("zrender/animation/easing")
        };
        var i = t("echarts");
        i.config = t("echarts/config"), i.util = {mapData: {params: t("echarts/util/mapData/params")}}, t("echarts/chart/line"),
            t("echarts/chart/bar"), t("echarts/chart/scatter"), t("echarts/chart/k"), t("echarts/chart/pie"), t("echarts/chart/radar"), t("echarts/chart/chord"), t("echarts/chart/force"), t("echarts/chart/map"), t("echarts/chart/gauge"), t("echarts/chart/funnel"), t("echarts/chart/eventRiver"), t("echarts/chart/venn"), t("echarts/chart/treemap"), t("echarts/chart/tree"), t("echarts/chart/wordCloud"), t("echarts/chart/heatmap"), e.echarts = i, e.zrender = a
    }(window)
}, function (e, t, n) {
    var a;
    !(a = function () {
        $.fn.waterfall = function (e) {
            if (!e)e = {};
            var t = e.item || "div", n = e.colMinWidth || 320, a = e.colGapWidth || 20, i = e.autoResize || false, o = $(this), r = o.children(t);
            h();
            if (i) {
                var s = {};

                function l(e, t, n) {
                    if (s[e]) {
                        window.clearTimeout(s[e]);
                        delete s[e]
                    }
                    return s[e] = window.setTimeout(function () {
                        t();
                        delete s[e]
                    }, n)
                }

                $(window).resize(function () {
                    l("resize", h, 500)
                })
            }
            function h() {
                var e = o.width(), t = Math.floor((e + a) / (n + a)), i, s = [];
                if (t < 1)t = 1;
                i = (e - (t - 1) * a) / t;
                r.css({position: "absolute", width: i});
                for (var l = 0; l < t; l++) {
                    s[l] = 0
                }
                r.each(h);
                function h() {
                    var e = $(this), t = e.outerHeight(), n = Math.min.apply(Math, s), o = s.indexOf(n);
                    e.css({top: n, left: o * (i + a)});
                    s[o] += parseInt(t) + a;
                    e = null
                }

                o.css("height", Math.max.apply(Math, s))
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, , function (e, t, n) {
    !(e.exports = {
        anoDevData: {type: "get", route: "/anoDevData"},
        anosecurityEvent: {type: "get", route: "/anosecurityEvent"},
        getDevData: {type: "get", route: "/getDevData"},
        getChartData: {type: "get", route: "/getChartData"},
        securityEvent: {type: "get", route: "/securityEvent"},
        distributionInfo: {type: "get", route: "/distributionInfo"},
        mapinfo: {type: "get", route: "/mapinfo"}
    })
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="dynamic-secure-statistics" class="highlight-waterfall">\n    <div class="highlight-wrapper">\n        <div id="map-width" class="focus">\n            <ul class="rslides f426x240">\n                <li>\n                    <div id="china_vul_info" class="highlight-maps map-wait"></div>\n                    <div class="map-title">国内');
            __append(escape(data.new[0].name));
            __append('分布</div>\n                </li>\n                <li>\n                    <div id="world_vul_info" class="highlight-maps map-wait"></div>\n                    <div class="map-title">全球');
            __append(escape(data.new[0].name));
            __append('分布</div>\n                </li>\n            </ul>\n        </div>\n        <div class="highlight-content">\n            <section class="newest-bugs">\n                <h5 class="tpl-title">最新漏洞<img src="../../images/dynamic/new.png"></h5>\n                <ul class="article-list list-unstyled" data-condition="');
            __append(escape(data.new[0].condition));
            __append('">\n                    ');
            for (var i = 0; i < data.new.length; i++) {
                __append("\n                    ");
                var newtime = [];
                __append("\n                    ");
                newtime = data.new[i].createtime.split(" ");
                __append('\n                    <li>\n                        <span class="dynamic-detail"\n                              data-name="');
                __append(escape(data.new[i].name));
                __append('"\n                              data-innername="');
                __append(escape(data.new[i].innername));
                __append('"\n                              data-describe="');
                __append(escape(data.new[i].describe));
                __append('"\n                              data-id="');
                __append(escape(data.new[i].id));
                __append('"\n                              data-type="new"\n                              data-influence="');
                __append(escape(data.new[i].influence));
                __append('"\n                              data-time="');
                __append(escape(newtime[0]));
                __append('"\n                              data-con="');
                __append(escape(data.new[i].condition));
                __append('">');
                __append(escape(data.new[i].name));
                __append("</span>\n                        <time>");
                __append(escape(newtime[0]));
                __append("</time>\n                    </li>\n                    ")
            }
            __append('\n                </ul>\n            </section>\n\n            <section class="hot-bugs">\n                <h5 class="tpl-title">热门漏洞<img src="../../images/dynamic/hot.png"></h5>\n                <ul class="article-list list-unstyled">\n                    ');
            for (var j = 0; j < data.hot.length; j++) {
                __append("\n                    ");
                var hottime = [];
                __append("\n                    ");
                hottime = data.hot[j].createtime.split(" ");
                __append('\n                    <li>\n                        <span class="dynamic-detail"\n                              data-name="');
                __append(escape(data.hot[j].name));
                __append('"\n                              data-innername="');
                __append(escape(data.hot[j].innername));
                __append('"\n                              data-describe="');
                __append(escape(data.hot[j].describe));
                __append('"\n                              data-id="');
                __append(escape(data.hot[j].id));
                __append('"\n                              data-type="hot"\n                              data-influence="');
                __append(escape(data.hot[j].influence));
                __append('"\n                              data-time="');
                __append(escape(hottime[0]));
                __append('"\n                              data-con="');
                __append(escape(data.hot[j].condition));
                __append('">');
                __append(escape(data.hot[j].name));
                __append("</span>\n                        <time>");
                __append(escape(hottime[0]));
                __append("</time>\n                    </li>\n                    ")
            }
            __append('\n                </ul>\n            </section>\n        </div>\n    </div>\n\n    <section class="content-list">\n        <div class="waterfall">\n            ');
            for (var k = 0; k < data.all.length; k++) {
                __append("\n            ");
                var alltime = [];
                __append("\n            ");
                alltime = data.all[k].createtime.split(" ");
                __append('\n            <article class="item dynamic-detail" data-name="');
                __append(escape(data.all[k].name));
                __append('"\n                     data-innername="');
                __append(escape(data.all[k].innername));
                __append('"\n                     data-describe="');
                __append(escape(data.all[k].describe));
                __append('"\n                     data-id="');
                __append(escape(data.all[k].id));
                __append('"\n                     data-type="all"\n                     data-influence="');
                __append(escape(data.all[k].influence));
                __append('"\n                     data-time="');
                __append(escape(alltime[0]));
                __append('"\n                     data-con="');
                __append(escape(data.all[k].condition));
                __append('">\n                <h5><span>');
                __append(escape(data.all[k].name));
                __append("</span>\n                    <time>");
                __append(escape(alltime[0]));
                __append('</time>\n                </h5>\n                <div class="content">');
                __append(escape(data.all[k].describe));
                __append("</div>\n            </article>\n            ")
            }
            __append("\n        </div>\n    </section>\n</div>\n<script>\n    $(function () {\n        $('.waterfall').waterfall({\n            item: \".item\",\n            colMinWidth: 320,\n            autoResize: true,\n            colGapWidth: 20\n        });\n    })\n</script>")
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        "use strict";
        var i = n(9), o = new i, r = 3e4, s = n(10);
        a.exports = function (e, t, n) {
            if (n) {
                r = n
            }
            var a = new i;
            var o = e.route;
            var s = e.type;
            a.ajax = $.ajax({
                url: o,
                data: {info: JSON.stringify(t)},
                dataType: "json",
                cache: false,
                type: s,
                timeout: r,
                success: function (e) {
                    a.emit("success", e)
                },
                error: function (e, t, n) {
                    if (e.status == "401") {
                        window.location.href = "/"
                    } else if (e.status == "413") {
                        setTimeout(function () {
                            window.location.href = "/"
                        }, 3e3)
                    } else if (e.status == "0") {
                        a.emit("error", "访问超时，请重试！")
                    } else {
                        a.emit("error", "error！")
                    }
                }
            });
            return a
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function () {
        function e() {
            this._events = this._events || {};
            this._maxListeners = this._maxListeners || t
        }

        var t = 10;
        e.prototype.setMaxListeners = function (e) {
            if (typeof e !== "number" || e < 0) {
                throw new TypeError("n must be a positive number")
            }
            this._maxListeners = e
        };
        e.prototype.emit = function (e) {
            var t, n, a, i, o, r;
            if (!this._events) {
                this._events = {}
            }
            if (e === "error") {
                if (!this._events.error || typeof this._events.error === "object" && !this._events.error.length) {
                    t = arguments[1];
                    if (t instanceof Error) {
                        throw t
                    } else {
                        throw new TypeError('Uncaught, unspecified "error" event.')
                    }
                }
            }
            n = this._events[e];
            if (typeof n === "undefined") {
                return false
            }
            if (typeof n === "function") {
                switch (arguments.length) {
                    case 1:
                        n.call(this);
                        break;
                    case 2:
                        n.call(this, arguments[1]);
                        break;
                    case 3:
                        n.call(this, arguments[1], arguments[2]);
                        break;
                    default:
                        a = arguments.length;
                        i = new Array(a - 1);
                        for (o = 1; o < a; o++) {
                            i[o - 1] = arguments[o]
                        }
                        n.apply(this, i)
                }
            } else if (typeof n === "object") {
                a = arguments.length;
                i = new Array(a - 1);
                for (o = 1; o < a; o++) {
                    i[o - 1] = arguments[o]
                }
                r = n.slice();
                a = r.length;
                for (o = 0; o < a; o++) {
                    r[o].apply(this, i)
                }
            }
            return true
        };
        e.prototype.addListener = function (e, t) {
            var n;
            if (typeof t !== "function") {
                return this
            }
            if (!this._events) {
                this._events = {}
            }
            if (this._events.newListener) {
                this.emit("newListener", e, typeof t.listener === "function" ? t.listener : t)
            }
            if (!this._events[e]) {
                this._events[e] = t
            } else if (typeof this._events[e] === "object") {
                this._events[e].push(t)
            } else {
                this._events[e] = [this._events[e], t]
            }
            if (typeof this._events[e] === "object" && !this._events[e].warned) {
                n = this._maxListeners;
                if (n && n > 0 && this._events[e].length > n) {
                    this._events[e].warned = true;
                    console.error("(node) warning: possible EventEmitter memory " + "leak detected. %d listeners added. " + "Use emitter.setMaxListeners() to increase limit.", this._events[e].length);
                    console.trace()
                }
            }
            return this
        };
        e.prototype.on = e.prototype.addListener;
        e.prototype.once = function (e, t) {
            if (typeof t !== "function") {
                throw new TypeError("listener must be a function")
            }
            function n() {
                this.removeListener(e, n);
                t.apply(this, arguments)
            }

            n.listener = t;
            this.on(e, n);
            return this
        };
        e.prototype.removeListener = function (e, t) {
            var n, a, i, o;
            if (typeof t !== "function") {
                throw new TypeError("listener must be a function")
            }
            if (!this._events || !this._events[e]) {
                return this
            }
            n = this._events[e];
            i = n.length;
            a = -1;
            if (n === t || typeof n.listener === "function" && n.listener === t) {
                delete this._events[e];
                if (this._events.removeListener) {
                    this.emit("removeListener", e, t)
                }
            } else if (typeof n === "object") {
                for (o = i; o-- > 0;) {
                    if (n[o] === t || n[o].listener && n[o].listener === t) {
                        a = o;
                        break
                    }
                }
                if (a < 0) {
                    return this
                }
                if (n.length === 1) {
                    n.length = 0;
                    delete this._events[e]
                } else {
                    n.splice(a, 1)
                }
                if (this._events.removeListener) {
                    this.emit("removeListener", e, t)
                }
            }
            return this
        };
        e.prototype.removeAllListeners = function (e) {
            var t, n;
            if (!this._events) {
                return this
            }
            if (!this._events.removeListener) {
                if (arguments.length === 0) {
                    this._events = {}
                } else if (this._events[e]) {
                    delete this._events[e]
                }
                return this
            }
            if (arguments.length === 0) {
                for (t in this._events) {
                    if (t === "removeListener")continue;
                    this.removeAllListeners(t)
                }
                this.removeAllListeners("removeListener");
                this._events = {};
                return this
            }
            n = this._events[e];
            if (typeof n === "function") {
                this.removeListener(e, n)
            } else {
                while (n.length) {
                    this.removeListener(e, n[n.length - 1])
                }
            }
            delete this._events[e];
            return this
        };
        e.prototype.listeners = function (e) {
            var t;
            if (!this._events || !this._events[e]) {
                t = []
            } else if (typeof this._events[e] === "function") {
                t = [this._events[e]]
            } else {
                t = this._events[e].slice()
            }
            return t
        };
        e.listenerCount = function (e, t) {
            var n;
            if (!e._events || !e._events[t]) {
                n = 0
            } else if (typeof e._events[t] === "function") {
                n = 1
            } else {
                n = e._events[t].length
            }
            return n
        };
        return e
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t) {
        var a = 0, i = 400, o = n(11);
        $("body").on("click", "#msg--container li button", function () {
            var e = $(this);
            e.parent().parent().addClass("fade-out");
            setTimeout(function () {
                e.parent().remove();
                clearTimeout(a)
            }, i)
        });
        t.alert = function (e, t, n) {
            $("html,body").css("overflow-y", "hidden");
            var a = document.getElementById("alert--wrap");
            if (a == null) {
                $("body").append(o({obj: e}));
                $("#alert--wrap").animate({opacity: 1}, 200)
            }
            var i = $("#alert--yes"), r = $("#alert--no");
            i.off();
            i.click(function () {
                if ($.isFunction(t)) {
                    t()
                }
                s()
            });
            r.off();
            r.click(function () {
                if ($.isFunction(n)) {
                    n()
                }
                s()
            });
            function s() {
                $("#alert--wrap").animate({opacity: 0}, 200, function () {
                    $("#alert--wrap").remove();
                    $("html,body").css("overflow-y", "auto")
                })
            }
        };
        t.msg = function (e) {
            var t, n = e.isOpen || false, o = $("#msg--container");
            e.waitTime = e.waitTime || 12e3;
            if (e.type == "success") {
                t = '<li data-type="success">' + e.content + '<button class="btn-flat">&times;</button></li>'
            } else if (e.type == "error") {
                t = '<li data-type="error">' + e.content + '<button class="btn-flat">&times;</button></li>'
            } else {
                t = '<li data-type="failed">' + e.content + '<button class="btn-flat">&times;</button></li>'
            }
            if (o.children("li").length == 0) {
                o.append(t).removeClass("fade-out")
            } else {
                o.addClass("fade-out");
                setTimeout(function () {
                    o.children("li").remove();
                    o.append(t).removeClass("fade-out")
                }, i)
            }
            if (!n) {
                clearTimeout(a);
                a = setTimeout(function () {
                    o.addClass("fade-out");
                    setTimeout(function () {
                        o.children("li").remove()
                    }, i)
                }, e.waitTime)
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="alert--wrap">\n    <div id="alert--container" class="text-center">\n        <h6 class="text-center">');
            __append(escape(obj.title));
            __append("</h6>\n\n        <p>");
            __append(escape(obj.content));
            __append('</p>\n\n        <div id="alert--actions">\n            <button id="alert--no" class="btn">取消</button>\n            <button id="alert--yes" class="btn">确定</button>\n        </div>\n    </div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, n) {
        n.exports = {
            china: function (e, t) {
                var n = ["red", "#ec943b", "#fed05a"], a = "#686868", i, o, r = $("#" + e), s = true, l = "50", h = parseInt($(".map-detail-width").width()) || parseInt($("#map-width").width());
                i = n;
                o = a;
                t = t.replace(/&quot;/g, '"');
                $(r).css("width", h - 40);
                $(r).css("height", h * .6);
                if (h < 500) {
                    s = false;
                    l = "0";
                    $(r).css("width", h + 80);
                    $(r).css("height", h * .6)
                }
                $.ajax({
                    url: t, dataType: "json", cache: false, type: "get", timeout: 15e3, success: function (t) {
                        if (h && document.getElementById(e) !== null) {
                            var n = echarts.init(document.getElementById(e));
                            n.setOption({
                                tooltip: {
                                    trigger: "item", formatter: function (e) {
                                        var t = (e.value * 100).toFixed(1) + "%", n;
                                        n = e.name;
                                        if (e.value !== "-") {
                                            n += " : " + t
                                        }
                                        return n
                                    }
                                },
                                dataRange: {
                                    show: true,
                                    x: l,
                                    y: "bottom",
                                    min: 0,
                                    max: .25,
                                    color: i,
                                    splitNumber: 5,
                                    formatter: function (e, t) {
                                        if (e > .15) {
                                            return ">20%"
                                        } else if (e < .05) {
                                            return "<5%"
                                        } else {
                                            return e * 100 + "%-" + t * 100 + "%"
                                        }
                                    }
                                },
                                series: [{
                                    name: "china",
                                    type: "map",
                                    mapType: "china",
                                    scaleLimit: {max: 5, min: .6},
                                    roam: false,
                                    mapLocation: {x: 80, y: "center", width: 900},
                                    itemStyle: {
                                        normal: {
                                            borderWidth: 2,
                                            borderColor: "#fff",
                                            color: o,
                                            label: {
                                                show: s,
                                                textStyle: {color: "#686868", fontFamily: "微软雅黑", fontSize: 12}
                                            }
                                        },
                                        emphasis: {
                                            borderWidth: 2,
                                            borderColor: "#fff",
                                            color: "#f5c11f",
                                            label: {show: true, textStyle: {color: "#654e02", fontFamily: "微软雅黑"}}
                                        }
                                    },
                                    data: t
                                }]
                            })
                        }
                    }
                })
            }, world: function (e, t) {
                var n = ["red", "#ec943b", "#fed05a"], a = "#686868", i, o, r = $("#" + e), s = "50", l = parseInt($(".map-detail-width").width()) || parseInt($("#map-width").width());
                i = n;
                o = a;
                t = t.replace(/&quot;/g, '"');
                $(r).css("width", l - 40);
                $(r).css("height", l * .6);
                if (l < 500) {
                    $(r).css("width", l + 80);
                    $(r).css("height", l * .6 + 20);
                    s = "0"
                }
                $.ajax({
                    url: t, dataType: "json", cache: false, type: "get", timeout: 15e3, success: function (t) {
                        if (l && document.getElementById(e) !== null) {
                            var n = echarts.init(document.getElementById(e));
                            n.setOption({
                                tooltip: {
                                    trigger: "item", formatter: function (e) {
                                        var t = (e.value * 100).toFixed(1) + "%", n;
                                        "";
                                        n = e.name;
                                        if (e.value !== "-") {
                                            n += " : " + t
                                        }
                                        return n
                                    }
                                },
                                dataRange: {
                                    show: true,
                                    x: s,
                                    y: "bottom",
                                    min: 0,
                                    max: .25,
                                    color: i,
                                    splitNumber: 5,
                                    formatter: function (e, t) {
                                        if (e > .15) {
                                            return ">20%"
                                        } else if (e < .05) {
                                            return "<5%"
                                        } else {
                                            return e * 100 + "%-" + t * 100 + "%"
                                        }
                                    }
                                },
                                series: [{
                                    name: "world",
                                    type: "map",
                                    mapType: "world",
                                    roam: false,
                                    scaleLimit: {max: 5, min: .6},
                                    mapLocation: {x: "left", y: "center"},
                                    itemStyle: {
                                        normal: {borderWidth: 2, borderColor: "#fff", color: o, label: {show: false}},
                                        emphasis: {
                                            borderWidth: 2,
                                            borderColor: "#fff",
                                            color: "#f5c11f",
                                            label: {show: false}
                                        }
                                    },
                                    data: t,
                                    nameMap: {
                                        Afghanistan: "阿富汗",
                                        Angola: "安哥拉",
                                        Albania: "阿尔巴尼亚",
                                        "United Arab Emirates": "阿联酋",
                                        Argentina: "阿根廷",
                                        Armenia: "亚美尼亚",
                                        "French Southern and Antarctic Lands": "法属南半球和南极领地",
                                        Australia: "澳大利亚",
                                        Austria: "奥地利",
                                        Azerbaijan: "阿塞拜疆",
                                        Burundi: "布隆迪",
                                        Belgium: "比利时",
                                        Benin: "贝宁",
                                        "Burkina Faso": "布基纳法索",
                                        Bangladesh: "孟加拉国",
                                        Bulgaria: "保加利亚",
                                        "The Bahamas": "巴哈马",
                                        "Bosnia and Herzegovina": "波斯尼亚和黑塞哥维那",
                                        Belarus: "白俄罗斯",
                                        Belize: "伯利兹",
                                        Bermuda: "百慕大",
                                        Bolivia: "玻利维亚",
                                        Brazil: "巴西",
                                        Brunei: "文莱",
                                        Bhutan: "不丹",
                                        Botswana: "博茨瓦纳",
                                        "Central African Republic": "中非共和国",
                                        Canada: "加拿大",
                                        Switzerland: "瑞士",
                                        Chile: "智利",
                                        China: "中国",
                                        "Ivory Coast": "象牙海岸",
                                        Cameroon: "喀麦隆",
                                        "Democratic Republic of the Congo": "刚果民主共和国",
                                        "Republic of the Congo": "刚果共和国",
                                        Colombia: "哥伦比亚",
                                        "Costa Rica": "哥斯达黎加",
                                        Cuba: "古巴",
                                        "Northern Cyprus": "北塞浦路斯",
                                        Cyprus: "塞浦路斯",
                                        "Czech Republic": "捷克共和国",
                                        Germany: "德国",
                                        Djibouti: "吉布提",
                                        Denmark: "丹麦",
                                        "Dominican Republic": "多明尼加共和国",
                                        Algeria: "阿尔及利亚",
                                        Ecuador: "厄瓜多尔",
                                        Egypt: "埃及",
                                        Eritrea: "厄立特里亚",
                                        Spain: "西班牙",
                                        Estonia: "爱沙尼亚",
                                        Ethiopia: "埃塞俄比亚",
                                        Finland: "芬兰",
                                        Fiji: "斐",
                                        "Falkland Islands": "福克兰群岛",
                                        France: "法国",
                                        Gabon: "加蓬",
                                        "United Kingdom": "英国",
                                        Georgia: "格鲁吉亚",
                                        Ghana: "加纳",
                                        Guinea: "几内亚",
                                        Gambia: "冈比亚",
                                        "Guinea Bissau": "几内亚比绍",
                                        "Equatorial Guinea": "赤道几内亚",
                                        Greece: "希腊",
                                        Greenland: "格陵兰",
                                        Guatemala: "危地马拉",
                                        "French Guiana": "法属圭亚那",
                                        Guyana: "圭亚那",
                                        Honduras: "洪都拉斯",
                                        Croatia: "克罗地亚",
                                        Haiti: "海地",
                                        Hungary: "匈牙利",
                                        Indonesia: "印尼",
                                        India: "印度",
                                        Ireland: "爱尔兰",
                                        Iran: "伊朗",
                                        Iraq: "伊拉克",
                                        Iceland: "冰岛",
                                        Israel: "以色列",
                                        Italy: "意大利",
                                        Jamaica: "牙买加",
                                        Jordan: "约旦",
                                        Japan: "日本",
                                        Kazakhstan: "哈萨克斯坦",
                                        Kenya: "肯尼亚",
                                        Kyrgyzstan: "吉尔吉斯斯坦",
                                        Cambodia: "柬埔寨",
                                        "South Korea": "韩国",
                                        Kosovo: "科索沃",
                                        Kuwait: "科威特",
                                        Laos: "老挝",
                                        Lebanon: "黎巴嫩",
                                        Liberia: "利比里亚",
                                        Libya: "利比亚",
                                        "Sri Lanka": "斯里兰卡",
                                        Lesotho: "莱索托",
                                        Lithuania: "立陶宛",
                                        Luxembourg: "卢森堡",
                                        Latvia: "拉脱维亚",
                                        Morocco: "摩洛哥",
                                        Moldova: "摩尔多瓦",
                                        Madagascar: "马达加斯加",
                                        Mexico: "墨西哥",
                                        Macedonia: "马其顿",
                                        Mali: "马里",
                                        Myanmar: "缅甸",
                                        Montenegro: "黑山",
                                        Mongolia: "蒙古",
                                        Mozambique: "莫桑比克",
                                        Mauritania: "毛里塔尼亚",
                                        Malawi: "马拉维",
                                        Malaysia: "马来西亚",
                                        Namibia: "纳米比亚",
                                        "New Caledonia": "新喀里多尼亚",
                                        Niger: "尼日尔",
                                        Nigeria: "尼日利亚",
                                        Nicaragua: "尼加拉瓜",
                                        Netherlands: "荷兰",
                                        Norway: "挪威",
                                        Nepal: "尼泊尔",
                                        "New Zealand": "新西兰",
                                        Oman: "阿曼",
                                        Pakistan: "巴基斯坦",
                                        Panama: "巴拿马",
                                        Peru: "秘鲁",
                                        Philippines: "菲律宾",
                                        "Papua New Guinea": "巴布亚新几内亚",
                                        Poland: "波兰",
                                        "Puerto Rico": "波多黎各",
                                        "North Korea": "北朝鲜",
                                        Portugal: "葡萄牙",
                                        Paraguay: "巴拉圭",
                                        Qatar: "卡塔尔",
                                        Romania: "罗马尼亚",
                                        Russia: "俄罗斯",
                                        Rwanda: "卢旺达",
                                        "Western Sahara": "西撒哈拉",
                                        "Saudi Arabia": "沙特阿拉伯",
                                        Sudan: "苏丹",
                                        "South Sudan": "南苏丹",
                                        Senegal: "塞内加尔",
                                        "Solomon Islands": "所罗门群岛",
                                        "Sierra Leone": "塞拉利昂",
                                        "El Salvador": "萨尔瓦多",
                                        Somaliland: "索马里兰",
                                        Somalia: "索马里",
                                        "Republic of Serbia": "塞尔维亚共和国",
                                        Suriname: "苏里南",
                                        Slovakia: "斯洛伐克",
                                        Slovenia: "斯洛文尼亚",
                                        Sweden: "瑞典",
                                        Swaziland: "斯威士兰",
                                        Syria: "叙利亚",
                                        Chad: "乍得",
                                        Togo: "多哥",
                                        Thailand: "泰国",
                                        Tajikistan: "塔吉克斯坦",
                                        Turkmenistan: "土库曼斯坦",
                                        "East Timor": "东帝汶",
                                        "Trinidad and Tobago": "特里尼达和多巴哥",
                                        Tunisia: "突尼斯",
                                        Turkey: "土耳其",
                                        "United Republic of Tanzania": "坦桑尼亚联合共和国",
                                        Uganda: "乌干达",
                                        Ukraine: "乌克兰",
                                        Uruguay: "乌拉圭",
                                        "United States of America": "美国",
                                        Uzbekistan: "乌兹别克斯坦",
                                        Venezuela: "委内瑞拉",
                                        Vietnam: "越南",
                                        Vanuatu: "瓦努阿图",
                                        "West Bank": "西岸",
                                        Yemen: "也门",
                                        "South Africa": "南非",
                                        Zambia: "赞比亚",
                                        Zimbabwe: "津巴布韦"
                                    }
                                }]
                            })
                        }
                    }
                })
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, , function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="dynamic-dev-statistics" class="statistics-grid">\n    <div class="map-wait">\n        <div class="row"></div>\n    </div>\n</div>')
        }
        return __output.join("")
    }
}, , , , , function (e, t, n) {
    var a;
    !(a = function (e, t) {
        t.isNull = function (e) {
            if (e !== 0 && (e == "" || e == undefined || e == null)) {
                return true
            } else {
                var t = "^[ ]+$";
                var n = new RegExp(t);
                if (!n.test(e)) {
                    return false
                } else {
                    return true
                }
            }
        };
        t.isIP = function (e) {
            if (this.isNull(e))return false;
            var t = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/g;
            if (t.test(e)) {
                if (RegExp.$1 < 256 && RegExp.$2 < 256 && RegExp.$3 < 256 && RegExp.$4 < 256)return true
            }
            return false
        };
        t.isIPorDomain = function (e) {
            if (this.isNull(e))return false;
            var t = e.indexOf("//"), n, a, i = e;
            if (t != -1) {
                i = i.substring(t + 2)
            }
            n = i.indexOf("/");
            if (n != -1) {
                i = i.substring(0, n)
            }
            a = i.indexOf(":");
            if (a != -1) {
                i = i.substring(a + 1)
            }
            if (i > 65536) {
                return false
            }
            var o = /^((http|https|HTTP|HTTPS):\/\/)?[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\.?(:\d{0,5})?\/?([\w-\/]*)\.?([a-zA-Z]*)$/;
            if (o.test(e)) {
                var r = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
                var s = r.test(e);
                if (s) {
                    return e.split(".").every(function (e) {
                        if (e.length > 1 && e.charAt(0) === "0") {
                            return false
                        } else if (parseInt(e, 10) > 255) {
                            return false
                        }
                        return true
                    })
                }
                return true
            }
            return false
        };
        t.isURL = function (e) {
            if (this.isNull(e)) {
                return false
            }
            var t = "^((https|http|ftp|rtsp|mms)?://)" + "?(([0-9a-z_!~*'().&=+$%-]+: )?[0-9a-z_!~*'().&=+$%-]+@)?" + "(([0-9]{1,3}.){3}[0-9]{1,3}" + "|" + "([0-9a-z_!~*'()-]+.)*" + "([0-9a-z][0-9a-z-]{0,61})?[0-9a-z]." + "[a-z]{2,6})" + "(:[0-9]{1,4})?" + "((/?)|" + "(/[0-9a-z_!~*'().;?:@&=+$,%#-]+)+/?)$";
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isInteger = function (e) {
            if (this.isNull(e))return false;
            var t = /^[-]{0,1}[0-9]{1,}$/;
            return t.test(e)
        };
        t.checkMobile = function (e) {
            var t = /^[1][1-9][0-9]{9}$/;
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isNumber = function (e) {
            if (this.isNull(e))return false;
            var t = "^[0-9]+$";
            var n = new RegExp(t);
            return n.test(e)
        };
        t.isDecimal = function (e) {
            if (this.isNull(e))return false;
            if (isInteger(e))return true;
            var t = /^[-]{0,1}(\d+)[\.]+(\d+)$/;
            if (t.test(e)) {
                if (RegExp.$1 == 0 && RegExp.$2 == 0)return false;
                return true
            } else {
                return false
            }
        };
        t.isPort = function (e) {
            if (this.isNull(e))return false;
            return isNumber(e) && e < 65536
        };
        t.isEmail = function (e) {
            if (this.isNull(e))return false;
            var t = /^[-_A-Za-z0-9]+@([_A-Za-z0-9]+\.)+[A-Za-z0-9]{2,3}$/;
            if (t.test(e))return true;
            return false
        };
        t.isMoney = function (e) {
            if (this.isNull(e))return false;
            var t = "^[0-9]+[.][0-9]{0,3}$";
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isNumberOr_Letter = function (e) {
            if (this.isNull(e))return false;
            var t = "^[0-9a-zA-Z_]+$";
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isNumberOrLetter = function (e) {
            if (this.isNull(e))return false;
            var t = "^[0-9a-zA-Z]+$";
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isChinaOrNumbOrLett = function (e) {
            if (this.isNull(e))return false;
            var t = "^[0-9a-zA-Z一-龥]+$";
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isChinaOrNumbOrLettOrSign = function (e) {
            if (this.isNull(e))return false;
            var t = '^[0-9 a-zA-Z,.;:"一-龥]+$';
            var n = new RegExp(t);
            if (n.test(e)) {
                return true
            } else {
                return false
            }
        };
        t.isDate = function (e, t) {
            if (this.isNull(e))return false;
            if (t == null)t = "yyyyMMdd";
            var n = t.indexOf("yyyy");
            if (n == -1)return false;
            var a = e.substring(n, n + 4);
            var i = t.indexOf("MM");
            if (i == -1)return false;
            var o = e.substring(i, i + 2);
            var r = t.indexOf("dd");
            if (r == -1)return false;
            var s = e.substring(r, r + 2);
            if (!isNumber(a) || a > "2100" || a < "1900")return false;
            if (!isNumber(o) || o > "12" || o < "01")return false;
            if (s > getMaxDay(a, o) || s < "01")return false;
            return true
        };
        t.getMaxDay = function (e, t) {
            if (t == 4 || t == 6 || t == 9 || t == 11)return "30";
            if (t == 2)if (e % 4 == 0 && e % 100 != 0 || e % 400 == 0)return "29"; else return "28";
            return "31"
        };
        t.isLastMatch = function (e, t) {
            var n = e.lastIndexOf(t);
            if (e.length == n + t.length)return true;
            return false
        };
        t.isFirstMatch = function (e, t) {
            var n = e.indexOf(t);
            if (n == 0)return true;
            return false
        };
        t.isMatch = function (e, t) {
            if (this.isNull(e) || this.isNull(t))return false;
            var n = e.indexOf(t);
            if (n == -1)return false;
            return true
        };
        t.checkTwoDate = function (e, t) {
            if (!isDate(e)) {
                alert("起始日期不正确!");
                return false
            } else if (!isDate(t)) {
                alert("终止日期不正确!");
                return false
            } else if (e > t) {
                alert("起始日期不能大于终止日期!");
                return false
            }
            return true
        };
        t.checkEmail = function (e) {
            if (this.isNull(e))return false;
            var t = /^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
            if (t.test(e)) {
                return true
            } else {
                alert("您输入的Email地址格式不正确！");
                return false
            }
        };
        t.checkPhone = function (e) {
            var t = /^[0][1-9]{2,3}-[0-9]{5,10}$/;
            var n = /^[1-9]{1}[0-9]{5,8}$/;
            if (e.length > 9) {
                if (t.test(e)) {
                    return true
                } else {
                    return false
                }
            } else {
                if (n.test(e)) {
                    return true
                } else {
                    return false
                }
            }
        };
        t.checkDate = function (e) {
            if (this.isNull(e))return false;
            if (e.length != 8 || !isNumber(e))return false;
            var t = e.substring(0, 4);
            if (t > "2100" || t < "1900")return false;
            var n = e.substring(4, 6);
            if (n > "12" || n < "01")return false;
            var a = e.substring(6, 8);
            if (a > getMaxDay(t, n) || a < "01")return false;
            return true
        };
        t.checkPeriod = function (e, t) {
            if (!checkDate(e)) {
                console.log("起始日期不正确!");
                return false
            } else if (!checkDate(t)) {
                console.log("终止日期不正确!");
                return false
            } else if (e > t) {
                console.log("起始日期不能大于终止日期!");
                return false
            }
            return true
        };
        t.checkMailCode = function (e) {
            if (this.isNull(e))return false;
            if (e.length != 6) {
                return false
            }
            if (!t.isNumber(e)) {
                return false
            }
            return true
        };
        t.cTrim = function (e, t) {
            var n = " ";
            var a = -1;
            if (t == 0 || t == 1) {
                while (n == " ") {
                    ++a;
                    n = e.substr(a, 1)
                }
                e = e.substring(a)
            }
            if (t == 0 || t == 2) {
                n = " ";
                a = e.length;
                while (n == " ") {
                    --a;
                    n = e.substr(a, 1)
                }
                e = e.substring(0, a + 1)
            }
            return e
        };
        t.isJson = function (e) {
            try {
                JSON.parse(e);
                return true
            } catch (t) {
                console.log("ee=" + t);
                var n = typeof e == "object" && Object.prototype.toString.call(e).toLowerCase() == "[object object]" && !e.length;
                return n
            }
        };
        t.isIP = function (e) {
            var t = e;
            var n = /http(s)?:/;
            var a = new RegExp(n);
            if (t.indexOf("localhost")) {
                t = t.replace("localhost", "127.0.0.1")
            }
            if (a.test(t) == true) {
                return true
            } else {
                return false
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = n(21);
            if (!e || e && $.isEmptyObject(e)) {
                e = window.md5
            }
            var t = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
            var a = 4, i = t.length, o = "";
            for (var r = 0; r < a; r++) {
                var s = Math.floor(Math.random() * i);
                o += t[s]
            }
            return o
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, n) {
        "use strict";
        function a(e, t) {
            var n = (e & 65535) + (t & 65535), a = (e >> 16) + (t >> 16) + (n >> 16);
            return a << 16 | n & 65535
        }

        function i(e, t) {
            return e << t | e >>> 32 - t
        }

        function o(e, t, n, o, r, s) {
            return a(i(a(a(t, e), a(o, s)), r), n)
        }

        function r(e, t, n, a, i, r, s) {
            return o(t & n | ~t & a, e, t, i, r, s)
        }

        function s(e, t, n, a, i, r, s) {
            return o(t & a | n & ~a, e, t, i, r, s)
        }

        function l(e, t, n, a, i, r, s) {
            return o(t ^ n ^ a, e, t, i, r, s)
        }

        function h(e, t, n, a, i, r, s) {
            return o(n ^ (t | ~a), e, t, i, r, s)
        }

        function d(e, t) {
            e[t >> 5] |= 128 << t % 32;
            e[(t + 64 >>> 9 << 4) + 14] = t;
            var n, i, o, d, c, p = 1732584193, m = -271733879, u = -1732584194, V = 271733878;
            for (n = 0; n < e.length; n += 16) {
                i = p;
                o = m;
                d = u;
                c = V;
                p = r(p, m, u, V, e[n], 7, -680876936);
                V = r(V, p, m, u, e[n + 1], 12, -389564586);
                u = r(u, V, p, m, e[n + 2], 17, 606105819);
                m = r(m, u, V, p, e[n + 3], 22, -1044525330);
                p = r(p, m, u, V, e[n + 4], 7, -176418897);
                V = r(V, p, m, u, e[n + 5], 12, 1200080426);
                u = r(u, V, p, m, e[n + 6], 17, -1473231341);
                m = r(m, u, V, p, e[n + 7], 22, -45705983);
                p = r(p, m, u, V, e[n + 8], 7, 1770035416);
                V = r(V, p, m, u, e[n + 9], 12, -1958414417);
                u = r(u, V, p, m, e[n + 10], 17, -42063);
                m = r(m, u, V, p, e[n + 11], 22, -1990404162);
                p = r(p, m, u, V, e[n + 12], 7, 1804603682);
                V = r(V, p, m, u, e[n + 13], 12, -40341101);
                u = r(u, V, p, m, e[n + 14], 17, -1502002290);
                m = r(m, u, V, p, e[n + 15], 22, 1236535329);
                p = s(p, m, u, V, e[n + 1], 5, -165796510);
                V = s(V, p, m, u, e[n + 6], 9, -1069501632);
                u = s(u, V, p, m, e[n + 11], 14, 643717713);
                m = s(m, u, V, p, e[n], 20, -373897302);
                p = s(p, m, u, V, e[n + 5], 5, -701558691);
                V = s(V, p, m, u, e[n + 10], 9, 38016083);
                u = s(u, V, p, m, e[n + 15], 14, -660478335);
                m = s(m, u, V, p, e[n + 4], 20, -405537848);
                p = s(p, m, u, V, e[n + 9], 5, 568446438);
                V = s(V, p, m, u, e[n + 14], 9, -1019803690);
                u = s(u, V, p, m, e[n + 3], 14, -187363961);
                m = s(m, u, V, p, e[n + 8], 20, 1163531501);
                p = s(p, m, u, V, e[n + 13], 5, -1444681467);
                V = s(V, p, m, u, e[n + 2], 9, -51403784);
                u = s(u, V, p, m, e[n + 7], 14, 1735328473);
                m = s(m, u, V, p, e[n + 12], 20, -1926607734);
                p = l(p, m, u, V, e[n + 5], 4, -378558);
                V = l(V, p, m, u, e[n + 8], 11, -2022574463);
                u = l(u, V, p, m, e[n + 11], 16, 1839030562);
                m = l(m, u, V, p, e[n + 14], 23, -35309556);
                p = l(p, m, u, V, e[n + 1], 4, -1530992060);
                V = l(V, p, m, u, e[n + 4], 11, 1272893353);
                u = l(u, V, p, m, e[n + 7], 16, -155497632);
                m = l(m, u, V, p, e[n + 10], 23, -1094730640);
                p = l(p, m, u, V, e[n + 13], 4, 681279174);
                V = l(V, p, m, u, e[n], 11, -358537222);
                u = l(u, V, p, m, e[n + 3], 16, -722521979);
                m = l(m, u, V, p, e[n + 6], 23, 76029189);
                p = l(p, m, u, V, e[n + 9], 4, -640364487);
                V = l(V, p, m, u, e[n + 12], 11, -421815835);
                u = l(u, V, p, m, e[n + 15], 16, 530742520);
                m = l(m, u, V, p, e[n + 2], 23, -995338651);
                p = h(p, m, u, V, e[n], 6, -198630844);
                V = h(V, p, m, u, e[n + 7], 10, 1126891415);
                u = h(u, V, p, m, e[n + 14], 15, -1416354905);
                m = h(m, u, V, p, e[n + 5], 21, -57434055);
                p = h(p, m, u, V, e[n + 12], 6, 1700485571);
                V = h(V, p, m, u, e[n + 3], 10, -1894986606);
                u = h(u, V, p, m, e[n + 10], 15, -1051523);
                m = h(m, u, V, p, e[n + 1], 21, -2054922799);
                p = h(p, m, u, V, e[n + 8], 6, 1873313359);
                V = h(V, p, m, u, e[n + 15], 10, -30611744);
                u = h(u, V, p, m, e[n + 6], 15, -1560198380);
                m = h(m, u, V, p, e[n + 13], 21, 1309151649);
                p = h(p, m, u, V, e[n + 4], 6, -145523070);
                V = h(V, p, m, u, e[n + 11], 10, -1120210379);
                u = h(u, V, p, m, e[n + 2], 15, 718787259);
                m = h(m, u, V, p, e[n + 9], 21, -343485551);
                p = a(p, i);
                m = a(m, o);
                u = a(u, d);
                V = a(V, c)
            }
            return [p, m, u, V]
        }

        function c(e) {
            var t, n = "";
            for (t = 0; t < e.length * 32; t += 8) {
                n += String.fromCharCode(e[t >> 5] >>> t % 32 & 255)
            }
            return n
        }

        function p(e) {
            var t, n = [];
            n[(e.length >> 2) - 1] = undefined;
            for (t = 0; t < n.length; t += 1) {
                n[t] = 0
            }
            for (t = 0; t < e.length * 8; t += 8) {
                n[t >> 5] |= (e.charCodeAt(t / 8) & 255) << t % 32
            }
            return n
        }

        function m(e) {
            return c(d(p(e), e.length * 8))
        }

        function u(e, t) {
            var n, a = p(e), i = [], o = [], r;
            i[15] = o[15] = undefined;
            if (a.length > 16) {
                a = d(a, e.length * 8)
            }
            for (n = 0; n < 16; n += 1) {
                i[n] = a[n] ^ 909522486;
                o[n] = a[n] ^ 1549556828
            }
            r = d(i.concat(p(t)), 512 + t.length * 8);
            return c(d(o.concat(r), 512 + 128))
        }

        function V(e) {
            var t = "0123456789abcdef", n = "", a, i;
            for (i = 0; i < e.length; i += 1) {
                a = e.charCodeAt(i);
                n += t.charAt(a >>> 4 & 15) + t.charAt(a & 15)
            }
            return n
        }

        function U(e) {
            return unescape(encodeURIComponent(e))
        }

        function f(e) {
            return m(U(e))
        }

        function _(e) {
            return V(f(e))
        }

        function g(e, t) {
            return u(U(e), U(t))
        }

        function y(e, t) {
            return V(g(e, t))
        }

        function b(e, t, n) {
            if (!t) {
                if (!n) {
                    return _(e)
                }
                return f(e)
            }
            if (!n) {
                return y(t, e)
            }
            return g(t, e)
        }

        n.exports = b
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, , function (e, t, n) {
    var a;
    !(a = function (e, t, n) {
        n.exports = function (e) {
            var t = $("body");
            t.off("keyup.password");
            t.on("keyup.password", e, function () {
                var e = $(this).val(), t = 0, n = $("#password-strength");
                if (e.length < 6) {
                    t = 1
                } else {
                    if (/[0-9]/.test(e)) {
                        t++
                    }
                    if (/[a-z]/.test(e)) {
                        t++
                    }
                    if (/[A-Z]/.test(e)) {
                        t++
                    }
                    if (/\W/.test(e) || /_/.test(e)) {
                        t++
                    }
                }
                switch (t) {
                    case 1:
                        n.removeClass().addClass("weak");
                        break;
                    case 2:
                        n.removeClass().addClass("mid");
                        break;
                    case 3:
                    case 4:
                        n.removeClass().addClass("strong");
                        break;
                    default:
                        n.removeClass()
                }
            })
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, , function (e, t, n) {
    var a;
    !(a = function () {
        n(1);
        n(4);
        n(3);
        if (!window._sdsGlobal) {
            window._sdsGlobal = {}
        }
        var e = window._sdsGlobal || this._sdsGlobal || {};
        e.$ele = {
            mainContainer: $("#user-main-container"),
            popupWrapper: $("#corner-popup-wrapper"),
            popupContent: $("#corner-popup-content"),
            fullPopWrap: $("#popup-content-wrapper")
        };
        e.tpl = {error: n(2)};
        e.validate = n(19);
        e.cornerWindow = function (t, n) {
            this.$ele.popupContent.empty().append(t);
            setTimeout(function () {
                e.$ele.popupWrapper.addClass("show")
            }, 10);
            if ($.isFunction(n)) {
                n()
            }
        };
        e.tplTransition = function (t, n, a) {
            if (_sdsGlobal._gc && $.isFunction(_sdsGlobal._gc)) {
                _sdsGlobal._gc();
                _sdsGlobal._gc = null
            }
            if (n) {
                $(".sidebar-nav-item").removeClass("active");
                $(n).addClass("active")
            }
            this.$ele.mainContainer.addClass("fade-out");
            setTimeout(function () {
                $("html,body").scrollTop(1);
                e.$ele.mainContainer.empty().append(t).removeClass("fade-out");
                if ($.isFunction(a)) {
                    a()
                }
            }, 200)
        };
        e.popupTransition = function (e, t) {
            this.$ele.fullPopWrap.find(".content").empty().append(e);
            this.$ele.fullPopWrap.addClass("show");
            $("html,body").css("overflow-y", "hidden");
            if ($.isFunction(t)) {
                t()
            }
        };
        $.numFormat = function (e) {
            var t = $.trim(e.toString());
            return t.search(/\D/) == -1 ? t.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") : t
        };
        $.fn.multiOn = function (e) {
            for (var t in e)for (var n in e[t])$(this).on(t, n, e[t][n])
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e) {
        return [{id: "#user-dashboard-link", module: n(27)}, {
            id: "#user-profile-link",
            module: n(51)
        }, {id: "#user-message-center-link", module: n(56), tpl: n(59)}, {
            id: "#user-login-history-link",
            module: n(60),
            tpl: n(62)
        }, {id: "#user-search-link", module: n(63), tpl: n(64)}, {
            id: "#user-site-check-link",
            module: n(65),
            tpl: n(70)
        }, {
            id: "#user-realtime-check-link", module: n(71), tpl: n(74)
        }, {id: "#user-favorite-link", module: n(75), tpl: n(80)}, {
            id: "#user-ip-domain-link",
            module: n(81),
            tpl: n(84)
        }, {id: "#user-statistics-link", module: n(85)}, {
            id: "#user-collection-link",
            module: n(91),
            tpl: n(93)
        }, {id: "#security-news-link", module: n(94)}]
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(8), a = n(28), i = n(29), o = n(30), r = n(31), s = {
                normal: n(44),
                region: n(45),
                wMonitor: n(46),
                wStatistics: n(47),
                wAllVul: n(48),
                secureDetail: n(49)
            }, l = n(50), h = e.user, d = null, c = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame, p = window.cancelAnimationFrame || window.mozCancelAnimationFrame, m;
            socket.emit("getsecuritymsg");
            var u = {
                normal: {
                    init: function () {
                        u.normal.setMonitorList();
                        u.normal.setHotSearches();
                        u.normal.setSecurityNews();
                        u.setCommonData();
                        u.eventInit();
                        u.gc()
                    }, setMonitorList: function () {
                        var e = $("#home-widget-monitor").children(".content");
                        t(i.monitor, {page: "1"}).on("success", function (t) {
                            setTimeout(function () {
                                e.empty().append(s.wMonitor({data: t.pagelist, userRole: h.role}));
                                u.normal.setMonitorDetail()
                            }, 200)
                        }).on("error", function (t) {
                            e.empty().html('<div class="error"><p>' + t + "</p></div>")
                        })
                    }, setMonitorDetail: function () {
                        if (h.role != 400) {
                            var e = $(".monitor-item");
                            e.each(function () {
                                var e = $(this), n = e.find(".sec-level-title"), a = e.find(".sec-level-detail"), o = "";
                                t(i.getSecureStatistics, {lsh: e.attr("data-lsh")}).on("success", function (e) {
                                    if (e.HIGH > 0) {
                                        n.addClass("high done").html("高危")
                                    } else if (e.MEDIUM > 0) {
                                        n.addClass("mid done").html("中危")
                                    } else if (e.LOW > 0) {
                                        n.addClass("low done").html("低危")
                                    } else {
                                        n.addClass("done").html("安全")
                                    }
                                    o = "<ul>" + "<li class='search-MonitorSite total' data-level='*'><span>总数</span><span><mark>" + e.TOTAL + "</mark></span></li>" + "<li class='search-MonitorSite high' data-level='security:high'><span>高危</span><span><mark>" + e.HIGH + "</mark></span></li>" + "<li class='search-MonitorSite mid' data-level='security:medium'><span>中危</span><span><mark>" + e.MEDIUM + "</mark></span></li>" + "<li class='search-MonitorSite low' data-level='security:low'><span>低危</span><span><mark>" + e.LOW + "</mark></span></li>" + "</ul>";
                                    a.html(o)
                                })
                            })
                        }
                    }, setSecurityNews: function () {
                        var e = $("#home-widget-security-event").children(".content");
                        t(o.securityEvent).on("success", function (t) {
                            var n = t.all, a = '<div class="widget-scroll"><ul class="list-unstyled">';
                            if (n.length < 0) {
                                e.html('<div class="empty"><p>暂时没有内容</p></div>');
                                return false
                            }
                            n.reverse().forEach(i);
                            function i(e) {
                                a += '<li title="' + e.name + '" data-describe="' + e.describe + '" data-innername="' + e.innername + '" data-influence="' + e.influence + '" data-time="' + e.createtime + '" data-condition="' + e.condition + '">' + '<span class="text-ellipsis">' + e.name + "</span>" + '<time class="pull-right">' + e.createtime.split(" ")[0] + "</time>" + "</li>"
                            }

                            a += "</ul></div>";
                            e.html(a);
                            if (n.length > 10) {
                                u.scrollAPI(".widget-scroll")
                            }
                        }).on("error", function (t) {
                            e.html('<div class="error"><p>' + t + "</p></div>")
                        })
                    }, setHotSearches: function () {
                        var e = $("#home-widget-hot-search").children(".content"), t = '<ul class="tag-clouds list-inline">';
                        if (!Array.isArray(l) && l.length < 1) {
                            console.warn("No hot search data!");
                            return false
                        }
                        l.forEach(n);
                        function n(e) {
                            t += '<li class="search-item" title="' + e + '" data-option="0"' + 'data-search-keyword="' + e + '" >' + e + "</li>"
                        }

                        t += "</ul>";
                        e.html(t)
                    }
                }, region: {
                    init: function () {
                        u.region.setMonitorData();
                        u.region.setBugList();
                        u.setCommonData();
                        u.eventInit();
                        u.gc()
                    }, setMonitorData: function () {
                        var e = $("#home-widget-dev").find(".content"), n = $("#home-widget-bugs").find(".content");
                        t(o.userStatistic).on("success", function (t) {
                            if (t.status === "success") {
                                e.empty().append(s.wAllVul({data: t.result.dev}));
                                n.empty().append(s.wStatistics({data: t.result}));
                                if (h.role == 200) {
                                    var a = [], i;
                                    t.result.monitorsite.forEach(function (e) {
                                        if (h.id !== e.createuser) {
                                            a.push(e.name)
                                        }
                                    });
                                    var o = a.length;
                                    if (o > 0) {
                                        if (o > 1) {
                                            i = " 等"
                                        } else {
                                            i = ""
                                        }
                                        var r = $("#home-widget-dev,#home-widget-bugs");
                                        if (r.children("h2").children("small").length == 0) {
                                            $('<small title="' + a.join("，") + '"> （<span style="color: #e9a512">' + a[0] + "</span>" + i + "）</small>").appendTo(r.children("h2"))
                                        }
                                    }
                                }
                            } else {
                                e.empty().html('<div class="empty-container"><div class="empty"><p>您尚未配置监测站点，点击<span data-target="user-site-check-link">添加监测站点</span></p></div></div>');
                                n.empty().html('<div class="empty"><p>您尚未配置监测站点，点击<span data-target="user-site-check-link">添加监测站点</span></p>')
                            }
                        }).on("error", function (t) {
                            e.empty().html('<div class="error-container"><div class="error"><p>' + t + "</p></div></div>");
                            n.empty().html('<div class="error"><p>' + t + "</p>")
                        })
                    }, setBugList: function () {
                        if (d) {
                            e(d)
                        }
                        socket.on("getsecuritymsg", function (t) {
                            var n = t.result.list;
                            if (n && n.length > 0) {
                                d = n.reverse();
                                e(d)
                            }
                        });
                        function e(e) {
                            var t = $("#home-widget-new-bugs").children(".content"), n = '<div class="widget-scroll"><ul class="list-unstyled">';
                            e.forEach(a);
                            function a(e) {
                                n += '<li data-id="' + e.id + '" data-title="' + e.title + '">' + '<span class="text-ellipsis" title="' + e.title + '">' + e.title + "</span>" + "&nbsp;&nbsp;检测出&nbsp;&nbsp;" + '<span class="text-ellipsis" title="' + e.plugin + '">' + e.plugin + "</span>" + '<time class="pull-right">' + e.time + "</time>" + "</li>"
                            }

                            n += "</ul></div>";
                            if (t.html() != "") {
                                t.empty();
                                setTimeout(function () {
                                    i()
                                }, 1e3)
                            } else {
                                i()
                            }
                            function i() {
                                t.html(n);
                                if (e.length > 10) {
                                    u.scrollAPI(".widget-scroll")
                                }
                            }
                        }
                    }
                }, eventInit: function () {
                    e.$ele.mainContainer.off();
                    e.$ele.mainContainer.multiOn({
                        click: {
                            "#home-widget-monitor .more": function () {
                                $("#user-site-check-link").trigger("click")
                            }, "span[data-target]": function () {
                                $("#" + $(this).attr("data-target")).trigger("click")
                            }, "#home-widget-security-event li": function () {
                                var t = $(this), n = {
                                    name: t.attr("title"),
                                    innername: t.attr("data-innername"),
                                    describe: t.attr("data-describe"),
                                    influence: t.attr("data-influence"),
                                    condition: t.attr("data-condition"),
                                    time: t.attr("data-time")
                                };
                                e.popupTransition(s.secureDetail({data: n}));
                                setTimeout(function () {
                                    chinaMap("china_vul_detail", "/statistic/getVulnerability?type=101&condition=" + n.condition);
                                    worldMap("world_vul_detail", "/statistic/getVulnerability?type=100&condition=" + n.condition)
                                }, 200)
                            }, "#home-widget-new-bugs li": function () {
                                r({c: 'id:"' + $(this).attr("data-id") + '"', q: 1})
                            }
                        }
                    })
                }, setCommonData: function () {
                    a({
                        targetID: "home-widget-s-history",
                        apiRoute: o.searchhistory,
                        emptyContent: "(。_。)还没有任何搜索历史",
                        emptySuggestion: "去搜搜看！",
                        emptyTargetID: "user-search-link",
                        isAllowDel: true,
                        delClass: "del-search-history",
                        isLayoutFix: true
                    });
                    a({
                        targetID: "home-widget-attention",
                        searchPrefix: "itag:",
                        apiRoute: o.getKeywords,
                        param: {page: "1"},
                        emptyContent: "(。_。)还没有任何关注",
                        emptySuggestion: "去关注一些吧！",
                        emptyTargetID: "user-favorite-link",
                        isLayoutFix: true
                    });
                    a({
                        targetID: "home-widget-sys-rec",
                        searchPrefix: "stag:",
                        searchScope: 0,
                        apiRoute: o.systemRecommend,
                        param: {page: "1"},
                        emptyContent: "系统推荐为空",
                        emptySuggestion: "刷新一下页面吧!"
                    })
                }, scrollAPI: function (e) {
                    p(m);
                    m = undefined;
                    var t = $(e), n = t.children("ul"), a = 40, i = t.innerHeight(), o = n.outerHeight(), r = .4, s = o - i;
                    t.scrollTop(s);
                    if (!m) {
                        m = c(l)
                    }
                    function l() {
                        if (t.length == 0) {
                            p(m);
                            m = undefined;
                            return false
                        }
                        if (s > 1) {
                            s -= r
                        } else {
                            s = a;
                            n.children("li:last-child").insertBefore(n.children("li:first-child"))
                        }
                        t.scrollTop(s);
                        m = c(l)
                    }

                    t.off();
                    t.on({
                        mouseenter: function () {
                            p(m);
                            m = undefined;
                            t.off("mouseleave");
                            t.on("mouseleave", function () {
                                if (!m) {
                                    m = c(l)
                                }
                            })
                        }, click: function () {
                            t.off("mouseleave");
                            p(m);
                            m = undefined
                        }
                    })
                }, gc: function () {
                    e._gc = function () {
                        $(".widget-scroll").off();
                        e.$ele.mainContainer.off();
                        p(m);
                        m = undefined
                    }
                }
            };
            if (h.role == 100 || h.role == 200) {
                e.tplTransition(s.region, "#user-dashboard-link", u.region.init)
            } else {
                e.tplTransition(s.normal, "#user-dashboard-link", u.normal.init)
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        var i = n(8);
        a.exports = function (e) {
            if (!e.emptySuggestion)e.emptySuggestion = "试试刷新页面吧!";
            e.searchPrefix = e.searchPrefix || "";
            e.param = e.param || null;
            e.isLayoutFix = e.isLayoutFix || false;
            var t = $("#" + e.targetID).find(".content"), n, a;
            if (e.emptyTargetID) {
                a = '<div class="empty"><p>' + e.emptyContent + '，<span data-target="' + e.emptyTargetID + '">' + e.emptySuggestion + "</span></p></div>"
            } else {
                a = '<div class="empty"><p>' + e.emptyContent + "，" + e.emptySuggestion + "</p></div>"
            }
            i(e.apiRoute, e.param).on("success", function (i) {
                var o = undefined, r = "", s = "";
                if (Array.isArray(i) && i instanceof Array) {
                    o = i
                } else if (Array.isArray(i.list) && i.list instanceof Array) {
                    o = i.list
                } else if (Array.isArray(i.result) && i.result instanceof Array) {
                    o = i.result
                }
                if (e.isLayoutFix) {
                    n = $("<ul>").addClass("tag-clouds list-inline layout-fix")
                } else {
                    n = $("<ul>").addClass("tag-clouds list-inline")
                }
                if (o && o.length > 0) {
                    o.forEach(l);
                    t.empty().html(n);
                    if (e.isAllowDel === true && e.delClass) {
                        t.append('<div class="tag-clouds-pop"><div class="tag-clouds-pop-body">' + '<h4 class="tag-clouds-pop-title">确定要删除 <span class="title"></span> ?</h4>' + '<div class="action"><button class="cancel btn">取消</button><button class="confirm btn">确定</button></div>' + "</div></div>")
                    }
                } else {
                    t.empty().html(a)
                }
                function l(t) {
                    r = t.title || t.condition || t;
                    if (e.hasOwnProperty("searchScope")) {
                        s = e.searchScope
                    } else {
                        t.scope == "0" ? s = "0" : s = "1"
                    }
                    if (e.isAllowDel === true && e.delClass) {
                        var a = $("<li>").addClass(e.delClass);
                        a.append($("<span>").text(r).addClass("search-item").attr("data-search-keyword", e.searchPrefix + r).attr("data-option", s).attr("title", e.searchPrefix + r)).append($("<span>").text("x").addClass("del").attr("title", "删除"));
                        n.append(a)
                    } else {
                        n.append($("<li>").text(r).addClass("search-item").attr("data-search-keyword", e.searchPrefix + r).attr("data-option", s).attr("ttile", e.searchPrefix + r))
                    }
                }
            }).on("error", function (e) {
                t.empty().html('<div class="error"><p>' + e + "</p></div>")
            })
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    !(e.exports = {
        monitor: {type: "get", route: "/monitor"},
        addMonitorSite: {type: "post", route: "/monitor/addMonitorSite"},
        searchMonitorSite: {type: "get", route: "/monitor/searchMonitorSite"},
        getSecureStatistics: {type: "get", route: "/monitor/getSecureStatistics"},
        delMonitorSite: {type: "post", route: "/monitor/delMonitorSite"},
        updateMonitor: {type: "post", route: "/monitor/updateMyMonitor"}
    })
}, function (e, t, n) {
    !(e.exports = {
        userStatistic: {type: "get", route: "/main/userStatistic"},
        getKeywords: {type: "get", route: "/main/getKeywords"},
        systemRecommend: {type: "get", route: "/main/systemRecommend"},
        securityEvent: {type: "get", route: "/securityEvent"},
        searchhistory: {type: "get", route: "searchhistory"},
        getLoginHistory: {type: "get", route: "/getLoginHistory"},
        pageMessage: {type: "get", route: "/pageMessage"},
        updateMessage: {type: "post", route: "/updateMessage"},
        delMessage: {type: "post", route: "/delMessage"},
        getUnReadMsgAndNotice: {type: "get", route: "/getUnReadMsgAndNotice"}
    })
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        var i = {
            main: n(30),
            monitor: n(29),
            search: n(32),
            collection: n(33),
            attention: n(34),
            onlinecheck: n(35)
        }, o = n(10), r = n(8), s = n(36), l = n(28), h = _sdsGlobal, d = h.validate, c = n(37), p = {
            search: {
                main: n(39),
                result: n(40),
                sidebarData: n(41),
                error: n(42)
            }, ipSearch: n(43)
        }, m = h.user.role;
        a.exports = u;
        function u(e) {
            var t, n = "", a = "", s = false, l = $("#search-kw");
            e.q = parseInt(e.q);
            if (e.q !== 0 && e.q !== 1) {
                e.q = 1
            }
            l.attr("data-option", e.q);
            if (e.clear !== true && e.clear !== false) {
                e.clear = true
            }
            if (e.clear === true) {
                $("#search-tools").find("input").removeAttr("checked");
                l.removeAttr("data-extra").css("padding-left", 35);
                $("#search-tool-tags").empty()
            }
            e.p = parseInt(e.p);
            var u = l.attr("data-extra");
            e.c = $.trim(e.c);
            a = e.c;
            if (u && u != "") {
                e.c = e.c + " " + u
            }
            if (e.c === "") {
                o.msg({type: "failed", content: "请输入关键字"});
                return false
            }
            if (e.isHistory !== true) {
                history.pushState({
                    id: "#user-search-link",
                    module: "search",
                    handler: "search",
                    param: e
                }, "搜索|傻蛋科技", "")
            }
            if (d.isIPorDomain(e.c)) {
                s = true
            }
            if (e.searchType === "monitor") {
                n = "monitor";
                t = i.monitor.searchMonitorSite
            } else if (k(e.c) && m == 100) {
                n = "ipsearch";
                t = i.search.ipsearch
            } else if (!isNaN(e.p) && e.isHistory !== true) {
                n = "inSearchPages";
                t = i.search.search
            } else {
                n = "search";
                t = i.search.search
            }
            r(t, e).on("success", function (t) {
                if (t.type == "success" || n == "ipsearch") {
                    switch (n) {
                        case"ipsearch":
                            h.tplTransition(p.search.main({param: e, userRole: m}), "#user-search-link", function () {
                                var n = $("#user-search-result-list");
                                n.empty().append(p.ipSearch({data: t, param: e}));
                                g(e);
                                c()
                            });
                            break;
                        case"monitor":
                        case"search":
                            h.tplTransition(p.search.main({
                                data: t.result.result,
                                param: e,
                                userRole: m,
                                isIpOrDomain: s
                            }), "#user-search-link", function () {
                                _(t, e);
                                g(e);
                                V()
                            });
                            break;
                        default:
                            _(t, e)
                    }
                    U(a)
                } else {
                    f({e: t.result, q: e.q, c: e.c});
                    U(a)
                }
            }).on("error", function (t) {
                f({e: t, q: e.q, c: e.c});
                U(a)
            })
        }

        function V() {
            h.$ele.mainContainer.off();
            h.$ele.mainContainer.multiOn({
                click: {
                    "#btn-quick-add-favorite": function () {
                        var e = $.trim($("#search-kw").attr("data-option"));
                        $("#quick-add-favorite-window").addClass("show");
                        if (e == "1") {
                            $("#favorite-search-region-monitor").attr("checked", "checked")
                        } else {
                            $("#favorite-search-region-net").attr("checked", "checked")
                        }
                    }, "#cancel-quick-add-favorite": function () {
                        $("#quick-add-favorite-window").removeClass("show")
                    }, "#submit-quick-add-favorite": function () {
                        var e, t = {}, n = $("#favorite-title"), a = $("#favorite-tag"), s = $("#favorite-parse");
                        $(".feedback").removeAttr("data-feedback-msg");
                        if ($("#favorite-search-region-monitor").is(":checked")) {
                            e = "1"
                        } else {
                            e = "0"
                        }
                        t.title = $.trim(n.val());
                        t.tag = $.trim(a.val());
                        t.keyword = $.trim(s.val());
                        t.scope = e;
                        t.description = $.trim($("#favorite-description").val());
                        if (t.title === "") {
                            n.focus();
                            n.parent().attr("data-feedback-msg", "标题不能为空！");
                            return false
                        } else if (t.title.replace(/[a-zA-Z0-9_\u4e00-\u9fa5]/g, "").length > 0) {
                            n.focus();
                            n.parent().attr("data-feedback-msg", "只允许：汉字、字母、数字和下划线！");
                            return false
                        }
                        if (t.tag === "") {
                            a.focus();
                            a.parent().attr("data-feedback-msg", "标签不能为空！");
                            return false
                        }
                        if (t.keyword === "") {
                            s.focus();
                            s.parent().attr("data-feedback-msg", "搜索语法不能为空！");
                            return false
                        }
                        r(i.attention.addAttention, t).on("success", function (e) {
                            if (e.type == "success") {
                                o.msg({content: "添加我的关注成功。", type: "success"});
                                $("#quick-add-favorite-window").removeClass("show")
                            } else {
                                o.msg({content: "添加关注异常。", type: "failed"})
                            }
                        }).on("error", function (e) {
                            o.msg({content: "添加我的关注失败。" + e, type: "error"})
                        })
                    }, "#user-search .res-item .add-collection": function () {
                        var e = $(this);
                        if (e.attr("data-status") === "0") {
                            var t = {}, n = e.parent().parent().parent().parent();
                            t.finger_id = n.attr("data-id");
                            t.siteinfo = n.attr("data-host") || n.attr("data-ip");
                            t.title = n.find("h3 a").html() || n.find("h3").html();
                            r(i.collection.addCollection, t).on("success", function (t) {
                                if (t.type === "success") {
                                    o.msg({content: "收藏成功。", type: "success"});
                                    e.attr("data-status", "1")
                                } else if (t.type === "repeat") {
                                    o.msg({content: "该收藏已存在。", type: "error"});
                                    e.attr("data-status", "1")
                                } else {
                                    o.msg({content: t.type, type: "failed"})
                                }
                            }).on("error", function (e) {
                                o.msg({content: "添加收藏出错。" + e, type: "error"})
                            })
                        }
                    }, ".res-item .toggle-more-sm": function () {
                        if ($(this).attr("data-status") === "0") {
                            $(this).attr("data-status", "1");
                            $(this).prev().removeClass("collapse");
                            $(this).prev().prev().removeClass("collapse")
                        } else {
                            $(this).attr("data-status", "0");
                            $(this).prev().addClass("collapse");
                            $(this).prev().prev().addClass("collapse")
                        }
                    }, ".res-item .toggle-more-xs": function () {
                        if ($(this).attr("data-status") === "0") {
                            $(this).attr("data-status", "1");
                            $(this).parent().removeClass("collapse")
                        } else {
                            $(this).attr("data-status", "0");
                            $(this).parent().addClass("collapse")
                        }
                    }, "#pagination-search-result ul li a": function () {
                        var e, t = $("#search-kw"), n = t.attr("data-value"), a = parseInt($(this).parent().parent().attr("data-page-index")), i = t.attr("data-option");
                        if ($(this).hasClass("previous")) {
                            e = a - 1
                        } else if ($(this).hasClass("next")) {
                            e = a + 1
                        } else {
                            e = parseInt($(this).text())
                        }
                        u({c: n, p: e, q: i, clear: false})
                    }, ".trigger-search-btn": function () {
                        $("#search-btn").trigger("click")
                    }, ".trigger-advanced-search": function () {
                        $("#advanced-search").trigger("click")
                    }, "#add-to-onlinecheck": function () {
                        r(i.onlinecheck.sendrealtime, {
                            name: "默认",
                            url: $(this).attr("data-content")
                        }).on("success", function (e) {
                            if (e === "success") {
                                o.msg({type: "success", content: "添加成功"})
                            } else {
                                o.msg({type: "error", content: "添加失败:" + e})
                            }
                            $("#user-realtime-check-link").trigger("click")
                        }).on("error", function (e) {
                            o.msg({type: "error", content: "添加失败:" + e});
                            $("#user-realtime-check-link").trigger("click")
                        })
                    }
                }
            });
            h._gc = function () {
                h.$ele.mainContainer.off()
            }
        }

        function U(e) {
            $("#search-kw").attr({"data-value": e, value: e}).val(e);
            $("#search-suggestions").removeClass("active")
        }

        function f(e) {
            e.e = e.e || "未知错误！";
            e.q == 1 ? e.q = "监测域搜索" : e.q = "全网搜索";
            e.c = e.c || "";
            h.tplTransition(p.search.error({errorMsg: e.e, hint: e.q}), "#user-search-link", t);
            function t() {
                $("#search-kw").attr({"data-value": e.c, value: e.c}).val(e.c);
                g({isError: true});
                h._gc = function () {
                    h.$ele.mainContainer.off()
                }
            }
        }

        function _(e, t) {
            var n = $("#user-search-result-list");
            n.addClass("fade-out");
            $(document).scrollTop(1);
            n.empty().append(p.search.result({data: e.result.result.data, searchParam: t, type: "search"}));
            setTimeout(function () {
                n.removeClass("fade-out")
            }, 200);
            y();
            var a = e.result.result.recordNum;
            if (a > 0) {
                s.set("#pagination-search-result", a, t.p)
            }
        }

        function g(e) {
            l({
                targetID: "widget-search-history",
                apiRoute: i.search.searchhistory,
                emptyContent: "加在搜索历史出现了小问题",
                isAllowDel: true,
                delClass: "del-search-history",
                isLayoutFix: true
            });
            if (m == "400" || e.isError) {
                l({
                    targetID: "widget-sys-rec",
                    searchPrefix: "stag:",
                    searchScope: 0,
                    param: {page: "1"},
                    apiRoute: i.main.systemRecommend,
                    emptyContent: "暂时没有系统推荐",
                    isLayoutFix: true
                })
            } else {
                var t = e.c, n = t.split(" ");
                r(i.search.searchfacet, e).on("success", function (a) {
                    if (a.hasOwnProperty("facetlist") && a.facetlist.length > 0) {
                        var i = a.facetlist;
                        var o = function (e) {
                            if (e.condition) {
                                var a = $.trim(e.condition.replace(/:\s+/g, ":"));
                                if (e.hasOwnProperty("condition") && n.indexOf(a) === -1) {
                                    e.condition = t + " " + a
                                } else {
                                    e.condition = t
                                }
                            }
                        };
                        var r = function (e) {
                            if (e.area.length > 0) {
                                e.area.forEach(o)
                            }
                        };
                        i.forEach(r);
                        $("#user-sidebar").append(p.search.sidebarData({data: a.facetlist, queryOption: e.q}));
                        b()
                    }
                }).on("error", function (e) {
                    o.msg({content: "加载统计数据出错。" + e, type: "error"})
                })
            }
        }

        function y() {
            var e = $(".res-item"), t = e.css("line-height"), n = parseInt(t) * 8;
            e.each(function () {
                var e = $(this), t = e.children(".res-item-summary"), a = e.children(".res-item-components"), i = false, o = false;
                if (t.children(".content").innerHeight() > n) {
                    t.addClass("collapse").append('<button class="toggle-more toggle-more-xs btn-flat visible-xs" data-status="0"></button>');
                    i = true
                }
                if (a.children(".content").innerHeight() > n) {
                    a.addClass("collapse").append('<button class="toggle-more toggle-more-xs btn-flat visible-xs" data-status="0"></button>');
                    o = true
                }
                if (i || o) {
                    e.append('<button class="toggle-more toggle-more-sm btn-flat hidden-xs" data-status="0"></button>')
                }
            })
        }

        function b() {
            var e = $(".search-statistics .widget-content"), t = parseInt(e.find("table").css("line-height"));
            e.each(function () {
                var e = $(this).children(".table-wrapper"), n = e.height();
                if (n > t * 4) {
                    e.addClass("collapse");
                    $(this).append('<button class="toggle-more btn-flat" data-status="0"></button>')
                }
            });
            h.$ele.mainContainer.on("click", ".search-statistics .toggle-more", function () {
                if ($(this).attr("data-status") === "0") {
                    $(this).attr("data-status", "1");
                    $(this).prev().removeClass("collapse")
                } else {
                    $(this).attr("data-status", "0");
                    $(this).prev().addClass("collapse")
                }
            })
        }

        function k(e) {
            return !e.replace(/ip:((25[0-5]|2[0-4]\d|1\d{2}|\d{1,2})\.){3}(25[0-5]|2[0-4]\d|1\d{2}|\d{1,2})/, "").length
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    !(e.exports = {
        search: {type: "get", route: "search"},
        anosearch: {type: "get", route: "anosearch"},
        suggest: {type: "get", route: "autoComplete"},
        searchfacet: {type: "get", route: "searchfacet"},
        searchhistory: {type: "get", route: "searchhistory"},
        delsearchhistory: {type: "post", route: "/delsearchhistory"},
        getVulDetail: {type: "get", route: "/search/getVulDetail"},
        ipsearch: {type: "get", route: "ipsearch"}
    })
}, function (e, t, n) {
    !(e.exports = {
        getCollection: {type: "get", route: "/collection"},
        collectionDetail: {type: "get", route: "/collectionDetail"},
        delCollection: {type: "post", route: "/collection/delCollection"},
        addCollection: {type: "post", route: "/collection/addCollection"}
    })
}, function (e, t, n) {
    !(e.exports = {
        attentionInfo: {type: "get", route: "/attention"},
        getSystemList: {type: "get", route: "/attention/getSystemList"},
        delAttention: {type: "post", route: "/attention/delAttention"},
        addAttention: {type: "post", route: "/attention/addAttention"},
        checkAttention: {type: "post", route: "/attention/checkAttention"},
        updateAttention: {type: "post", route: "/attention/updateAttention"}
    })
}, function (e, t, n) {
    !(e.exports = {
        getrtmsglist: {type: "get", route: "/getrtmsglist"},
        sendrealtime: {type: "post", route: "/sendrealtime"},
        delrtmsg: {type: "post", route: "/delrtmsg"},
        getOnLinScanResult: {type: "get", route: "/getOnLinScanResult"},
        getFingerHistory: {type: "get", route: "/getFingerHistory"},
        updatemsg: {type: "post", route: "/updatemsg"}
    })
}, function (e, t, n) {
    var a;
    !(a = function (e, t) {
        t.set = function (e, n, a, i) {
            a = a || 1;
            a = parseInt(a);
            var o = t.pageNum(n, a), r = o.startPage, s = o.endPage, l = o.pageCount;
            if (l <= 1) {
                $(e).remove();
                return
            }
            var h = "", d, c, p;
            h += '<ul class="pagination" data-page-index="' + a + '">';
            if (i) {
                d = i + "&p=" + (a - 1)
            } else {
                d = "javascript:void(0)"
            }
            if (a > 1) {
                h += '<li><a href="' + d + '" class="previous" title="上一页" ><span aria-hidden="true">&laquo;</span></a></li>'
            }
            for (r; r <= s; r++) {
                if (i) {
                    c = i + "&p=" + r
                } else {
                    c = "javascript:void(0)"
                }
                if (r > 0) {
                    if (r == a) {
                        h += '<li class="active"><a href="' + c + '">' + r + "</a></li>"
                    } else {
                        h += '<li><a href="' + c + '">' + r + "</a></li>"
                    }
                } else {
                    s += 1
                }
            }
            if (i) {
                p = i + "&p=" + (a + 1)
            } else {
                p = "javascript:void(0)"
            }
            if (a != l) {
                h += '<li><a href="' + p + '" class="next" title="下一页">&raquo;</a></li>'
            }
            h += "</ul>";
            $(e).empty().html(h)
        };
        t.pageNum = function (e, t) {
            if (!t) {
                t = 1
            } else {
                t = parseInt(t)
            }
            var n = 0;
            if (e % 10 > 0) {
                n = parseInt(e / 10) + 1
            } else {
                n = parseInt(e / 10)
            }
            if (n > 100) {
                n = 100
            }
            var a, i, o = 6;
            if (t >= parseInt(o / 2) && n > o) {
                if (n < t + parseInt(o / 2)) {
                    a = n - (o - 1);
                    i = n
                } else {
                    a = t - parseInt(o / 2);
                    i = a + (o - 1)
                }
            } else {
                if (n > o) {
                    i = o
                } else {
                    i = n
                }
                a = 1
            }
            return {pageCount: n, startPage: a, endPage: i}
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = $("#ip-port-list"), t = e.innerHeight(), a = e.children("li").outerHeight(), i = a * 2 + 6 * 4;
            if (t > i) {
                e.height(i);
                e.parent().append('<button id="port-list-view-more" data-status="0" class="btn-flat"><i class="fa fa-angle-down"></i> 更多</button>')
            }
            var o = _sdsGlobal, r = n(10), s = n(35), l = n(8), h = n(38), d = o.$ele.mainContainer;
            $(window).off("scroll.fixIpCheckSummary");
            $(window).on("scroll.fixIpCheckSummary", function () {
                var e = $(this), t = $("#user-online-check-detail").find(".summary");
                if (t.length == 0)return false;
                if (e.scrollTop() >= 70) {
                    t.addClass("fixed")
                } else {
                    t.removeClass("fixed")
                }
            });
            d.multiOn({
                click: {
                    ".service-item .more": function () {
                        var e = $(this), t = e.parent().children(".history-list");
                        switch (e.attr("data-status")) {
                            case"0":
                                e.attr("data-status", 1);
                                e.parent().append('<span class="loading"><i class="fa fa-spinner fa-spin"></i> 加载中 </span>');
                                l(s.getFingerHistory, {id: $.trim(e.parent().attr("data-finger"))}).on("success", function (n) {
                                    e.attr("data-status", 2);
                                    e.parent().children(".loading").remove();
                                    t.append(h({data: n.result}));
                                    e.parent().append('<span class="loaded">收起</span>')
                                }).on("error", function (t) {
                                    r.msg({content: "实时检测查看历史详情错误！" + t, type: "error"});
                                    e.parent().children(".loading").remove()
                                });
                                break;
                            case"1":
                                break;
                            case"2":
                                break;
                            case"3":
                                e.attr("data-status", "2");
                                t.css("height", "auto");
                                e.parent().children("span.loaded").show();
                                break;
                            default:
                        }
                    }, ".service-item .loaded": function () {
                        var e = $(this), t = e.parent().children("span.more"), n = $(this).parent().children(".history-list"), a = n.children("li:first-child").outerHeight();
                        n.css("height", a - 15);
                        t.attr("data-status", "3");
                        e.hide()
                    }, "#ip-port-list li": function () {
                        var e = $("#" + $(this).attr("data-port")).offset();
                        if (e) {
                            $("body").animate({scrollTop: e.top - 100}, "fast")
                        }
                    }, "#port-list-view-more": function () {
                        var t = $(this);
                        if (t.attr("data-status") == "0") {
                            e.height("auto");
                            t.attr("data-status", "1");
                            t.html('<i class="fa fa-angle-up"></i> 收起')
                        } else {
                            e.height(i);
                            t.attr("data-status", "0");
                            t.html('<i class="fa fa-angle-down"></i> 更多')
                        }
                    }
                }
            });
            o._gc = function () {
                d.off();
                $(window).off("scroll.fixIpCheckSummary")
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            function sortObj(e) {
                if (!e.startOrder && !e.endOrder)throw"user-search-list.tpl:182 wrong param!";
                var t = "", n = "", a = e.targetObj;
                if (e.hideItem && Array.isArray(e.hideItem)) {
                    e.hideItem.forEach(function (e) {
                        if (a.hasOwnProperty(e)) {
                            delete a[e]
                        }
                    })
                }
                if (e.startOrder && Array.isArray(e.startOrder)) {
                    e.startOrder.forEach(function (n) {
                        e.isLeft ? t += o(n) : t += r(n)
                    })
                }
                if (e.endOrder && Array.isArray(e.endOrder)) {
                    e.endOrder.forEach(function (t) {
                        e.isLeft ? n += o(t) : n += r(t)
                    })
                }
                for (var i in a) {
                    e.isLeft ? t += o(i) : t += r(i)
                }
                function o(t) {
                    var n = "";
                    if (a.hasOwnProperty(t) && a[t] && a[t] != "") {
                        if (e.searchItem && e.searchItem.indexOf(t) !== -1) {
                            n += '<p data-summary="' + t + '" class="search-item" data-search-keyword="' + a[t] + '" data-option="' + queryOption + '">' + a[t] + "</p>";
                            delete a[t]
                        } else if (e.keepHtml && e.keepHtml.indexOf(t) !== -1) {
                            n += '<p data-summary="' + t + '">' + a[t] + "</p>";
                            delete a[t]
                        } else {
                            n += '<p data-summary="' + t + '">' + trimHtmlTag(a[t]) + "</p>";
                            delete a[t]
                        }
                    } else {
                        delete a[t]
                    }
                    return n
                }

                function r(e) {
                    var t = "";
                    if (a.hasOwnProperty(e) && a[e] && a[e] != "") {
                        if (e == "nseinfo" && typeof a.nseinfo == "string") {
                            a.nseinfo.split("%^&*").forEach(function (e) {
                                t += '<div data-type="info"><span class="key">info: </span><pre class="value">' + trimHtmlTag(e) + "</pre></div>"
                            })
                        } else {
                            t += '<p><span class="key">' + e + ': </span><span class="value">' + trimHtmlTag(a[e]) + "</span></p>"
                        }
                        delete a[e]
                    } else {
                        delete a[e]
                    }
                    return t
                }

                return t + n
            }

            function trimHtmlTag(e) {
                return e.toString().replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }

            __append("\n\n");
            __append("\n");
            if (data && data.length > 0) {
                data.forEach(function (e) {
                    __append('\n<li>\n    <div class="collect-time text-center">采集时间<br>\n        ');
                    if (e.date) {
                        __append("\n        <time>");
                        __append(escape(e.date));
                        __append("</time>\n        ")
                    }
                    __append('\n    </div>\n\n    <div class="detail">\n        ');
                    if (e.http_status) {
                        __append("\n        <h5>HTTP/1.1 ");
                        __append(escape(e.http_status));
                        __append("</h5>\n        ")
                    }
                    __append("\n\n        ");
                    var t = sortObj({
                        isLeft: false,
                        startOrder: ["ip", "host", "appservice", "appservice_ver", "httpserver", "content_type", "charset"],
                        endOrder: ["nseinfo", "http_headers", "keywords"],
                        hideItem: ["area", "favicon", "vulupdatedate", "date", "http_status"],
                        targetObj: e
                    });
                    __append("\n\n        ");
                    __append(t);
                    __append("\n    </div>\n</li>\n\n")
                });
                __append("\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append("\n");
            var searchType = "";
            if (typeof data != "undefined" && typeof data.recordNum != "undefined") {
                searchType = "search"
            } else {
                searchType = "ipsearch"
            }
            __append('\n<div id="user-search">\n    <div id="user-search-result" ');
            if (searchType == "ipsearch") {
                __append('style="padding-top: 40px;"\n            ')
            }
            __append("\n    >\n\n        ");
            if (searchType == "search") {
                __append('\n        <nav class="tpl-sub-menu">\n            <ul class="list-unstyled">\n                <li class="active">\n                    ');
                if (param.q == 1) {
                    __append("\n                    监测域\n                    ")
                } else {
                    __append("\n                    全网\n                    ")
                }
                __append("\n                </li>\n            </ul>\n        </nav>\n\n        ");
                if (data.recordNum != 0) {
                    __append('\n        <div class="search-result-stats clearfix">\n            <p>为您找到相关结果约 ');
                    __append(escape($.numFormat(data.recordNum)));
                    __append(' 个\n                <span class="hidden-xs">，</span><br class="visible-xs">花费时间约 ');
                    __append(escape(data.qtime));
                    __append("s\n                ");
                    if (data.recordNum != 0) {
                        __append('\n                <button type="button" id="btn-quick-add-favorite" class="btn btn-default btn-sm btn-ra">+添加关注</button>\n                ')
                    }
                    __append('\n            </p>\n\n            <div id="quick-add-favorite-window" class="form-with-feedback">\n                <div class="form-group">\n                    <label for="favorite-title" class="control-label">标&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;题</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input type="text" id="favorite-title" class="form-control">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="favorite-tag" class="control-label">标&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;签</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input type="text" id="favorite-tag" class="form-control">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="favorite-parse" class="control-label">搜索语法</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input type="text" id="favorite-parse" class="form-control" value="');
                    __append(escape(data.querycondition));
                    __append('">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label class="control-label">搜索区域</label>\n\n                    <div class="feedback error">\n                        <input type="radio" name="search-region" id="favorite-search-region-monitor">\n                        <label for="favorite-search-region-monitor">监测站点</label>\n                        <input type="radio" name="search-region" id="favorite-search-region-net">\n                        <label for="favorite-search-region-net">全网设备</label>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="favorite-description"\n                           class="control-label">描&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;述</label>\n\n                    <div class="textarea-wrapper padding-sm">\n                        <textarea id="favorite-description" class="form-control"></textarea>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label></label>\n\n                    <div>\n                        <button type="submit" id="submit-quick-add-favorite" class="btn btn-default btn-sm">提&nbsp;&nbsp;交</button>\n                        <button id="cancel-quick-add-favorite" class="btn btn-default btn-sm">取&nbsp;&nbsp;消</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        ')
                } else {
                    __append('\n\n        <div class="error-message">\n            ');
                    if (param.q == 0 && typeof isIpOrDomain !== "undefined" && isIpOrDomain) {
                        __append('\n            <div id="search-empty-wrapper">\n                <h3>抱歉, 没有搜索到任何内容！</h3>\n                <p>温馨提示：</p>\n                <ul>\n                    <li>请检查您的输入是否正确</li>\n                    <li>该域名/IP或许暂未收录，请添加到<span id="add-to-onlinecheck" class="click" data-content="');
                        __append(escape(param.c));
                        __append('">实时检测</span></li>\n                    <li>如有任何意见或建议，请及时<a href="/feedback" target="_blank">反馈</a>给我们</li>\n                </ul>\n            </div>\n            ')
                    } else {
                        __append('\n            <i class="fa fa-exclamation-triangle"></i>\n            ');
                        if (param.q == 1) {
                            __append('\n            <p>\n                抱歉, 没有搜索到任何内容<br>请尝试\n                <span class="trigger-search-btn click">全网搜索</span>\n                或者\n                <span class="trigger-advanced-search click">高级搜索</span>\n            </p>\n            ')
                        } else {
                            __append('\n            <p>\n                抱歉, 没有搜索到任何内容<br>请尝试\n                <span class="trigger-advanced-search click">高级搜索</span>\n            </p>\n            ')
                        }
                        __append("\n            ")
                    }
                    __append("\n        </div>\n\n        ")
                }
                __append("\n\n        ")
            }
            __append('\n\n        <div id="user-search-result-list"></div>\n    </div>\n    <aside id="user-sidebar" class="hidden-xs hidden-sm">\n        <section id="widget-search-history" class="search-widget">\n            <h4>我的搜索历史</h4>\n\n            <div class="widget-content content" style="min-height: 150px;"></div>\n        </section>\n\n        ');
            if (userRole == "400") {
                __append('\n        <section id="widget-sys-rec" class="search-widget">\n            <h4>系统推荐</h4>\n\n            <div class="widget-content content" style="min-height: 340px;"></div>\n        </section>\n        ')
            }
            __append('\n    </aside>\n</div>\n\n<button id="back-to-top" class="hidden-xs" data-user-option="返回顶部" style="display: none;bottom: -10px;">\n    <i class="fa fa-chevron-up"></i>\n</button>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            function sortObj(e) {
                if (!e.startOrder && !e.endOrder)throw"user-search-list.tpl:182 wrong param!";
                var t = "", n = "", a = e.targetObj;
                if (e.hideItem && Array.isArray(e.hideItem)) {
                    e.hideItem.forEach(function (e) {
                        if (a.hasOwnProperty(e)) {
                            delete a[e]
                        }
                    })
                }
                if (e.startOrder && Array.isArray(e.startOrder)) {
                    e.startOrder.forEach(function (n) {
                        e.isLeft ? t += o(n) : t += r(n)
                    })
                }
                if (e.endOrder && Array.isArray(e.endOrder)) {
                    e.endOrder.forEach(function (t) {
                        e.isLeft ? n += o(t) : n += r(t)
                    })
                }
                for (var i in a) {
                    e.isLeft ? t += o(i) : t += r(i)
                }
                function o(t) {
                    var n = "";
                    if (a.hasOwnProperty(t) && a[t] && a[t] != "") {
                        if (e.searchItem && e.searchItem.indexOf(t) !== -1) {
                            n += '<p data-summary="' + t + '" class="search-item" data-search-keyword="' + a[t] + '" data-option="' + queryOption + '">' + a[t] + "</p>";
                            delete a[t]
                        } else if (e.keepHtml && e.keepHtml.indexOf(t) !== -1) {
                            n += '<p data-summary="' + t + '">' + a[t] + "</p>";
                            delete a[t]
                        } else {
                            n += '<p data-summary="' + t + '">' + trimHtmlTag(a[t]) + "</p>";
                            delete a[t]
                        }
                    } else {
                        delete a[t]
                    }
                    return n
                }

                function r(e) {
                    var t = "";
                    if (a.hasOwnProperty(e) && a[e] && a[e] != "") {
                        if (e == "nseinfo") {
                            a[e].split("%^&*").forEach(function (e) {
                                t += '<div data-type="info"><span class="key">info: </span><pre class="value">' + trimHtmlTag(e) + "</pre></div>"
                            })
                        } else {
                            t += '<p><span class="key">' + e + ': </span><span class="value">' + trimHtmlTag(a[e]) + "</span></p>"
                        }
                        delete a[e]
                    } else {
                        delete a[e]
                    }
                    return t
                }

                return t + n
            }

            function trimHtmlTag(e) {
                return e.replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }

            __append("\n");
            __append("\n");
            var queryOption = 1;
            if (typeof searchParam != "undefined") {
                queryOption = searchParam.q
            }
            __append("\n");
            if (data.length > 0) {
                __append("\n");
                data.forEach(function (e) {
                    __append('\n<article class="res-item"\n        ');
                    if (type == "search") {
                        __append('\n         data-id="');
                        __append(escape(e.titleFields.id));
                        __append('"\n         data-host="');
                        __append(escape(e.notcomponentFields.host));
                        __append('"\n         data-ip="');
                        __append(escape(e.notcomponentFields.ip));
                        __append('"\n        ')
                    }
                    __append('\n>\n\n    <div class="res-item-summary">\n        ');
                    var t = e.titleFields.title.replace(/<a ?.*?>|<\/a>/g, "");
                    __append('\n        <h3 title="');
                    __append(escape(t));
                    __append('">');
                    __append(e.titleFields.title);
                    __append('</h3>\n\n        <div class="content">\n            <div class="notcomponent">\n                ');
                    if (e.notcomponentFields) {
                        __append("\n                ");
                        var n = sortObj({
                            isLeft: true,
                            startOrder: ["port", "ip", "host", "date", "longitude", "latitude", "country", "email"],
                            searchItem: ["ip"],
                            keepHtml: ["country"],
                            targetObj: e.notcomponentFields
                        });
                        __append("\n                ");
                        __append(n);
                        __append("\n                ")
                    }
                    __append("\n            </div>\n\n            ");
                    if (e.emphasisFields) {
                        __append('\n            <ul class="site-tech list-inline">\n                ');
                        var a;
                        __append("\n                ");
                        for (var i in e.emphasisFields) {
                            __append("\n                ");
                            a = e.emphasisFields[i].replace(/"/g, "&quot;").replace(/\[|]/g, "");
                            __append('\n                <li class="search-item text-ellipsis" title="');
                            __append(escape(a));
                            __append('"\n                    data-search-keyword="');
                            __append(escape(a));
                            __append('" data-option="');
                            __append(escape(queryOption));
                            __append('">\n                    ');
                            __append(escape(a));
                            __append("\n                </li>\n                ")
                        }
                        __append("\n            </ul>\n            ")
                    }
                    __append('\n        </div>\n    </div>\n    <div class="res-item-components">\n        <ul class="site-options list-inline">\n            ');
                    if (e.titleFields.security_level != null) {
                        __append("\n\n            ");
                        if (e.titleFields.security_level == "high" || e.titleFields.security_level == "risk") {
                            __append('\n            <li data-title="');
                            __append(escape(e.titleFields.title));
                            __append('">\n                <button value="');
                            __append(escape(e.titleFields.id));
                            __append('"\n                        class="btn-flat check-site-bug high"\n                        title="高危">漏洞详情\n                </button>\n            </li>\n            ')
                        } else if (e.titleFields.security_level == "medium") {
                            __append('\n            <li data-title="');
                            __append(escape(e.titleFields.title));
                            __append('">\n                <button value="');
                            __append(escape(e.titleFields.id));
                            __append('"\n                        class="btn-flat check-site-bug medium"\n                        title="中危">漏洞详情\n                </button>\n            </li>\n            ')
                        } else if (e.titleFields.security_level == "low") {
                            __append('\n            <li data-title="');
                            __append(escape(e.titleFields.title));
                            __append('">\n                <button value="');
                            __append(escape(e.titleFields.id));
                            __append('"\n                        class="btn-flat check-site-bug low"\n                        title="低危">漏洞详情\n                </button>\n            </li>\n            ')
                        }
                        __append("\n\n            ")
                    }
                    __append("\n\n            ");
                    if (type == "search") {
                        __append('\n            <li>\n                <button class="add-collection btn-flat" data-status="0"></button>\n            </li>\n            ')
                    }
                    __append('\n        </ul>\n\n        <div class="content">\n            ');
                    if (e.titleFields.http_status) {
                        __append("\n            <h4>");
                        __append(escape(e.titleFields.http_status));
                        __append("</h4>\n            ")
                    }
                    __append("\n\n            ");
                    if (!e.componentFields)e.componentFields = {};
                    if (e.titleFields && e.titleFields.charset)e.componentFields.charset = e.titleFields.charset;
                    if (e.titleFields && e.titleFields.keywords)e.componentFields.keywords = e.titleFields.keywords;
                    n = sortObj({
                        isLeft: false,
                        startOrder: ["appservice", "appservice_ver", "httpserver", "content_type", "charset"],
                        endOrder: ["nseinfo", "keywords"],
                        hideItem: ["area", "favicon", "vulupdatedate"],
                        targetObj: e.componentFields
                    });
                    __append("\n\n            ");
                    __append(n);
                    __append("\n        </div>\n    </div>\n\n    ");
                    if (type == "collection") {
                        __append("\n    <button></button>\n    ")
                    }
                    __append("\n\n</article>\n")
                });
                __append("\n");
                if (type == "search") {
                    __append('\n<div class="row">\n    <div class="col-sm-6 col-sm-push-6">\n        <nav id="pagination-search-result"></nav>\n    </div>\n    <div class="col-sm-6 col-sm-pull-6">\n        <p class="suggestion">\n            ');
                    if (queryOption == "1") {
                        __append('\n            没有找到想要的内容? 试试\n            <span class="trigger-search-btn click">全网搜索</span>\n            或者\n            <span class="trigger-advanced-search click">高级搜索</span>\n            ')
                    } else {
                        __append('\n            没有找到想要的内容? 试试<span class="trigger-advanced-search click">高级搜索</span>\n            ')
                    }
                    __append("\n        </p>\n    </div>\n</div>\n\n")
                }
                __append("\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data.length && data.length > 0) {
                __append("\n\n");
                data.forEach(function (e) {
                    __append('\n<section class="search-statistics search-widget">\n    <h4>');
                    __append(escape(e.title));
                    __append('</h4>\n\n    <div class="widget-content">\n        <div class="table-wrapper">\n            <table>\n                <thead>\n                <tr>\n                    <th class="text-left">');
                    __append(escape(e.areaname));
                    __append('</th>\n                    <th class="text-right">');
                    __append(escape(e.acountname));
                    __append("</th>\n                </tr>\n                </thead>\n                <tbody>\n\n                ");
                    e.area.forEach(function (e) {
                        __append('\n                    <tr class="item search-item handle-data" data-option="');
                        __append(escape(queryOption));
                        __append('" data-search-keyword="');
                        __append(escape(e.condition));
                        __append('">\n                        ');
                        for (var t in e) {
                            __append("\n\n                        ");
                            if (t != "condition" && e.hasOwnProperty(t)) {
                                __append('\n                        <td class="key" title="');
                                __append(escape(t));
                                __append(": ");
                                __append(escape(e[t]));
                                __append('">');
                                __append(escape(t));
                                __append('</td>\n                        <td class="value" title="');
                                __append(escape(t));
                                __append(": ");
                                __append(escape(e[t]));
                                __append('">\n                            <mark>');
                                __append(escape($.numFormat(e[t])));
                                __append("</mark>\n                        </td>\n                        ")
                            }
                            __append("\n\n                        ")
                        }
                        __append("\n                    </tr>\n                ")
                    });
                    __append("\n\n                </tbody>\n            </table>\n        </div>\n    </div>\n</section>\n")
                });
                __append("\n\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-search">\n    <div id="user-search-result">\n\n        ');
            if (hint !== "unload") {
                __append('\n        <nav class="tpl-sub-menu">\n            <ul class="list-unstyled">\n                <li class="active">');
                __append(escape(hint));
                __append("</li>\n            </ul>\n        </nav>\n        ")
            }
            __append('\n\n        <div class="error-message">\n            <i class="fa fa-exclamation-triangle"></i>\n            <p>');
            __append(escape(errorMsg));
            __append('</p>\n        </div>\n    </div>\n\n    <aside id="user-sidebar" class="hidden-xs hidden-sm">\n        <section id="widget-search-history" class="search-widget">\n            <h4>我的搜索历史</h4>\n\n            <div class="widget-content content" style="min-height: 150px;"></div>\n        </section>\n        <section id="widget-sys-rec" class="search-widget">\n            <h4>系统推荐</h4>\n\n            <div class="widget-content content" style="min-height: 340px;"></div>\n        </section>\n    </aside>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            function sortObj(e) {
                if (!e.startOrder && !e.endOrder)throw"user-search-list.tpl:182 wrong param!";
                var t = "", n = "", a = e.targetObj;
                if (e.hideItem && Array.isArray(e.hideItem)) {
                    e.hideItem.forEach(function (e) {
                        if (a.hasOwnProperty(e)) {
                            delete a[e]
                        }
                    })
                }
                if (e.startOrder && Array.isArray(e.startOrder)) {
                    e.startOrder.forEach(function (n) {
                        e.isLeft ? t += o(n) : t += r(n)
                    })
                }
                if (e.endOrder && Array.isArray(e.endOrder)) {
                    e.endOrder.forEach(function (t) {
                        e.isLeft ? n += o(t) : n += r(t)
                    })
                }
                for (var i in a) {
                    e.isLeft ? t += o(i) : t += r(i)
                }
                function o(t) {
                    var n = "";
                    if (a.hasOwnProperty(t) && a[t] && a[t] != "") {
                        if (e.searchItem && e.searchItem.indexOf(t) !== -1) {
                            n += '<p data-summary="' + t + '" class="search-item" data-search-keyword="' + a[t] + '" data-option="' + queryOption + '">' + a[t] + "</p>";
                            delete a[t]
                        } else if (e.keepHtml && e.keepHtml.indexOf(t) !== -1) {
                            n += '<p data-summary="' + t + '">' + a[t] + "</p>";
                            delete a[t]
                        } else {
                            n += '<p data-summary="' + t + '">' + trimHtmlTag(a[t]) + "</p>";
                            delete a[t]
                        }
                    } else {
                        delete a[t]
                    }
                    return n
                }

                function r(e) {
                    var t = "";
                    if (a.hasOwnProperty(e) && a[e] && a[e] != "") {
                        if (e == "nseinfo") {
                            a[e].split("%^&*").forEach(function (e) {
                                t += '<div data-type="info"><span class="key">info: </span><pre class="value">' + trimHtmlTag(e) + "</pre></div>"
                            })
                        } else {
                            t += '<p><span class="key">' + e + ': </span><span class="value">' + trimHtmlTag(a[e]) + "</span></p>"
                        }
                        delete a[e]
                    } else {
                        delete a[e]
                    }
                    return t
                }

                return t + n
            }

            function trimHtmlTag(e) {
                return e.replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }

            __append("\n\n");
            if (typeof title !== "undefined") {
                __append('\n<button id="back-to-top" class="hidden-xs" data-user-option="返回顶部" style="display: none;bottom: -10px;">\n    <i class="fa fa-chevron-up"></i>\n</button>\n<div id="user-online-check-detail" class="m--ip-check tpl-content-padding">\n    <h2 class="tpl-title">实时检测 > ');
                __append(escape(title));
                __append("</h2>\n    ")
            } else {
                __append('\n    <div class="m--ip-check">\n        ')
            }
            __append('\n        <div class="clearfix">\n            ');
            var countryFlag, location = [], latitude, longitude, i, len;
            if (data.location) {
                if (data.location.country) {
                    countryFlag = data.location.country.match(/<.*>/);
                    location = data.location.country.replace(/<.*> ?/, "").split(" ")
                }
            } else if (data.localtion) {
                if (data.localtion.country) {
                    countryFlag = data.localtion.country.match(/<.*>/);
                    location = data.localtion.country.replace(/<.*> ?/, "").split(" ")
                }
            }
            if (data.location && location[0] == "中国" && data.location.latitude && data.location.longitude) {
                latitude = data.location.latitude;
                longitude = data.location.longitude
            } else if (data.localtion && data.localtion.country_code && data.localtion.country_code == "CN" && data.localtion.latitude && data.localtion.longitude) {
                latitude = data.localtion.latitude;
                longitude = data.localtion.longitude
            }
            __append('\n            <div class="summary">\n                <div class="summary-content">\n                    ');
            if (typeof title !== "undefined") {
                __append('\n                    <h3><i class="fa fa-globe"></i> ');
                __append(escape(title));
                __append("</h3>\n                    ")
            } else if (data.querycondition) {
                __append('\n                    <h3><i class="fa fa-globe"></i> ');
                __append(escape(data.querycondition));
                __append("</h3>\n                    ")
            }
            __append("\n\n                    <div>\n                        ");
            if (location[0]) {
                __append("\n                        <p>国家：");
                __append(countryFlag + " " + location[0]);
                __append("</p>\n                        ")
            }
            __append("\n\n                        ");
            if (location[1]) {
                __append("\n                        <p>省份：");
                __append(escape(location[1]));
                __append("</p>\n                        ")
            }
            __append("\n\n                        ");
            if (location[2]) {
                __append("\n                        <p>城市：");
                __append(escape(location[2]));
                __append("</p>\n                        ")
            }
            __append("\n\n                        ");
            if (typeof checkDate !== "undefined") {
                __append("\n                        <p>检测时间：");
                __append(escape(checkDate));
                __append("</p>\n                        ")
            } else if (data.checkdate) {
                __append("\n                        <p>检测时间：");
                __append(escape(data.checkdate));
                __append("</p>\n                        ")
            }
            __append("\n                    </div>\n                </div>\n\n                ");
            if (latitude && longitude) {
                __append('\n                <div id="summary-map" class="summary-map"\n                     style="background: url(\'/getbdmap?longitude=');
                __append(escape(longitude));
                __append("&latitude=");
                __append(escape(latitude));
                __append("') no-repeat center center / cover;\"></div>\n                ")
            }
            __append('\n            </div>\n            <div class="detail-list">\n                <section class="port-list">\n                    <h3>端口</h3>\n                    <ul id="ip-port-list" class="list-inline">\n                        ');
            if (data.ports && data.ports.length) {
                var portArr = data.ports.sort(function (e, t) {
                    return e - t
                });
                for (i = 0, len = portArr.length; i < len; i++) {
                    __append('\n                        <li data-port="port-');
                    __append(escape(portArr[i]));
                    __append('-link">');
                    __append(escape(portArr[i]));
                    __append("</li>\n                        ")
                }
            }
            __append('\n                    </ul>\n                </section>\n                <section class="service-list">\n                    <h3>服务</h3>\n\n                    ');
            if (data.portdetails && data.portdetails.length) {
                var portDetailArr = data.portdetails.sort(function (e, t) {
                    return e.port - t.port
                });
                __append("\n                    ");
                portDetailArr.forEach(function (e) {
                    __append("\n                    ");
                    var t = e.detail;
                    !t ? t = {isEmpty: true} : t.isEmpty = false;
                    var n = 0, a = "";
                    if (t.notcomponentFields && t.notcomponentFields.date) {
                        n = 1
                    } else {
                        n = 0;
                        a = "nohistory"
                    }
                    __append('\n\n                    <div id="port-');
                    __append(escape(e.port));
                    __append('-link" class="service-item clearfix">\n                        <div class="service-item-summary text-center">\n                            ');
                    if (e.port) {
                        __append('\n                            <span class="port">');
                        __append(escape(e.port));
                        __append("</span>\n                            ")
                    }
                    __append("\n\n                            ");
                    if (t && t.componentFields && t.componentFields.appservice) {
                        __append('\n                            <span class="service">');
                        __append(escape(t.componentFields.appservice));
                        __append("</span>\n                            ")
                    }
                    __append("\n\n                            ");
                    if (t && t.componentFields && t.componentFields.redirectlocation) {
                        __append('\n                            <a href="');
                        __append(escape(t.componentFields.redirectlocation));
                        __append('" class="service"\n                               target="_blank"><i class="fa fa-share"></i></a>\n                            ')
                    }
                    __append('\n                        </div>\n                        <div class="service-item-details" data-finger="');
                    __append(escape(e.index));
                    __append('">\n                            <h4><span>指纹明细</span></h4>\n                            <ul class="history-list list-unstyled ');
                    __append(escape(a));
                    __append('">\n                                <li>\n                                    ');
                    __append("\n\n                                    ");
                    if (n) {
                        __append('\n                                    <div class="collect-time text-center">采集时间<br>\n                                        <time>\n                                            ');
                        __append(escape(t.notcomponentFields.date));
                        __append("\n                                        </time>\n                                    </div>\n                                    ")
                    }
                    __append('\n\n                                    <div class="detail">\n                                        <h5>\n                                            ');
                    if (t && t.componentFields && t.componentFields.appservice_ver) {
                        __append("\n                                            ");
                        __append(t.componentFields.appservice_ver);
                        __append("\n                                            ")
                    }
                    __append("\n                                        </h5>\n\n                                        ");
                    if (!t.isEmpty) {
                        __append("\n\n                                        ");
                        if (t.titleFields && t.titleFields.http_status) {
                            __append("\n                                        <p>");
                            __append(escape(t.titleFields.http_status));
                            __append("</p>\n                                        ")
                        }
                        __append("\n\n                                        ");
                        if (!t.componentFields) {
                            t.componentFields = {}
                        }
                        if (t.titleFields && t.titleFields.charset)t.componentFields.charset = t.titleFields.charset;
                        if (t.titleFields && t.titleFields.keywords)t.componentFields.keywords = t.titleFields.keywords;
                        if (t.notcomponentFields && t.notcomponentFields.host)t.componentFields.host = t.notcomponentFields.host;
                        if (t.notcomponentFields && t.notcomponentFields.ip)t.componentFields.ip = t.notcomponentFields.ip.replace("ip:", "");
                        var i = sortObj({
                            isLeft: false,
                            startOrder: ["ip", "host", "appservice", "appservice_ver", "httpserver", "content_type", "charset"],
                            endOrder: ["nseinfo", "keywords"],
                            hideItem: ["area", "favicon", "vulupdatedate"],
                            targetObj: t.componentFields
                        });
                        __append("\n                                        ");
                        __append(i);
                        __append("\n\n                                        ");
                        if (t.emphasisFields) {
                            __append("\n                                        <p>\n                                            ");
                            for (var o in t.emphasisFields) {
                                __append("\n                                            <span>");
                                __append(escape(o));
                                __append("</span>&nbsp;&nbsp;\n                                            ")
                            }
                            __append("\n                                        </p>\n                                        ")
                        }
                        __append("\n\n                                        ")
                    }
                    __append("\n                                    </div>\n                                </li>\n                            </ul>\n\n                            ");
                    if (n) {
                        __append('\n                            <span class="more" data-status="0">更早</span>\n                            ')
                    }
                    __append("\n\n                        </div>\n                    </div>\n                    ")
                });
                __append("\n\n                    ")
            }
            __append("\n                </section>\n            </div>\n        </div>\n    </div>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-role-normal" class="user-home">\n    <div class="row">\n        <div class="col-md-7">\n            <section id="home-widget-monitor" class="home-widget">\n                <h2>监测站点<span class="more">更多>></span></h2>\n                <div class="content"></div>\n            </section>\n\n            <section id="home-widget-hot-search" class="home-widget">\n                <h2>热门搜索</h2>\n\n                <div class="content"></div>\n            </section>\n\n            <div id="user-data-box">\n                <section id="home-widget-s-history" class="home-widget">\n                    <h2>搜索历史</h2>\n\n                    <div class="content"></div>\n                </section>\n                <section id="home-widget-attention" class="home-widget">\n                    <h2>我的关注</h2>\n\n                    <div class="content"></div>\n                </section>\n            </div>\n        </div>\n        <div class="col-md-5">\n            <section id="home-widget-sys-rec" class="home-widget">\n                <h2>系统推荐</h2>\n                <div class="content"></div>\n            </section>\n            <section id="home-widget-security-event" class="home-widget">\n                <h2>安全动态</h2>\n\n                <div class="content"></div>\n            </section>\n        </div>\n    </div>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-role-region" class="user-home">\n    <div class="row">\n        <div class="col-md-7">\n            <section id="home-widget-dev" class="home-widget">\n                <h2>监测域设备统计</h2>\n\n                <div class="content"></div>\n            </section>\n\n            <section id="home-widget-bugs" class="home-widget">\n                <h2>监测域漏洞统计</h2>\n\n                <div class="content"></div>\n            </section>\n\n            <div id="user-data-box">\n                <section id="home-widget-s-history" class="home-widget">\n                    <h2>搜索历史</h2>\n\n                    <div class="content"></div>\n                </section>\n                <section id="home-widget-attention" class="home-widget">\n                    <h2>我的关注</h2>\n\n                    <div class="content"></div>\n                </section>\n            </div>\n        </div>\n        <div class="col-md-5">\n            <section id="home-widget-sys-rec" class="home-widget">\n                <h2>系统推荐</h2>\n\n                <div class="content"></div>\n            </section>\n            <section id="home-widget-new-bugs" class="home-widget">\n                <h2>最新漏洞发现</h2>\n\n                <div class="content"></div>\n            </section>\n        </div>\n    </div>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data && data.length > 0) {
                __append('\n<table class="table-monitor-list thead-bg text-center">\n    <thead>\n    <tr>\n        <th class="title">监测名称</th>\n        <th class="site">监测站点</th>\n        <th class="secure-level">安全等级</th>\n        <th class="actions two">操作</th>\n    </tr>\n    </thead>\n    <tbody>\n\n    ');
                if (data.length > 6)data.length = 6;
                __append("\n    ");
                data.forEach(function (e) {
                    __append("\n    ");
                    var t = "默认";
                    if (e.hasOwnProperty("name") && e["name"] != "") {
                        t = e.name
                    }
                    __append('\n    <tr class="monitor-item" data-lsh="');
                    __append(escape(e.lsh));
                    __append('" data-name="');
                    __append(escape(t));
                    __append('">\n        <td class="title table-cell-editable" data-th="监测名称：" data-count="0">\n            ');
                    __append(escape(t));
                    __append('\n        </td>\n        <td class="site lsh" data-th="监测站点：">');
                    __append(escape(e.collectsitename));
                    __append('</td>\n        <td class="secure-level" data-th="安全等级：">\n            <div class="sec-inner-wrap">\n                ');
                    if (userRole == 400) {
                        __append('\n                <p class="sec-level-title done">安全</p>\n                ')
                    } else {
                        __append('\n                <p class="sec-level-title"><i class="fa fa-spinner fa-spin"></i></p>\n                <div class="sec-level-detail"></div>\n                ')
                    }
                    __append('\n            </div>\n        </td>\n        <td class="actions two" data-lsh="');
                    __append(escape(e.lsh));
                    __append('" data-name="');
                    __append(escape(e.name));
                    __append('">\n            <button class="view search-MonitorSite btn-flat" data-level="*">查看</button>\n        </td>\n    </tr>\n    ')
                });
                __append("\n\n    </tbody>\n</table>\n")
            } else {
                __append('\n<div class="empty">\n    <p>您尚未配置监测站点，点击<span data-target="user-site-check-link">添加监测站点</span></p>\n</div>\n')
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div class="row">\n    ');
            if (data.vul.length !== 0 && data.vulmodify.length !== 0) {
                __append("\n\n    ");
                data.vul.forEach(function (e) {
                    __append('\n    <div class="col-xs-6 col-md-3">\n        <div class="item">\n            <h3>');
                    __append(escape(e.title));
                    __append('</h3>\n\n            <div class="search-item" title="');
                    __append(escape($.numFormat(e.allnum)));
                    __append('"\n                 data-search-keyword="');
                    __append(escape(e.condition));
                    __append('" data-option="1">\n                ');
                    __append(escape($.numFormat(e.allnum)));
                    __append("\n            </div>\n        </div>\n    </div>\n    ")
                });
                __append("\n\n    ");
                data.vulmodify.forEach(function (e) {
                    __append('\n    <div class="col-xs-6 col-md-3">\n        <div class="item">\n            <h3>');
                    __append(escape(e.title));
                    __append('</h3>\n\n            <div class="search-item" title="');
                    __append(escape($.numFormat(e.allnum)));
                    __append('"\n                 data-search-keyword="');
                    __append(escape(e.condition));
                    __append('"\n                 data-option="1">');
                    __append(escape($.numFormat(e.allnum)));
                    __append("</div>\n        </div>\n    </div>\n    ")
                });
                __append("\n\n    ")
            } else {
                __append('\n\n    <div class="empty">\n        <p>您尚未配置监测站点，点击<span data-target="user-site-check-link">添加监测站点</span></p>\n    </div>\n\n    ')
            }
            __append("\n</div>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<ul class="list-unstyled">\n    ');
            if (data.length === 4) {
                __append("\n        ");
                data.forEach(function (e) {
                    __append('\n            <li class="item">\n                <h3>');
                    __append(escape(e.title));
                    __append('</h3>\n                <div class="search-item" title="');
                    __append(escape($.numFormat(e.allnum)));
                    __append('"\n                     data-search-keyword="');
                    __append(escape(e.condition));
                    __append('" data-option="1">');
                    __append(escape($.numFormat(e.allnum)));
                    __append("</div>\n            </li>\n        ")
                });
                __append("\n    ")
            }
            __append("\n</ul>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data) {
                __append('\n<div id="secure-detail" class="tpl-page">\n    <h4 class="breadcrumb">');
                if (data.status) {
                    __append('<a href="/analysis">安全动态</a>')
                } else {
                    __append("安全动态")
                }
                __append(" > ");
                __append(escape(data.name));
                __append('</h4>\n    <div id="description">\n        <h1 class="title">');
                __append(escape(data.name));
                __append("</h1>\n        <span>");
                __append(escape(data.time));
                __append('</span>\n        <h2 class="description-title">概述</h2>\n        <p class="description-content">');
                __append(escape(data.describe));
                __append('</p>\n    </div>\n\n    <div id="influence">\n        <h2 class="description-title">影响</h2>\n        <p class="description-content">');
                __append(escape(data.influence));
                __append('</p>\n    </div>\n</div>\n<div class="map-container">\n    <ul>\n        <li>\n            <div class="map-title map-detail-width">全球');
                __append(escape(data.innername));
                __append('分布</div>\n            <div id="world_vul_detail" class="highlight-maps map-wait"></div>\n        </li>\n        <li>\n            <div class="map-title">国内');
                __append(escape(data.innername));
                __append('分布</div>\n            <div id="china_vul_detail" class="highlight-maps map-wait"></div>\n        </li>\n    </ul>\n</div>\n')
            }
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a, i;
    !(a = ["dvrdvs", "cisco", "metagenerator:WebLogic", "python", "wordpress", "appservice:rsync 北京", "title:在线教育", "hikvision", "ZTE F460", "thinkphp 国家:中国", "port:161", "httponly:_gitlab_session 国家:中国 地区:北京", "httpserver:GlassFish", "httponly:_gitlab_session 地区:浙江", "VOS2009 地区:广东", "meta_refresh_redirect:/yyoa/index.jsp", "stag:海康威视摄像头", "备份管理服务器 V2.3", "致远 地区:北京", "iGENUS webmail login"], i = typeof a === "function" ? a.call(t, n, t, e) : a, i !== undefined && (e.exports = i))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = e.validate, a = n(20), i = n(21), o = n(10), r = n(52), s = n(8), l = false, h = false, d = false, c, p = {
                profile: n(53),
                formChangePassword: n(54),
                formChangeAvatar: n(55)
            };
            s(r.userInfo).on("success", function (t) {
                if (t) {
                    var n = t.userinfo || "", a = t.groupinfo || "";
                    c = n.email;
                    e.tplTransition(p.profile({userInfo: n, groupInfo: a}), "#user-profile-link", m)
                }
            }).on("error", function () {
                if (error === "timeout") {
                    o.msg({content: "获取用户信息出错！", type: "error"})
                }
            });
            function m() {
                n(23)("#new-password");
                e.$ele.mainContainer.off();
                e.$ele.mainContainer.multiOn({
                    click: {
                        "#detail-info-mod": function () {
                            u($(this))
                        }, "#company-info-mod": function () {
                            V($(this))
                        }, ".profile-cancel-btn": function () {
                            $(this).each(function () {
                                var e = $(this);
                                e.parent().addClass("slide-out");
                                setTimeout(function () {
                                    e.addClass("hidden");
                                    e.parent().children(".profile-edit-btn").html('<i class="fa fa-pencil-square-o"></i> 编辑').attr("data-status", 0);
                                    e.parent().removeClass("slide-out")
                                }, 300);
                                e.parent().parent().next().find(".form-group > div").each(function () {
                                    $(this).empty();
                                    $(this).text($(this).attr("data-value"))
                                });
                                e.parent().parent().parent().removeClass("editing")
                            })
                        }, "#user-password-mod": function () {
                            e.cornerWindow(p.formChangePassword)
                        }
                    }
                });
                e.$ele.popupWrapper.off();
                e.$ele.popupWrapper.multiOn({
                    click: {
                        "#user-pic-list li": function () {
                            $(this).each(function () {
                                $("#user-pic-list").find("li").removeClass("active");
                                $("#user-picture-preview").attr("src", $(this).children("img").attr("src"));
                                $(this).addClass("active")
                            })
                        }, "#btn-submit-new-password": function () {
                            console.log("clicked");
                            if (!h || !l || !d) {
                                return false
                            }
                            m($(this))
                        }
                    }, keypress: {
                        "#confirm-new-password": function (e) {
                            e = e || window.event;
                            if (e.keyCode == 13) {
                                $("#btn-submit-new-password").trigger("click")
                            }
                        }
                    }, input: {
                        "#current-password": function () {
                            var e = $(this).val();
                            if (e === "") {
                                $(".old-pwd").attr("data-feedback-msg", "请输入原密码!");
                                h = false;
                                return false
                            } else {
                                $(".old-pwd").removeAttr("data-feedback-msg");
                                h = true
                            }
                        }, "#new-password": function () {
                            var e = $(".new-pwd"), t = $(this).val();
                            if (t === "") {
                                e.attr("data-feedback-msg", "请输入新密码!");
                                d = false;
                                return false
                            } else if (t.length < 6) {
                                e.attr("data-feedback-msg", "请至少输入6位长度密码!");
                                d = false;
                                return false
                            } else if (t !== $("#confirm-new-password").val()) {
                                e.attr("data-feedback-msg", "两次密码不一致!");
                                d = false;
                                return false
                            } else {
                                $(".new-pwd,.confirm-pwd").removeAttr("data-feedback-msg");
                                l = true;
                                d = true
                            }
                        }, "#confirm-new-password": function () {
                            var e = $(".confirm-pwd"), t = $.trim($(this).val());
                            if (t === "") {
                                e.attr("data-feedback-msg", "请输入确认密码!");
                                l = false;
                                return false
                            } else if (t.length < 6) {
                                e.attr("data-feedback-msg", "请至少输入6位长度密码!");
                                l = false;
                                return false
                            } else if (t !== $("#new-password").val()) {
                                e.attr("data-feedback-msg", "两次密码不一致!");
                                l = false;
                                return false
                            } else {
                                $(".confirm-pwd,.new-pwd").removeAttr("data-feedback-msg");
                                l = true;
                                d = true
                            }
                        }
                    }
                });
                function m(e) {
                    var t = i($("#new-password").val()).substring(4) + a();
                    var n = i($("#current-password").val()).substring(4) + a();
                    var l = {};
                    l.newpassword = t;
                    l.oldpassword = n;
                    e.attr("disabled", "disabled").html('提交 <i class="fa fa-spinner fa-spin"></i>');
                    s(r.modifyPwd, l).on("success", function (e) {
                        if (e === "true") {
                            o.msg({content: "修改密码成功！", type: "success"});
                            $("#form-cancel").trigger("click")
                        } else {
                            h()
                        }
                        return false
                    }).on("error", function (e) {
                        if (e === "timeout") {
                            h()
                        }
                    });
                    function h() {
                        o.msg({content: "修改密码失败！", type: "failed"});
                        e.removeAttr("disabled").html("提交")
                    }
                }

                function u(e) {
                    if (e.attr("data-status") == 0) {
                        e.parent().addClass("slide-out");
                        setTimeout(function () {
                            e.html('<i class="fa fa-save"></i> 保存');
                            e.parent().children(".profile-cancel-btn").removeClass("hidden");
                            e.parent().removeClass("slide-out");
                            e.parent().parent().parent().addClass("editing");
                            e.attr("data-status", 1)
                        }, 300);
                        $("#detail-info").find(".form-group > div").each(function () {
                            $(this).empty();
                            if ($(this).attr("data-type") == "textarea") {
                                $(this).html('<input type="' + $(this).attr("data-type") + '" id="' + $(this).attr("data-id") + '" value="' + $(this).attr("data-value") + '" maxlength="200" >')
                            } else {
                                $(this).html('<input type="' + $(this).attr("data-type") + '" data-status="1" id="' + $(this).attr("data-id") + '" value="' + $(this).attr("data-value") + '" maxlength="35" >')
                            }
                        })
                    } else {
                        var n = false, a = false, i = $.trim($("#user-phone").val()), l = $.trim($("#user-mod-email").val()), h = $(".user-cancel"), d, p, m = {};
                        if (l) {
                            if (!t.isEmail(l)) {
                                o.msg({content: "请输入正确的邮箱格式！", type: "error"});
                                return false
                            } else {
                                d = l.split("@");
                                p = d[1];
                                if (p.toLocaleLowerCase() == "gmail.com") {
                                    o.msg({content: "系统暂不支持gmail.com邮箱，请更换！", type: "error"});
                                    return false
                                }
                            }
                        }
                        m.username = l;
                        if (i == "" || t.checkPhone(i) || t.checkMobile(i)) {
                            n = true;
                            var u = {};
                            u.nickname = $.trim($("#user-nickname").val());
                            u.username_zh = $.trim($("#user-zh-name").val());
                            u.phone = i;
                            u.descriptor = $.trim($("#user-notes").val())
                        } else {
                            o.msg({content: "您输入的联系电话格式不正确！", type: "error"})
                        }
                        if ($("#user-mod-email").attr("data-status") && c !== l) {
                            u.email = l;
                            var V = {};
                            V.userinfo = u;
                            s(r.checkUsername, m).on("success", function (e) {
                                if (e === "user-is-exist") {
                                    o.msg({content: "邮箱已存在", type: "error"})
                                } else if (e.status === "success") {
                                    a = true
                                } else if (e.type === "error") {
                                    o.msg({content: e.content, type: "error"})
                                }
                                if (!n || !a)return false;
                                s(r.modifyUserInfo, V).on("success", function (e) {
                                    if (e != "true") {
                                        o.msg({content: "出错啦！" + e, type: "error"})
                                    } else {
                                        $(this).each(function () {
                                            h.parent().addClass("slide-out");
                                            setTimeout(function () {
                                                h.addClass("hidden");
                                                h.parent().children(".profile-edit-btn").html('<i class="fa fa-pencil-square-o"></i> 编辑').attr("data-status", 0);
                                                h.parent().removeClass("slide-out")
                                            }, 300);
                                            $(".personalinfo").find(".form-group > div").each(function () {
                                                $(this).attr("data-value", $(this).children().val());
                                                $(this).text($(this).attr("data-value"))
                                            });
                                            h.parent().parent().parent().removeClass("editing")
                                        });
                                        o.msg({content: "修改个人信息成功！", type: "success"})
                                    }
                                }).on("error", function (e) {
                                    o.msg({content: "出错啦！" + e, type: "error"})
                                })
                            }).on("error", function (e) {
                                o.msg({content: "出错啦！" + e, type: "error"});
                                return false
                            })
                        } else {
                            a = true;
                            if (!n || !a)return false;
                            var U = {};
                            U.userinfo = u;
                            U.userinfo.email = c;
                            s(r.modifyUserInfo, U).on("success", function (e) {
                                if (e != "true") {
                                    o.msg({content: "出错啦！" + e, type: "error"})
                                } else {
                                    $(this).each(function () {
                                        h.parent().addClass("slide-out");
                                        setTimeout(function () {
                                            h.addClass("hidden");
                                            h.parent().children(".profile-edit-btn").html('<i class="fa fa-pencil-square-o"></i> 编辑').attr("data-status", 0);
                                            h.parent().removeClass("slide-out")
                                        }, 300);
                                        $(".personalinfo").find(".form-group > div").each(function () {
                                            $(this).attr("data-value", $(this).children().val());
                                            $(this).text($(this).attr("data-value"))
                                        });
                                        h.parent().parent().parent().removeClass("editing")
                                    });
                                    o.msg({content: "修改个人信息成功！", type: "success"})
                                }
                            }).on("error", function (e) {
                                o.msg({content: "出错啦！" + e, type: "error"})
                            })
                        }
                    }
                }

                function V(e) {
                    if (e.attr("data-status") == 0) {
                        e.parent().addClass("slide-out");
                        setTimeout(function () {
                            e.html('<i class="fa fa-save"></i> 保存');
                            e.parent().children(".profile-cancel-btn").removeClass("hidden");
                            e.parent().removeClass("slide-out");
                            e.parent().parent().parent().addClass("editing");
                            e.attr("data-status", 1)
                        }, 300);
                        $("#company-info").find(".form-group > div").each(function () {
                            $(this).empty();
                            if ($(this).attr("data-type") == "textarea") {
                                $(this).html('<input type="' + $(this).attr("data-type") + '" id="' + $(this).attr("data-id") + '" value="' + $(this).attr("data-value") + '" maxlength="200" >')
                            } else {
                                $(this).html('<input type="' + $(this).attr("data-type") + '" id="' + $(this).attr("data-id") + '" value="' + $(this).attr("data-value") + '" maxlength="35" >')
                            }
                        })
                    } else {
                        var n = false, a = $(".group-cancel"), i = $.trim($("#user-company-mail").val());
                        if (i == "" || t.checkMailCode(i)) {
                            n = true;
                            var l = {};
                            l.company = $.trim($("#user-company").val());
                            l.address = $.trim($("#user-company-address").val());
                            l.zipcode = i;
                            l.descriptor = $.trim($("#user-company-descriptor").val());
                            var h = {};
                            var d = {};
                            d.groupinfo = l;
                            d.userinfo = h
                        } else {
                            o.msg({content: "您输入邮编格式不正确！", type: "error"})
                        }
                        if (!n)return false;
                        s(r.modifyUserInfo, d).on("success", function (e) {
                            if (e != "true") {
                                o.msg({content: e, type: "failed"})
                            } else {
                                $(this).each(function () {
                                    a.parent().addClass("slide-out");
                                    setTimeout(function () {
                                        a.addClass("hidden");
                                        a.parent().children(".profile-edit-btn").html('<i class="fa fa-pencil-square-o"></i> 编辑').attr("data-status", 0);
                                        a.parent().removeClass("slide-out")
                                    }, 300);
                                    $(".groupinfo").find(".form-group > div").each(function () {
                                        $(this).attr("data-value", $(this).children().val());
                                        $(this).text($(this).attr("data-value"))
                                    });
                                    a.parent().parent().parent().removeClass("editing")
                                });
                                o.msg({content: "修改单位信息成功！", type: "success"})
                            }
                        }).on("error", function (e) {
                            o.msg({content: "出错啦！" + e, type: "error"})
                        })
                    }
                }

                e._gc = function () {
                    e.$ele.mainContainer.off();
                    e.$ele.popupWrapper.off();
                    $("body").off("keyup.password")
                }
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    !(e.exports = {
        userInfo: {type: "get", route: "userInfo"},
        checkUsername: {type: "post", route: "checkUsername"},
        modifyUserInfo: {type: "post", route: "/myInfo/modifyUserInfo"},
        modifyPwd: {type: "post", route: "/myInfo/modifyPwd"}
    })
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-profile" class="tpl-content-padding tpl-page">\n    <section id="basic-info" class="user-info">\n        <h3 class="tpl-title">账号信息</h3>\n\n        <div class="user-info-content">\n            <div id="user-picture-mod" title="更换头像">\n                <img src="../../images/user/avatars/2.jpg" class="user-picture pic-src" alt="user picture">\n                <!--<button id="user-picture-mod-btn" class="btn-flat">更换头像</button>-->\n            </div>\n            <h5 id="profile-user-name">\n                ');
            __append(escape(userInfo.username));
            __append('\n                <button id="user-password-mod" class="btn-flat pull-right">\n                    <i class="fa fa-pencil-square-o"></i>\n                    修改密码\n                </button>\n            </h5>\n\n            <div class="form-group">\n                <label for="user-role">&nbsp;&nbsp;角&nbsp;&nbsp;色&nbsp;&nbsp;：</label>\n\n                <div id="user-role">\n                    ');
            if (groupInfo.role == "100") {
                __append("\n                    内部用户\n                    ")
            } else if (groupInfo.role == "200") {
                __append("\n                    区域用户\n                    ")
            } else if (groupInfo.role == "300") {
                __append("\n                    责任用户\n                    ")
            } else {
                __append("\n                    普通用户\n                    ")
            }
            __append('\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="user-type">&nbsp;&nbsp;类&nbsp;&nbsp;型&nbsp;&nbsp;：</label>\n\n                <div id="user-type">\n                    ');
            if (groupInfo.type == "100") {
                __append("\n                    免费\n                    ")
            } else if (groupInfo.type == "200") {
                __append("\n                    试用\n                    ")
            } else if (groupInfo.type == "300") {
                __append("\n                    正式\n                    ")
            } else {
                __append("\n                    ")
            }
            __append('\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="user-status">&nbsp;&nbsp;状&nbsp;&nbsp;态&nbsp;&nbsp;：</label>\n\n                <div id="user-status">\n                    ');
            if (userInfo.status == "0") {
                __append("\n                    未激活\n                    ")
            } else if (userInfo.status == "1") {
                __append("\n                    激活\n                    ")
            } else if (userInfo.status == "3") {
                __append("\n                    已过期\n                    ")
            } else if (userInfo.status == "9") {
                __append("\n                    冻结\n                    ")
            }
            __append("\n                </div>\n            </div>\n            ");
            if (groupInfo.role == 400) {
                __append('\n            <div class="form-group">\n                <label for="user-email">&nbsp;&nbsp;邮&nbsp;&nbsp;箱&nbsp;&nbsp;：</label>\n\n                <div id="user-email">');
                __append(escape(userInfo.email));
                __append("</div>\n            </div>\n            ")
            }
            __append("\n            ");
            if (groupInfo.role != 400) {
                __append('\n            <div class="form-group">\n                <label for="user-company-admin">&nbsp;管&nbsp;理&nbsp;员：</label>\n\n                <div data-id="user-company-admin"\n                     data-value="');
                if (groupInfo.ownername == "" || groupInfo.ownername == null) {
                } else {
                    __append(escape(groupInfo.ownername));
                    __append(" ")
                }
                __append('"\n                     data-type="text">\n                    ');
                if (groupInfo.ownername == "" || groupInfo.ownername == null) {
                    __append("\n                    ")
                } else {
                    __append(escape(groupInfo.ownername))
                }
                __append("\n                </div>\n            </div>\n            ")
            }
            __append('\n            <div class="form-group">\n                <label for="user-end-time">到期时间：</label>\n\n                <div id="user-end-time">\n                    ');
            if (groupInfo.expire_date && groupInfo.expire_date !== "undefined") {
                __append("\n                    ");
                __append(escape(groupInfo.expire_date));
                __append("\n                    ")
            } else {
            }
            __append('\n                </div>\n            </div>\n        </div>\n    </section>\n    <section id="detail-info" class="user-info">\n        <h3 class="tpl-title">个人信息</h3>\n\n        <div class="actions">\n            <div class="action-wrapper">\n                <button id="detail-info-mod-cancel" class="user-cancel profile-cancel-btn btn-flat hidden"><i\n                            class="fa fa-times"></i> 取消\n                </button>\n                <button id="detail-info-mod" class="profile-edit-btn btn-flat" data-status="0"><i\n                            class="fa fa-pencil-square-o"></i> 编辑\n                </button>\n            </div>\n        </div>\n\n        <div class="user-info-content personalinfo">\n            <div class="form-group">\n                <label for="user-nickname">&nbsp;&nbsp;昵&nbsp;&nbsp;称&nbsp;&nbsp;：</label>\n\n                <div data-id="user-nickname" class="nickname" data-value="');
            __append(escape(userInfo.nickname));
            __append('"\n                     data-type="text">');
            __append(escape(userInfo.nickname));
            __append('</div>\n            </div>\n            <div class="form-group">\n                <label for="user-zh-name">&nbsp;&nbsp;姓&nbsp;&nbsp;名&nbsp;&nbsp;：</label>\n\n                <div data-id="user-zh-name"\n                   data-value="');
            if (userInfo.username_zh === "" || userInfo.username_zh === null) {
            } else {
                __append(escape(userInfo.username_zh))
            }
            __append('"\n                   data-type="text">\n                   ');
            if (userInfo.username_zh == "" || userInfo.username_zh == null) {
            } else {
                __append(escape(userInfo.username_zh))
            }
            __append('\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="user-phone">联系电话：</label>\n\n                <div data-id="user-phone"\n                     data-value="');
            if (userInfo.phone == "" || userInfo.phone == null) {
            } else {
                __append(escape(userInfo.phone))
            }
            __append('"\n                     data-type="text">\n                    ');
            if (userInfo.phone == "" || userInfo.phone == null) {
            } else {
                __append(escape(userInfo.phone))
            }
            __append("\n                </div>\n            </div>\n            ");
            if (groupInfo.role != 400) {
                __append('\n            <div class="form-group">\n                <label for="user-mod-email">&nbsp;&nbsp;邮&nbsp;&nbsp;箱&nbsp;&nbsp;：</label>\n\n                <div data-id="user-mod-email" data-value="');
                __append(escape(userInfo.email));
                __append('" data-type="text">');
                __append(escape(userInfo.email));
                __append("</div>\n            </div>\n            ")
            }
            __append('\n            <div class="form-group">\n                <label for="user-notes">&nbsp;&nbsp;备&nbsp;&nbsp;注&nbsp;&nbsp;：</label>\n\n                <div data-id="user-notes"\n                   data-value="');
            if (userInfo.descriptor == "" || userInfo.descriptor == null) {
            } else {
                __append(escape(userInfo.descriptor))
            }
            __append('"\n                   data-type="textarea">\n                   ');
            if (userInfo.descriptor == "" || userInfo.descriptor == null) {
            } else {
                __append(escape(userInfo.descriptor))
            }
            __append('\n                </div>\n            </div>\n        </div>\n    </section>\n    <section id="company-info" class="user-info">\n        <h3 class="tpl-title">单位信息</h3>\n\n        <div class="actions">\n            ');
            if (groupInfo.owner === userInfo.userid) {
                __append('\n            <div class="action-wrapper">\n                <button id="company-info-mod-cancel" class="group-cancel profile-cancel-btn btn-flat hidden"><i\n                            class="fa fa-times"></i> 取消\n                </button>\n                <button id="company-info-mod" class="profile-edit-btn btn-flat" data-status="0"><i\n                            class="fa fa-pencil-square-o"></i> 编辑\n                </button>\n            </div>\n            ')
            }
            __append('\n        </div>\n\n        <div class="user-info-content groupinfo">\n            <div class="form-group">\n                <label for="user-company">单位名称：</label>\n\n                <div data-id="user-company"\n                     data-value="');
            if (groupInfo.company) {
                __append(escape(groupInfo.company))
            }
            __append('"\n                     data-type="text">\n                    ');
            if (groupInfo.company) {
                __append("\n                    ");
                __append(escape(groupInfo.company));
                __append("\n                    ")
            }
            __append('\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="user-company-address">联系地址：</label>\n\n                <div data-id="user-company-address"\n                     data-value="');
            if (groupInfo.address) {
                __append(escape(groupInfo.address))
            }
            __append('"\n                     data-type="text">\n                    ');
            if (groupInfo.address) {
                __append("\n                    ");
                __append(escape(groupInfo.address));
                __append("\n                    ")
            }
            __append('\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="user-company-mail">&nbsp;&nbsp;邮&nbsp;&nbsp;编&nbsp;&nbsp;：</label>\n\n                <div data-id="user-company-mail"\n                     data-value="');
            if (groupInfo.zipcode) {
                __append(escape(groupInfo.zipcode))
            }
            __append('"\n                     data-type="text">\n                    ');
            if (groupInfo.zipcode) {
                __append("\n                    ");
                __append(escape(groupInfo.zipcode));
                __append("\n                    ")
            }
            __append("\n                </div>\n            </div>\n        </div>\n    </section>\n</div>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-change-password-window" class="corner-popup-window pull-right">\n    <section class="corner-popup-section">\n        <header class="corner-popup-header">\n            <h6>修改密码</h6>\n        </header>\n        <div class="corner-popup-body form-with-feedback">\n            <div class="form-group">\n                <label for="current-password" class="control-label">当前密码</label>\n\n                <div class="feedback error old-pwd">\n                    <input id="current-password" class="form-control" type="password">\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="new-password" class="control-label">&nbsp;新&nbsp;密&nbsp;码</label>\n\n                <div class="feedback error new-pwd">\n                    <input id="new-password" class="form-control" type="password">\n                    <div id="password-strength">\n                        <span></span>\n                        <span></span>\n                        <span></span>&nbsp;&nbsp;&nbsp;&nbsp;\n                        <span></span>\n                    </div>\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="confirm-new-password" class="control-label">确认密码</label>\n\n                <div class="feedback error confirm-pwd">\n                    <input id="confirm-new-password" class="form-control" type="password">\n                </div>\n            </div>\n            <div class="form-group">\n                <label></label>\n                <div>\n                    <button type="submit" id="btn-submit-new-password" class="btn btn-default btn-sm ">提交</button>\n                    <button type="button" id="form-cancel" class="btn btn-default btn-sm ">取消</button>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-change-user-pic-window" class="corner-popup-window pull-right">\n    <section class="corner-popup-section">\n        <header class="corner-popup-header">\n            <h6>修改头像</h6>\n        </header>\n        <div class="corner-popup-body">\n            <div class="left">\n                <p>头像列表</p>\n                <ul id="user-pic-list" class="list-inline">\n                    <li><img src="../../images/user/avatars/1.jpg" class="user-picture" alt="user-pic"></li>\n                    <li class="active"><img src="../../images/user/avatars/2.jpg" class="user-picture" alt="user-pic"></li>\n                    <li><img src="../../images/user/avatars/3.jpg" class="user-picture" alt="user-pic"></li>\n                    <li><img src="../../images/user/avatars/4.jpg" class="user-picture" alt="user-pic"></li>\n                    <li><img src="../../images/user/avatars/5.jpg" class="user-picture" alt="user-pic"></li>\n                    <li><img src="../../images/user/avatars/6.jpg" class="user-picture" alt="user-pic"></li>\n                    <li><img src="../../images/user/avatars/7.jpg" class="user-picture" alt="user-pic"></li>\n                    <li><img src="../../images/user/avatars/8.jpg" class="user-picture" alt="user-pic"></li>\n                </ul>\n                <div class="form-group">\n                    <label></label>\n                    <div>\n                        <button type="submit" id="btn-submit-user-pic" class="btn btn-default btn-sm ">提交\n                        </button>\n                        <button type="button" id="form-cancel" class="btn btn-default btn-sm ">取消</button>\n                    </div>\n                </div>\n            </div>\n\n            <div class="right">\n                <img src="../../images/user/avatars/2.jpg" id="user-picture-preview" class="user-picture" alt="当前用户头像">\n\n                <p class="text-center">预览</p>\n            </div>\n        </div>\n    </section>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(57), a = n(10), i = n(36), o = n(8), r, s = n(58), l = $("#message-sub-menu");
            d();
            e.$ele.mainContainer.off();
            e.$ele.mainContainer.multiOn({
                click: {
                    "#msg-link": function () {
                        l.attr("data-selected", "0");
                        p(d, $(this))
                    }, "#anno-link": function () {
                        l.attr("data-selected", "1");
                        p(function () {
                            d({type: 1})
                        }, $(this))
                    }, ".msg-list .actions i": function () {
                        $(".msg-list .actions i").next().hide("fast");
                        $(this).next().show("fast")
                    }, "#msg-list-wrap .actions #set-read": function () {
                        c(t.updateMessage, {msgId: $(this).parent().attr("data-id")})
                    }, "#msg-list-wrap #read-all-msg": function () {
                        var e = [], n = $(this).parent().parent().find(".item");
                        for (var a = 0, i = n.length; a < i; a++) {
                            e.push($(n[a]).attr("data-id"))
                        }
                        c(t.updateMessage, {msgId: e.join(";")})
                    }, "#msg-list-wrap .actions #delete": function () {
                        c(t.delMessage, {msgId: $(this).parent().attr("data-id")})
                    }, "#msg-list-wrap #delete-all-msg": function () {
                        var e = [], n = $(this).parent().parent().find(".item");
                        for (var a = 0; a < n.length; a++) {
                            e.push($(n[a]).attr("data-id"))
                        }
                        c(t.delMessage, {msgId: e.join(";")})
                    }, "#pagination-message-list ul li a": function () {
                        var e, t = parseInt($(this).parent().parent().attr("data-page-index"));
                        if ($(this).hasClass("previous")) {
                            e = t - 1
                        } else if ($(this).hasClass("next")) {
                            e = t + 1
                        } else {
                            e = parseInt($(this).text())
                        }
                        p(function () {
                            d({pageIndex: e, type: l.attr("data-selected")})
                        })
                    }
                }
            });
            var h = $("body");
            h.off("mouseup.hideMsgMenu");
            h.on("mouseup.hideMsgMenu", function (e) {
                var t = $(".msg-list").find(".actions");
                if (!t.is(e.target) && t.has(e.target).length === 0) {
                    $(".msg-list .actions ul").hide("fast")
                }
            });
            function d(n) {
                n = n || {};
                n.pageIndex = n.pageIndex || 1;
                n.type = n.type || 0;
                var l = $(".content-wrapper");
                o(t.pageMessage, {page: n.pageIndex || "1", type: n.type}).on("success", function (e) {
                    if (e.status === "success") {
                        var t = parseInt(e.result.recordnum);
                        e.result.msgnum = r;
                        l.empty().append(s({messageList: e.result, type: n.type}));
                        if (t > 9) {
                            i.set("#pagination-message-list", t, n.pageIndex)
                        }
                    } else {
                        l.empty().append("读取消息列表出错：" + e.result);
                        a.msg({content: "读取消息列表出错：" + e.result, type: "error"})
                    }
                }).on("error", function (t) {
                    l.empty().append(e.tpl.error({hint: "unload", errorMsg: t}))
                })
            }

            function c(e, t) {
                o(e, t).on("success", function (e) {
                    if (e.status === "success") {
                        a.msg({content: "操作成功！", type: "success"});
                        p(function () {
                            d({type: l.attr("data-selected")})
                        })
                    } else {
                        a.msg({content: "操作失败！" + e, type: "error"})
                    }
                }).on("error", function () {
                    a.msg({content: "操作失败！", type: "error"})
                })
            }

            function p(e, t) {
                var n = $(".content-wrapper");
                if (t) {
                    $("#message-sub-menu").find("li").removeClass("active")
                }
                n.addClass("fade-out");
                setTimeout(function () {
                    n.empty();
                    e();
                    if (t) {
                        t.addClass("active")
                    }
                    n.removeClass("fade-out")
                }, 200)
            }

            e._gc = function () {
                e.$ele.mainContainer.off();
                h.off("mouseup.hideMsgMenu")
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    !(e.exports = {
        pageMessage: {type: "get", route: "/pageMessage"},
        pageNotice: {type: "get", route: "/pageNotice"},
        updateMessage: {type: "post", route: "/updateMessage"},
        delMessage: {type: "post", route: "/delMessage"},
        getUnReadMsgCount: {type: "get", route: "/getUnReadMsgCount"},
        getUnReadMsgAndNotice: {type: "get", route: "/getUnReadMsgAndNotice"}
    })
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="msg-list-wrap" class="msg-list">\n    ');
            var typeHint = "";
            type == 0 ? typeHint = "消息" : typeHint = "公告";
            __append("\n\n\n    ");
            if (messageList.recordnum > 0) {
                __append("\n    ");
                data = messageList.pagelist;
                __append("\n    ");
                for (var i = 0, len = data.length; i < len; i++) {
                    __append("\n    ");
                    var isRead = "";
                    if (data[i].status !== 0) {
                        isRead = "read"
                    }
                    __append('\n    <article class="item ');
                    __append(escape(isRead));
                    __append('" data-id="');
                    __append(escape(data[i].id));
                    __append('">\n        <h5>\n            [\n            <time>');
                    __append(escape(data[i].createtime));
                    __append("</time>\n            ] ");
                    __append(escape(data[i].subject));
                    __append('\n        </h5>\n        <div class="content">\n            <p>');
                    __append(escape(data[i].content));
                    __append('</p>\n        </div>\n        <div class="actions">\n            <i class="fa fa-chevron-down"></i>\n            <ul class="list-unstyled" data-id="');
                    __append(escape(data[i].id));
                    __append('">\n                ');
                    if (data[i].status === 0) {
                        __append('\n                <li id="set-read">置为已读</li>\n                ')
                    }
                    __append('\n                <li id="delete">删除</li>\n            </ul>\n        </div>\n    </article>\n    ')
                }
                __append('\n    <div class="batch">\n        ');
                if (messageList.recordnum !== 0) {
                    __append('\n        <button id="read-all-msg" class="btn-flat">全部置为已读</button>\n        ')
                }
                __append('\n        <button id="delete-all-msg" class="btn-flat">删除本页');
                __append(escape(typeHint));
                __append('</button>\n    </div>\n    <nav id="pagination-message-list" class="pagination-wrapper text-right"></nav>\n    ')
            } else {
                __append("\n    <p>暂无");
                __append(escape(typeHint));
                __append("！</p>\n    ")
            }
            __append("\n</div>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="tpl-message-center" class="tpl-page">\n    <nav id="message-sub-menu" class="tpl-sub-menu" data-selected="0">\n        <ul class="list-unstyled">\n            <li id="msg-link" class="active">消息</li>\n            <li id="anno-link">公告</li>\n        </ul>\n    </nav>\n    <div class="content-wrapper tpl-content-padding"></div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(30), a = n(8), i = n(36), o = n(61), r = $("#user-loginhistory").find(".content-wrapper");
            s();
            e.$ele.mainContainer.off("click.loginHistory");
            e.$ele.mainContainer.on("click.loginHistory", "#pagination-loginhistory-list ul li a", function () {
                var e, t = parseInt($(this).parent().parent().attr("data-page-index"));
                r.empty();
                if ($(this).hasClass("previous")) {
                    e = t - 1
                } else if ($(this).hasClass("next")) {
                    e = t + 1
                } else {
                    e = parseInt($(this).text())
                }
                s(e)
            });
            function s(n) {
                r.addClass("fade-out");
                a(t.getLoginHistory, {page: n || 1}).on("success", function (e) {
                    var t = parseInt(e.recordnum);
                    setTimeout(function () {
                        r.empty().append(o({data: e}));
                        if (t > 9) {
                            i.set("#pagination-loginhistory-list", t, n)
                        }
                        r.removeClass("fade-out")
                    }, 200)
                }).on("error", function (t) {
                    r.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                    r.removeClass("fade-out")
                })
            }

            e._gc = function () {
                e.$ele.mainContainer.off("click.loginHistory")
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (parseInt(data.recordnum) > 0) {
                __append('\n<table class="table-responsive-card thead-bg gap-color border text-center">\n    <thead>\n    <tr>\n        <th class="title" style="width: 100px;">序号</th>\n        <th class="tag">登录时间</th>\n        <th class="search-keyword">登出时间</th>\n        <th class="description">登录IP</th>\n        <th class="update-time">登出IP</th>\n    </tr>\n    </thead>\n    <tbody>\n    ');
                for (var i = 0; i < data.list.length; i++) {
                    __append('\n    <tr>\n        <td class="title" data-th="序号：">');
                    __append(escape(i + 1 + (data.pagenow - 1) * 10));
                    __append('</td>\n        <td class="tag" data-th="登录时间：">');
                    __append(escape(data.list[i].logintime));
                    __append('</td>\n        <td class="search-keyword" data-th="登出时间：">');
                    __append(escape(data.list[i].logouttime));
                    __append('</td>\n        <td class="description" data-th="登录IP：">');
                    __append(escape(data.list[i].loginip));
                    __append('</td>\n        <td class="update-time" data-th="登出IP：">');
                    __append(escape(data.list[i].logoutip));
                    __append("</td>\n    </tr>\n    ")
                }
                __append('\n    </tbody>\n</table>\n<nav id="pagination-loginhistory-list" class="pagination-wrapper text-center">\n</nav>\n')
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-loginhistory" class="tpl-content-padding tpl-page">\n    <h4 class="tpl-title">登录历史</h4>\n    <div class="content-wrapper"></div>\n</div>');
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = n(28), t = n(32), a = n(30);
            e({
                targetID: "widget-search-history",
                apiRoute: t.searchhistory,
                emptyContent: "(。_。)还没有任何搜索历史",
                isAllowDel: true,
                delClass: "del-search-history",
                isLayoutFix: true
            });
            e({
                targetID: "widget-sys-rec",
                searchPrefix: "stag:",
                searchScope: 0,
                param: {page: "1"},
                apiRoute: a.systemRecommend,
                emptyContent: "暂时没有系统推荐",
                isLayoutFix: true
            })
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-search" class="main">\n    <div id="user-search-result">\n        <section class="home-widget">\n            <h4 class="tpl-title">搜索技巧</h4>\n            <div class="content">\n                <table>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <mark>国家</mark>\n                            : 国家名称或国家代码(美国或US）\n                        </td>\n                        <td>\n                            <mark>地区</mark>\n                            : 省份或城市名称（湖南、hunan、上海）\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mark>ip</mark>\n                            : 28.223.24.50\n                        </td>\n                        <td>\n                            <mark>端口</mark>\n                            : 8080\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mark>协议</mark>\n                            : 协议名称\n                        </td>\n                        <td>\n                            <mark>协议版本</mark>\n                            : 协议版本号 (openssh 5.3)\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mark>服务</mark>\n                            : web服务名称\n                        </td>\n                        <td>\n                            <mark>主机/域名</mark>\n                            : 主机名或域名（www.sina.com.cn)\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mark>标题</mark>\n                            : 网页标题\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colspan="2">\n                            <mark>关键词</mark>\n                            : 页面定义的关键词\n                            <mark>&lt;meta name="keywords"&gt;</mark>\n                            (小米,小米手机,小米官网,红米手机,小米商城,小米电视)\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </section>\n        <section class="home-widget">\n            <h4 class="tpl-title">搜索示例</h4>\n            <div class="content">\n                <ol>\n                    <li>中国端口为80，服务为apache,标题有企业的所有网站或设备：\n                        <mark class="search-item" data-search-keyword="国家:中国 服务:apache 标题:企业" data-option="0">\n                            国家:中国 服务:apache 标题:企业\n                        </mark>\n                    </li>\n                    <li>上海和北京所有采用openssl协议的网站或设备\n                        <mark class="search-item" data-search-keyword="(地区:上海|地区:北京) openssl" data-option="0">\n                            (地区:上海|地区:北京) openssl\n                        </mark>\n                    </li>\n                    <li>所有采用openssl协议但端口不是443的网站或设备\n                        <mark class="search-item" data-search-keyword="openssl -端口:443" data-option="0">\n                            openssl-端口:443\n                        </mark>\n                    </li>\n                </ol>\n                <p class="text-right"><a href="/manual" target="_blank">更多详情>></a></p>\n            </div>\n        </section>\n    </div>\n    <aside id="user-sidebar" class="hidden-xs hidden-sm">\n        <section id="widget-search-history" class="search-widget">\n            <h4>我的搜索历史</h4>\n\n            <div class="widget-content content" style="min-height: 150px;">\n            </div>\n        </section>\n        <section id="widget-sys-rec" class="search-widget">\n            <h4>系统推荐</h4>\n\n            <div class="widget-content content" style="min-height: 340px;"></div>\n        </section>\n    </aside>\n</div>\n<button id="back-to-top" class="hidden-xs" data-user-option="返回顶部" style="display: none;">\n    <i class="fa fa-chevron-up"></i>\n</button>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, a = e.validate, i = n(29), o = n(10), r = n(8), s = n(36), l = n(66), h = {
                addNew: n(67),
                listCommon: n(68),
                listRegion: n(69)
            };
            c();
            e.$ele.mainContainer.off();
            e.$ele.mainContainer.multiOn({
                click: {
                    "#user-add-monitor-btn": function () {
                        e.cornerWindow(h.addNew)
                    }, "#user-monitor .table-responsive-card .delete": function () {
                        var e = $(this).parent().parent().attr("data-lsh");
                        o.alert({title: "确认删除该监测站点？", content: "删除后无法恢复。"}, t);
                        function t() {
                            r(i.delMonitorSite, {id: e}).on("success", function () {
                                o.msg({content: "删除监测站点成功！", type: "success"});
                                c()
                            }).on("error", function () {
                                o.msg({content: "删除监测站点失败！", type: "failed"})
                            })
                        }
                    }, "#pagination-monitor-list ul li a": function () {
                        var e, t = parseInt($(this).parent().parent().attr("data-page-index"));
                        if ($(this).hasClass("previous")) {
                            e = t - 1
                        } else if ($(this).hasClass("next")) {
                            e = t + 1
                        } else {
                            e = parseInt($(this).text())
                        }
                        c(e)
                    }
                }
            });
            e.$ele.popupWrapper.off();
            e.$ele.popupWrapper.multiOn({
                click: {"#btn-submit-add-site-monitor": d},
                keypress: {
                    "#f-site-link": function (e) {
                        e = e || window.event;
                        if (e.keyCode == 13) {
                            $("#btn-submit-add-site-monitor").trigger("click");
                            $(this).blur()
                        }
                    }
                }
            });
            function d() {
                var e = $(this), n = $.trim($("#f-site-name").val()), s = $.trim($("#f-site-link").val());
                if (n === "" || s === "") {
                    o.msg({content: "监测名称和监测站点不能为空", type: "failed"});
                    return false
                } else if (!a.isIPorDomain(s)) {
                    o.msg({content: "请输入正确的域名或IP！", type: "failed"});
                    return false
                }
                e.attr("disabled", "disabled").html('提交 <i class="fa fa-spinner fa-spin"></i>');
                r(i.addMonitorSite, {siteName: n, siteUrl: s}).on("success", function (n) {
                    if (n === "success") {
                        o.msg({type: "success", content: "添加监测站点成功！"});
                        $("#form-cancel").trigger("click");
                        t.monitor()
                    } else {
                        o.msg({type: "error", content: "添加监测站点失败1：" + n});
                        e.removeAttr("disabled").html("提交")
                    }
                }).on("error", function (t) {
                    o.msg({type: "error", content: "添加监测站点失败2! " + t});
                    e.removeAttr("disabled").html("提交")
                })
            }

            function c(t) {
                var n = $("#user-monitor").find(".content-wrapper");
                n.addClass("fade-out");
                r(i.monitor, {page: t || 1}).on("success", function (e) {
                    setTimeout(function () {
                        p(e)
                    }, 200)
                }).on("error", function (t) {
                    n.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                    n.removeClass("fade-out")
                })
            }

            function p(t) {
                var n = t.recordnum, a = t.pagelist, o = $("#user-info").find(".hide-name").text(), d = e.user.role, c, p = $("#user-monitor").find(".content-wrapper");
                if (d == 200) {
                    p.empty().append(h.listRegion({data: a, username: o}));
                    c = $(".monitor-item");
                    c.each(function () {
                        var e = $(this);
                        r(i.getSecureStatistics, {lsh: e.attr("data-lsh")}).on("success", function (t) {
                            e.find(".total").html("<mark>" + $.numFormat(t.TOTAL) + "</mark>");
                            e.find(".high").html("<mark>" + $.numFormat(t.HIGH) + "</mark>");
                            e.find(".mid").html("<mark>" + $.numFormat(t.MEDIUM) + "</mark>");
                            e.find(".low").html("<mark>" + $.numFormat(t.LOW) + "</mark>")
                        }).on("error", function (e) {
                            console.log("get detail error:" + e)
                        })
                    })
                } else {
                    p.empty().append(h.listCommon({data: a, username: o, userRole: d}));
                    if (d != 400) {
                        c = $(".monitor-item");
                        c.each(function () {
                            var e = $(this), t = e.find(".sec-level-title"), n = e.find(".sec-level-detail"), a = "";
                            r(i.getSecureStatistics, {lsh: e.attr("data-lsh")}).on("success", function (e) {
                                if (e.HIGH > 0) {
                                    t.addClass("high done").html("高危")
                                } else if (e.MEDIUM > 0) {
                                    t.addClass("mid done").html("中危")
                                } else if (e.LOW > 0) {
                                    t.addClass("low done").html("低危")
                                } else {
                                    t.addClass("done").html("安全")
                                }
                                a = "<ul>" + "<li class='search-MonitorSite total' data-level='*'><span>总数</span><span><mark>" + $.numFormat(e.TOTAL) + "</mark></span></li>" + "<li class='search-MonitorSite high' data-level='security:high'><span>高危</span><span><mark>" + $.numFormat(e.HIGH) + "</mark></span></li>" + "<li class='search-MonitorSite mid' data-level='security:medium'><span>中危</span><span><mark>" + $.numFormat(e.MEDIUM) + "</mark></span></li>" + "<li class='search-MonitorSite low' data-level='security:low'><span>低危</span><span><mark>" + $.numFormat(e.LOW) + "</mark></span></li>" + "</ul>";
                                n.html(a)
                            }).on("error", function (e) {
                                console.log("get detail error:" + e)
                            })
                        })
                    }
                }
                if (n > 10) {
                    s.set("#pagination-monitor-list", n, t.pagenow)
                }
                l(i.updateMonitor);
                p.removeClass("fade-out")
            }

            e._gc = function () {
                e.$ele.mainContainer.off();
                e.$ele.popupWrapper.off();
                $("body").off("click.table-cell-edit");
                $(".table-cell-editable").off()
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function (e) {
            var t = n(8), a = n(10), i = $(".table-cell-editable"), o = $("body");
            o.off("click.table-cell-edit");
            o.on("click.table-cell-edit", function (e) {
                if (e.target.className.search("table-cell-editable") == -1 && e.target.className.search("table-cell-editable-input") == -1) {
                    r()
                }
            });
            i.off();
            i.on({
                click: function () {
                    var e = $(this);
                    console.log("clicked");
                    if (e.attr("data-count") != 2) {
                        r();
                        e.attr("data-count", "1")
                    }
                }, dblclick: function () {
                    var e = $(this), t = $.trim(e.parent().attr("data-name"));
                    console.log("dblclick");
                    r();
                    if (e.attr("data-count") != "2") {
                        i.attr("data-count", "0");
                        e.attr("data-count", "2");
                        e.html('<input type="text" class="table-cell-editable-input" value="' + t + '">');
                        e.children("input").focus().select()
                    }
                }, keydown: function (e) {
                    var t = $(this), n = t.parent(), a = $.trim(n.attr("data-name"));
                    e = e || window.event;
                    if (e.keyCode == 13) {
                        s({
                            id: n.attr("data-lsh") || n.attr("data-task-id"),
                            name: $.trim(t.children("input").val())
                        }, t)
                    } else if (e.keyCode == 27) {
                        t.html(a).attr("data-count", "0")
                    }
                }
            });
            function r() {
                var e = $('.table-cell-editable[data-count="1"]'), t = $('.table-cell-editable[data-count="2"]');
                if (e.length != 0) {
                    i.attr("data-count", "0")
                }
                if (t.length != 0) {
                    var n = t.parent();
                    s({id: n.attr("data-lsh") || n.attr("data-task-id"), name: $.trim(t.children("input").val())}, t)
                }
            }

            function s(n, i) {
                var o = i.parent(), r = $.trim(o.attr("data-name"));
                n.name = n.name || "默认";
                if (r != n.name) {
                    t(e, n).on("success", function (e) {
                        a.msg({type: "success", content: "修改名称成功"});
                        i.html(n.name).attr("data-count", "0");
                        o.attr("data-name", n.name)
                    }).on("error", function (e) {
                        a.msg({type: "error", content: "修改名称失败"});
                        i.html(r).attr("data-count", "0")
                    })
                } else {
                    i.html(r).attr("data-count", "0")
                }
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-add-site-monitor" class="corner-popup-window sm pull-right">\n    <section class="corner-popup-section">\n        <header class="corner-popup-header">\n            <h6>添加监测站点</h6>\n        </header>\n        <div class="corner-popup-body form-with-feedback">\n            <div class="form-group">\n                <label for="f-site-name" class="control-label">名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;称</label>\n\n                <div class="feedback error" data-feedback-msg="">\n                    <input id="f-site-name" class="form-control" type="text" maxlength="50" placeholder="名称">\n                </div>\n            </div>\n            <div class="form-group">\n                <label for="f-site-link" class="control-label">网&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;址</label>\n\n                <div class="feedback error" data-feedback-msg="">\n                    <input id="f-site-link" class="form-control" type="text" maxlength="50" placeholder="如：www.example.com或8.8.8.8">\n                </div>\n            </div>\n            <div class="form-group">\n                <label></label>\n                <div>\n                    <button type="submit" id="btn-submit-add-site-monitor" class="btn btn-default btn-sm ">\n                        提交\n                    </button>\n                    <button type="button" id="form-cancel" class="btn btn-default btn-sm ">取消</button>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data && data.length > 0) {
                __append('\n<table class="table-monitor-list table-responsive-card text-center thead-bg border">\n    <thead>\n    <tr>\n        <th class="title">监测名称</th>\n        <th class="site">监测站点</th>\n        <th class="secure-level" style="width: 100px;">安全等级</th>\n        <th class="expire-date">开始监测时间</th>\n        <th class="actions two">操作</th>\n    </tr>\n    </thead>\n    <tbody>\n\n    ');
                data.forEach(function (e) {
                    __append("\n    ");
                    var t = "默认";
                    if (e.hasOwnProperty("name") && e["name"] != "") {
                        t = e.name
                    }
                    __append('\n    <tr class="monitor-item" data-lsh="');
                    __append(escape(e.lsh));
                    __append('" data-name="');
                    __append(escape(t));
                    __append('">\n        <td class="title text-left table-cell-editable" data-th="监测名称：" data-count="0">\n            ');
                    __append(escape(t));
                    __append('\n        </td>\n        <td class="site lsh  text-left" data-th="监测站点：">');
                    __append(escape(e.collectsitename));
                    __append('</td>\n        <td class="secure-level" data-th="安全等级：">\n            <div class="sec-inner-wrap">\n                ');
                    if (userRole == 400) {
                        __append('\n                <p class="sec-level-title done">安全</p>\n                ')
                    } else {
                        __append('\n                <p class="sec-level-title"><i class="fa fa-spinner fa-spin"></i></p>\n                <div class="sec-level-detail"></div>\n                ')
                    }
                    __append('\n            </div>\n        </td>\n        <td class="expire-date" data-th="开始监测时间：">');
                    __append(escape(e.createtime));
                    __append('</td>\n        <td class="actions two text-left" data-lsh="');
                    __append(escape(e.lsh));
                    __append('" data-name="');
                    __append(escape(e.name));
                    __append('">\n            <button class="view search-MonitorSite btn-flat" data-level="*">查看</button>\n            ');
                    if (username === e.createusername) {
                        __append('\n            <button class="delete btn-flat">删除</button>\n            ')
                    }
                    __append("\n        </td>\n    </tr>\n    ")
                });
                __append('\n\n    </tbody>\n</table>\n<nav id="pagination-monitor-list" class="pagination-wrapper text-center"></nav>\n')
            } else {
                __append("\n<p>暂无数据！</p>\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data && data.length > 0) {
                __append('\n<table class="table-monitor-list user-region table-responsive-card thead-bg text-center border">\n    <thead>\n    <tr>\n        <th class="title">监测名称</th>\n        <th class="site">监测站点</th>\n        <th class="secure-total">站点总数</th>\n        <th class="secure-high">高危数</th>\n        <th class="secure-mid">中危数</th>\n        <th class="secure-low">低危数</th>\n        <th class="expire-date" style="width: 134px;">开始监测时间</th>\n        <th class="actions two">操作</th>\n    </tr>\n    </thead>\n    <tbody>\n\n    ');
                data.forEach(function (e) {
                    __append("\n    ");
                    var t = "默认";
                    if (e.hasOwnProperty("name") && e["name"] != "") {
                        t = e.name
                    }
                    __append('\n    <tr class="monitor-item" data-lsh="');
                    __append(escape(e.lsh));
                    __append('" data-name="');
                    __append(escape(t));
                    __append('">\n        <td class="title text-left table-cell-editable" data-th="监测名称：" data-count="0">\n            ');
                    __append(escape(t));
                    __append('\n        </td>\n        <td class="site lsh text-left" data-th="监测站点：">');
                    __append(escape(e.collectsitename));
                    __append('</td>\n\n        <td class="search-MonitorSite total" data-th="站点总数：" data-level=\'*\'><i class="fa fa-spinner fa-spin"></i></td>\n        <td class="search-MonitorSite high" data-th="高危数：" data-level=\'security:high\'><i\n                    class="fa fa-spinner fa-spin"></i></td>\n        <td class="search-MonitorSite mid" data-th="中危数：" data-level=\'security:medium\'><i\n                    class="fa fa-spinner fa-spin"></i></td>\n        <td class="search-MonitorSite low" data-th="低危数：" data-level=\'security:low\'><i\n                    class="fa fa-spinner fa-spin"></i></td>\n\n        <td class="expire-date" data-th="开始监测时间：">');
                    __append(escape(e.createtime));
                    __append('</td>\n        <td class="actions two text-left" data-lsh="');
                    __append(escape(e.lsh));
                    __append('" data-name="');
                    __append(escape(e.name));
                    __append('">\n            <button class="view search-MonitorSite btn-flat" data-level="*">查看</button>\n            ');
                    if (username === e.createusername) {
                        __append('\n            <button class="delete btn-flat">删除</button>\n            ')
                    }
                    __append("\n        </td>\n    </tr>\n    ")
                });
                __append('\n\n    </tbody>\n</table>\n<nav id="pagination-monitor-list" class="pagination-wrapper text-center"></nav>\n')
            } else {
                __append("\n<p>暂无数据！</p>\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-monitor" class="tpl-content-padding tpl-page">\n    <h2 class="tpl-title">监测站点列表</h2>\n\n    <div class="tool-intro-box clearfix">\n        <div class="intro-img pull-left"></div>\n\n        <div class="intro-content pull-left">\n            <p>添加监测站点，可以更方便监测站点的的基本信息、安全状况等。普通用户只能监测单个站点，区域用户可以监测某个地区所有站点。 </p>\n            <button id="user-add-monitor-btn" class="btn btn-default">添加监测站点</button>\n        </div>\n    </div>\n    <div class="content-wrapper"></div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = e.validate, a = n(35), i = n(10), o = n(8), r = n(36), s = n(66), l = n(37), h = {
                addNew: n(72),
                list: n(73),
                detail: n(43),
                historyList: n(38)
            };
            c();
            e.$ele.mainContainer.off();
            e.$ele.mainContainer.multiOn({
                click: {
                    "#user-add-site-check-btn": function () {
                        e.cornerWindow(h.addNew);
                        $("#add-online-check").focus()
                    }, "#user-online-check button.delete": function () {
                        var e = $.trim($(this).parent().parent().attr("data-task-id"));
                        i.alert({title: "确认删除该实时检测？", content: "删除后无法恢复。"}, function () {
                            o(a.delrtmsg, {id: e}).on("success", function () {
                                i.msg({content: "删除实时检测成功！", type: "success"});
                                c()
                            }).on("error", function (e) {
                                i.msg({content: "删除实时检测出错！" + e, type: "error"})
                            })
                        })
                    }, "#user-online-check button.view": function () {
                        var t = $.trim($(this).parent().parent().attr("data-task-id")), n = $.trim($(this).parent().parent().children(".site").text()), r = $.trim($(this).parent().parent().children(".submit-time").text());
                        o(a.getOnLinScanResult, {id: t, condition: n, date: r}).on("success", function (t) {
                            e.tplTransition(h.detail({data: t, title: n, checkDate: r, imgurl: t.imgpath}), null, l)
                        }).on("error", function (e) {
                            i.msg({content: "实时检测查看详情错误！" + e, type: "error"})
                        })
                    }, "#pagination-onlinecheck-list ul li a": function () {
                        var e, t = parseInt($(this).parent().parent().attr("data-page-index"));
                        if ($(this).hasClass("previous")) {
                            e = t - 1
                        } else if ($(this).hasClass("next")) {
                            e = t + 1
                        } else {
                            e = parseInt($(this).text())
                        }
                        c(e)
                    }
                }
            });
            e.$ele.popupWrapper.off();
            e.$ele.popupWrapper.multiOn({
                click: {"#btn-submit-add-online-check": d},
                keydown: {
                    "#add-online-check": function (e) {
                        var t = e || window.event;
                        if (t.keyCode == 13) {
                            $("#btn-submit-add-online-check").trigger("click");
                            $(this).blur()
                        }
                    }
                }
            });
            function d() {
                var e = $(this), n = "默认", r = $.trim($("#add-online-check").val());
                if (!n && !r) {
                    i.msg({content: "输入内容不能为空！", type: "failed"});
                    return false
                } else if (!t.isIPorDomain(r)) {
                    i.msg({content: "请输入正确的域名或IP！", type: "failed"});
                    return false
                }
                e.attr("disabled", "disabled").html('提交 <i class="fa fa-spinner fa-spin"></i>');
                o(a.sendrealtime, {name: n, url: r}).on("success", function (t) {
                    if (t === "success") {
                        i.msg({type: "success", content: "添加成功"});
                        $("#corner-popup-close").trigger("click");
                        c()
                    } else {
                        i.msg({type: "error", content: "添加失败:" + t});
                        e.removeAttr("disabled").html("提交")
                    }
                }).on("error", function (t) {
                    i.msg({type: "error", content: "添加失败:" + t});
                    e.removeAttr("disabled").html("提交")
                })
            }

            function c(t) {
                var n = $("#user-online-check").find(".content-wrapper");
                t = t || 1;
                n.addClass("fade-out");
                o(a.getrtmsglist, {page: t}).on("success", function (e) {
                    var i = parseInt(e.recordnum);
                    n.empty().append(h.list({data: e}));
                    if (i > 9) {
                        r.set("#pagination-onlinecheck-list", i, t)
                    }
                    s(a.updatemsg);
                    n.removeClass("fade-out")
                }).on("error", function (t) {
                    n.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                    n.removeClass("fade-out")
                });
                socket.emit("realtime", t);
                socket.on("getrealtime", function (e) {
                    var i = parseInt(e.result.recordnum);
                    setTimeout(function () {
                        n.empty().append(h.list({data: e.result}));
                        s(a.updatemsg);
                        if (i > 9) {
                            r.set("#pagination-onlinecheck-list", i, t)
                        }
                    }, 200)
                })
            }

            e._gc = function () {
                e.$ele.mainContainer.off();
                e.$ele.popupWrapper.off()
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-add-online-check" class="corner-popup-window sm pull-right">\n    <section class="corner-popup-section">\n        <header class="corner-popup-header">\n            <h6>添加实时检测</h6>\n        </header>\n        <div class="corner-popup-body form-with-feedback">\n            <!--<div class="form-group">-->\n                <!--<label for="add-online-check-name" class="control-label">名&nbsp;&nbsp;&nbsp;&nbsp;称</label>-->\n\n                <!--<div class="feedback error" data-feedback-msg="">-->\n                    <!--<input id="add-online-check-name" class="form-control" type="text" maxlength="50" placeholder="备注名">-->\n                <!--</div>-->\n            <!--</div>-->\n            <div class="form-group">\n                <label for="add-online-check" class="control-label">网&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;址</label>\n\n                <div class="feedback error" data-feedback-msg="">\n                    <input id="add-online-check" class="form-control" type="text" maxlength="50" placeholder="如：www.example.com或8.8.8.8">\n                </div>\n            </div>\n            <div class="form-group">\n                <label></label>\n                <div>\n                    <button type="submit" id="btn-submit-add-online-check" class="btn btn-default btn-sm ">\n                        提交\n                    </button>\n                    <button type="button" id="form-cancel" class="btn btn-default btn-sm ">取消</button>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data.recordnum != 0 && data.list) {
                __append('\n<table class="table-responsive-card thead-bg text-center border">\n    <thead>\n    <tr>\n        <th class="name">名称</th>\n        <th class="site">域名/IP</th>\n        <th class="submit-time">提交时间</th>\n        <th class="end-time">完成时间</th>\n        <th class="current-status">当前状态</th>\n        <th class="actions two">操作</th>\n    </tr>\n    </thead>\n    <tbody>\n    ');
                data.list.forEach(function (e) {
                    __append("\n    ");
                    var t = "默认";
                    if (e.hasOwnProperty("name") && e.name != "") {
                        t = e.name
                    }
                    __append('\n    <tr data-task-id="');
                    __append(escape(e["id"]));
                    __append('" data-name="');
                    __append(escape(t));
                    __append('">\n\n        <td class="name text-left table-cell-editable" data-th="名称：" data-count="0">\n            ');
                    __append(escape(t));
                    __append('\n        </td>\n        <td class="site text-left" data-th="站点：">\n            ');
                    __append(escape(e["taskdata"]));
                    __append('\n        </td>\n        <td class="submit-time" data-th="提交时间：">\n            ');
                    __append(escape(e["submit_time"]));
                    __append('\n        </td>\n        <td class="end-time" data-th="完成时间：">\n            ');
                    if (e["finish_time"]) {
                        __append("\n            ");
                        __append(escape(e["finish_time"]));
                        __append("\n            ")
                    }
                    __append('\n        </td>\n        <td class="current-status" data-th="当前状态：">\n            ');
                    var n, a, i = parseInt(e["status"], 10);
                    switch (i) {
                        case 0:
                            n = "未执行";
                            a = "";
                            break;
                        case 1:
                            n = "正在执行";
                            a = "fa-spinner fa-spin ing";
                            break;
                        case 2:
                            n = "执行成功";
                            a = "fa-check succeed";
                            break;
                        case 3:
                            n = "执行超时";
                            a = "fa-minus-circle time-out";
                            break;
                        case 4:
                            n = "<span title='没有任何结果'>执行结束 <i class='fa fa-exclamation-triangle no-result'></i></span>";
                            a = "";
                            break;
                        default:
                            n = "执行错误";
                            a = "fa-times error"
                    }
                    __append("\n            ");
                    __append(n);
                    __append("\n            ");
                    if (a) {
                        __append('\n            <i class="fa ');
                        __append(escape(a));
                        __append('"></i>\n            ')
                    }
                    __append('\n        </td>\n        <td class="actions two text-left">\n            ');
                    if (i == 2) {
                        __append('\n            <button class="view btn-flat">查看</button>\n            ')
                    }
                    __append('\n            <button class="delete btn-flat">删除</button>\n        </td>\n    </tr>\n    ')
                });
                __append('\n    </tbody>\n</table>\n<nav id="pagination-onlinecheck-list" class="pagination-wrapper text-center"></nav>\n')
            } else {
                __append("\n<p>暂无检测数据</p>\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-online-check" class="tpl-content-padding tpl-page">\n    <h2 class="tpl-title">实时检测</h2>\n\n    <div class="tool-intro-box clearfix">\n        <div class="intro-img pull-left"></div>\n\n        <div class="intro-content pull-left">\n            <p>可以实时检测您所关心站点的开放端口、服务协议、站点信息、安全状况等。</p>\n            <button id="user-add-site-check-btn" class="btn btn-default">添加实时检测</button>\n        </div>\n    </div>\n    <div class="content-wrapper"></div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(34), a = n(8), i = n(10), o = n(36), r = {
                list: n(76),
                addNew: n(77),
                update: n(78),
                system: n(79)
            };
            c();
            e.$ele.mainContainer.off();
            e.$ele.mainContainer.multiOn({
                click: {
                    "#user-add-attention-btn": function () {
                        e.cornerWindow(r.addNew, s)
                    }, "#user-attention .table-responsive-card .modify": function () {
                        e.cornerWindow(r.update);
                        var t = $(this).parent().parent().find("td"), n = $("#update-attention-title");
                        if ($(t[3]).attr("data-option") == "0") {
                            $("#update-search-region-net").attr("checked", "checked")
                        } else {
                            $("#update-attention-monitor").attr("checked", "checked")
                        }
                        n.val($(t[0]).text());
                        $("#update-attention-tag").val($(t[1]).text());
                        $("#update-attention-search-keyword").val($(t[2]).text());
                        $("#update-attention-description").val($(t[4]).text());
                        n.attr("data-id", $(this).parent().parent().find(".title").attr("data-id"))
                    }, "#user-attention .table-responsive-card .delete": function () {
                        var e = $(this).parent().parent().children("td.title").text(), n = $(this).parent().parent().find(".title").attr("data-id");
                        i.alert({title: "确认删除该关注？", content: "删除后无法恢复"}, o);
                        function o() {
                            a(t.delAttention, {id: n}).on("success", function (e) {
                                if (e.type == "success") {
                                    i.msg({content: "删除成功！", type: "success"});
                                    c()
                                } else {
                                    i.msg({content: e.error, type: "failed"})
                                }
                            }).on("error", function () {
                                i.msg({content: "删除失败！", type: "failed"})
                            })
                        }
                    }, "#pagination-attention-list ul li a": function () {
                        var e, t = parseInt($(this).parent().parent().attr("data-page-index"));
                        if ($(this).hasClass("previous")) {
                            e = t - 1
                        } else if ($(this).hasClass("next")) {
                            e = t + 1
                        } else {
                            e = parseInt($(this).text())
                        }
                        c(e)
                    }
                }
            });
            e.$ele.popupWrapper.off();
            e.$ele.popupWrapper.multiOn({
                click: {
                    "#btn-more-attention-recommend": function () {
                        $("#user-attention-form").addClass("show-more");
                        $(this).text("<<收起");
                        $(this).attr("id", "btn-less-attention-recommend")
                    }, "#btn-less-attention-recommend": function () {
                        $("#user-attention-form").removeClass("show-more");
                        $(this).text("更多>>");
                        $(this).attr("id", "btn-more-attention-recommend")
                    }, ".recommend-category h6": function () {
                        $(this).parent().toggleClass("expended");
                        if ($(this).parent().hasClass("expended")) {
                            $(this).next().show("fast")
                        } else {
                            $(this).next().hide("fast")
                        }
                    }, ".recommend-list li": function () {
                        $("#attention-title").val($.trim($(this).attr("data-title")));
                        $("#attention-tag").val($.trim($(this).attr("data-tag")));
                        $("#attention-search-keyword").val($.trim($(this).attr("data-search-keyword")));
                        $("#attention-search-region-net").attr("checked", "checked");
                        $("#attention-description").val($.trim($(this).attr("data-description")))
                    }, "#btn-submit-new-attention": h, "#btn-submit-update-attention": d
                }, blur: {"#attention-title": l}
            });
            function s() {
                a(t.getSystemList).on("success", function (e) {
                    var t = $("#system-recommend-li").find("li"), n = e.list.length;
                    for (var a = 0; a < n; a++) {
                        $(t[a]).html(e.list[a].title);
                        $(t[a]).attr("data-title", e.list[a].title);
                        $(t[a]).attr("data-tag", e.list[a].tag);
                        $(t[a]).attr("data-search-keyword", e.list[a].keyword);
                        $(t[a]).attr("data-description", e.list[a].description)
                    }
                    $("#user-attention-recommend-window").find(".category-list").empty().append(r.system({data: e.tags}))
                }).on("error", function (e) {
                    i.msg({content: "获取系统推荐失败!", type: "error"})
                })
            }

            function l() {
                var e = $("#attention-title"), n = $.trim(e.val());
                if (n === "") {
                    e.focus();
                    e.parent().attr("data-feedback-msg", "标题不能为空！");
                    return false
                } else if (n.replace(/[a-zA-Z0-9_\u4e00-\u9fa5]/g, "").length > 0) {
                    e.focus();
                    e.parent().attr("data-feedback-msg", "标题只能包含：汉字、字母、数字和下划线！");
                    return false
                } else {
                    e.parent().removeAttr("data-feedback-msg")
                }
                var i = {};
                i.title = n;
                a(t.checkAttention, i).on("success", function (t) {
                    if (t.type == "success") {
                        e.parent().removeAttr("data-feedback-msg")
                    } else {
                        e.parent().attr("data-feedback-msg", t.msg);
                        e.focus()
                    }
                })
            }

            function h() {
                var e = $("#attention-title"), n = $("#attention-tag"), o = $("#attention-search-keyword"), r = {}, s = $(this), l;
                e.parent().removeAttr("data-feedback-msg");
                $("#attention-search-region-monitor").is(":checked") ? l = "1" : l = "0";
                r.title = $.trim(e.val());
                r.tag = $.trim(n.val());
                r.keyword = $.trim(o.val());
                r.scope = l;
                r.description = $.trim($("#attention-description").val());
                if (r.tag === "") {
                    n.focus();
                    n.parent().attr("data-feedback-msg", "标签不能为空！");
                    s.removeAttr("disabled").html("添加关注");
                    return false
                }
                if (r.keyword === "") {
                    o.focus();
                    o.parent().attr("data-feedback-msg", "搜索语法不能为空！");
                    s.removeAttr("disabled").html("添加关注");
                    return false
                }
                s.attr("disabled", "disabled").html('添加关注 <i class="fa fa-spinner fa-spin"></i>');
                a(t.addAttention, r).on("success", function (e) {
                    if (e.type == "success") {
                        $("#corner-popup-close").trigger("click");
                        i.msg({content: "添加关注成功！", type: "success"});
                        c()
                    } else {
                        i.msg({content: e.msg, type: "failed"});
                        s.removeAttr("disabled").html("添加关注")
                    }
                }).on("error", function () {
                    i.msg({content: "添加关注失败！", type: "error"});
                    s.removeAttr("disabled").html("添加关注")
                })
            }

            function d() {
                var e = $("#update-attention-title"), n = $("#update-attention-search-keyword"), o = $("#update-attention-tag"), r;
                $("#update-attention-monitor").is(":checked") ? r = "1" : r = "0";
                e.parent().removeAttr("data-feedback-msg");
                var s = {
                    title: $.trim(e.val()),
                    tag: $.trim(o.val()),
                    keyword: $.trim(n.val()),
                    description: $.trim($("#update-attention-description").val()),
                    scope: r,
                    id: $.trim(e.attr("data-id"))
                };
                if (s.title === "") {
                    e.focus();
                    e.parent().attr("data-feedback-msg", "标题不能为空！");
                    return false
                } else if (s.title.replace(/[a-zA-Z0-9_\u4e00-\u9fa5]/g, "").length > 0) {
                    e.focus();
                    e.parent().attr("data-feedback-msg", "标题只能包含：汉字、字母、数字和下划线！");
                    return false
                } else {
                    e.parent().removeAttr("data-feedback-msg")
                }
                if (s.tag === "") {
                    o.focus();
                    o.parent().attr("data-feedback-msg", "标签不能为空！");
                    return false
                }
                if (s.keyword === "") {
                    n.focus();
                    n.parent().attr("data-feedback-msg", "搜索语法不能为空！");
                    return false
                }
                a(t.updateAttention, s).on("success", function (e) {
                    if (e.type == "success") {
                        i.msg({content: "该关注修改成功！", type: "success"});
                        c();
                        $("#form-cancel").trigger("click")
                    } else {
                        i.msg({content: e.msg, type: "failed"})
                    }
                }).on("error", function () {
                    i.msg({content: "该关注修改失败！", type: "error"})
                })
            }

            function c(n) {
                var i = $("#user-attention").find(".content-wrapper");
                i.addClass("fade-out");
                a(t.attentionInfo, {page: n || 1}).on("success", function (e) {
                    var t = parseInt(e.recordnum);
                    setTimeout(function () {
                        i.empty().append(r.list({data: e}));
                        if (t > 9) {
                            o.set("#pagination-attention-list", t, n)
                        }
                        i.removeClass("fade-out")
                    }, 200)
                }).on("error", function (t) {
                    i.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                    i.removeClass("fade-out")
                })
            }

            e._gc = function () {
                e.$ele.mainContainer.off();
                e.$ele.popupWrapper.off()
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (parseInt(data.recordnum) > 0) {
                __append('\n<table class="table-responsive-card thead-bg text-center border">\n    <thead>\n    <tr>\n        <th class="title">标题</th>\n        <th class="tag" style="width: 100px;">标签</th>\n        <th class="search-keyword">搜索语法</th>\n        <th class="search-scope" style="width: 90px;">搜索区域</th>\n        <th class="description">描述</th>\n        <th class="update-time" style="width: 190px;">更新时间</th>\n        <th class="actions">操作</th>\n    </tr>\n    </thead>\n    <tbody>\n    ');
                for (var i = 0; i < data.list.length; i++) {
                    __append('\n    <tr>\n        <td class="title text-left" data-th="标题：" data-id="');
                    __append(escape(data.list[i].id));
                    __append('">');
                    __append(escape(data.list[i].title));
                    __append('</td>\n        <td class="tag text-left" data-th="标签：">');
                    __append(escape(data.list[i].tag));
                    __append('</td>\n        <td class="search-keyword text-left" data-th="搜索语法：">');
                    __append(escape(data.list[i].keyword));
                    __append('</td>\n        <td class="search-scope" data-option="');
                    __append(escape(data.list[i].scope));
                    __append('" data-th="搜索区域：">');
                    if (data.list[i].scope == "0") {
                        __append("全网设备")
                    } else {
                        __append("监测站点")
                    }
                    __append('</td>\n        <td class="description text-left" data-th="描述：">');
                    __append(escape(data.list[i].description));
                    __append('</td>\n        <td class="update-time" data-th="更新时间：">');
                    __append(escape(data.list[i].lastmodifytime));
                    __append('</td>\n        <td class="actions three text-left">\n            <button class="view search-item btn btn-flat" data-option="');
                    if (data.list[i].scope == "0") {
                        __append(escape(data.list[i].scope))
                    } else {
                        __append("1")
                    }
                    __append('"\n            data-search-keyword="itag:');
                    __append(escape(data.list[i].title));
                    __append('" title="查看"><span>查看</span></button>\n            <button class="modify btn btn-flat" title="修改"><span>修改</span></button>\n            <button class="delete btn btn-flat" title="删除"><span>删除</span></button>\n        </td>\n    </tr>\n    ')
                }
                __append('\n    </tbody>\n</table>\n<nav id="pagination-attention-list" class="pagination-wrapper text-center">\n</nav>\n')
            } else {
                __append("\n<p>暂无关注！</p>\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-attention-form" class="clearfix">\n    <div id="user-attention-recommend-window" class="corner-popup-window hidden-xs pull-right">\n        <section class="corner-popup-section">\n            <header class="corner-popup-header">\n                <h6>系统推荐关注列表</h6>\n            </header>\n            <div class="category-list corner-popup-body"></div>\n        </section>\n    </div>\n    <div id="user-add-attention-window" class="corner-popup-window pull-right">\n        <section class="corner-popup-section hidden-xs">\n            <header class="corner-popup-header">\n                <h6>系统推荐关注</h6>\n            </header>\n            <div id="system-recommend-li" class="corner-popup-body clearfix">\n                <ul class="recommend-list list-inline">\n                    <li data-title="" data-tag="" data-search-keyword="" data-description=""></li>\n                    <li data-title="" data-tag="" data-search-keyword="" data-description=""></li>\n                    <li data-title="" data-tag="" data-search-keyword="" data-description=""></li>\n                    <li data-title="" data-tag="" data-search-keyword="" data-description=""></li>\n                    <li data-title="" data-tag="" data-search-keyword="" data-description=""></li>\n                    <li data-title="" data-tag="" data-search-keyword="" data-description=""></li>\n                </ul>\n                <button id="btn-more-attention-recommend" class="btn-flat pull-right">更多>></button>\n            </div>\n        </section>\n        <section class="corner-popup-section">\n            <header class="corner-popup-header">\n                <h6>自定义我的关注</h6>\n            </header>\n            <div class="corner-popup-body form-with-feedback">\n                <div class="form-group">\n                    <label for="attention-title" class="control-label">标&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;题</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input id="attention-title" class="form-control" type="text" maxlength="20" placeholder="如：大华摄像头">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="attention-tag" class="control-label">标&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;签</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input id="attention-tag" class="form-control" type="text" maxlength="20" placeholder="如：监控设备">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="attention-search-keyword" class="control-label">搜索语法</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input id="attention-search-keyword" class="form-control" type="text" maxlength="50" placeholder="如：port:37777">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label class="control-label">搜索区域</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input type="radio" name="search-region" id="attention-search-region-monitor" checked="checked">\n                        <label for="attention-search-region-monitor">监测站点</label>\n                        <input type="radio" name="search-region" id="attention-search-region-net">\n                        <label for="attention-search-region-net">全网设备</label>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="attention-description" class="control-label">描&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;述</label>\n\n                    <div class="textarea-wrapper">\n                        <textarea id="attention-description" class="form-control" placeholder="如：大华监控摄像头"></textarea>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label></label>\n                    <div>\n                        <button type="submit" id="btn-submit-new-attention" class="btn btn-default btn-sm ">添加关注</button>\n                        <button type="button" id="form-cancel" class="btn btn-default btn-sm ">取消</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-favorite-form" class="clearfix">\n    <div id="user-add-favorite-window" class="corner-popup-window pull-right">\n        <section class="corner-popup-section">\n            <header class="corner-popup-header">\n                <h6>修改我的关注</h6>\n            </header>\n            <div class="corner-popup-body form-with-feedback">\n                <div class="form-group">\n                    <label for="update-attention-title" class="control-label">标&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;题</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input id="update-attention-title" class="form-control" type="text" maxlength="20">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="update-attention-tag" class="control-label">标&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;签</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input id="update-attention-tag" class="form-control" type="text" maxlength="20">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="update-attention-search-keyword" class="control-label">搜索语法</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input id="update-attention-search-keyword" class="form-control" type="text"  maxlength="50">\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label class="control-label">搜索区域</label>\n\n                    <div class="feedback error" data-feedback-msg="">\n                        <input type="radio" name="search-region" id="update-attention-monitor">\n                        <label for="update-attention-monitor">监测站点</label>\n                        <input type="radio" name="search-region" id="update-search-region-net">\n                        <label for="update-search-region-net">全网设备</label>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label for="update-attention-description" class="control-label">描&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;述</label>\n\n                    <div class="textarea-wrapper">\n                        <textarea id="update-attention-description" class="form-control" ></textarea>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <label></label>\n                    <div>\n                        <button type="submit" id="btn-submit-update-attention" class="btn btn-default btn-sm ">确认修改</button>\n                        <button type="button" id="form-cancel" class="btn btn-default btn-sm ">取消</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            for (var key in data) {
                __append('\n<section class="recommend-category">\n    <h6>');
                __append(escape(key));
                __append('</h6>\n    <ul class="recommend-list list-inline">\n        ');
                for (var j = 0; j < data[key].length; j++) {
                    __append('\n        <li data-title="');
                    __append(escape(data[key][j].title));
                    __append('" data-tag="');
                    __append(escape(data[key][j].tag));
                    __append('"\n            data-search-keyword="');
                    __append(escape(data[key][j].keyword));
                    __append('"\n            data-description="');
                    __append(escape(data[key][j].description));
                    __append('">');
                    __append(escape(data[key][j].title));
                    __append("</li>\n        ")
                }
                __append("\n    </ul>\n</section>\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="user-attention" class="tpl-content-padding tpl-page">\n    <h4 class="tpl-title">我的关注</h4>\n    <div class="tool-intro-box clearfix">\n        <div class="intro-img pull-left"></div>\n\n        <div class="intro-content pull-left">\n            <p>添加关注可以记录您感兴趣的搜索语法，方便以后快捷搜索。</p>\n            <button id="user-add-attention-btn" class="btn btn-default">添加关注</button>\n        </div>\n    </div>\n    <div class="content-wrapper"></div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = e.validate, a = n(8), i = n(82), o = n(10), r = n(36), s = n(83), l = $("#s-ip-domain"), h, d = null;
            var c = {
                onBtnClick: function () {
                    var e = $.trim(l.val());
                    if (e === "") {
                        o.msg({content: "查询内容不能为空！", type: "failed"});
                        return false
                    } else if (!t.isIPorDomain(e)) {
                        o.msg({content: "请输入正确的域名或IP！", type: "failed"});
                        return false
                    }
                    p()
                }, onBtnKeydown: function (e) {
                    var n = e || window.event;
                    if (n.keyCode == 13) {
                        var a = $.trim($("#s-ip-domain").val());
                        if (a === "") {
                            o.msg({content: "查询内容不能为空！", type: "failed"});
                            return false
                        } else if (!t.isIPorDomain(a)) {
                            o.msg({content: "请输入正确的IP或者域名格式！", type: "failed"});
                            return false
                        }
                        p();
                        $(this).blur()
                    }
                }, onPageTurnClick: function () {
                    var e = $(this), t, n = parseInt(e.parent().parent().attr("data-page-index")), a = $("#tpl-ip-domain").find(".content-wrapper");
                    a.addClass("fade-out");
                    a.empty();
                    if (e.hasClass("previous")) {
                        t = n - 1
                    } else if (e.hasClass("next")) {
                        t = n + 1
                    } else {
                        t = parseInt(e.text())
                    }
                    setTimeout(function () {
                        m(h, t, d)
                    }, 200)
                }
            };
            e.$ele.mainContainer.off();
            e.$ele.mainContainer.multiOn({
                click: {
                    "#s-ip-domain-btn": c.onBtnClick,
                    "#pagination-ipdomain-list ul li a": c.onPageTurnClick
                }, keydown: {"#s-ip-domain": c.onBtnKeydown}
            });
            function p(t) {
                var n = $("#tpl-ip-domain").find(".content-wrapper");
                n.addClass("fade-out");
                n.empty();
                a(i.ipdomain, {site: $.trim($("#s-ip-domain").val()), page: t || "1"}).on("success", function (e) {
                    if (e && e.data && e.data.length > 0) {
                        d = e;
                        h = parseInt(e.recordNum);
                        m(h, t, e)
                    } else {
                        $("#tpl-ip-domain").find(".content-wrapper").removeClass("fade-out").empty().append("<p>抱歉，没有找到结果！</p>")
                    }
                }).on("error", function (t) {
                    $("#tpl-ip-domain").find(".content-wrapper").removeClass("fade-out").empty().append(e.tpl.error({
                        hint: "unload",
                        errorMsg: t
                    }))
                })
            }

            function m(e, t, n) {
                var a = $("#tpl-ip-domain").find(".content-wrapper");
                t = t || "1";
                if (e > 9) {
                    if (t) {
                        var i = t * 10;
                        var o = i - 10;
                        var l = n.data.slice(o, i)
                    }
                    var h = {
                        pageArray: l,
                        recordNum: n.recordNum,
                        type: n.type,
                        querycondition: n.querycondition,
                        pageIndex: t
                    };
                    setTimeout(function () {
                        a.empty().append(s({result: h})).removeClass("fade-out");
                        r.set("#pagination-ipdomain-list", e, t)
                    }, 200)
                } else {
                    setTimeout(function () {
                        a.empty().append(s({result: n})).removeClass("fade-out")
                    }, 200)
                }
            }

            e._gc = function () {
                e.$ele.mainContainer.off();
                d = null
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    !(e.exports = {ipdomain: {type: "get", route: "/ipdomain"}})
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<p class="text-center">查询到');
            __append(escape(result.querycondition));
            __append(" 的结果约 ");
            __append(escape(result.recordNum));
            __append(' 个</p>\n<table class="table-responsive-card thead-bg gap-color border text-center">\n    <thead>\n    <tr>\n        <th class="num">序号</th>\n        ');
            if (result.type == 1) {
                __append("\n        <th>域名</th>\n        ")
            }
            __append("\n        <th>");
            if (result.type == 1) {
                __append("IP地址")
            } else {
                __append("域名")
            }
            __append("</th>\n        <th>地区</th>\n    </tr>\n    </thead>\n    <tbody>\n    ");
            var ipdomainvalue = result.pageArray;
            __append("\n    ");
            if (result.pageArray) {
                __append("\n        ");
                ipdomainvalue = result.pageArray;
                __append("\n    ")
            } else {
                __append("\n        ");
                ipdomainvalue = result.data;
                __append("\n    ")
            }
            __append("\n    ");
            ipdomainvalue.forEach(function (e, t) {
                __append("\n    ");
                for (var n in e) {
                    __append("\n        ");
                    if (result.type == 1) {
                        __append("\n            ");
                        var a = n.split("|");
                        __append("\n        ")
                    }
                    __append('\n        <tr>\n            <td class="num" data-th="序号：">');
                    __append(escape(t + 1 + (result.pageIndex - 1) * 10));
                    __append("</td>\n            ");
                    if (result.type == 1) {
                        __append('\n                <td data-th="域名：">');
                        __append(escape(a[1]));
                        __append('</td>\n                <td class="ip" data-th="IP地址："><span class="search-item" data-search-keyword="');
                        __append(escape(a[0]));
                        __append('">');
                        __append(escape(a[0]));
                        __append("</span></td>\n            ")
                    } else {
                        __append('\n                <td class="ip" data-th="IP地址："><span class="search-item" data-search-keyword="');
                        __append(escape(n));
                        __append('">');
                        __append(escape(n));
                        __append("</span></td>\n            ")
                    }
                    __append('\n            <td class="location" data-th="地区：">');
                    __append(escape(e[n]));
                    __append("</td>\n        </tr>\n    ")
                }
                __append("\n    ")
            });
            __append('\n    </tbody>\n</table>\n<nav id="pagination-ipdomain-list" class="pagination-wrapper text-center"></nav>\n')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="tpl-ip-domain" class="tpl-content-padding tpl-page">\n    <h2 class="tpl-title">IP域名查询</h2>\n\n    <div class="search-form form-inline with-icon">\n        <div class="form-group">\n            <label for="s-ip-domain"></label>\n            <input id="s-ip-domain" class="form-control" name="kw"\n                   placeholder="请输入您要查询的域名或IP"\n                   autocomplete="off" type="search">\n        </div>\n        <button type="submit" id="s-ip-domain-btn" class="btn btn-default">查&nbsp;&nbsp;&nbsp;&nbsp;询</button>\n    </div>\n\n    <div class="content-wrapper"> </div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = e.user || {}, a = n(86), i = n(87), o = n(88), r = n(90);
            e.tplTransition(r({role: t.role, username: t.name}), "#user-statistics-link", s);
            function s() {
                e.$ele.mainContainer.off();
                e.$ele.mainContainer.multiOn({
                    click: {
                        "#dynamic-secure-link": l(a, "#dynamic-secure-link"),
                        "#dynamic-dev-link": l(i, "#dynamic-dev-link"),
                        "#dynamic-trend-link": l(o, "#dynamic-trend-link")
                    }
                });
                $("#dynamic-secure-link").trigger("click");
                e._gc = function () {
                    e.$ele.mainContainer.off()
                }
            }

            function l(t, n) {
                return function () {
                    if ($.isFunction(e._analysisGC)) {
                        e._analysisGC();
                        e._analysisGC = null
                    }
                    $("#dynamic-sub-menu").find("li").removeClass("active");
                    $("#tpl-dynamic-statistics").find(".content-wrapper").empty().addClass("fade-out");
                    $(n).addClass("active");
                    if ($.isFunction(t)) {
                        setTimeout(function () {
                            t()
                        }, 200)
                    }
                }
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(6), a = n(8), i = n(12), o = n(7), r = n(49), s = $("#tpl-dynamic-statistics").find(".content-wrapper");
            a(t.securityEvent).on("success", function (e) {
                s.append(o({data: e}));
                var t = $(".newest-bugs").find(".article-list").attr("data-condition");
                i.world("world_vul_info", "/statistic/getVulnerability?type=100&condition=" + t);
                i.china("china_vul_info", "/statistic/getVulnerability?type=101&condition=" + t);
                (function (e, t, n) {
                    e.fn.responsiveSlides = function (a) {
                        var i = e.extend({
                            auto: !0,
                            speed: 1e3,
                            timeout: 7e3,
                            pager: !1,
                            nav: !1,
                            random: !1,
                            pause: !1,
                            pauseControls: !1,
                            prevText: "",
                            nextText: "",
                            maxwidth: "",
                            controls: "",
                            namespace: "rslides",
                            before: function () {
                            },
                            after: function () {
                            }
                        }, a);
                        return this.each(function () {
                            n++;
                            var o = e(this), r, s, l, h, d, c = 0, p = o.children(), m = p.size(), u = parseFloat(i.speed), V = parseFloat(i.timeout), U = parseFloat(i.maxwidth), f = i.namespace, _ = f + n, g = f + "_nav " + _ + "_nav", y = f + "_here", b = _ + "_on", k = _ + "_s", x = e("<ul class='" + f + "_tabs " + _ + "_tabs' />"), v = {
                                "float": "left",
                                position: "relative"
                            }, L = {"float": "none", position: "absolute"}, w = function (t) {
                                i.before();
                                p.stop().fadeOut(u, function () {
                                    e(this).removeClass(b).css(L)
                                }).eq(t).fadeIn(u, function () {
                                    e(this).addClass(b).css(v);
                                    i.after();
                                    c = t
                                })
                            };
                            i.random && (p.sort(function () {
                                return Math.round(Math.random()) - .5
                            }), o.empty().append(p));
                            p.each(function (e) {
                                this.id = k + e
                            });
                            o.addClass(f + " " + _);
                            a && a.maxwidth && o.css("max-width", U);
                            p.hide().eq(0).addClass(b).css(v).show();
                            if (1 < p.size()) {
                                if (V < u + 100)return;
                                if (i.pager) {
                                    var W = [];
                                    p.each(function (e) {
                                        e = e + 1;
                                        W = W + ("<li><a href='#' class='" + k + e + "'>" + e + "</a></li>")
                                    });
                                    x.append(W);
                                    d = x.find("a");
                                    a.controls ? e(i.controls).append(x) : o.after(x);
                                    r = function (e) {
                                        d.closest("li").removeClass(y).eq(e).addClass(y)
                                    }
                                }
                                i.auto && (s = function () {
                                    h = setInterval(function () {
                                        var e = c + 1 < m ? c + 1 : 0;
                                        i.pager && r(e);
                                        w(e)
                                    }, V)
                                }, s());
                                l = function () {
                                    if (i.auto) {
                                        clearInterval(h);
                                        s()
                                    }
                                };
                                i.pause && o.hover(function () {
                                    clearInterval(h)
                                }, function () {
                                    l()
                                });
                                i.pager && (d.bind("click", function (t) {
                                    t.preventDefault();
                                    i.pauseControls || l();
                                    t = d.index(this);
                                    if (!(c === t || e("." + b + ":animated").length)) {
                                        r(t);
                                        w(t)
                                    }
                                }).eq(0).closest("li").addClass(y), i.pauseControls && d.hover(function () {
                                    clearInterval(h)
                                }, function () {
                                    l()
                                }));
                                if (i.nav) {
                                    f = "<a href='#' class='" + g + " prev'>" + i.prevText + "</a><a href='#' class='" + g + " next'>" + i.nextText + "</a>";
                                    a.controls ? e(i.controls).append(f) : o.after(f);
                                    var f = e("." + _ + "_nav"), X = e("." + _ + "_nav.prev");
                                    f.bind("click", function (t) {
                                        t.preventDefault();
                                        if (!e("." + b + ":animated").length) {
                                            var n = p.index(e("." + b)), t = n - 1, n = n + 1 < m ? c + 1 : 0;
                                            w(e(this)[0] === X[0] ? t : n);
                                            i.pager && r(e(this)[0] === X[0] ? t : n);
                                            i.pauseControls || l()
                                        }
                                    });
                                    i.pauseControls && f.hover(function () {
                                        clearInterval(h)
                                    }, function () {
                                        l()
                                    })
                                }
                            }
                            if ("undefined" === typeof document.body.style.maxWidth && a.maxwidth) {
                                var I = function () {
                                    o.css("width", "100%");
                                    o.width() > U && o.css("width", U)
                                };
                                I();
                                e(t).bind("resize", function () {
                                    I()
                                })
                            }
                        })
                    }
                })(jQuery, this, 0);
                $(function () {
                    $(".f426x240").responsiveSlides({auto: false, pager: true, nav: true, speed: 700, maxwidth: 940})
                });
                s.removeClass("fade-out")
            }).on("error", function (t) {
                s.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                s.removeClass("fade-out")
            });
            e.$ele.mainContainer.off("click.viewAnalysisDetail");
            e.$ele.mainContainer.on("click.viewAnalysisDetail", "#dynamic-secure-statistics .dynamic-detail", l);
            function l() {
                var t = {
                    name: $(this).attr("data-name"),
                    innername: $(this).attr("data-innername"),
                    describe: $(this).attr("data-describe"),
                    influence: $(this).attr("data-influence"),
                    condition: $(this).attr("data-con"),
                    time: $(this).attr("data-time")
                };
                e.popupTransition(r({data: t}));
                setTimeout(function () {
                    i.china("china_vul_detail", "/statistic/getVulnerability?type=101&condition=" + t.condition);
                    i.world("world_vul_detail", "/statistic/getVulnerability?type=100&condition=" + t.condition)
                }, 200)
            }

            e._analysisGC = function () {
                e.$ele.mainContainer.off("click.viewAnalysisDetail")
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(6), a = n(8), i = $("#tpl-dynamic-statistics").find(".content-wrapper"), o = n(14);
            a(t.getDevData).on("success", function (e) {
                i.append(o);
                r(e);
                i.removeClass("fade-out");
                s(e)
            }).on("error", function (t) {
                i.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                i.removeClass("fade-out")
            });
            function r(e) {
                var t = [];
                for (var n in e) {
                    if (e && e[n].content && e[n].content.length > 0) {
                        t[n] = "<div class='col-sm-6 col-lg-4'><section class='data-item-dev map-wait' id = 'pie_" + n + "'></section></div>"
                    }
                }
                var a = $(".row");
                a.append(t.join(""));
                var i = a.find(".data-item-dev"), o = parseInt(i.parent().width());
                i.css({width: o + "px", height: o + "px"})
            }

            function s(e) {
                var t = [], n = [];
                $(".row").find("section").each(function (e) {
                    t.push($(this).attr("id"));
                    n.push(echarts.init(document.getElementById(t[e])))
                });
                for (var a in e) {
                    if (e[a].content.length < 1) {
                        e.splice(a, 1)
                    }
                }
                for (var i in t) {
                    var o = [];
                    for (var r in e[i].top) {
                        var s = {};
                        s.name = e[i].top[r];
                        s.icon = "bar";
                        o.push(s)
                    }
                    n[i].setOption({
                        backgroundColor: "#fff",
                        title: {
                            text: e[i].title,
                            x: "left",
                            padding: [20, 0, 0, 0],
                            textStyle: {fontSize: 16, fontFamily: "微软雅黑", color: "#9f9fa0"}
                        },
                        color: ["#ffc70a", "#ed8570", "#c1a4f2", "#94cce4", "#de7ec9", "#94e49f"],
                        legend: {
                            orient: "horizontal",
                            x: "left",
                            y: "bottom",
                            textStyle: {fontSize: 14, fontFamily: "微软雅黑", color: "#9f9fa0"},
                            data: o
                        },
                        calculable: false,
                        series: [{
                            name: "数量",
                            type: "pie",
                            startAngle: 0,
                            radius: ["36%", "45%"],
                            center: ["47%", "45%"],
                            itemStyle: {
                                normal: {
                                    label: {
                                        show: true,
                                        textStyle: {fontSize: 12, fontFamily: "微软雅黑", color: "#9f9fa0"}
                                    }, labelLine: {show: true, length: 15, lineStyle: {width: 2, type: "solid"}}
                                },
                                emphasis: {
                                    label: {
                                        show: true,
                                        position: "center",
                                        formatter: "{d}%",
                                        textStyle: {fontSize: "36"}
                                    }
                                }
                            },
                            data: e[i].content
                        }]
                    })
                }
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(6), a = n(8), i = n(89), o = $("#tpl-dynamic-statistics").find(".content-wrapper");
            a(t.getChartData).on("success", function (e) {
                o.append(i);
                var t = parseInt($(".data-item").width()), n = $("#dev-trend"), a = $("#vul-trend");
                $(n).css("width", t);
                $(a).css("width", t);
                if (t < 500) {
                    $(n).css("height", t * .75);
                    $(a).css("height", t * .75)
                } else {
                    $(n).css("height", t * .35);
                    $(a).css("height", t * .35)
                }
                o.removeClass("fade-out");
                var s = echarts.init(document.getElementById("dev-trend")), l = echarts.init(document.getElementById("vul-trend"));
                r(s, e.devicecollect);
                r(l, e.vulcollect)
            }).on("error", function (t) {
                o.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                o.removeClass("fade-out")
            });
            function r(e, t) {
                e.setOption({
                    title: {
                        padding: [0, 0, 20, 0],
                        text: t.title,
                        textStyle: {fontSize: 16, fontFamily: "微软雅黑", color: "#9f9fa0"}
                    },
                    tooltip: {trigger: "axis"},
                    toolbox: {show: true, x: "right", feature: {magicType: {show: true, type: ["line", "bar"]}}},
                    grid: {x2: 35},
                    xAxis: [{
                        type: "category",
                        boundaryGap: false,
                        data: t.x,
                        splitLine: {lineStyle: {color: ["#efefe8"], width: 1, type: "solid"}},
                        axisLine: {show: false},
                        axisTick: {show: false},
                        axisLabel: {margin: 18, textStyle: {fontFamily: "微软雅黑"}}
                    }],
                    yAxis: [{
                        type: "value",
                        splitNumber: 6,
                        splitLine: {lineStyle: {color: ["#efefe8"], width: 1, type: "solid"}},
                        axisLine: {show: false},
                        axisLabel: {interval: 0, textStyle: {fontFamily: "微软雅黑"}}
                    }],
                    series: [{
                        name: "数量",
                        symbol: "emptyCircle",
                        symbolSize: 5,
                        barMaxWidth: 73,
                        itemStyle: {
                            normal: {
                                color: "#ffd135",
                                borderWidth: 2,
                                lineStyle: {width: 2, type: "solid"},
                                areaStyle: {type: "default", color: "rgba(255,247,218,0.45)"}
                            }, emphasis: {borderWidth: 3}
                        },
                        type: "line",
                        data: t.y
                    }]
                })
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="dynamic-trend-statistics">\n    <section class="data-item">\n    <div id="dev-trend" class="map-wait"></div>\n    </section>\n\n    <section class="data-item">\n        <div id="vul-trend" class="map-wait"></div>\n    </section>\n</div>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="tpl-dynamic-statistics" class="tpl-page">\n    <nav id="dynamic-sub-menu" class="tpl-sub-menu">\n        <ul class="list-unstyled">\n            <li id="dynamic-secure-link" class="active">安全动态</li>\n            <li id="dynamic-dev-link">设备统计</li>\n            ');
            if (role && role === "100") {
                __append('\n            <li id="dynamic-trend-link">采集走势</li>\n            ')
            }
            __append('\n         </ul>\n    </nav>\n    <div class="content-wrapper"></div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = n(8), a = n(33), i = n(10), o = n(36), r = n(92), s = n(40);
            l();
            e.$ele.mainContainer.off();
            e.$ele.mainContainer.multiOn({
                click: {
                    "#tpl-user-collection table .delete": d,
                    "#tpl-user-collection table .view": c,
                    "#tpl-user-collection .res-item button:last-of-type": p,
                    "#pagination-collection-list ul li a": m
                }
            });
            function l(n) {
                var i = $("#tpl-user-collection").find(".content-wrapper");
                i.addClass("fade-out");
                t(a.getCollection, {page: n || 1}).on("success", function (e) {
                    var t = parseInt(e.recordnum);
                    i.empty().append(r({data: e}));
                    if (t > 9) {
                        o.set("#pagination-collection-list", t, n)
                    }
                    i.removeClass("fade-out");
                    h()
                }).on("error", function (t) {
                    i.empty().append(e.tpl.error({hint: "unload", errorMsg: t}));
                    i.removeClass("fade-out")
                })
            }

            function h() {
                var e = $(".collection-detail");
                e.each(function (e, n) {
                    var o = $(n), r = {};
                    r.status = "collectionSearch";
                    r.p = "1";
                    r.c = $.trim(o.attr("data-fingerid"));
                    t(a.collectionDetail, r).on("success", function (e) {
                        if (e.type === "success") {
                            o.empty().append(s({data: e.result.result.data, type: "collection"}))
                        } else {
                            i.msg({content: "查看收藏详情失败！", type: "error"})
                        }
                    }).on("error", function (e) {
                        i.msg({content: "查看收藏详情失败！", type: "error"})
                    })
                })
            }

            function d() {
                var e = $(this).parent().attr("data-id");
                i.alert({title: "确认删除该收藏？", content: "删除后无法恢复。"}, n);
                function n() {
                    t(a.delCollection, {id: e}).on("success", function (e) {
                        if (e.type == "success") {
                            i.msg({content: "删除成功！", type: "success"});
                            l()
                        } else {
                            i.msg({content: "删除失败:" + e.msg, type: "failed"})
                        }
                    }).on("error", function () {
                        i.msg({content: "删除失败！", type: "error"})
                    })
                }
            }

            function c() {
                var e = $(this), t = e.parent().parent().next().find(".res-item");
                if (e.attr("data-status") == 0) {
                    t.addClass("expended");
                    e.attr("data-status", 1);
                    e.text("收起")
                } else {
                    t.removeClass("expended");
                    e.attr("data-status", 0);
                    e.text("详细")
                }
            }

            function p() {
                var e = $(this).parent(), t = $(this).parent().parent().parent().prev().find("button.view");
                if (t.attr("data-status") == 0) {
                    e.addClass("expended");
                    t.attr("data-status", 1);
                    t.text("收起")
                } else {
                    e.removeClass("expended");
                    t.attr("data-status", 0);
                    t.text("详细")
                }
            }

            function m() {
                var e, t = parseInt($(this).parent().parent().attr("data-page-index"));
                if ($(this).hasClass("previous")) {
                    e = t - 1
                } else if ($(this).hasClass("next")) {
                    e = t + 1
                } else {
                    e = parseInt($(this).text())
                }
                l(e)
            }

            e._gc = function () {
                e.$ele.mainContainer.off()
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data.recordnum != 0 && data.list) {
                __append('\n<table class="table-responsive-card thead-bg gap-color text-center border">\n    <thead>\n    <tr>\n        <th class="title">标题</th>\n        <th class="site">站点</th>\n        <th class="date">收藏时间</th>\n        <th class="actions two">操作</th>\n    </tr>\n    </thead>\n    <tbody>\n    ');
                for (var i = 0; i < data.list.length; i++) {
                    __append('\n    <tr>\n        <td class="title text-left" data-th="标题：">');
                    __append(escape(data.list[i].title));
                    __append('</td>\n        <td class="site text-left" data-th="站点：">');
                    __append(escape(data.list[i].siteinfo));
                    __append('</td>\n        <td class="date" data-th="收藏时间：">');
                    __append(escape(data.list[i].createtime));
                    __append('</td>\n        <td class="actions two" data-th="操作：" data-id="');
                    __append(escape(data.list[i].id));
                    __append('">\n            <button class="view btn btn-flat" data-status="0">详细</button>\n            <button class="delete btn btn-flat">删除</button>\n        </td>\n    </tr>\n    <tr>\n        <td colspan="4" class="collection-detail" data-fingerid=id:"');
                    __append(escape(data.list[i].finger_id));
                    __append('"></td>\n    </tr>\n    ')
                }
                __append('\n    </tbody>\n</table>\n<nav id="pagination-collection-list" class="pagination-wrapper text-center">\n</nav>\n')
            } else {
                __append("\n<p>暂无收藏！</p>\n")
            }
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="tpl-user-collection" class="tpl-content-padding tpl-page">\n    <h4 class="tpl-title">我的收藏</h4>\n\n    <div class="tool-intro-box clearfix">\n        <div class="intro-img pull-left"></div>\n\n        <div class="intro-content pull-left">\n            <p>我的收藏：可以对自己感兴趣的站点或设备内容进行收藏，方便了解该站点基本情况和升级记录。</p>\n        </div>\n    </div>\n    <div class="content-wrapper"></div>\n</div>')
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        a.exports = function () {
            var e = _sdsGlobal, t = e.user, a = n(95), i = n(10), o = n(8), r = {
                main: n(96),
                editor: n(97),
                detail: n(98)
            }, s = null;
            m(1);
            function l() {
                var e = $(this).parent(), t = {
                    id: e.attr("data-id"),
                    title: e.attr("data-title"),
                    showauthor: e.attr("data-showauthor"),
                    publishtime: e.attr("data-publishtime"),
                    abstractphoto: e.attr("data-abstractphoto"),
                    ispublish: e.attr("data-ispublish")
                }, n = e.attr("data-prev-id"), a = e.attr("data-prev-title");
                if (n && a) {
                    t.prev = {id: n, title: a}
                }
                n = e.attr("data-next-id");
                a = e.attr("data-next-title");
                if (n && a) {
                    t.next = {id: n, title: a}
                }
                u(t)
            }

            function h() {
                var t = $(this).parent().parent().parent(), n = {
                    id: t.attr("data-id"),
                    title: t.attr("data-title"),
                    author: t.attr("data-author"),
                    showauthor: t.attr("data-showauthor"),
                    publishtime: t.attr("data-publishtime"),
                    ispublish: t.attr("data-ispublish"),
                    "abstract": t.attr("data-abstract"),
                    abstractphoto: t.attr("data-abstractphoto")
                };
                o(a.getNews, n).on("success", function (t) {
                    if (t.status === "success") {
                        n.content = t.result.content.replace(/(\r\n|\n|\r)/gm, " ");
                        e.tplTransition(r.editor({data: n}), null, d)
                    } else {
                        U(t.result.toString())
                    }
                }).on("error", U)
            }

            function d() {
                var e = $("#news-form"), t = $("#news-publish"), n = $("#news-draft"), a = 12e4;
                (function () {
                    if ($("#news-draft").attr("checked") == "checked") {
                        s = setInterval(c, a);
                        i.msg({type: "success", content: "开启自动保存", waitTime: 5e3})
                    }
                })();
                t.off();
                t.click(function () {
                    if (s !== null) {
                        clearInterval(s);
                        s = null;
                        i.msg({type: "error", content: "关闭自动保存", waitTime: 5e3})
                    }
                });
                n.off();
                n.click(function () {
                    if (s === null) {
                        i.msg({type: "success", content: "开启自动保存", waitTime: 5e3});
                        s = setInterval(c, a)
                    }
                });
                e.off();
                e.submit(function (e) {
                    var t = e;
                    c(false)
                });
                var o = $("#news-cancel");
                o.off();
                o.click(function (e) {
                    e.preventDefault();
                    i.alert({title: "确定要取消发布/修改新闻吗？", content: "任何未保存的内容将会丢失"}, function () {
                        m(1)
                    })
                })
            }

            function c(e) {
                var t = $("#news-form"), n = $("#news-submit");
                if (t.length == 0) {
                    clearInterval(s);
                    s = null;
                    return false
                }
                if (event)event.preventDefault();
                n.attr("disabled", "disabled");
                var r = {
                    title: $.trim($("#news-title").val()),
                    showauthor: $.trim($("#news-author").val()),
                    publishtime: t.attr("data-publishtime"),
                    ispublish: $.trim(t.find('input[name="ispublish"]:checked').val()),
                    "abstract": $.trim($("#news-summary").val()),
                    abstractphoto: $("#uploader-wrap").attr("data-summary-img"),
                    content: editorObj.getData()
                };
                if (r.title == "" || r.showauthor == "" || r.abstract == "" || r.content == "") {
                    i.msg({type: "error", content: "新闻标题|作者|摘要|正文不能为空！"});
                    n.removeAttr("disabled");
                    return false
                }
                var l, h;
                if (t.attr("data-id")) {
                    r.id = t.attr("data-id");
                    l = a.editNews;
                    h = "修改"
                } else {
                    l = a.publishNews;
                    h = "发布"
                }
                o(l, r).on("success", function (a) {
                    if (a.status === "success") {
                        if (typeof e == "undefined") {
                            if (a.result && a.result.id && !t.attr("data-id")) {
                                t.attr("data-id", a.result.id);
                                t.attr("data-publishtime", a.result.publishtime)
                            }
                            i.msg({type: "success", content: "已自动保存", waitTime: 5e3});
                            n.removeAttr("disabled")
                        } else {
                            i.msg({type: "success", content: "新闻" + h + "成功！"});
                            clearInterval(s);
                            s = null;
                            m(r.ispublish)
                        }
                    } else {
                        U(a.result.toString());
                        n.removeAttr("disabled")
                    }
                }).on("error", function (e) {
                    U(e);
                    n.removeAttr("disabled")
                })
            }

            function p() {
                i.alert({title: "确定要删除该新闻吗？", content: "删除后无法恢复"}, e);
                function e() {
                    var e = $(this).parent().parent().parent(), t = e.attr("data-id"), n = e.attr("data-ispublish");
                    o(a.delNews, {id: t}).on("success", function (e) {
                        if (e.status === "success") {
                            m(n);
                            i.msg({type: "success", content: "删除成功！"})
                        } else {
                            U(e.result.toString())
                        }
                    }).on("error", U)
                }
            }

            function m(n) {
                o(a.getNewsList, {type: n}).on("success", function (a) {
                    if (a.status === "success") {
                        var i = function () {
                            e.$ele.mainContainer.off();
                            e.$ele.mainContainer.multiOn({
                                click: {
                                    "#add-news": function () {
                                        e.tplTransition(r.editor({data: {ispublish: "2"}}), null, d)
                                    }, ".news-item .inner-wrap": l, ".news-item .edit": h, ".news-item .del": p
                                }, change: {
                                    "#news-publish-state": function () {
                                        m($(this).val())
                                    }
                                }
                            });
                            e.$ele.fullPopWrap.off();
                            e.$ele.fullPopWrap.on("click", "#newsPrev, #newsNext", V);
                            e._gc = function () {
                                e.$ele.mainContainer.off();
                                e.$ele.fullPopWrap.off()
                            }
                        };
                        e.tplTransition(r.main({data: a.result, type: n, userData: t}), "#security-news-link", i)
                    } else {
                        U(a.result.toString())
                    }
                }).on("error", U)
            }

            function u(n) {
                o(a.getNews, {id: n.id}).on("success", function (a) {
                    if (a.status === "success") {
                        e.popupTransition(r.detail({data: a.result, info: n, userData: t}))
                    } else {
                        U(a.result.toString())
                    }
                }).on("error", U)
            }

            function V() {
                var t = $(this), n = {id: t.attr("data-id"), type: t.attr("data-ispublish")}, i = 0, s = {};
                o(a.getNewsList, n).on("success", function (e) {
                    if (e.status === "success" && e.result.result.length > 0) {
                        e.result.result.forEach(function (e, t, a) {
                            if (e.id == n.id) {
                                s.info = e;
                                s.info.prev = a[t - 1];
                                s.info.next = a[t + 1];
                                i++;
                                if (i === 2) {
                                    l(s)
                                }
                            }
                        })
                    } else {
                        U(e.result.toString())
                    }
                }).on("error", U);
                o(a.getNews, n).on("success", function (e) {
                    if (e.status === "success") {
                        s.detail = e.result;
                        i++;
                        if (i === 2) {
                            l(s)
                        }
                    } else {
                        U(e.result.toString())
                    }
                }).on("error", U);
                function l(t) {
                    var n = e.ele.fullPopWrap;
                    n.find(".content").empty().append(r.detail({data: t.detail, info: t.info}));
                    n.animate({scrollTop: 0}, "slow")
                }
            }

            function U(e) {
                i.msg({type: "error", content: e})
            }
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    !(e.exports = {
        getNewsList: {type: "get", route: "/getNewsList"},
        getNews: {type: "get", route: "/getNews"},
        publishNews: {type: "post", route: "/publishNews"},
        editNews: {type: "post", route: "/editNews"},
        delNews: {type: "post", route: "/delNews"}
    })
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="security-news-page" class="tpl-page">\n    <header>\n        <h2 class="pull-left">安全资讯</h2>\n\n        ');
            if (userData.groupname == "oshadan" || userData.id == "1f6c6657-3913-406a-93e1-2e99e6feb35a") {
                __append('\n        <div class="action pull-right">\n            <label for="news-publish-state">\n                <select id="news-publish-state">\n                    <option value="1" ');
                if (type == 1) {
                    __append("selected")
                }
                __append('>已发布</option>\n                    <option value="2" ');
                if (type == 2) {
                    __append("selected")
                }
                __append('>未发布</option>\n                </select>\n            </label>\n            <button id="add-news" class="btn btn-default">+ 添加安全资讯</button>\n        </div>\n        ')
            }
            __append('\n    </header>\n    <div class="content-wrapper">\n        ');
            if (data.num > 0) {
                __append('\n\n        <div class="waterfall">\n            ');
                data.result.forEach(function (e, t, n) {
                    __append('\n            <article class="item news-item"\n                     data-id="');
                    __append(escape(e.id));
                    __append('"\n                     data-title="');
                    __append(escape(e.title));
                    __append('"\n                     data-publishtime="');
                    __append(escape(e.publishtime));
                    __append('"\n                     ');
                    __append('\n                     data-showauthor="');
                    __append(escape(e.showauthor));
                    __append('"\n                     data-abstract="');
                    __append(escape(e.abstract));
                    __append('"\n                     ');
                    if (e.abstractphoto) {
                        __append('\n                     data-abstractphoto="');
                        __append(escape(e.abstractphoto));
                        __append('"\n                     ')
                    }
                    __append('\n                     data-ispublish="');
                    __append(escape(e.ispublish));
                    __append('"\n\n                     ');
                    if (t - 1 > -1) {
                        __append('\n                     data-prev-id="');
                        __append(escape(n[t - 1].id));
                        __append('"\n                     data-prev-title="');
                        __append(escape(n[t - 1].title));
                        __append('"\n                     ')
                    }
                    __append("\n\n                    ");
                    if (t + 1 < n.length) {
                        __append('\n                     data-next-id="');
                        __append(escape(n[t + 1].id));
                        __append('"\n                     data-next-title="');
                        __append(escape(n[t + 1].title));
                        __append('"\n                    ')
                    }
                    __append('\n            >\n\n                <div class="inner-wrap" title="查看详情">\n                    <h5>');
                    __append(escape(e.title));
                    __append("</h5>\n\n                    ");
                    if (e.abstractphoto) {
                        __append('\n                    <div class="news-img">\n                        <img src="');
                        __append(escape(e.abstractphoto));
                        __append('">\n                    </div>\n                    ')
                    }
                    __append('\n\n                    <div class="content">\n                        ');
                    __append(escape(e.abstract));
                    __append("\n                    </div>\n                </div>\n                <footer>\n                    <time>");
                    __append(escape(e.publishtime));
                    __append("</time>\n                    ");
                    if (userData.groupname == "oshadan" || userData.id == "1f6c6657-3913-406a-93e1-2e99e6feb35a") {
                        __append('\n                    <div class="action">\n                        <button class="edit btn-flat"><i class="fa fa-pencil"></i> 编辑</button>\n                        <button class="del btn-flat"><i class="fa fa-times"></i> 删除</button>\n                    </div>\n                    ')
                    }
                    __append("\n                </footer>\n            </article>\n            ")
                });
                __append('\n        </div>\n\n        <script>\n            $(function () {\n                $(".news-img img").load(function(){\n                    $(\'.waterfall\').waterfall({\n                        item: ".item",\n                        colMinWidth: 320,\n                        autoResize: true,\n                        colGapWidth: 20\n                    });\n                });\n            })\n        </script>\n        ')
            } else {
                __append('\n        <p class="text-center">暂时没有任何新闻</p>\n        ')
            }
            __append("\n    </div>\n</div>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="news-editor" class="tpl-content-padding tpl-page">\n    <h3 class="editor-title">安全资讯编辑器</h3>\n\n    <form id="news-form"\n          ');
            if (typeof data != "undefined" && data.id) {
                __append('data-id="');
                __append(escape(data.id));
                __append('"')
            }
            __append("\n          ");
            if (typeof data != "undefined" && data.author) {
                __append('data-author="');
                __append(escape(data.author));
                __append('"')
            }
            __append("\n          ");
            if (typeof data != "undefined" && data.publishtime) {
                __append('data-publishtime="');
                __append(escape(data.publishtime));
                __append('"')
            }
            __append('\n            >\n        <div class="form-group">\n            <label for="news-title" class="must">标题</label>\n            <br>\n            <input type="text" name="news-title" id="news-title" class="form-control" placeholder="新闻标题"\n                   ');
            if (typeof data != "undefined" && data.title) {
                __append('value="');
                __append(escape(data.title));
                __append('"\n                    ')
            }
            __append('\n                    />\n        </div>\n\n        <div class="form-group">\n            <label for="news-author" class="must">作者</label>\n            <br>\n            <input type="text" name="news-author" id="news-author" class="form-control" placeholder="作者"\n                   ');
            if (typeof data != "undefined" && data.showauthor) {
                __append('value="');
                __append(escape(data.showauthor));
                __append('"\n                    ')
            }
            __append('\n                    />\n        </div>\n\n        <div class="form-group">\n            <label for="news-summary" class="must">摘要</label>\n            <br>\n            <textarea name="news-summary" id="news-summary" class="form-control">');
            if (typeof data != "undefined" && data.abstract) {
                __append(escape(data.abstract))
            }
            __append('</textarea>\n        </div>\n\n        <div class="form-group">\n            <label for="news-summary-img">摘要图片</label>\n            <br>\n\n            ');
            if (typeof data != "undefined" && data.abstractphoto) {
                __append('\n            <div id="uploader-wrap" data-summary-img="');
                __append(escape(data.abstractphoto));
                __append('">\n                <div id="filePicker" style="display: none;">选择图片</div>\n                <!--用来存放item-->\n                <div id="fileList">\n                    <div>\n                        <div>\n                            <img src="');
                __append(escape(data.abstractphoto));
                __append('">\n                        </div>\n                        <button id="delete-summary-img">删除</button>\n                    </div>\n                </div>\n            </div>\n            ')
            } else {
                __append('\n            <div id="uploader-wrap">\n                <div id="filePicker">选择图片</div>\n                <div id="fileList"></div>\n            </div>\n            ')
            }
            __append('\n        </div>\n\n        <div class="form-group">\n            <label class="must">是否发布</label>\n            <br>\n            <label for="news-publish">\n                <input type="radio" name="ispublish" id="news-publish" value="1"\n                       ');
            if (typeof data == "undefined" || data.ispublish == "1") {
                __append('checked="checked"\n                        ')
            }
            __append('\n                        >\n                是\n            </label>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <label for="news-draft">\n                <input type="radio" name="ispublish" id="news-draft" value="2"\n                       ');
            if (typeof data != "undefined" && data.ispublish == "2") {
                __append('checked="checked"\n                        ')
            }
            __append('\n                        >\n                否\n            </label>\n            <p style="color: #999;font-size: 0.8em;">选择"否", 打开自动保存功能; 选择"是", 关闭自动保存功能</p>\n        </div>\n\n        <div class="form-group">\n            <label for="news-content" class="must">正文</label>\n            <br>\n            <textarea name="news-content" id="news-content" class="form-control"></textarea>\n        </div>\n\n        <div id="news-action">\n            <button type="submit" id="news-submit" class="btn btn-default">\n                ');
            if (typeof data != "undefined") {
                __append("\n                保存\n                ")
            } else {
                __append("\n                发布\n                ")
            }
            __append('\n            </button>\n            <button id="news-cancel" class="btn btn-cancel">取消</button>\n        </div>\n    </form>\n</div>\n\n<script src="../../js/3rd-lib/webuploader/webuploader.js"></script>\n<script src="../../js/3rd-lib/ckeditor/ckeditor.js"></script>\n<script>\n    var editorObj = CKEDITOR.replace(\'news-content\');\n\n    ');
            if (typeof data != "undefined" && data.content) {
                __append("\n    editorObj.setData('");
                __append(data.content);
                __append("');\n    ")
            }
            __append("\n\n    /**\n     * 图片上传\n     * */\n    (function () {\n        var $uploader = $(\"#uploader-wrap\"), //容器\n                $filePicker = $(\"#filePicker\"), // 上传按钮\n                $fileList = $(\"#fileList\"); // 文件列表\n\n        // 初始化Web Uploader\n        var uploader = WebUploader.create({\n\n            // 选完文件后，是否自动上传\n            auto: true,\n\n            // swf文件路径\n            swf: '/js/3rd-lib/webuploader/Uploader.swf',\n\n            // 文件接收服务端。\n            server: '/uploadImage',\n\n            // 选择文件的按钮。可选。\n            // 内部根据当前运行是创建，可能是input元素，也可能是flash.\n            pick: '#filePicker',\n\n            // 只允许选择图片文件。\n            accept: {\n                title: 'Images',\n                extensions: 'gif,jpg,jpeg,bmp,png',\n                mimeTypes: 'image/*'\n            }\n        });\n\n        // 当有文件添加进来的时候\n        uploader.on('fileQueued', function (file) {\n            var $li = $(\n                            '<div id=\"' + file.id + '\" class=\"file-item thumbnail\">' +\n                            '<img>' +\n                            '<div class=\"info\">' + file.name + '</div>' +\n                            '</div>'\n                    ),\n                    $img = $li.find('img');\n\n            // $list为容器jQuery实例\n            $fileList.append($li);\n\n            // 创建缩略图\n            // 如果为非图片文件，可以不用调用此方法。\n            // thumbnailWidth x thumbnailHeight 为 100 x 100\n            uploader.makeThumb(file, function (error, src) {\n                if (error) {\n                    $img.replaceWith('<span>不能预览</span>');\n                    return;\n                }\n\n                $img.attr('src', src);\n            }, 100, 100);\n        });\n\n        // 文件上传过程中创建进度条实时显示。\n        uploader.on('uploadProgress', function (file, percentage) {\n            var $li = $('#' + file.id),\n                    $percent = $li.find('.progress span');\n\n            // 避免重复创建\n            if (!$percent.length) {\n                $percent = $('<p class=\"progress\"><span></span></p>').appendTo($li).find('span');\n            }\n\n            $percent.css('width', percentage * 100 + '%');\n        });\n\n        /**\n         * 文件上传成功事件\n         * 1. 给item添加成功class, 用样式标记上传成功\n         * 2. 把链接保存在容器的中\n         * 3. 隐藏上传按钮，因为只能上传一张\n         * 4. 添加删除按钮\n         * */\n        uploader.on('uploadSuccess', function (file, msg) {\n            $('#' + file.id).addClass('upload-state-done');\n            $filePicker.hide();\n            $uploader.attr(\"data-summary-img\", msg._raw);\n            $uploader.append('<button id=\"delete-summary-img\" class=\"btn\">删除</button>');\n            showResult(file, 'succeed', '上传成功');\n        });\n\n        /**\n         * 点击删除摘要图片按钮\n         * 1. 清除储存的信息\n         * 2. 清空预览列表\n         * 3. 删除 删除按钮\n         * 4. 显示上传按钮\n         * 5. 移除按钮事件\n         * */\n        $uploader.on(\"click\", \"#delete-summary-img\", function () {\n            $uploader.removeAttr(\"data-summary-img\");\n            $fileList.empty();\n            $(this).remove();\n            $filePicker.show();\n            $uploader.off();\n        })\n\n        // 文件上传失败，显示上传出错。\n        uploader.on('uploadError', function (file, err) {\n            console.log(err);\n            showResult(file, 'error', '上传失败');\n        });\n\n        // 完成上传完了，成功或者失败，先删除进度条。\n        uploader.on('uploadComplete', function (file) {\n            $('#' + file.id).find('.progress').remove();\n            showResult(file, 'complete', '上传结束');\n        });\n\n        function showResult(file, type, content) {\n            var $li = $('#' + file.id),\n                    $result = $li.find('div.' + type);\n\n            // 避免重复创建\n            if (!$result.length) {\n                $result = $('<div class=\"status ' + type + '\"></div>').appendTo($li);\n            }\n\n            $result.text(content);\n        }\n    }());\n</script>")
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            if (data && info) {
                __append('\n<div id="news-detail" class="tpl-page">\n    <h4 class="breadcrumb">安全资讯 > ');
                __append(escape(info.title));
                __append('</h4>\n\n    <h1 class="title">');
                __append(escape(info.title));
                __append('</h1>\n\n    <p class="meta">\n        作者： ');
                __append(escape(info.showauthor));
                __append("\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        发布时间： ");
                __append(escape(info.publishtime));
                __append('\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    </p>\n\n    <hr>\n\n    <div class="content">\n        ');
                __append(data.content);
                __append("\n    </div>\n\n    ");
                if (userData.groupname == "oshadan" || userData.id == "1f6c6657-3913-406a-93e1-2e99e6feb35a") {
                    __append('\n    <p>本文地址: <a href="newsshow?id=');
                    __append(escape(info.id));
                    __append('" target="_blank">');
                    __append(escape(window.location.origin));
                    __append("/newsshow?id=");
                    __append(escape(info.id));
                    __append("</a></p>\n    ")
                }
                __append("\n\n    ");
                if (info.prev || info.next) {
                    __append('\n    <hr>\n    <ul id="newsNav" class="list-unstyled">\n        ');
                    if (info.prev) {
                        var prevNews = info.prev;
                        __append('\n        <li>上一篇:\n            <a href="javascript:void(0);" id="newsPrev" class="prev"\n               title="');
                        __append(escape(prevNews.title));
                        __append('" data-id="');
                        __append(prevNews.id);
                        __append('"\n               data-ispublish="');
                        __append(escape(info.ispublish));
                        __append('">');
                        __append(escape(prevNews.title));
                        __append("</a>\n        </li>\n        ")
                    }
                    __append("\n\n        ");
                    if (info.next) {
                        var nextNews = info.next;
                        __append('\n        <li>下一篇:\n            <a href="javascript:void(0);" id="newsNext" class="next"\n               title="');
                        __append(escape(nextNews.title));
                        __append('" data-id="');
                        __append(nextNews.id);
                        __append('"\n               data-ispublish="');
                        __append(escape(info.ispublish));
                        __append('">');
                        __append(escape(nextNews.title));
                        __append("</a>\n        </li>\n        ")
                    }
                    __append("\n    </ul>\n    ")
                }
                __append("\n</div>\n")
            }
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e) {
        var t = _sdsGlobal, a = n(32), i = n(8), o = n(31), r = n(100), s = n(105), l = $("#search-kw"), h = n(106), d;
        socket.on("open", function () {
            console.log("client connect")
        });
        socket.on("getmessage", function (e) {
            msgnum = e.msg;
            var t = $("#user-message-center-link");
            if (e.all > 0) {
                t.addClass("new")
            } else {
                t.removeClass("new")
            }
        });
        n(107);
        p();
        m();
        u(["www.baidu.com", "stag:海康威视摄像头", "协议:http", "标题:政府"]);
        var c = $("body");
        c.multiOn({
            click: {
                "#search-btn": function () {
                    f(0)
                }, "#search-monitor-btn": function () {
                    f(1)
                }, ".search-item": function () {
                    o({c: $.trim($(this).attr("data-search-keyword")), q: $.trim($(this).attr("data-option"))})
                }, ".search-MonitorSite": function () {
                    var e = $(this).parent();
                    if (!e.attr("data-lsh") && !e.attr("data-name")) {
                        e = e.parent().parent().parent().parent()
                    }
                    o({
                        searchType: "monitor",
                        lsh: $.trim(e.attr("data-lsh")),
                        name: $.trim(e.attr("data-name")),
                        c: $.trim($(this).attr("data-level"))
                    })
                }, "#advanced-search": function () {
                    t.popupTransition(s({userRole: t.user.role}), r)
                }, "#search-mobile-btn": function () {
                    if ($(this).attr("data-option") == 1) {
                        $("#search-monitor-btn").trigger("click")
                    } else {
                        $("#search-btn").trigger("click")
                    }
                }, "#search-tools input": function () {
                    V();
                    U()
                }, "#form-cancel, #corner-popup-close, #corner-popup-mask": function () {
                    t.$ele.popupWrapper.removeClass("show")
                }, "#popup-content-wrapper": function (e) {
                    if (e.target == document.getElementById("popup-content-close") || e.target == this) {
                        $(this).removeClass("show");
                        $(this).find(".content.empty-loading").empty();
                        $("html,body").css("overflow-y", "auto");
                        if (t._popWindowGC && $.isFunction(t._popWindowGC)) {
                            t._popWindowGC();
                            t._popWindowGC = null
                        }
                    }
                }, ".del-search-history > span.del": function () {
                    var e = $(this), t = e.parent().parent().next(), n = e.parent(), a = e.prev().text(), i = t.find(".title");
                    n.addClass("target");
                    i.attr("title", a);
                    if (a.length > 30) {
                        i.text(a.substr(0, 25) + "...")
                    } else {
                        i.text(a)
                    }
                    t.attr("data-data", a);
                    t.addClass("show")
                }, ".tag-clouds-pop .cancel": function () {
                    var e = $(this), t = e.parent().parent().parent();
                    t.removeClass("show");
                    t.prev().find("li.target").removeClass("target")
                }, ".tag-clouds-pop .confirm": function () {
                    var e = $(this), t = e.parent().parent().parent().prev().find("li.target");
                    e.parent().parent().parent().removeClass("show");
                    t.addClass("processing");
                    i(a.delsearchhistory, {condition: t.children(".search-item").text()}).on("success", function () {
                        t.remove()
                    }).on("error", function () {
                        t.removeClass("processing")
                    })
                }, ".check-site-bug": function () {
                    var e = $("#tpl-dynamic-statistics").find(".content-wrapper");
                    e.addClass("fade-out");
                    if ($.trim($(".user-name").text())) {
                        var n = $(this).parent().parent().parent().parent().find(".notcomponent").html();
                        var o = $(this).parent().attr("data-title");
                        var r = {};
                        r.id = $(this).attr("value");
                        r.description = n;
                        r.title = o;
                        i(a.getVulDetail, r).on("success", function (e) {
                            if (e.status == "success") {
                                t.popupTransition(h({data: e.data}))
                            } else {
                                prompt.msg({content: e.data, type: "failed"})
                            }
                        }).on("error", function (e) {
                            prompt.msg({content: e, type: "failed"})
                        })
                    } else {
                        prompt.msg({type: "failed", content: "漏洞详细加载异常"})
                    }
                }
            }
        });
        c.mousedown(function (e) {
            var t = $("#corner-popup-wrapper");
            if (t.hasClass("show") && !t.is(e.target) && t.has(e.target).length === 0) {
                $("#corner-popup-close").trigger("click")
            }
        });
        function p() {
            var e = $("#user-sidebar-nav"), t = $("#toggle-m-user-options"), n = $("#user-options"), a = n.children(".option"), i = $("#user-option-mask"), o = $("#user-sidebar-nav-mask");
            t.on("click", function () {
                if ($(window).width() < 768) {
                    if ($(this).attr("data-status") == 0) {
                        r()
                    } else {
                        s();
                        l()
                    }
                }
            });
            $(".sidebar-nav-item").bind("click", function () {
                if ($(window).width() < 768) {
                    h()
                }
            });
            a.on("click", function () {
                s()
            });
            o.on("click", function () {
                h()
            });
            i.on("click", function () {
                s()
            });
            function r() {
                n.addClass("show");
                t.attr("data-status", 1);
                i.addClass("show")
            }

            function s() {
                n.removeClass("show");
                t.attr("data-status", 0);
                i.removeClass("show")
            }

            function l() {
                e.addClass("show");
                o.addClass("show")
            }

            function h() {
                e.removeClass("show");
                o.removeClass("show")
            }
        }

        function m() {
            var e = $("#user-search-box").find("label[for=search-kw]"), t = $("#search-options"), n = t.find("li");
            e.click(function () {
                t.addClass("expended")
            });
            n.click(function () {
                e.text($(this).text());
                $(this).parent().removeClass("expended");
                $("#search-mobile-btn").attr("data-option", $(this).attr("data-option"));
                l.attr("data-option", $(this).attr("data-option"));
                l.focus()
            })
        }

        function u(e) {
            var t = 1, n = e.length;
            l.attr("placeholder", e[0]);
            d = setInterval(a, 3e3);
            function a() {
                if (l.val()) {
                    V();
                    return false
                }
                l.attr("placeholder", e[t]);
                if (++t >= n) {
                    t = 0
                }
            }

            l.on({
                keypress: function (e) {
                    var t = e || window.event;
                    if (t.keyCode == 13) {
                        if ($(window).width() >= 768) {
                            $("#search-monitor-btn").trigger("click")
                        } else {
                            if ($(this).attr("data-option") == 1) {
                                $("#search-monitor-btn").trigger("click")
                            } else {
                                $("#search-btn").trigger("click")
                            }
                            $(this).blur()
                        }
                    }
                }, keydown: function (e) {
                    var t = e || window.event;
                    if (t.keyCode == 8) {
                        var n = document.getElementById("search-kw");
                        if (!n.value) {
                            var a = $("#search-tools"), i = a.find(".s-tool-sec:checked"), o = a.find(".s-tool-site:checked");
                            if (i.length || o.length) {
                                o.length ? o.last().trigger("click") : i.last().trigger("click")
                            }
                        }
                    }
                }
            });
            l.keyup(function () {
                if ($(this).val() != "") {
                    V();
                    l.keyup(null)
                }
            })
        }

        function V() {
            clearInterval(d);
            l.attr("placeholder", "请输入关键字")
        }

        function U() {
            var e = $("#search-tools"), t = {
                securityHigh: '<label for="search-tool-high-lv">高危</label>',
                securityMid: '<label for="search-tool-mid-lv">中危</label>',
                securityLow: '<label for="search-tool-low-lv">低危</label>',
                siteGov: '<label for="search-tool-gov">政府</label>',
                siteEdu: '<label for="search-tool-edu">教育</label>'
            }, n = {
                and: '<span class="divider">&nbsp;&nbsp;</span>',
                or: '<span class="divider">|</span>'
            }, a, i, o = "", r = "", s = "", h = "", d = "", c = "", p = $("#search-tool-tags");
            e.find(".s-tool-sec:checked").each(function (e) {
                a = $(this).attr("data-tag");
                i = $(this).attr("value");
                if (e == 0) {
                    s += i;
                    h += t[a]
                } else {
                    s += "|" + i;
                    h += n.or + t[a]
                }
            });
            d = s;
            c = h;
            e.find(".s-tool-site:checked").each(function (e) {
                a = $(this).attr("data-tag");
                i = $(this).attr("value");
                if (e == 0) {
                    o += i;
                    r += t[a]
                } else {
                    o += "|" + i;
                    r += n.or + t[a]
                }
            });
            if (o != "") {
                s == "" ? d = o : d += " " + o
            }
            if (r != "") {
                h == "" ? c = r : c += n.and + r
            }
            l.attr("data-extra", d);
            p.html(c);
            d == "" ? l.css("padding-left", 35) : l.css("padding-left", 45 + p.outerWidth())
        }

        function f(e) {
            var t = $.trim(l.val());
            if (t == "" && l.attr("data-extra") == "" && l.attr("placeholder") != "请输入关键字") {
                o({c: l.attr("placeholder"), q: e, clear: false})
            } else {
                o({c: t, q: e, clear: false})
            }
            V()
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a;
    !(a = function (e, t, a) {
        var i = n(10), o = n(31), r = _sdsGlobal.user.role;
        var s = {
            data: {country: n(101), china: n(102), module: n(103), component: n(104)}, init: function () {
                var e = $("#advanced-search-form"), t = $("#ad--search, #ad--monitor-search");
                e.off();
                e.submit(s.onSubmit);
                t.off();
                t.click(function () {
                    e.attr("data-option", $(this).attr("data-value"))
                });
                var n = e.find("select"), a = e.find('.ad--section:not(:first-child) input:not([id^="ad--date-"])'), i = $("#ad--reset");
                n.off();
                n.on("change", o);
                function o() {
                    $(this).val() !== "null" ? $(this).addClass("hascontent") : $(this).removeClass("hascontent")
                }

                a.off();
                a.keyup(r);
                function r() {
                    $(this).val() !== "" ? $(this).addClass("hascontent") : $(this).removeClass("hascontent")
                }

                i.off();
                i.on("click", l);
                function l(t) {
                    e.find("select, input").removeClass("hascontent");
                    e.find("option[selected]").removeAttr("selected");
                    e.find(".default-disabled").attr("disabled", "disabled");
                    sessionStorage.removeItem("advancedSearch")
                }

                s.region.init();
                s.component();
                var h = sessionStorage.getItem("advancedSearch");
                if (h) {
                    s.setPrevSearch(h)
                }
                _sdsGlobal._popWindowGC = function () {
                    e.off();
                    t.off();
                    i.off();
                    e.find(".form-control").off()
                }
            }, region: {
                init: function () {
                    var e = $("#ad--country"), t = $("#ad--area1"), n = $("#ad--area2");
                    e.html(this.getCountryList());
                    e.on("change", a);
                    function a() {
                        if ($(this).val() == "中国") {
                            t.html(s.region.getProvinceList()).removeAttr("disabled")
                        } else {
                            t.html('<option value="null">省份</option>').attr("disabled", "disabled").removeClass("hascontent");
                            n.html('<option value="null">城市</option>').attr("disabled", "disabled").removeClass("hascontent")
                        }
                    }

                    t.change(i);
                    function i() {
                        var e = $(this).val(), t = s.data.china, a = false;
                        for (var i = 0, o = t.length; i < o; i++) {
                            if (t[i].name_cn == e) {
                                a = true;
                                if (t[i].city.length > 0) {
                                    n.html(s.region.getCityList(t[i].name_cn)).removeAttr("disabled");
                                } else {
                                    n.html('<option value="null">城市</option>').attr("disabled", "disabled").removeClass("hascontent")
                                }
                                break
                            }
                        }
                        if (!a) {
                            n.html('<option value="null">城市</option>').attr("disabled", "disabled").removeClass("hascontent")
                        }
                    }
                }, getCountryList: function (e) {
                    var t = '<option value="null">选择</option>';
                    s.data.country.forEach(n);
                    function n(n, a) {
                        if (e && e == n.name_cn) {
                            t += '<option value="' + n.name_cn + '" selected>' + n.name_cn + "</option>"
                        } else {
                            t += '<option value="' + n.name_cn + '">' + n.name_cn + "</option>"
                        }
                        if (a == 0) {
                            t += "<option disabled>─────</option>"
                        }
                    }

                    return t
                }, getProvinceList: function (e) {
                    var t = '<option value="null">省份</option>';
                    s.data.china.forEach(n);
                    function n(n) {
                        if (e && e == n.name_cn) {
                            t += '<option value="' + n.name_cn + '" selected>' + n.name_cn + "</option>"
                        } else {
                            t += '<option value="' + n.name_cn + '">' + n.name_cn + "</option>"
                        }
                    }

                    return t
                }, getCityList: function (e, t) {
                    var n = s.data.china, a = null, i = '<option value="null">城市</option>';
                    n.forEach(o);
                    function o(t) {
                        if (t.name_cn == e) {
                            a = t
                        }
                    }

                    a.city.forEach(r);
                    function r(e) {
                        if (t && t == e.name_cn) {
                            i += '<option value="' + e.name_cn + '" selected>' + e.name_cn + "</option>"
                        } else {
                            i += '<option value="' + e.name_cn + '">' + e.name_cn + "</option>"
                        }
                    }

                    return i
                }
            }, module: {
                init: function () {
                    var e = $("#ad--device-module"), t = $("#ad--device-name");
                    e.html(this.getMoudleList());
                    e.change(n);
                    function n() {
                        var e = $(this).val();
                        if (e !== "null") {
                            t.html(s.module.getNameList(e)).removeAttr("disabled")
                        } else {
                            t.html('<option value="null">名称</option>').attr("disabled", "disabled").removeClass("hascontent")
                        }
                    }
                }, getMoudleList: function () {
                    var e = '<option value="null">类型</option>';
                    s.data.module.forEach(t);
                    function t(t) {
                        e += '<option value="' + t.module + '">' + t.module + "</option>"
                    }

                    return e
                }, getNameList: function (e) {
                    var t = '<option value="null">名称</option>', n = s.data.module;
                    for (var a = 0, i = n.length; a < i; a++) {
                        if (e === n[a].module) {
                            n[a].device.sort().forEach(function (e) {
                                t += '<option value="' + e + '">' + e + "</option>"
                            });
                            break
                        }
                    }
                    return t
                }
            }, component: function (e) {
                var t = $("#ad--component"), n = '<option value="null">选择</option>', a = this.data.component;
                a.sort().forEach(i);
                function i(t) {
                    if (e && e == t) {
                        n += '<option value="' + t + '" selected>' + t + "</option>"
                    } else {
                        n += '<option value="' + t + '">' + t + "</option>"
                    }
                }

                t.html(n)
            }, setPrevSearch: function (e) {
                var t = {}, n;
                n = e.replace(/地区/, "地区1").split("&");
                n.length = n.length - 1;
                n.forEach(a);
                function a(e) {
                    var n = e.split("=");
                    t[n[0]] = n[1]
                }

                for (var i in t) {
                    if (t.hasOwnProperty(i)) {
                        var o = "", r = "";
                        switch (i) {
                            case"搜索":
                                if (t["搜索"]) {
                                    $("#ad--user-input").val(t["搜索"])
                                }
                                delete t["搜索"];
                                break;
                            case"国家":
                                if (t["国家"]) {
                                    $("#ad--country").empty().html(s.region.getCountryList(t["国家"])).addClass("hascontent")
                                }
                                delete t["国家"];
                                break;
                            case"地区1":
                            case"地区":
                                if (t["地区1"]) {
                                    $("#ad--area1").empty().html(s.region.getProvinceList(t["地区1"])).addClass("hascontent").removeAttr("disabled")
                                }
                                if (t["地区"]) {
                                    $("#ad--area2").empty().html(s.region.getCityList(t["地区1"], t["地区"])).addClass("hascontent").removeAttr("disabled")
                                }
                                delete t["地区1"];
                                delete t["地区"];
                                break;
                            case"站点":
                                if (t["站点"]) {
                                    $("#ad--industry").addClass("hascontent").find('[value="' + t["站点"] + '"]').attr("selected", "selected")
                                }
                                delete t["站点"];
                                break;
                            case"模块1":
                            case"模块":
                                break;
                            case"ip起":
                                if (t["ip起"]) {
                                    $("#ad--ip-start").val(t["ip起"]).addClass("hascontent")
                                }
                                delete t["ip起"];
                                break;
                            case"ip终":
                                if (t["ip终"]) {
                                    $("#ad--ip-end").val(t["ip终"]).addClass("hascontent")
                                }
                                delete t["ip终"];
                                break;
                            case"站点类型":
                            case"站点类型值":
                                if (t["站点类型值"]) {
                                    $("#ad--site").val(t["站点类型值"]).addClass("hascontent");
                                    if (t["站点类型"]) {
                                        $("#ad--site-choose").addClass("hascontent").find('[value="' + t["站点类型"] + '"]').attr("selected", "selected")
                                    }
                                }
                                delete t["站点类型"];
                                delete t["站点类型值"];
                                break;
                            case"端口":
                                if (t["端口"]) {
                                    $("#ad--port").val(t["端口"]).addClass("hascontent")
                                }
                                delete t["端口"];
                                break;
                            case"标题":
                                if (t["标题"]) {
                                    $("#ad--title").val(t["标题"]).addClass("hascontent")
                                }
                                delete t["标题"];
                                break;
                            case"关键词":
                                if (t["关键词"]) {
                                    $("#ad--keywords").val(t["关键词"]).addClass("hascontent")
                                }
                                delete t["关键词"];
                                break;
                            case"内容":
                                if (t["内容"]) {
                                    $("#ad--homepage").val(t["内容"]).addClass("hascontent")
                                }
                                delete t["内容"];
                                break;
                            case"服务":
                                if (t["服务"]) {
                                    $("#ad--service").val(t["服务"]).addClass("hascontent")
                                }
                                delete t["服务"];
                                break;
                            case"协议":
                                if (t["协议"]) {
                                    $("#ad--protocol").val(t["协议"]).addClass("hascontent")
                                }
                                delete t["协议"];
                                break;
                            case"组件":
                                if (t["组件"]) {
                                    $("#ad--component").empty().html(s.component(t["组件"])).addClass("hascontent")
                                }
                                delete t["组件"];
                                break;
                            case"安全":
                                if (t["安全"]) {
                                    $("#ad--security").addClass("hascontent").find('[value="' + t["安全"] + '"]').attr("selected", "selected")
                                }
                                delete t["安全"];
                                break;
                            case"日期起":
                                if (t["日期起"]) {
                                    $("#ad--date-start").val(t["日期起"]).addClass("hascontent")
                                }
                                delete t["日期起"];
                                break;
                            case"日期终":
                                if (t["日期终"]) {
                                    $("#ad--date-end").val(t["日期终"]).addClass("hascontent")
                                }
                                delete t["日期终"];
                                break;
                            default:
                        }
                    }
                }
            }, onSubmit: function (e) {
                e.preventDefault();
                var t = decodeURIComponent($(this).serialize()).replace(/<|>/g, "").replace(/\+/g, " ").split("&"), n = {}, a = "", s = "";
                t.forEach(l);
                function l(e) {
                    var t = e.split("=");
                    if (t[1] && t[1] != "null") {
                        n[t[0]] = t[1];
                        a += e + "&"
                    }
                }

                for (var h in n) {
                    if (n.hasOwnProperty(h)) {
                        var d = "", c = "";
                        switch (h) {
                            case"搜索":
                            case"组件":
                                s += n[h];
                                break;
                            case"ip起":
                            case"ip终":
                                d = n["ip起"];
                                c = n["ip终"];
                                if (!d) {
                                    s += "ip:" + c
                                } else if (!c) {
                                    s += "ip:" + d
                                } else {
                                    s += "ip:[" + d + "," + c + "]"
                                }
                                delete n["ip起"];
                                delete n["ip终"];
                                break;
                            case"日期起":
                            case"日期终":
                                break;
                            case"站点类型":
                            case"站点类型值":
                                d = n["站点类型"];
                                c = n["站点类型值"];
                                if (d && c) {
                                    s += d + ":" + c
                                }
                                delete n["站点类型"];
                                delete n["站点类型值"];
                                break;
                            case"端口":
                                d = n[h].split(/\D+/);
                                c = d.length;
                                d.forEach(function (e, t) {
                                    s += h + ":" + e;
                                    if (t < c - 1)s += "|"
                                });
                                break;
                            case"服务":
                            case"协议":
                                d = n[h].split(/\s+/);
                                c = d.length;
                                d.forEach(function (e, t) {
                                    s += h + ":" + e;
                                    if (t < c - 1)s += "|"
                                });
                                break;
                            case"模块":
                            case"请求状态":
                            case"端口状态":
                                break;
                            case"站点":
                                if (r != "400") {
                                    s += h + ":" + n[h]
                                }
                                break;
                            default:
                                s += h + ":" + n[h]
                        }
                        s += " "
                    }
                }
                s = $.trim(s);
                if (s === "") {
                    i.msg({type: "failed", content: "没有输入任何内容"});
                    return false
                }
                o({c: s, q: $(this).attr("data-option")});
                sessionStorage.setItem("advancedSearch", a);
                $("#popup-content-close").trigger("click")
            }
        };
        a.exports = s.init
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}, function (e, t, n) {
    var a, i;
    !(a = [{a2_code: "CN", name_en: "China", name_cn: "中国"}, {
        a2_code: "AD",
        name_en: "Andorra",
        name_cn: "安道尔"
    }, {a2_code: "AE", name_en: "United Arab Emirates (the)", name_cn: "阿联酋"}, {
        a2_code: "AF",
        name_en: "Afghanistan",
        name_cn: "阿富汗"
    }, {a2_code: "AG", name_en: "Antigua and Barbuda", name_cn: "安提瓜和巴布达"}, {
        a2_code: "AI",
        name_en: "Anguilla",
        name_cn: "安圭拉"
    }, {a2_code: "AL", name_en: "Albania", name_cn: "阿尔巴尼亚"}, {
        a2_code: "AM",
        name_en: "Armenia",
        name_cn: "亚美尼亚"
    }, {a2_code: "AO", name_en: "Angola", name_cn: "安哥拉"}, {
        a2_code: "AQ",
        name_en: "Antarctica",
        name_cn: "南极洲"
    }, {a2_code: "AR", name_en: "Argentina", name_cn: "阿根廷"}, {
        a2_code: "AS",
        name_en: "American Samoa",
        name_cn: "美属萨摩亚"
    }, {a2_code: "AT", name_en: "Austria", name_cn: "奥地利"}, {
        a2_code: "AU",
        name_en: "Australia",
        name_cn: "澳大利亚"
    }, {a2_code: "AW", name_en: "Aruba", name_cn: "阿鲁巴"}, {
        a2_code: "AX",
        name_en: "?land Islands",
        name_cn: "奥兰群岛"
    }, {a2_code: "AZ", name_en: "Azerbaijan", name_cn: "阿塞拜疆"}, {
        a2_code: "BA",
        name_en: "Bosnia and Herzegovina",
        name_cn: "波黑"
    }, {a2_code: "BB", name_en: "Barbados", name_cn: "巴巴多斯"}, {
        a2_code: "BD",
        name_en: "Bangladesh",
        name_cn: "孟加拉国"
    }, {a2_code: "BE", name_en: "Belgium", name_cn: "比利时"}, {
        a2_code: "BF",
        name_en: "Burkina Faso",
        name_cn: "布基纳法索"
    }, {a2_code: "BG", name_en: "Bulgaria", name_cn: "保加利亚"}, {
        a2_code: "BH",
        name_en: "Bahrain",
        name_cn: "巴林"
    }, {a2_code: "BI", name_en: "Burundi", name_cn: "布隆迪"}, {
        a2_code: "BJ",
        name_en: "Benin",
        name_cn: "贝宁"
    }, {a2_code: "BL", name_en: "Saint Barthélemy", name_cn: "圣巴泰勒米岛"}, {
        a2_code: "BM",
        name_en: "Bermuda",
        name_cn: "百慕大"
    }, {a2_code: "BN", name_en: "Brunei Darussalam", name_cn: "文莱"}, {
        a2_code: "BO",
        name_en: "Bolivia, Plurinational State of",
        name_cn: "玻利维亚"
    }, {a2_code: "BQ", name_en: "Bonaire, Sint Eustatius and Saba", name_cn: "荷兰加勒比区"}, {
        a2_code: "BR",
        name_en: "Brazil",
        name_cn: "巴西"
    }, {a2_code: "BS", name_en: "Bahamas (the)", name_cn: "巴哈马"}, {
        a2_code: "BT",
        name_en: "Bhutan",
        name_cn: "不丹"
    }, {a2_code: "BV", name_en: "Bouvet Island", name_cn: "布韦岛"}, {
        a2_code: "BW",
        name_en: "Botswana",
        name_cn: "博茨瓦纳"
    }, {a2_code: "BY", name_en: "Belarus", name_cn: "白俄罗斯"}, {
        a2_code: "BZ",
        name_en: "Belize",
        name_cn: "伯利兹"
    }, {a2_code: "CA", name_en: "Canada", name_cn: "加拿大"}, {
        a2_code: "CC",
        name_en: "Cocos (Keeling) Islands (the)",
        name_cn: "科科斯群岛"
    }, {a2_code: "CD", name_en: "Congo (the Democratic Republic of the)", name_cn: "刚果(金)"}, {
        a2_code: "CF",
        name_en: "Central African Republic (the)",
        name_cn: "中非"
    }, {a2_code: "CG", name_en: "Congo", name_cn: "刚果(布)"}, {
        a2_code: "CH",
        name_en: "Switzerland",
        name_cn: "瑞士"
    }, {a2_code: "CI", name_en: "C?te d'Ivoire", name_cn: "科特迪瓦"}, {
        a2_code: "CK",
        name_en: "Cook Islands (the)",
        name_cn: "库克群岛"
    }, {a2_code: "CL", name_en: "Chile", name_cn: "智利"}, {
        a2_code: "CM",
        name_en: "Cameroon",
        name_cn: "喀麦隆"
    }, {a2_code: "CO", name_en: "Colombia", name_cn: "哥伦比亚"}, {
        a2_code: "CR",
        name_en: "Costa Rica",
        name_cn: "哥斯达黎加"
    }, {a2_code: "CU", name_en: "Cuba", name_cn: "古巴"}, {
        a2_code: "CV",
        name_en: "Cabo Verde",
        name_cn: "佛得角"
    }, {a2_code: "CW", name_en: "Cura?ao", name_cn: "库拉索"}, {
        a2_code: "CX",
        name_en: "Christmas Island",
        name_cn: "圣诞岛"
    }, {a2_code: "CY", name_en: "Cyprus", name_cn: "塞浦路斯"}, {
        a2_code: "CZ",
        name_en: "Czech Republic (the)",
        name_cn: "捷克"
    }, {a2_code: "DE", name_en: "Germany", name_cn: "德国"}, {
        a2_code: "DJ",
        name_en: "Djibouti",
        name_cn: "吉布提"
    }, {a2_code: "DK", name_en: "Denmark", name_cn: "丹麦"}, {
        a2_code: "DM",
        name_en: "Dominica",
        name_cn: "多米尼克"
    }, {a2_code: "DO", name_en: "Dominican Republic (the)", name_cn: "多米尼加"}, {
        a2_code: "DZ",
        name_en: "Algeria",
        name_cn: "阿尔及利亚"
    }, {a2_code: "EC", name_en: "Ecuador", name_cn: "厄瓜多尔"}, {
        a2_code: "EE",
        name_en: "Estonia",
        name_cn: "爱沙尼亚"
    }, {a2_code: "EG", name_en: "Egypt", name_cn: "埃及"}, {
        a2_code: "EH",
        name_en: "Western Sahara*",
        name_cn: "西撒哈拉"
    }, {a2_code: "ER", name_en: "Eritrea", name_cn: "厄立特里亚"}, {
        a2_code: "ES",
        name_en: "Spain",
        name_cn: "西班牙"
    }, {a2_code: "ET", name_en: "Ethiopia", name_cn: "埃塞俄比亚"}, {
        a2_code: "FI",
        name_en: "Finland",
        name_cn: "芬兰"
    }, {a2_code: "FJ", name_en: "Fiji", name_cn: "斐济"}, {
        a2_code: "FK",
        name_en: "Falkland Islands (the) [Malvinas]",
        name_cn: "福克兰群岛（马尔维纳斯）"
    }, {a2_code: "FM", name_en: "Micronesia (the Federated States of)", name_cn: "密克罗尼西亚联邦"}, {
        a2_code: "FO",
        name_en: "Faroe Islands (the)",
        name_cn: "法罗群岛"
    }, {a2_code: "FR", name_en: "France", name_cn: "法国"}, {
        a2_code: "GA",
        name_en: "Gabon",
        name_cn: "加蓬"
    }, {a2_code: "GB", name_en: "United Kingdom (the)", name_cn: "英国"}, {
        a2_code: "GD",
        name_en: "Grenada",
        name_cn: "格林纳达"
    }, {a2_code: "GE", name_en: "Georgia", name_cn: "格鲁吉亚"}, {
        a2_code: "GF",
        name_en: "French Guiana",
        name_cn: "法属圭亚那"
    }, {a2_code: "GG", name_en: "Guernsey", name_cn: "根西岛"}, {
        a2_code: "GH",
        name_en: "Ghana",
        name_cn: "加纳"
    }, {a2_code: "GI", name_en: "Gibraltar", name_cn: "直布罗陀"}, {
        a2_code: "GL",
        name_en: "Greenland",
        name_cn: "格陵兰"
    }, {a2_code: "GM", name_en: "Gambia (The)", name_cn: "冈比亚"}, {
        a2_code: "GN",
        name_en: "Guinea",
        name_cn: "几内亚"
    }, {a2_code: "GP", name_en: "Guadeloupe", name_cn: "瓜德罗普"}, {
        a2_code: "GQ",
        name_en: "Equatorial Guinea",
        name_cn: "赤道几内亚"
    }, {a2_code: "GR", name_en: "Greece", name_cn: "希腊"}, {
        a2_code: "GS",
        name_en: "South Georgia and the South Sandwich Islands",
        name_cn: "南乔治亚岛和南桑威奇群岛"
    }, {a2_code: "GT", name_en: "Guatemala", name_cn: "危地马拉"}, {
        a2_code: "GU",
        name_en: "Guam",
        name_cn: "关岛"
    }, {a2_code: "GW", name_en: "Guinea-Bissau", name_cn: "几内亚比绍"}, {
        a2_code: "GY",
        name_en: "Guyana",
        name_cn: "圭亚那"
    }, {a2_code: "HM", name_en: "Heard Island and McDonald Islands", name_cn: "赫德岛和麦克唐纳群岛"}, {
        a2_code: "HN",
        name_en: "Honduras",
        name_cn: "洪都拉斯"
    }, {a2_code: "HR", name_en: "Croatia", name_cn: "克罗地亚"}, {
        a2_code: "HT",
        name_en: "Haiti",
        name_cn: "海地"
    }, {a2_code: "HU", name_en: "Hungary", name_cn: "匈牙利"}, {
        a2_code: "ID",
        name_en: "Indonesia",
        name_cn: "印度尼西亚"
    }, {a2_code: "IE", name_en: "Ireland", name_cn: "爱尔兰"}, {
        a2_code: "IL",
        name_en: "Israel",
        name_cn: "以色列"
    }, {a2_code: "IM", name_en: "Isle of Man", name_cn: "马恩岛"}, {
        a2_code: "IN",
        name_en: "India",
        name_cn: "印度"
    }, {a2_code: "IO", name_en: "British Indian Ocean Territory (the)", name_cn: "英属印度洋领地"}, {
        a2_code: "IQ",
        name_en: "Iraq",
        name_cn: "伊拉克"
    }, {a2_code: "IR", name_en: "Iran (the Islamic Republic of)", name_cn: "伊朗"}, {
        a2_code: "IS",
        name_en: "Iceland",
        name_cn: "冰岛"
    }, {a2_code: "IT", name_en: "Italy", name_cn: "意大利"}, {
        a2_code: "JE",
        name_en: "Jersey",
        name_cn: "泽西岛"
    }, {a2_code: "JM", name_en: "Jamaica", name_cn: "牙买加"}, {
        a2_code: "JO",
        name_en: "Jordan",
        name_cn: "约旦"
    }, {a2_code: "JP", name_en: "Japan", name_cn: "日本"}, {
        a2_code: "KE",
        name_en: "Kenya",
        name_cn: "肯尼亚"
    }, {a2_code: "KG", name_en: "Kyrgyzstan", name_cn: "吉尔吉斯斯坦"}, {
        a2_code: "KH",
        name_en: "Cambodia",
        name_cn: "柬埔寨"
    }, {a2_code: "KI", name_en: "Kiribati", name_cn: "基里巴斯"}, {
        a2_code: "KM",
        name_en: "Comoros",
        name_cn: "科摩罗"
    }, {a2_code: "KN", name_en: "Saint Kitts and Nevis", name_cn: "圣基茨和尼维斯"}, {
        a2_code: "KP",
        name_en: "Korea (the Democratic People's Republic of)",
        name_cn: "朝鲜"
    }, {a2_code: "KR", name_en: "Korea (the Republic of)", name_cn: "韩国"}, {
        a2_code: "KW",
        name_en: "Kuwait",
        name_cn: "科威特"
    }, {a2_code: "KY", name_en: "Cayman Islands (the)", name_cn: "开曼群岛"}, {
        a2_code: "KZ",
        name_en: "Kazakhstan",
        name_cn: "哈萨克斯坦"
    }, {a2_code: "LA", name_en: "Lao People's Democratic Republic (the)", name_cn: "老挝"}, {
        a2_code: "LB",
        name_en: "Lebanon",
        name_cn: "黎巴嫩"
    }, {a2_code: "LC", name_en: "Saint Lucia", name_cn: "圣卢西亚"}, {
        a2_code: "LI",
        name_en: "Liechtenstein",
        name_cn: "列支敦士登"
    }, {a2_code: "LK", name_en: "Sri Lanka", name_cn: "斯里兰卡"}, {
        a2_code: "LR",
        name_en: "Liberia",
        name_cn: "利比里亚"
    }, {a2_code: "LS", name_en: "Lesotho", name_cn: "莱索托"}, {
        a2_code: "LT",
        name_en: "Lithuania",
        name_cn: "立陶宛"
    }, {a2_code: "LU", name_en: "Luxembourg", name_cn: "卢森堡"}, {
        a2_code: "LV",
        name_en: "Latvia",
        name_cn: "拉脱维亚"
    }, {a2_code: "LY", name_en: "Libya", name_cn: "利比亚"}, {
        a2_code: "MA",
        name_en: "Morocco",
        name_cn: "摩洛哥"
    }, {a2_code: "MC", name_en: "Monaco", name_cn: "摩纳哥"}, {
        a2_code: "MD",
        name_en: "Moldova (the Republic of)",
        name_cn: "摩尔多瓦"
    }, {a2_code: "ME", name_en: "Montenegro", name_cn: "黑山"}, {
        a2_code: "MF",
        name_en: "Saint Martin (French part)",
        name_cn: "法属圣马丁"
    }, {a2_code: "MG", name_en: "Madagascar", name_cn: "马达加斯加"}, {
        a2_code: "MH",
        name_en: "Marshall Islands (the)",
        name_cn: "马绍尔群岛"
    }, {a2_code: "MK", name_en: "Macedonia (the former Yugoslav Republic of)", name_cn: "马其顿"}, {
        a2_code: "ML",
        name_en: "Mali",
        name_cn: "马里"
    }, {a2_code: "MM", name_en: "Myanmar", name_cn: "缅甸"}, {
        a2_code: "MN",
        name_en: "Mongolia",
        name_cn: "蒙古"
    }, {a2_code: "MP", name_en: "Northern Mariana Islands (the)", name_cn: "北马里亚纳群岛"}, {
        a2_code: "MQ",
        name_en: "Martinique",
        name_cn: "马提尼克"
    }, {a2_code: "MR", name_en: "Mauritania", name_cn: "毛里塔尼亚"}, {
        a2_code: "MS",
        name_en: "Montserrat",
        name_cn: "蒙塞拉特岛"
    }, {a2_code: "MT", name_en: "Malta", name_cn: "马耳他"}, {
        a2_code: "MU",
        name_en: "Mauritius",
        name_cn: "毛里求斯"
    }, {a2_code: "MV", name_en: "Maldives", name_cn: "马尔代夫"}, {
        a2_code: "MW",
        name_en: "Malawi",
        name_cn: "马拉维"
    }, {a2_code: "MX", name_en: "Mexico", name_cn: "墨西哥"}, {
        a2_code: "MY",
        name_en: "Malaysia",
        name_cn: "马来西亚"
    }, {a2_code: "MZ", name_en: "Mozambique", name_cn: "莫桑比克"}, {
        a2_code: "NA",
        name_en: "Namibia",
        name_cn: "纳米比亚"
    }, {a2_code: "NC", name_en: "New Caledonia", name_cn: "新喀里多尼亚"}, {
        a2_code: "NE",
        name_en: "Niger (the)",
        name_cn: "尼日尔"
    }, {a2_code: "NF", name_en: "Norfolk Island", name_cn: "诺福克岛"}, {
        a2_code: "NG",
        name_en: "Nigeria",
        name_cn: "尼日利亚"
    }, {a2_code: "NI", name_en: "Nicaragua", name_cn: "尼加拉瓜"}, {
        a2_code: "NL",
        name_en: "Netherlands (the)",
        name_cn: "荷兰"
    }, {a2_code: "NO", name_en: "Norway", name_cn: "挪威"}, {
        a2_code: "NP",
        name_en: "Nepal",
        name_cn: "尼泊尔"
    }, {a2_code: "NR", name_en: "Nauru", name_cn: "瑙鲁"}, {
        a2_code: "NU",
        name_en: "Niue",
        name_cn: "纽埃"
    }, {a2_code: "NZ", name_en: "New Zealand", name_cn: "新西兰"}, {
        a2_code: "OM",
        name_en: "Oman",
        name_cn: "阿曼"
    }, {a2_code: "PA", name_en: "Panama", name_cn: "巴拿马"}, {
        a2_code: "PE",
        name_en: "Peru",
        name_cn: "秘鲁"
    }, {a2_code: "PF", name_en: "French Polynesia", name_cn: "法属波利尼西亚"}, {
        a2_code: "PG",
        name_en: "Papua New Guinea",
        name_cn: "巴布亚新几内亚"
    }, {a2_code: "PH", name_en: "Philippines (the)", name_cn: "菲律宾"}, {
        a2_code: "PK",
        name_en: "Pakistan",
        name_cn: "巴基斯坦"
    }, {a2_code: "PL", name_en: "Poland", name_cn: "波兰"}, {
        a2_code: "PM",
        name_en: "Saint Pierre and Miquelon",
        name_cn: "圣皮埃尔和密克隆"
    }, {a2_code: "PN", name_en: "Pitcairn", name_cn: "皮特凯恩群岛"}, {
        a2_code: "PR",
        name_en: "Puerto Rico",
        name_cn: "波多黎各"
    }, {a2_code: "PS", name_en: "Palestine, State of", name_cn: "巴勒斯坦"}, {
        a2_code: "PT",
        name_en: "Portugal",
        name_cn: "葡萄牙"
    }, {a2_code: "PW", name_en: "Palau", name_cn: "帕劳"}, {
        a2_code: "PY",
        name_en: "Paraguay",
        name_cn: "巴拉圭"
    }, {a2_code: "QA", name_en: "Qatar", name_cn: "卡塔尔"}, {
        a2_code: "RE",
        name_en: "Réunion",
        name_cn: "留尼汪"
    }, {a2_code: "RO", name_en: "Romania", name_cn: "罗马尼亚"}, {
        a2_code: "RS",
        name_en: "Serbia",
        name_cn: "塞尔维亚"
    }, {a2_code: "RU", name_en: "Russian Federation (the)", name_cn: "俄罗斯"}, {
        a2_code: "RW",
        name_en: "Rwanda",
        name_cn: "卢旺达"
    }, {a2_code: "SA", name_en: "Saudi Arabia", name_cn: "沙特阿拉伯"}, {
        a2_code: "SB",
        name_en: "Solomon Islands (the)",
        name_cn: "所罗门群岛"
    }, {a2_code: "SC", name_en: "Seychelles", name_cn: "塞舌尔"}, {
        a2_code: "SD",
        name_en: "Sudan (the)",
        name_cn: "苏丹"
    }, {a2_code: "SE", name_en: "Sweden", name_cn: "瑞典"}, {
        a2_code: "SG",
        name_en: "Singapore",
        name_cn: "新加坡"
    }, {a2_code: "SH", name_en: "Saint Helena, Ascension and Tristan da Cunha", name_cn: "圣赫勒拿"}, {
        a2_code: "SI",
        name_en: "Slovenia",
        name_cn: "斯洛文尼亚"
    }, {a2_code: "SJ", name_en: "Svalbard and Jan Mayen", name_cn: "斯瓦尔巴群岛和扬马延岛"}, {
        a2_code: "SK",
        name_en: "Slovakia",
        name_cn: "斯洛伐克"
    }, {a2_code: "SL", name_en: "Sierra Leone", name_cn: "塞拉利昂"}, {
        a2_code: "SM",
        name_en: "San Marino",
        name_cn: "圣马力诺"
    }, {a2_code: "SN", name_en: "Senegal", name_cn: "塞内加尔"}, {
        a2_code: "SO",
        name_en: "Somalia",
        name_cn: "索马里"
    }, {a2_code: "SR", name_en: "Suriname", name_cn: "苏里南"}, {
        a2_code: "SS",
        name_en: "South Sudan",
        name_cn: "南苏丹"
    }, {a2_code: "ST", name_en: "Sao Tome and Principe", name_cn: "圣多美和普林西比"}, {
        a2_code: "SV",
        name_en: "El Salvador",
        name_cn: "萨尔瓦多"
    }, {a2_code: "SX", name_en: "Sint Maarten (Dutch part)", name_cn: "荷属圣马丁"}, {
        a2_code: "SY",
        name_en: "Syrian Arab Republic (the)",
        name_cn: "叙利亚"
    }, {a2_code: "SZ", name_en: "Swaziland", name_cn: "斯威士兰"}, {
        a2_code: "TC",
        name_en: "Turks and Caicos Islands (the)",
        name_cn: "特克斯和凯科斯群岛"
    }, {a2_code: "TD", name_en: "Chad", name_cn: "乍得"}, {
        a2_code: "TF",
        name_en: "French Southern Territories (the)",
        name_cn: "法属南部领地"
    }, {a2_code: "TG", name_en: "Togo", name_cn: "多哥"}, {
        a2_code: "TH",
        name_en: "Thailand",
        name_cn: "泰国"
    }, {a2_code: "TJ", name_en: "Tajikistan", name_cn: "塔吉克斯坦"}, {
        a2_code: "TK",
        name_en: "Tokelau",
        name_cn: "托克劳"
    }, {a2_code: "TL", name_en: "Timor-Leste", name_cn: "东帝汶"}, {
        a2_code: "TM",
        name_en: "Turkmenistan",
        name_cn: "土库曼斯坦"
    }, {a2_code: "TN", name_en: "Tunisia", name_cn: "突尼斯"}, {
        a2_code: "TO",
        name_en: "Tonga",
        name_cn: "汤加"
    }, {a2_code: "TR", name_en: "Turkey", name_cn: "土耳其"}, {
        a2_code: "TT",
        name_en: "Trinidad and Tobago",
        name_cn: "特立尼达和多巴哥"
    }, {a2_code: "TV", name_en: "Tuvalu", name_cn: "图瓦卢"}, {
        a2_code: "TZ",
        name_en: "Tanzania, United Republic of",
        name_cn: "坦桑尼亚"
    }, {a2_code: "UA", name_en: "Ukraine", name_cn: "乌克兰"}, {
        a2_code: "UG",
        name_en: "Uganda",
        name_cn: "乌干达"
    }, {a2_code: "UM", name_en: "United States Minor Outlying Islands (the)", name_cn: "美国本土外小岛屿"}, {
        a2_code: "US",
        name_en: "United States (the)",
        name_cn: "美国"
    }, {a2_code: "UY", name_en: "Uruguay", name_cn: "乌拉圭"}, {
        a2_code: "UZ",
        name_en: "Uzbekistan",
        name_cn: "乌兹别克斯坦"
    }, {a2_code: "VA", name_en: "Holy See (the) [Vatican City State]", name_cn: "梵蒂冈"}, {
        a2_code: "VC",
        name_en: "Saint Vincent and the Grenadines",
        name_cn: "圣文森特和格林纳丁斯"
    }, {a2_code: "VE", name_en: "Venezuela, Bolivarian Republic of?", name_cn: "委内瑞拉"}, {
        a2_code: "VG",
        name_en: "Virgin Islands (British)",
        name_cn: "英属维尔京群岛"
    }, {a2_code: "VI", name_en: "Virgin Islands (U.S.)", name_cn: "美属维尔京群岛"}, {
        a2_code: "VN",
        name_en: "Viet Nam",
        name_cn: "越南"
    }, {a2_code: "VU", name_en: "Vanuatu", name_cn: "瓦努阿图"}, {
        a2_code: "WF",
        name_en: "Wallis and Futuna",
        name_cn: "瓦利斯和富图纳"
    }, {a2_code: "WS", name_en: "Samoa", name_cn: "萨摩亚"}, {
        a2_code: "YE",
        name_en: "Yemen",
        name_cn: "也门"
    }, {a2_code: "YT", name_en: "Mayotte", name_cn: "马约特"}, {
        a2_code: "ZA",
        name_en: "South Africa",
        name_cn: "南非"
    }, {a2_code: "ZM", name_en: "Zambia", name_cn: "赞比亚"}, {
        a2_code: "ZW",
        name_en: "Zimbabwe",
        name_cn: "津巴布韦"
    }, {a2_code: "EU", name_en: "European Union", name_cn: "欧盟"}, {
        a2_code: "ZZ",
        name_en: "UnKown",
        name_cn: "未知"
    }], i = typeof a === "function" ? a.call(t, n, t, e) : a, i !== undefined && (e.exports = i))
}, function (e, t, n) {
    var a, i;
    !(a = [{a2_code: "BJ", name_en: "Beijing", name_cn: "北京市", code: "110000", city: []}, {
        a2_code: "TJ",
        name_en: "Tianjin",
        name_cn: "天津市",
        code: "120000",
        city: []
    }, {
        a2_code: "HE",
        name_en: "Hebei",
        name_cn: "河北省",
        code: "130000",
        city: [{name_en: "ShijiazhuangShi", name_cn: "石家庄市", code: "130100"}, {
            name_en: "TangshanShi",
            name_cn: "唐山市",
            code: "130200"
        }, {name_en: "QinhuangdaoShi", name_cn: "秦皇岛市", code: "130300"}, {
            name_en: "HandanShi",
            name_cn: "邯郸市",
            code: "130400"
        }, {name_en: "XingtaiShi", name_cn: "邢台市", code: "130500"}, {
            name_en: "BaodingShi",
            name_cn: "保定市",
            code: "130600"
        }, {name_en: "ZhangjiakouShi", name_cn: "张家口市", code: "130700"}, {
            name_en: "ChengdeShi",
            name_cn: "承德市",
            code: "130800"
        }, {name_en: "CangzhouShi", name_cn: "沧州市", code: "130900"}, {
            name_en: "LangfangShi",
            name_cn: "廊坊市",
            code: "131000"
        }, {name_en: "HengshuiShi", name_cn: "衡水市", code: "131100"}]
    }, {
        a2_code: "SX",
        name_en: "Shanxi",
        name_cn: "山西省",
        code: "140000",
        city: [{name_en: "TaiyuanShi", name_cn: "太原市", code: "140100"}, {
            name_en: "DatongShi",
            name_cn: "大同市",
            code: "140200"
        }, {name_en: "YangquanShi", name_cn: "阳泉市", code: "140300"}, {
            name_en: "ChangzhiShi",
            name_cn: "长治市",
            code: "140400"
        }, {name_en: "JinchengShi", name_cn: "晋城市", code: "140500"}, {
            name_en: "ShuozhouShi",
            name_cn: "朔州市",
            code: "140600"
        }, {name_en: "JinZhongShi", name_cn: "晋中市", code: "140700"}, {
            name_en: "YunChengShi",
            name_cn: "运城市",
            code: "140800"
        }, {name_en: "XinZhouShi", name_cn: "忻州市", code: "140900"}, {
            name_en: "LinFenShi",
            name_cn: "临汾市",
            code: "141000"
        }, {name_en: "Lu:LiangShi", name_cn: "吕梁市", code: "141100"}]
    }, {
        a2_code: "NM",
        name_en: "Nei Mongol (mn)",
        name_cn: "内蒙古自治区",
        code: "150000",
        city: [{name_en: "HohhotShi", name_cn: "呼和浩特市", code: "150100"}, {
            name_en: "BaotouShi",
            name_cn: "包头市",
            code: "150200"
        }, {name_en: "WuhaiShi", name_cn: "乌海市", code: "150300"}, {
            name_en: "Chifeng(Ulanhad)Shi",
            name_cn: "赤峰市",
            code: "150400"
        }, {name_en: "TongLiaoShi", name_cn: "通辽市", code: "150500"}, {
            name_en: "EErDuoSiShi",
            name_cn: "鄂尔多斯市",
            code: "150600"
        }, {name_en: "HuLunBeiErShi", name_cn: "呼伦贝尔市", code: "150700"}, {
            name_en: "BaYanNaoErShi",
            name_cn: "巴彦淖尔市",
            code: "150800"
        }, {name_en: "WuLanChaBuShi", name_cn: "乌兰察布市", code: "150900"}, {
            name_en: "HingganMeng",
            name_cn: "兴安盟",
            code: "152200"
        }, {name_en: "XilinGolMeng", name_cn: "锡林郭勒盟", code: "152500"}, {
            name_en: "AlxaMeng",
            name_cn: "阿拉善盟",
            code: "152900"
        }]
    }, {
        a2_code: "LN",
        name_en: "Liaoning",
        name_cn: "辽宁省",
        code: "210000",
        city: [{name_en: "ShenyangShi", name_cn: "沈阳市", code: "210100"}, {
            name_en: "DalianShi",
            name_cn: "大连市",
            code: "210200"
        }, {name_en: "AnShanShi", name_cn: "鞍山市", code: "210300"}, {
            name_en: "FushunShi",
            name_cn: "抚顺市",
            code: "210400"
        }, {name_en: "BenxiShi", name_cn: "本溪市", code: "210500"}, {
            name_en: "DandongShi",
            name_cn: "丹东市",
            code: "210600"
        }, {name_en: "JinzhouShi", name_cn: "锦州市", code: "210700"}, {
            name_en: "YingkouShi",
            name_cn: "营口市",
            code: "210800"
        }, {name_en: "FuxinShi", name_cn: "阜新市", code: "210900"}, {
            name_en: "LiaoyangShi",
            name_cn: "辽阳市",
            code: "211000"
        }, {name_en: "PanjinShi", name_cn: "盘锦市", code: "211100"}, {
            name_en: "TielingShi",
            name_cn: "铁岭市",
            code: "211200"
        }, {name_en: "ChaoyangShi", name_cn: "朝阳市", code: "211300"}, {
            name_en: "HuludaoShi",
            name_cn: "葫芦岛市",
            code: "211400"
        }]
    }, {
        a2_code: "JL",
        name_en: "Jilin",
        name_cn: "吉林省",
        code: "220000",
        city: [{name_en: "ChangchunShi", name_cn: "长春市", code: "220100"}, {
            name_en: "JilinShi",
            name_cn: "吉林市",
            code: "220200"
        }, {name_en: "SipingShi", name_cn: "四平市", code: "220300"}, {
            name_en: "LiaoyuanShi",
            name_cn: "辽源市",
            code: "220400"
        }, {name_en: "TonghuaShi", name_cn: "通化市", code: "220500"}, {
            name_en: "BaishanShi",
            name_cn: "白山市",
            code: "220600"
        }, {name_en: "SongyuanShi", name_cn: "松原市", code: "220700"}, {
            name_en: "BaichengShi",
            name_cn: "白城市",
            code: "220800"
        }, {name_en: "YanbianChosenzuZizhizhou", name_cn: "延边朝鲜族自治州", code: "222400"}]
    }, {
        a2_code: "HL",
        name_en: "Heilongjiang",
        name_cn: "黑龙江省",
        code: "230000",
        city: [{name_en: "HarbinShi", name_cn: "哈尔滨市", code: "230100"}, {
            name_en: "QiqiharShi",
            name_cn: "齐齐哈尔市",
            code: "230200"
        }, {name_en: "JixiShi", name_cn: "鸡西市", code: "230300"}, {
            name_en: "HegangShi",
            name_cn: "鹤岗市",
            code: "230400"
        }, {name_en: "ShuangyashanShi", name_cn: "双鸭山市", code: "230500"}, {
            name_en: "DaqingShi",
            name_cn: "大庆市",
            code: "230600"
        }, {name_en: "YichunShi", name_cn: "伊春市", code: "230700"}, {
            name_en: "JiamusiShi",
            name_cn: "佳木斯市",
            code: "230800"
        }, {name_en: "QitaiheShi", name_cn: "七台河市", code: "230900"}, {
            name_en: "MudanjiangShi",
            name_cn: "牡丹江市",
            code: "231000"
        }, {name_en: "HeiheShi", name_cn: "黑河市", code: "231100"}, {
            name_en: "SuiHuaShi",
            name_cn: "绥化市",
            code: "231200"
        }, {name_en: "DaHingganLingDiqu", name_cn: "大兴安岭地区", code: "232700"}]
    }, {a2_code: "SH", name_en: "Shanghai", name_cn: "上海市", code: "310000", city: []}, {
        a2_code: "JS",
        name_en: "Jiangsu",
        name_cn: "江苏省",
        code: "320000",
        city: [{name_en: "NanjingShi", name_cn: "南京市", code: "320100"}, {
            name_en: "WuxiShi",
            name_cn: "无锡市",
            code: "320200"
        }, {name_en: "XuzhouShi", name_cn: "徐州市", code: "320300"}, {
            name_en: "ChangzhouShi",
            name_cn: "常州市",
            code: "320400"
        }, {name_en: "SuzhouShi", name_cn: "苏州市", code: "320500"}, {
            name_en: "NantongShi",
            name_cn: "南通市",
            code: "320600"
        }, {name_en: "LianyungangShi", name_cn: "连云港市", code: "320700"}, {
            name_en: "HuaiyinShi",
            name_cn: "淮安市",
            code: "320800"
        }, {name_en: "YanchengShi", name_cn: "盐城市", code: "320900"}, {
            name_en: "YangzhouShi",
            name_cn: "扬州市",
            code: "321000"
        }, {name_en: "ZhenjiangShi", name_cn: "镇江市", code: "321100"}, {
            name_en: "TaizhouShi",
            name_cn: "泰州市",
            code: "321200"
        }, {name_en: "SuqianShi", name_cn: "宿迁市", code: "321300"}]
    }, {
        a2_code: "ZJ",
        name_en: "Zhejiang",
        name_cn: "浙江省",
        code: "330000",
        city: [{name_en: "HangzhouShi", name_cn: "杭州市", code: "330100"}, {
            name_en: "NingboShi",
            name_cn: "宁波市",
            code: "330200"
        }, {name_en: "WenzhouShi", name_cn: "温州市", code: "330300"}, {
            name_en: "JiaxingShi",
            name_cn: "嘉兴市",
            code: "330400"
        }, {name_en: "HuzhouShi", name_cn: "湖州市", code: "330500"}, {
            name_en: "ShaoxingShi",
            name_cn: "绍兴市",
            code: "330600"
        }, {name_en: "JinhuaShi", name_cn: "金华市", code: "330700"}, {
            name_en: "QuzhouShi",
            name_cn: "衢州市",
            code: "330800"
        }, {name_en: "ZhoushanShi", name_cn: "舟山市", code: "330900"}, {
            name_en: "TaizhouShi",
            name_cn: "台州市",
            code: "331000"
        }, {name_en: "LiShuiShi", name_cn: "丽水市", code: "331100"}]
    }, {
        a2_code: "AH",
        name_en: "Anhui",
        name_cn: "安徽省",
        code: "340000",
        city: [{name_en: "HefeiShi", name_cn: "合肥市", code: "340100"}, {
            name_en: "WuhuShi",
            name_cn: "芜湖市",
            code: "340200"
        }, {name_en: "BengbuShi", name_cn: "蚌埠市", code: "340300"}, {
            name_en: "HuainanShi",
            name_cn: "淮南市",
            code: "340400"
        }, {name_en: '"Ma,anshanShi"', name_cn: "马鞍山市", code: "340500"}, {
            name_en: "HuaibeiShi",
            name_cn: "淮北市",
            code: "340600"
        }, {name_en: "TonglingShi", name_cn: "铜陵市", code: "340700"}, {
            name_en: "AnqingShi",
            name_cn: "安庆市",
            code: "340800"
        }, {name_en: "HuangshanShi", name_cn: "黄山市", code: "341000"}, {
            name_en: "ChuzhouShi",
            name_cn: "滁州市",
            code: "341100"
        }, {name_en: "FuyangShi", name_cn: "阜阳市", code: "341200"}, {
            name_en: "SuzhouShi",
            name_cn: "宿州市",
            code: "341300"
        }, {name_en: "LiuAnShi", name_cn: "六安市", code: "341500"}, {
            name_en: "BoZhouShi",
            name_cn: "亳州市",
            code: "341600"
        }, {name_en: "ChiZhouShi", name_cn: "池州市", code: "341700"}, {
            name_en: "XuanChengShi",
            name_cn: "宣城市",
            code: "341800"
        }]
    }, {
        a2_code: "FJ",
        name_en: "Fujian",
        name_cn: "福建省",
        code: "350000",
        city: [{name_en: "FuzhouShi", name_cn: "福州市", code: "350100"}, {
            name_en: "XiamenShi",
            name_cn: "厦门市",
            code: "350200"
        }, {name_en: "PutianShi", name_cn: "莆田市", code: "350300"}, {
            name_en: "SanmingShi",
            name_cn: "三明市",
            code: "350400"
        }, {name_en: "QuanzhouShi", name_cn: "泉州市", code: "350500"}, {
            name_en: "ZhangzhouShi",
            name_cn: "漳州市",
            code: "350600"
        }, {name_en: "NanpingShi", name_cn: "南平市", code: "350700"}, {
            name_en: "LongyanShi",
            name_cn: "龙岩市",
            code: "350800"
        }, {name_en: "NingDeShi", name_cn: "宁德市", code: "350900"}]
    }, {
        a2_code: "JX",
        name_en: "Jiangxi",
        name_cn: "江西省",
        code: "360000",
        city: [{name_en: "NanchangShi", name_cn: "南昌市", code: "360100"}, {
            name_en: "JingdezhenShi",
            name_cn: "景德镇市",
            code: "360200"
        }, {name_en: "PingxiangShi", name_cn: "萍乡市", code: "360300"}, {
            name_en: "JiujiangShi",
            name_cn: "九江市",
            code: "360400"
        }, {name_en: "XinyuShi", name_cn: "新余市", code: "360500"}, {
            name_en: "YingTanShi",
            name_cn: "鹰潭市",
            code: "360600"
        }, {name_en: "GanzhouShi", name_cn: "赣州市", code: "360700"}, {
            name_en: "JiAnShi",
            name_cn: "吉安市",
            code: "360800"
        }, {name_en: "YiChunShi", name_cn: "宜春市", code: "360900"}, {
            name_en: "FuZhouShi",
            name_cn: "抚州市",
            code: "361000"
        }, {name_en: "ShangRaoShi", name_cn: "上饶市", code: "361100"}]
    }, {
        a2_code: "SD",
        name_en: "Shandong",
        name_cn: "山东省",
        code: "370000",
        city: [{name_en: "JinanShi", name_cn: "济南市", code: "370100"}, {
            name_en: "QingdaoShi",
            name_cn: "青岛市",
            code: "370200"
        }, {name_en: "ZiboShi", name_cn: "淄博市", code: "370300"}, {
            name_en: "ZaozhuangShi",
            name_cn: "枣庄市",
            code: "370400"
        }, {name_en: "DongyingShi", name_cn: "东营市", code: "370500"}, {
            name_en: "YantaiShi",
            name_cn: "烟台市",
            code: "370600"
        }, {name_en: "WeifangShi", name_cn: "潍坊市", code: "370700"}, {
            name_en: "JiningShi",
            name_cn: "济宁市",
            code: "370800"
        }, {name_en: '"Tai,anShi"', name_cn: "泰安市", code: "370900"}, {
            name_en: "WeihaiShi",
            name_cn: "威海市",
            code: "371000"
        }, {name_en: "RizhaoShi", name_cn: "日照市", code: "371100"}, {
            name_en: "LaiwuShi",
            name_cn: "莱芜市",
            code: "371200"
        }, {name_en: "LinyiShi", name_cn: "临沂市", code: "371300"}, {
            name_en: "DezhouShi",
            name_cn: "德州市",
            code: "371400"
        }, {name_en: "LiaochengShi", name_cn: "聊城市", code: "371500"}, {
            name_en: "BinZhouShi",
            name_cn: "滨州市",
            code: "371600"
        }, {name_en: "HeZeShi", name_cn: "菏泽市", code: "371700"}]
    }, {
        a2_code: "HA",
        name_en: "Henan",
        name_cn: "河南省",
        code: "410000",
        city: [{name_en: "ZhengzhouShi", name_cn: "郑州市", code: "410100"}, {
            name_en: "KaifengShi",
            name_cn: "开封市",
            code: "410200"
        }, {name_en: "LuoyangShi", name_cn: "洛阳市", code: "410300"}, {
            name_en: "PingdingshanShi",
            name_cn: "平顶山市",
            code: "410400"
        }, {name_en: "AnyangShi", name_cn: "安阳市", code: "410500"}, {
            name_en: "HebiShi",
            name_cn: "鹤壁市",
            code: "410600"
        }, {name_en: "XinxiangShi", name_cn: "新乡市", code: "410700"}, {
            name_en: "JiaozuoShi",
            name_cn: "焦作市",
            code: "410800"
        }, {name_en: "PuyangShi", name_cn: "濮阳市", code: "410900"}, {
            name_en: "XuchangShi",
            name_cn: "许昌市",
            code: "411000"
        }, {name_en: "LuoheShi", name_cn: "漯河市", code: "411100"}, {
            name_en: "SanmenxiaShi",
            name_cn: "三门峡市",
            code: "411200"
        }, {name_en: "NanyangShi", name_cn: "南阳市", code: "411300"}, {
            name_en: "ShangqiuShi",
            name_cn: "商丘市",
            code: "411400"
        }, {name_en: "XinyangShi", name_cn: "信阳市", code: "411500"}, {
            name_en: "ZhouKouShi",
            name_cn: "周口市",
            code: "411600"
        }, {name_en: "ZhuMaDianShi", name_cn: "驻马店市", code: "411700"}, {
            name_en: "ShengZhiXia",
            name_cn: "省直辖",
            code: "419000"
        }]
    }, {
        a2_code: "HB",
        name_en: "Hubei",
        name_cn: "湖北省",
        code: "420000",
        city: [{name_en: "WuhanShi", name_cn: "武汉市", code: "420100"}, {
            name_en: "HuangshiShi",
            name_cn: "黄石市",
            code: "420200"
        }, {name_en: "ShiyanShi", name_cn: "十堰市", code: "420300"}, {
            name_en: "YichangShi",
            name_cn: "宜昌市",
            code: "420500"
        }, {name_en: "XiangfanShi", name_cn: "襄阳市", code: "420600"}, {
            name_en: "EzhouShi",
            name_cn: "鄂州市",
            code: "420700"
        }, {name_en: "JingmenShi", name_cn: "荆门市", code: "420800"}, {
            name_en: "XiaoganShi",
            name_cn: "孝感市",
            code: "420900"
        }, {name_en: "JingzhouShi", name_cn: "荆州市", code: "421000"}, {
            name_en: "HuanggangShi",
            name_cn: "黄冈市",
            code: "421100"
        }, {name_en: "XianningXian", name_cn: "咸宁市", code: "421200"}, {
            name_en: "SuiZhouShi",
            name_cn: "随州市",
            code: "421300"
        }, {
            name_en: "EnshiTujiazuMiaozuZizhizhou",
            name_cn: "恩施土家族苗族自治州",
            code: "422800"
        }, {name_en: "ShengZhixiaXianjiXingzhengdanwei", name_cn: "省直辖", code: "429000"}]
    }, {
        a2_code: "HN",
        name_en: "Hunan",
        name_cn: "湖南省",
        code: "430000",
        city: [{name_en: "ChangshaShi", name_cn: "长沙市", code: "430100"}, {
            name_en: "ZhuzhouShi",
            name_cn: "株洲市",
            code: "430200"
        }, {name_en: "XiangtanShi", name_cn: "湘潭市", code: "430300"}, {
            name_en: "HengyangShi",
            name_cn: "衡阳市",
            code: "430400"
        }, {name_en: "ShaoyangShi", name_cn: "邵阳市", code: "430500"}, {
            name_en: "YueyangShi",
            name_cn: "岳阳市",
            code: "430600"
        }, {name_en: "ChangdeShi", name_cn: "常德市", code: "430700"}, {
            name_en: "ZhangjiajieShi",
            name_cn: "张家界市",
            code: "430800"
        }, {name_en: "YiyangShi", name_cn: "益阳市", code: "430900"}, {
            name_en: "ChenzhouShi",
            name_cn: "郴州市",
            code: "431000"
        }, {name_en: "YongzhouShi", name_cn: "永州市", code: "431100"}, {
            name_en: "HuaihuaShi",
            name_cn: "怀化市",
            code: "431200"
        }, {name_en: "LouDiShi", name_cn: "娄底市", code: "431300"}, {
            name_en: "XiangxiTujiazuMiaozuZizhizhou",
            name_cn: "湘西土家族苗族自治州",
            code: "433100"
        }]
    }, {
        a2_code: "GD",
        name_en: "Guangdong",
        name_cn: "广东省",
        code: "440000",
        city: [{name_en: "GuangzhouShi", name_cn: "广州市", code: "440100"}, {
            name_en: "ShaoguanShi",
            name_cn: "韶关市",
            code: "440200"
        }, {name_en: "ShenzhenShi", name_cn: "深圳市", code: "440300"}, {
            name_en: "ZhuhaiShi",
            name_cn: "珠海市",
            code: "440400"
        }, {name_en: "ShantouShi", name_cn: "汕头市", code: "440500"}, {
            name_en: "FoshanShi",
            name_cn: "佛山市",
            code: "440600"
        }, {name_en: "JiangmenShi", name_cn: "江门市", code: "440700"}, {
            name_en: "ZhanjiangShi",
            name_cn: "湛江市",
            code: "440800"
        }, {name_en: "MaomingShi", name_cn: "茂名市", code: "440900"}, {
            name_en: "ZhaoqingShi",
            name_cn: "肇庆市",
            code: "441200"
        }, {name_en: "HuizhouShi", name_cn: "惠州市", code: "441300"}, {
            name_en: "MeizhouShi",
            name_cn: "梅州市",
            code: "441400"
        }, {name_en: "ShanweiShi", name_cn: "汕尾市", code: "441500"}, {
            name_en: "HeyuanShi",
            name_cn: "河源市",
            code: "441600"
        }, {name_en: "YangjiangShi", name_cn: "阳江市", code: "441700"}, {
            name_en: "QingyuanShi",
            name_cn: "清远市",
            code: "441800"
        }, {name_en: "DongguanShi", name_cn: "东莞市", code: "441900"}, {
            name_en: "ZhongshanShi",
            name_cn: "中山市",
            code: "442000"
        }, {name_en: "ChaozhouShi", name_cn: "潮州市", code: "445100"}, {
            name_en: "JieyangShi",
            name_cn: "揭阳市",
            code: "445200"
        }, {name_en: "YunfuShi", name_cn: "云浮市", code: "445300"}]
    }, {
        a2_code: "GX",
        name_en: "Guangxi",
        name_cn: "广西壮族自治区",
        code: "450000",
        city: [{name_en: "NanningShi", name_cn: "南宁市", code: "450100"}, {
            name_en: "LiuzhouShi",
            name_cn: "柳州市",
            code: "450200"
        }, {name_en: "GuilinShi", name_cn: "桂林市", code: "450300"}, {
            name_en: "WuzhouShi",
            name_cn: "梧州市",
            code: "450400"
        }, {name_en: "BeihaiShi", name_cn: "北海市", code: "450500"}, {
            name_en: "FangchenggangShi",
            name_cn: "防城港市",
            code: "450600"
        }, {name_en: "QinzhouShi", name_cn: "钦州市", code: "450700"}, {
            name_en: "GuigangShi",
            name_cn: "贵港市",
            code: "450800"
        }, {name_en: "YulinShi", name_cn: "玉林市", code: "450900"}, {
            name_en: "BaiSeShi",
            name_cn: "百色市",
            code: "451000"
        }, {
            name_en: "HeZhouShi", name_cn: "贺州市", code: "451100"
        }, {name_en: "HeChiShi", name_cn: "河池市", code: "451200"}, {
            name_en: "LaiBinShi",
            name_cn: "来宾市",
            code: "451300"
        }, {name_en: "ChongZuoShi", name_cn: "崇左市", code: "451400"}]
    }, {
        a2_code: "HI",
        name_en: "Hainan",
        name_cn: "海南省",
        code: "460000",
        city: [{name_en: "HaikouShi", name_cn: "海口市", code: "460100"}, {
            name_en: "SanyaShi",
            name_cn: "三亚市",
            code: "460200"
        }, {name_en: "SanShaShi", name_cn: "三沙市", code: "460300"}, {
            name_en: "ShengZhiXia",
            name_cn: "省直辖",
            code: "469000"
        }]
    }, {a2_code: "CQ", name_en: "Chongqing", name_cn: "重庆市", code: "500000", city: []}, {
        a2_code: "SC",
        name_en: "Sichuan",
        name_cn: "四川省",
        code: "510000",
        city: [{name_en: "ChengduShi", name_cn: "成都市", code: "510100"}, {
            name_en: "ZigongShi",
            name_cn: "自贡市",
            code: "510300"
        }, {name_en: "PanzhihuaShi", name_cn: "攀枝花市", code: "510400"}, {
            name_en: "LuzhouShi",
            name_cn: "泸州市",
            code: "510500"
        }, {name_en: "DeyangShi", name_cn: "德阳市", code: "510600"}, {
            name_en: "MianyangShi",
            name_cn: "绵阳市",
            code: "510700"
        }, {name_en: "GuangyuanShi", name_cn: "广元市", code: "510800"}, {
            name_en: "SuiningShi",
            name_cn: "遂宁市",
            code: "510900"
        }, {name_en: "NeijiangShi", name_cn: "内江市", code: "511000"}, {
            name_en: "LeshanShi",
            name_cn: "乐山市",
            code: "511100"
        }, {name_en: "NanchongShi", name_cn: "南充市", code: "511300"}, {
            name_en: "MeiShanShi",
            name_cn: "眉山市",
            code: "511400"
        }, {name_en: "YibinShi", name_cn: "宜宾市", code: "511500"}, {
            name_en: '"Guang,anShi"',
            name_cn: "广安市",
            code: "511600"
        }, {name_en: "DaZhouShi", name_cn: "达州市", code: "511700"}, {
            name_en: "YaAnShi",
            name_cn: "雅安市",
            code: "511800"
        }, {name_en: "BaZhongShi", name_cn: "巴中市", code: "511900"}, {
            name_en: "ZiYangShi",
            name_cn: "资阳市",
            code: "512000"
        }, {
            name_en: "Aba(Ngawa)ZangzuQiangzuZizhizhou",
            name_cn: "阿坝藏族羌族自治州",
            code: "513200"
        }, {name_en: "GarzeZangzuZizhizhou", name_cn: "甘孜藏族自治州", code: "513300"}, {
            name_en: "LiangshanYizuZizhizhou",
            name_cn: "凉山彝族自治州",
            code: "513400"
        }]
    }, {
        a2_code: "GZ",
        name_en: "Guizhou",
        name_cn: "贵州省",
        code: "520000",
        city: [{name_en: "GuiyangShi", name_cn: "贵阳市", code: "520100"}, {
            name_en: "LiupanshuiShi",
            name_cn: "六盘水市",
            code: "520200"
        }, {name_en: "ZunyiShi", name_cn: "遵义市", code: "520300"}, {
            name_en: "AnShunShi",
            name_cn: "安顺市",
            code: "520400"
        }, {name_en: "TongrenDiqu", name_cn: "铜仁市", code: "522200"}, {
            name_en: "QianxinanBuyeizuZizhizhou",
            name_cn: "黔西南布依族苗族自治州",
            code: "522300"
        }, {name_en: "BijieDiqu", name_cn: "毕节市", code: "522400"}, {
            name_en: "QiandongnanMiaozuDongzuZizhizhou",
            name_cn: "黔东南苗族侗族自治州",
            code: "522600"
        }, {name_en: "QiannanBuyeizuMiaozuZizhizhou", name_cn: "黔南布依族苗族自治州", code: "522700"}]
    }, {
        a2_code: "YN",
        name_en: "Yunnan",
        name_cn: "云南省",
        code: "530000",
        city: [{name_en: "KunmingShi", name_cn: "昆明市", code: "530100"}, {
            name_en: "QujingShi",
            name_cn: "曲靖市",
            code: "530300"
        }, {name_en: "YuxiShi", name_cn: "玉溪市", code: "530400"}, {
            name_en: "BaoShanShi",
            name_cn: "保山市",
            code: "530500"
        }, {name_en: "ZhaoTongShi", name_cn: "昭通市", code: "530600"}, {
            name_en: "LiJiangShi",
            name_cn: "丽江市",
            code: "530700"
        }, {name_en: "PuErShi", name_cn: "普洱市", code: "530800"}, {
            name_en: "LinCangShi",
            name_cn: "临沧市",
            code: "530900"
        }, {
            name_en: "ChuxiongYizuZizhizhou",
            name_cn: "楚雄彝族自治州",
            code: "532300"
        }, {
            name_en: "HongheHanizuYizuZizhizhou",
            name_cn: "红河哈尼族彝族自治州",
            code: "532500"
        }, {
            name_en: "WenshanZhuangzuMiaozuZizhizhou",
            name_cn: "文山壮族苗族自治州",
            code: "532600"
        }, {
            name_en: "XishuangbannaDaizuZizhizhou",
            name_cn: "西双版纳傣族自治州",
            code: "532800"
        }, {
            name_en: "DaliBaizuZizhizhou",
            name_cn: "大理白族自治州",
            code: "532900"
        }, {
            name_en: "DehongDaizuJingpozuZizhizhou",
            name_cn: "德宏傣族景颇族自治州",
            code: "533100"
        }, {name_en: "NujiangLisuzuZizhizhou", name_cn: "怒江傈僳族自治州", code: "533300"}, {
            name_en: "DeqenZangzuZizhizhou",
            name_cn: "迪庆藏族自治州",
            code: "533400"
        }]
    }, {
        a2_code: "XZ",
        name_en: "Xizang",
        name_cn: "西藏自治区",
        code: "540000",
        city: [{name_en: "LhasaShi", name_cn: "拉萨市", code: "540100"}, {
            name_en: "QamdoDiqu",
            name_cn: "昌都地区",
            code: "542100"
        }, {name_en: "ShannanDiqu", name_cn: "山南地区", code: "542200"}, {
            name_en: "XigazeDiqu",
            name_cn: "日喀则地区",
            code: "542300"
        }, {name_en: "NagquDiqu", name_cn: "那曲地区", code: "542400"}, {
            name_en: "NgariDiqu",
            name_cn: "阿里地区",
            code: "542500"
        }, {name_en: "NyingchiDiqu", name_cn: "林芝地区", code: "542600"}]
    }, {
        a2_code: "SN",
        name_en: "Shaanxi",
        name_cn: "陕西省",
        code: "610000",
        city: [{name_en: '"Xi,anShi"', name_cn: "西安市", code: "610100"}, {
            name_en: "TongchuanShi",
            name_cn: "铜川市",
            code: "610200"
        }, {name_en: "BaojiShi", name_cn: "宝鸡市", code: "610300"}, {
            name_en: "XianyangShi",
            name_cn: "咸阳市",
            code: "610400"
        }, {name_en: "WeinanShi", name_cn: "渭南市", code: "610500"}, {
            name_en: '"Yan,anShi"',
            name_cn: "延安市",
            code: "610600"
        }, {name_en: "HanzhongShi", name_cn: "汉中市", code: "610700"}, {
            name_en: "YuLinShi",
            name_cn: "榆林市",
            code: "610800"
        }, {name_en: "AnKangShi", name_cn: "安康市", code: "610900"}, {
            name_en: "ShangLuoShi",
            name_cn: "商洛市",
            code: "611000"
        }]
    }, {
        a2_code: "GS",
        name_en: "Gansu",
        name_cn: "甘肃省",
        code: "620000",
        city: [{name_en: "LanzhouShi", name_cn: "兰州市", code: "620100"}, {
            name_en: "JiayuguanShi",
            name_cn: "嘉峪关市",
            code: "620200"
        }, {name_en: "JinchangShi", name_cn: "金昌市", code: "620300"}, {
            name_en: "BaiyinShi",
            name_cn: "白银市",
            code: "620400"
        }, {name_en: "TianshuiShi", name_cn: "天水市", code: "620500"}, {
            name_en: "WuWeiShi",
            name_cn: "武威市",
            code: "620600"
        }, {name_en: "ZhangYeShi", name_cn: "张掖市", code: "620700"}, {
            name_en: "PingLiangShi",
            name_cn: "平凉市",
            code: "620800"
        }, {name_en: "JiuQuanShi", name_cn: "酒泉市", code: "620900"}, {
            name_en: "QingYangShi",
            name_cn: "庆阳市",
            code: "621000"
        }, {name_en: "DingXiShi", name_cn: "定西市", code: "621100"}, {
            name_en: "LongNanShi",
            name_cn: "陇南市",
            code: "621200"
        }, {name_en: "LinxiaHuizuZizhizhou", name_cn: "临夏回族自治州", code: "622900"}, {
            name_en: "GannanZangzuZizhizhou",
            name_cn: "甘南藏族自治州",
            code: "623000"
        }]
    }, {
        a2_code: "QH",
        name_en: "Qinghai",
        name_cn: "青海省",
        code: "630000",
        city: [{name_en: "XiningShi", name_cn: "西宁市", code: "630100"}, {
            name_en: "HaidongDiqu",
            name_cn: "海东地区",
            code: "632100"
        }, {name_en: "HaibeiZangzuZizhizhou", name_cn: "海北藏族自治州", code: "632200"}, {
            name_en: "HuangnanZangzuZizhizhou",
            name_cn: "黄南藏族自治州",
            code: "632300"
        }, {name_en: "HainanZangzuZizhizhou", name_cn: "海南藏族自治州", code: "632500"}, {
            name_en: "GologZangzuZizhizhou",
            name_cn: "果洛藏族自治州",
            code: "632600"
        }, {
            name_en: "YushuZangzuZizhizhou",
            name_cn: "玉树藏族自治州",
            code: "632700"
        }, {name_en: "HaixiMongolzuZangzuZizhizhou", name_cn: "海西蒙古族藏族自治州", code: "632800"}]
    }, {
        a2_code: "NX",
        name_en: "Ningxia",
        name_cn: "宁夏回族自治区",
        code: "640000",
        city: [{name_en: "YinchuanShi", name_cn: "银川市", code: "640100"}, {
            name_en: "ShizuishanShi",
            name_cn: "石嘴山市",
            code: "640200"
        }, {name_en: "WuzhongShi", name_cn: "吴忠市", code: "640300"}, {
            name_en: "GuYuanShi",
            name_cn: "固原市",
            code: "640400"
        }, {name_en: "ZhongWeiShi", name_cn: "中卫市", code: "640500"}]
    }, {
        a2_code: "XJ",
        name_en: "Xinjiang",
        name_cn: "新疆维吾尔自治区",
        code: "650000",
        city: [{name_en: "UrumqiShi", name_cn: "乌鲁木齐市", code: "650100"}, {
            name_en: "KaramayShi",
            name_cn: "克拉玛依市",
            code: "650200"
        }, {name_en: "TurpanDiqu", name_cn: "吐鲁番地区", code: "652100"}, {
            name_en: "Hami(kumul)Diqu",
            name_cn: "哈密地区",
            code: "652200"
        }, {name_en: "ChangjiHuizuZizhizhou", name_cn: "昌吉回族自治州", code: "652300"}, {
            name_en: "BortalaMongloZizhizhou",
            name_cn: "博尔塔拉蒙古自治州",
            code: "652700"
        }, {name_en: "BayingolinMongolZizhizhou", name_cn: "巴音郭楞蒙古自治州", code: "652800"}, {
            name_en: "AksuDiqu",
            name_cn: "阿克苏地区",
            code: "652900"
        }, {name_en: "KizilsuKirgizZizhizhou", name_cn: "克孜勒苏柯尔克孜自治州", code: "653000"}, {
            name_en: "Kashi(Kaxgar)Diqu",
            name_cn: "喀什地区",
            code: "653100"
        }, {name_en: "HotanDiqu", name_cn: "和田地区", code: "653200"}, {
            name_en: "IliKazakZizhizhou",
            name_cn: "伊犁哈萨克自治州",
            code: "654000"
        }, {name_en: "Tacheng(Qoqek)Diqu", name_cn: "塔城地区", code: "654200"}, {
            name_en: "AltayDiqu",
            name_cn: "阿勒泰地区",
            code: "654300"
        }, {name_en: "ZhixiaXingzhengdanwei", name_cn: "自治区直辖", code: "659000"}]
    }, {
        a2_code: "TW",
        name_en: "Taiwan",
        name_cn: "台湾省",
        code: "710000",
        city: [{name_en: "TaiBeiShi", name_cn: "台北市", code: "710100"}, {
            name_en: "GaoXiongShi",
            name_cn: "高雄市",
            code: "710200"
        }, {name_en: "JiLongShi", name_cn: "基隆市", code: "710300"}, {
            name_en: "TaiZhongShi",
            name_cn: "台中市",
            code: "710400"
        }, {name_en: "TaiNanShi", name_cn: "台南市", code: "710500"}, {
            name_en: "XinZhuShi",
            name_cn: "新竹市",
            code: "710600"
        }, {name_en: "JiaYiShi", name_cn: "嘉义市", code: "710700"}, {
            name_en: "ShengZhiXia",
            name_cn: "省直辖",
            code: "719000"
        }]
    }, {
        a2_code: "HK",
        name_en: "Xianggang (zh), Hong Kong (en)",
        name_cn: "香港特别行政区",
        code: "810000",
        city: []
    }, {
        a2_code: "MC",
        name_en: "Aomen (zh), Macao (en)",
        name_cn: "澳门特别行政区",
        code: "820000",
        city: []
    }], i = typeof a === "function" ? a.call(t, n, t, e) : a, i !== undefined && (e.exports = i))
}, function (e, t, n) {
    var a, i;
    !(a = [{
        module: "视频监控",
        device: ["nvdvr", "EdmWebVideo", "DVR camera", "TRSMAS", "Macrec_DVR", "Aethra_Telecommunications_Operating_System", "ECOR", "MOBOTIX_Camera", "OnSSI_Video_Clients", "Linksys_SPA_Configuration ", "eagleeyescctv", "iDVR", "dasannetworks", "edvr", "AVCON6", "Polycom", "Plesk", "techbridge", "NETSurveillance", "Hikvision"]
    }, {
        module: "路由器",
        device: ["dd-wrt", "锐捷NBR路由器", "mikrotik", "中兴路由器", "h3c路由器", "jcg无线路由器", "Comcast_Business_Gateway", "AirLink_modem"]
    }, {
        module: "分享模块",
        device: ["jiathis", "ujian", "百度分享", "joomla-facebook", "addthis", "hellobar"]
    }, {
        module: "企业管理",
        device: ["易瑞授权访问系统", "EasyTrace(botwave)", "管理易", "亿赛通DLP", "huawei_auth_server", "瑞友天翼_应用虚拟化系统 ", "Vmware_vFabric", "ICEFLOW_VPN", "360企业版", "用友erp-nc", "深信服ssl-vpn", "MVB2000", "天融信VPN", "Array_Networks_VPN", "天融信防火墙", "o2security_vpn", "zabbix", "juniper_vpn", "F5_BIGIP", "CEMIS", "DI-804HV", "CCProxy", "SonicWALL", "梭子鱼设备", "Synology_NAS", "zenoss", "Splunk", "OpenMas", "Ultra_Electronics", "NOALYSS", "Nagios", "ALCASAR", "orocrm", "NetShare_VPN", "Adiscon_LogAnalyzer", "Munin", "opennms", "MRTG", "ganglia", "元年财务软件", "UFIDA_NC", "Webmin", "锐捷应用控制引擎", "Storm", "pmway_E4_crm", "网神VPN", "FortiWeb", "Centreon", "FortiGuard", "PineApp", "ntop", "CDR-Stats", "GenieATM", "Spark_Worker", "Spark_Master", "srun3000计费认证系统", "Kibana", "CISCO_VPN", "UcSTAR", "i@Report", "帕拉迪统一安全管理和综合审计系统", "openEAP", "Dorado", "金龙卡金融化一卡通网站查询子系统", "一采通", "埃森诺网络服务质量检测系统", "Dolibarr", "惠尔顿上网行为管理系统", "ACSNO网络探针", "绿盟下一代防火墙", "Parallels Plesk Panel", "Sharepoint"]
    }, {
        module: "电商系统",
        device: ["Zen Cart", "3DCART", "cart_engine", "Magento", "OpenCart", "ECMall", "PrestaShop", "Bigcommerce", "TinyShop", "hishop", "Maticsoft_Shop_动软商城", "iWebShop", "shopify", "hikashop", "ECShop", "Shop7Z", "同城多用户商城", "iWebShop", "eaststorecreeator", "buscape", "1und1"]
    }, {
        module: "网站防火墙WAF",
        device: ["一启快", "DnP Firewall", "Kerio_WinRoute_Firewall", "Dotdefender", "Citrix_Netscaler", "Mod_Security", "FortiWeb", "PaloAlto_Firewall", "WebKnight", "Sucuri", "梭子鱼防火墙", "360主机卫士", "安全狗", "Websecurity_WAF", "webray", "weidun", "安慧网盾", "Safe3WAF", "AnZuWAF"]
    }, {module: "安全检测平台", device: ["360网站安全检测", "teamportal"]}, {
        module: "CDN",
        device: ["蓝讯", "QingCloud", "amazon-cloudfront", "网宿", "帝联", "快网", "Webluker", "西部数码", "gocdn", "Powercdn", "Akamai"]
    }, {
        module: "统计模块",
        device: ["google-analytics", "Piwik", "cnzz", "baidu统计", "51la", "CNZZ统计", "awstats_misc_tracker", "advancedwebstats", "hubspot", "51yes"]
    }, {
        module: "服务器管理",
        device: ["LuManager", "uPlusFtp", "Cactiez", "Cacti", "CrushFTP", "HFS", "WHM", "moosefs", "LUM服务器管理", "护卫神主机管理", "cpanel", "主机宝", "bacula-web", "Webmin", "Directadmin", "Synology_DiskStation", "Puppet_Node_Manager", "wdcp管理系统", "LANMP一键安装包", "UPUPW", "wamp", "easypanel", "awstats_admin", "awstats"]
    }, {
        module: "开发框架",
        device: ["ThinkPHP", "NetteFramework", "Fat-FreeFramework", "Play-Framework", "Restlet-Framework", "Kohana-Framework", "flow_framework", "SIMIT_framework", "axis2-web", "Swiftlet", "Aspnetmvc", "CodeIgniter", "ColdFusion", "WebObjects", "cakephp", "Django", "zikula_framework"]
    }, {
        module: "脚本语言",
        device: ["PHP", "ASP.NET", "python", "ruby", "jsp", "perl", "nodejs", "ASP"]
    }, {
        module: "反向代理服务器",
        device: ["squid", "kangle反向代理", "Varnish", "Aicache", "SJSWPS_ OiWPS", "HAProxy_Report"]
    }, {module: "前端库", device: ["jquery", "bootstrap", "d3", "jquery-ui", "yui", "AlloyUI"]}, {
        module: "站长平台",
        device: ["360站长平台", "baidu站长平台", "google站长平台", "sogou站长平台"]
    }, {
        module: "Web服务器",
        device: ["Sun[tm]", "Tengine", "IBM_HTTP_Server", "GSE", "LiteSpeed", "Microsoft-HTTPAPI", "ngx_openresty", "Zeus", "Resin", "Netscape-Enterprise", "Phusion", "ZendServer", "webrick", "Jetty", "Sun-ONE-Web-Server", "Oracle-Application-Server", "JBoss", "kangle反向代理", "Varnish", "Aicache", "SJSWS_ OiWS", "AOLserver", "squid", "Lotus-Domino", "gunicorn", "Allegro-Software-RomPager", "Starlet", "nginx_admin", "FortiWeb", "GlassFish", "Privoxy", "JBoss_AS", "oracle_applicaton_server", "IIS", "nginx", "tomcat", "Apache"]
    }, {
        module: "项目管理",
        device: ["jira", "Hudson", "Jenkins", "testlink", "trac", "gitlab", "mantis", "Mercurial", "fisheye", "VisualSVN", "Redmine", "zentao", "Bugzilla", "Phabricator", "reviewboard", "Jenkins"]
    }, {module: "云评论", device: ["uyan", "disqus"]}, {
        module: "CMS",
        device: ["phpshe", "CMSTop", "typo3", "SamanPortal", "北京清科锐华CEMIS", "ThinkSNS", "asp168欧虎", "擎天电子政务", "easysite", "北京阳光环球建站系统", "MaticsoftSNS_动软分享社区", "FineCMS", "ESPCMS", "Diferior", "DokuWiki", "WebsiteBaker-CMS", "concrete5", "国家数字化学习资源中心系统", "某通用型政府cms", "PigCms", "天柏在线培训/考试系统", "万户网络", "rcms", "74cms", "全国烟草系统", "O2OCMS", "一采通", "Foosun", "PhpCMS", "Hanweb", "Drupal", "cmseasy", "wordpress", "DedeCMS", "ThinkSAAS", "ASPCMS", "MetInfo", "PageAdmin", "Npoint", "小蚂蚁", "捷点JCMS", "帝国EmpireCMS", "JEECMS", "emlog", "IdeaCMS", "e-tiller", "TCCMS", "DIYWAP", "supesite", "webplus", "Dolibarr", "ExpressionEngine", "iAPPS", "Liferay", "Telerik Sitefinity", "PageAdmin", "DouPHP", "sdcms", "Z-Blog", "EnterCRM", "易普拉格科研管理系统", "苏亚星校园管理系统", "313自助建站", "trs_wcm", "we7", "1024cms", "360webfacil_360WebManager", "twcms", "6kbbs", "ABO_CMS", "Acidcat_CMS", "bit-service", "云因网上书店", "DotNetNuke", "plone", "Kooboocms", "unknown_cms", "chanzhi", "SiteServer", "unknown_cms_rcms", "MediaWiki", "Typecho", "Z-Blog", "Z-BlogPHP", "EleanorCMS", "BitrixSiteManager", "FOXI BIZzz", "BPanelCMS", "SubrionCMS", "Joomla", "WMSN", "TwilightCMS", "TechartCMS", "2z project", "phpDocumentor", "微门户", "Osclass", "webEdition", "orocrm", "创星伟业校园网群", "HDWiki", "BoyowCMS", "正方教务管理系统", "UFIDA_NC", "phpweb", "weebly", "地平线CMS", "HIMS酒店云计算服务", "Tipask", "北创图书检索系统", "squarespace建站", "kesionCMS", "微普外卖点餐系统", "逐浪zoomla", "Zikula_CMS", "mozartframework", "UMI.CMS", "EasywebCMS", "synkronvia", "sitecore", "MuraCMS", "irecms"]
    }, {
        module: "广告联盟",
        device: ["doubleclick_ad", "baidu广告联盟", "Google_AdSense", "Open_AdStream", "adinfinity", "adriver"]
    }, {
        module: "网站云防护",
        device: ["cloudflare", "加速乐", "Incapsula", "百度云加速", "360网站卫士", "安全宝", "BinarySec", "Sucuri", "NetteFramework"]
    }, {
        module: "SSL证书",
        device: ["thawte_ssl_cert", "wosign_ssl_cert", "webtrust_cert", "globalsign_cert", "GeoTrust_cert"]
    }, {module: "论坛社区", device: ["phpbb", "phpwind", "discuz", "vBulletin", "6kbbs", "IP.Board"]}, {
        module: "邮件系统",
        device: ["fangmail", "bxemail", "Coremail", "imailserver", "exchange", "Zimbra", "Lotus", "Roundcube", "Horde", "Atmail", "iGENUS_webmail", "腾讯企业邮箱", "anymacro", "mirapoint", "iredadmin(Roundcube?)", "SquirrelMail", "U-Mail", "ExtMail", "MDaemon", "亿邮", "网易企业邮箱", "TurboMail", "magicwinmail", "coremail", "万网企业云邮箱"]
    }, {
        module: "其他",
        device: ["mongodb", "认证页面", "TCN协议", "sharepoint", "MS-Author-Via", "3COM_NBX", "wspx", "rack-cache", "Dnnoutputcache", "Iisexport", "Oraclea-DMS", "elasticsearch", "P3p_enabled", "X-72e-Nobeian-Transfer", "ManagedFusion", "Adblock", "Blackboard", "LiquidGIS", "Cocoon", "Wp-Super-Cache", "pagespeed", "Alternate-Protocol", "phpMyadmin", "unbouncepages", "lemis管理系统", "OpenSSL", "mod_bwlimited", "mod_auth_passthrough", "FreeboxOS", "SMA_Sunny_Webbox", "Wimax_CPE", "Aethra_Telecommunications_Operating_System", "Scientific-Atlanta_Cable_Modem", "MVB2000", "rap", "ZTE_MiFi_UNE", "用友商战实践平台", "moosefs", "AirLink_modem", "CCProxy", "APC_Management", "HuaweiHomeGateway", "TP-LINK无线路由器", "蓝盾BDWebGuard", "GPSweb", "护卫神网站安全系统", "phpDocumentor", "ColdFusion", "Adobe_ CQ5", "Adobe_GoLive", "Adobe_RoboHelp", "Amaya", "PHP-CGI", "Synology_NAS", "OpenMas", "Tumblr", "__VIEWSTATE", "Chromelogger", "Communique", "recaptcha", "IPFire", "TerraMaster", "创星伟业校园网群", "正方教务管理系统", "UFIDA_NC", "北创图书检索系统", "phpinfo", "Facebook_insights", "squarespace建站", "Bad_Behavior", "Azure_ARR", "Tncms", "北京清科锐华CEMIS", "RG-PowerCache内容加速系统", "dayrui系列产品", "Privoxy代理", "wordpress_qTranslate", "AD_RS设备", "DVWA", "sugon_gridview", "blog_fc2", "LiteSpeed_Web_Admin_Console", "SLTM32_Configuration", "SHOUTcast", "Piwigo", "seeyoo广告机", "milu_seotool", "FrontPageServerExtension"]
    }, {
        module: "网站模块",
        device: ["pagespeed", "mod_rails", "mod_ssl", "mod_wsgi", "mod_antiloris", "mod_bwlimited", "mod_auth_passthrough", "mod_auth_pam", "mod_fastcgi", "mod_jk", "mod_perl", "mod_python", "mod_rack"]
    }, {
        module: "OA系统",
        device: ["华天动力OA(OA8000)", "金和协同管理平台", "泛微协同办公OA", "万户ezOFFICE", "ranzhi", "Zimbra", "Lotus", "OA企业智能办公自动化系统", "ecwapoa", "ezOFFICE", "通达OA", "OA(a8/seeyon/ufida)", "yongyoufe", "pmway_E4_crm", "Dolibarr", "PHPOA", "78oa", "WishOA"]
    }], i = typeof a === "function" ? a.call(t, n, t, e) : a, i !== undefined && (e.exports = i))
}, function (e, t, n) {
    var a, i;
    !(a = ["JAVA", "HTML5", "UNIX", "UBUNTU", "WINDOWS", "PHP", "JQUERY", "FLASH", "IIS", "APACHE", "SWIFTLET", "PHPMYADMIN", "NGINX", "TENGINE", "EDOASOFT", "SERVLET", "CENTOS", "JETTY", "DEDECMS", "DISCUZ", "EMPIRECMS", "DVBBS", "ECSHOP", "EMLOG", "ESPCMS", "FOOSUNCMS", "HDWIKI", "JOOMLA", "KESIONCMS", "KINGCMS", "LJCMS", "PHP168", "PHPCMS", "PHPWIND", "POWEREASY", "QIBOSOFT", "SITESERVER", "SOUTHIDC", "Z_BLOG", "DOTNETNUKE", "ZOOMLA", "DOTNETCMS", "PHPBB", "AWSTATS", "VBULLETIN", "PLESK", "PRIMA", "WHMCS", "DIRECTADMIN", "PARALLELS", "CPANEL", "WORDPRESS"], i = typeof a === "function" ? a.call(t, n, t, e) : a, i !== undefined && (e.exports = i))
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="tpl-advanced-search">\n    <form id="advanced-search-form" data-option="1">\n        <div id="ad--search-box" class="ad--section text-center">\n            <div class="form-group">\n                <label for="ad--user-input">高级搜索</label>\n                &nbsp;&nbsp;\n                <input type="search" id="ad--user-input" class="form-control" name="搜索">\n\n                <button id="ad--monitor-search" class="btn btn-default" type="submit" data-value="1">监测搜索</button>\n                <button id="ad--search" class="btn btn-default" type="submit" data-value="0">全网搜索</button>\n            </div>\n        </div>\n\n        <div class="ad--section">\n            <div class="row">\n                <div class="col-sm-6">\n                    <div class="form-group">\n                        <label for="ad--country">国家</label>\n                        <select id="ad--country" class="form-control" name="国家"></select>\n                    </div>\n                    <div class="form-group select-box">\n                        <label for="ad--area1">地区</label>\n\n                        <div class="select-box-right">\n                            <select id="ad--area1" class="form-control default-disabled" name="地区" disabled="disabled">\n                                <option value="null">省份</option>\n                            </select>\n                            <select id="ad--area2" class="form-control default-disabled" name="地区" disabled="disabled">\n                                <option value="null">城市</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-sm-6">\n                    ');
            if (userRole !== "400") {
                __append('\n                    <div class="form-group">\n                        <label for="ad--industry">行业分类</label>\n                        <select id="ad--industry" class="form-control" name="站点">\n                            <option value="null">选择</option>\\\n                            <option value="*.gov.cn">政府</option>\n                            <option value="*.edu.cn">教育</option>\n                        </select>\n                    </div>\n                    ')
            } else {
                __append('\n                    <div class="form-group">\n                        <label for="ad--industry">行业分类</label>\n                        <select id="ad--industry" class="form-control" name="站点" disabled="disabled">\n                            <option value="*.gov.cn">政府</option>\n                            <option value="*.edu.cn">教育</option>\n                        </select>\n                    </div>\n                    ')
            }
            __append('\n                    <div class="form-group select-box">\n                        <label for="ad--device-module">设备分类</label>\n\n                        <div class="select-box-right">\n                            <select id="ad--device-module" class="form-control" name="模块" disabled="disabled">\n                                <option value="null">视频设备</option>\n                            </select>\n                            <select id="ad--device-name" class="form-control  default-disabled" name="模块" disabled="disabled">\n                                <option value="null">海康威视摄像头</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="select-box">\n                        <label></label>\n                        <div class="select-box-right">\n                            ');
            if (userRole !== "400") {
                __append('\n                                <p style="font-size: 0.8em;color: #e9a512;">*设备分类搜索功能暂不开放，敬请期待!</p>\n                            ')
            } else {
                __append('\n                                <p style="font-size: 0.8em;color: #e9a512;">*行业分类和设备分类搜索功能暂不开放，敬请期待!</p>\n                            ')
            }
            __append('\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class="ad--section">\n            <div class="row">\n                <div class="col-sm-6">\n                    <div class="form-group select-box">\n                        <label for="ad--ip-start">IP</label>\n\n                        <div class="select-box-right">\n                            <input type="text" id="ad--ip-start" class="form-control" name="ip起" maxlength="15" placeholder="113.17.0.0">\n                            <label for="ad--ip-end" style="width: auto;margin-right: 0;">至</label>\n                            <input type="text" id="ad--ip-end" class="form-control" name="ip终" maxlength="15" placeholder="113.17.117.225">\n                        </div>\n                    </div>\n\n                    <div class="form-group select-box">\n                        <label for="ad--site">域名</label>\n\n                        <div class="select-box-right">\n                            <select id="ad--site-choose" class="form-control" name="站点类型" style="width: 90px;">\n                                <option value="域名">域名</option>\n                                <option value="主机">主机名</option>\n                            </select>\n                            <input type="text" id="ad--site" class="form-control" name="站点类型值" placeholder="www.baidu.com" style="width: calc(100% - 90px);max-width: 229px;">\n                        </div>\n                    </div>\n\n                    <div class="form-group">\n                        <label for="ad--port">端口</label>\n                        <input type="text" id="ad--port" class="form-control" name="端口" maxlength="100" placeholder="如:80 443 8080等，多个请用空格隔开">\n                    </div>\n                </div>\n                <div class="col-sm-6">\n                    <div class="form-group">\n                        <label for="ad--title">网站标题</label>\n                        <input type="text" id="ad--title" class="form-control" name="标题" maxlength="100" placeholder="首页标题包含的内容，如: 百度">\n                    </div>\n\n                    <div class="form-group">\n                        <label for="ad--keywords">网站关键词</label>\n                        <input type="text" id="ad--keywords" class="form-control" name="关键词" maxlength="100" placeholder="首页keywords标签中的内容，如: 百度">\n                    </div>\n\n                    <div class="form-group">\n                        <label for="ad--homepage">首页内容</label>\n                        <input type="text" id="ad--homepage" class="form-control" name="内容" maxlength="100" placeholder="首页中的内容，如: 百度">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class="ad--section">\n            <div class="row">\n                <div class="col-sm-6">\n                    <div class="form-group">\n                        <label for="ad--service">应用服务</label>\n                        <input type="text" id="ad--service" class="form-control" name="服务" maxlength="100" placeholder="apache IIS等">\n                    </div>\n                </div>\n                <div class="col-sm-6">\n                    <div class="form-group">\n                        <label for="ad--protocol">通讯协议</label>\n                        <input type="text" id="ad--protocol" class="form-control" name="协议" maxlength="100" placeholder="http https等，多个请用空格隔开">\n                    </div>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-sm-6">\n                    <div class="form-group">\n                        <label for="ad--component">组件名称</label>\n                        <select id="ad--component" class="form-control" name="组件">\n                            <option value="null">选择</option>\n                        </select>\n                    </div>\n                </div>\n                ');
            if (userRole !== "400") {
                __append('\n                <div class="col-sm-6">\n                    <div class="form-group">\n                        <label for="ad--security">安全等级</label>\n                        <select id="ad--security" class="form-control" name="安全">\n                            <option value="null">无</option>\n                            <option value="高">高危</option>\n                            <option value="中">中危</option>\n                            <option value="低">低危</option>\n                            <option value="修复">修复</option>\n                        </select>\n                    </div>\n                </div>\n                ')
            }
            __append('\n                <!--<div class="col-sm-6">-->\n                    <!--<div class="form-group select-box">-->\n                        <!--<label for="ad&#45;&#45;date-start">收录时间</label>-->\n\n                        <!--<div class="select-box-right" data-key="时间">-->\n                            <!--<input type="text" id="ad&#45;&#45;date-start" class="form-control" name="日期起" maxlength="16">-->\n                            <!--<label for="ad&#45;&#45;date-end" style="width: auto;margin-right: 0;">至</label>-->\n                            <!--<input type="text" id="ad&#45;&#45;date-end" class="form-control" name="日期终" maxlength="16">-->\n                        <!--</div>-->\n                    <!--</div>-->\n                <!--</div>-->\n                <!--<div class="col-sm-6 col-md-3">-->\n                    <!--<div class="form-group">-->\n                        <!--<label for="ad&#45;&#45;request-state">请求状态</label>-->\n                        <!--<input type="text" id="ad&#45;&#45;request-state" class="form-control" name="请求状态" maxlength="20" placeholder="200 301等">-->\n                    <!--</div>-->\n                <!--</div>-->\n                <!--<div class="col-sm-6 col-md-3">-->\n                    <!--<div class="form-group">-->\n                        <!--<label for="ad&#45;&#45;port-state">端口状态</label>-->\n                        <!--<input type="text" id="ad&#45;&#45;port-state" class="form-control" name="端口状态" maxlength="20" placeholder="open或close">-->\n                    <!--</div>-->\n                <!--</div>-->\n            </div>\n        </div>\n\n        <button type="reset" id="ad--reset" class="btn btn-default center-block">重置</button>\n\n    </form>\n</div>\n<!--<script src="../../js/3rd-lib/datetimepicker/jquery.datetimepicker.full.min.js"></script>-->\n<script>\n//    $.datetimepicker.setLocale(\'zh\');\n//    $(\'#ad--date-start, #ad--date-end\').datetimepicker({\n//        minDate: "2014/01/01",\n//        maxDate: 0,\n//        timepicker:false,\n//        format:\'Y-m-d\'\n//    });\n</script>')
        }
        return __output.join("")
    }
}, function (module, exports) {
    module.exports = function anonymous(locals, escape, include, rethrow) {
        escape = escape || function (e) {
            return e == undefined ? "" : String(e).replace(_MATCH_HTML, encode_char)
        };
        var _ENCODE_HTML_RULES = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&#34;",
            "'": "&#39;"
        }, _MATCH_HTML = /[&<>'"]/g;

        function encode_char(e) {
            return _ENCODE_HTML_RULES[e] || e
        }

        var __output = [], __append = __output.push.bind(__output);
        with (locals || {}) {
            __append('<div id="tpl-vul-detail" class="tpl-content-padding tpl-page">\n    <h4 class="breadcrumb">当前位置： ');
            __append(data.host);
            __append("</h4>\n    ");
            if (/^<a/.test(data.title) && !/<\/a>$/.test(data.title)) {
                result.title += "</a>"
            }
            __append('\n    <div class="vul-link" title="');
            __append(escape(data.title.replace(/<.*?>/g, "")));
            __append('">');
            __append(data.title);
            __append('</div>\n\n    <div class="notcomponent">\n        ');
            __append(data.description);
            __append('\n    </div>\n\n    <div class="content-wrapper">\n        <table class="table-responsive-card thead-bg gap-color text-center border">\n            <thead>\n            <tr>\n                <th class="data">时间</th>\n                <th class="level" style="width: 100px;">安全等级</th>\n                <th class="vul-name">漏洞名称</th>\n                <th class="vul-sort">漏洞类别</th>\n                <th class="check" style="width: 100px;">是否确认</th>\n            </tr>\n            </thead>\n            <tbody>\n            ');
            var result = data.data;
            __append("\n            ");
            for (var i = 0, len = result.length; i < len; i++) {
                __append("\n            ");
                var time = result[i].checktime || result[i].insertdate;
                __append('\n            <tr>\n                <td class="data" data-th="时间：">\n                ');
                if (time) {
                    __append(escape(time))
                } else {
                    __append("\\")
                }
                __append('\n                </td>\n                <td class="level" data-th="安全等级：">\n                    ');
                if (result[i].security_level) {
                    __append("\n                    ");
                    if (result[i].security_level === "3" || result[i].security_level === "4") {
                        __append('\n                    <span class="high">高危</span>\n                    ')
                    } else if (result[i].security_level === "2") {
                        __append('\n                    <span class="mid">中危</span>\n                    ')
                    } else if (result[i].security_level === "1") {
                        __append('\n                    <span class="low">低危</span>\n                    ')
                    } else if (result[i].security_level === "200") {
                        __append("\n                    <span>修复</span>\n                    ")
                    }
                } else {
                    __append("\n                    \\\n                    ")
                }
                __append('\n                </td>\n                <td class="vul-name" data-th="漏洞名称：">\n                    ');
                if (result[i].vulnerability_name) {
                    __append("\n                    ");
                    __append(escape(result[i].vulnerability_name));
                    __append("\n                    ")
                } else {
                    __append("\n                    \\\n                    ")
                }
                __append('\n                </td>\n                <td class="vul-sort" data-th="漏洞类别：">\n                    ');
                if (result[i].vulnerability_type) {
                    __append("\n                    ");
                    __append(escape(result[i].vulnerability_type));
                    __append("\n                    ")
                } else {
                    __append("\n                    \\\n                    ")
                }
                __append('\n                </td>\n                <td class="check" data-th="是否确认：">\n                    ');
                if (result[i].confirm) {
                    __append("\n                    ");
                    if (result[i].confirm == "confirm") {
                        __append('\n                    <i class="fa fa-check-circle check-color fa-2x"></i>\n                    ')
                    } else {
                        __append('\n                    <i class="fa fa-question-circle error-color fa-2x"></i>\n                    ')
                    }
                }
                __append('\n                </td>\n            </tr>\n            <tr>\n                <td colspan="5">\n                    <article class="vul-detail res-item">\n                        ');
                if (result[i].vulnerability_desc) {
                    __append('\n\n                        <p style="float:left;"><strong>描述：</strong></p>\n                        ');
                    var bugDesc = result[i].vulnerability_desc, preStyle = "";
                    var arrr = bugDesc.split(/\r|\n|\r\n/gm);
                    switch (arrr.length) {
                        case 1:
                            preStyle = "white-space: normal";
                            break;
                        case 2:
                            if (arrr[0].toString().trim() || arrr[1].toString().trim() === "") {
                                preStyle = "white-space: normal"
                            }
                            break;
                        case 3:
                            if (arrr[0].toString().trim() || arrr[2].toString().trim() === "") {
                                preStyle = "white-space: normal"
                            }
                            break;
                        default:
                    }
                    __append('\n                        <pre style="margin-top:0;margin-right:0;');
                    __append(escape(preStyle));
                    __append('">');
                    __append(escape(result[i].vulnerability_desc));
                    __append("</pre>\n\n                        ")
                }
                __append("\n\n                        ");
                if (result[i].vulnerability_solution) {
                    __append("\n                        <p><strong>解决方案：</strong>");
                    __append(escape(result[i].vulnerability_solution));
                    __append("</p>\n                        ")
                }
                __append('\n\n                    </article>\n                    <button class="btn-flat btn-expend" data-status="0"><i class="fa fa-angle-down"></i></button>\n                </td>\n            </tr>\n            ')
            }
            __append("\n            </tbody>\n        </table>\n    </div>\n</div>\n<script>\n    $('#tpl-vul-detail').find('.btn-expend').on('click', function(){\n        if ($(this).attr('data-status') == 0) {\n            $(this).parent().children('.res-item').addClass('expended');\n            $(this).attr('data-status', 1);\n        } else {\n            $(this).parent().children('.res-item').removeClass('expended');\n            $(this).attr('data-status', 0);\n        }\n    });\n</script>")
        }
        return __output.join("")
    }
}, function (e, t, n) {
    var a;
    !(a = function (e) {
        var t = 0, a = 0, i = n(32), o = n(8), r = $("#search-suggestions"), s = $("body");
        $("#search-kw").on({
            keyup: function (e) {
                var n = e || window.event;
                d("input", function () {
                    if (n.keyCode >= 46 && n.keyCode <= 90 || n.keyCode == 8 || n.keyCode == 32) {
                        var e = $.trim($("#search-kw").val());
                        if (e !== "") {
                            t = 0;
                            o(i.suggest, {autoValue: e.toString()}).on("success", function (e) {
                                if (e.result && e.result.length > 0) {
                                    r.empty();
                                    e.result.forEach(function (e) {
                                        r.append($("<li>").text(e))
                                    });
                                    r.addClass("active")
                                } else {
                                    r.empty().removeClass("active")
                                }
                                a = r.find("li").length
                            }).on("error", function (e) {
                                console.warn("auto complete get data error")
                            })
                        }
                    }
                }, 200)
            }, keydown: function (e) {
                var n = e || window.event;
                if (n.keyCode == 38) {
                    t--;
                    l();
                    n.preventDefault()
                } else if (n.keyCode == 40) {
                    t++;
                    l();
                    n.preventDefault()
                }
            }
        });
        function l() {
            if (t < 1) {
                t = a
            } else if (t > a) {
                t = 1
            }
            r.find("li").removeClass("active");
            var e = r.find("li:nth-child(" + t + ")");
            e.addClass("active");
            $("#search-kw").val(e.text())
        }

        s.on({
            keydown: function (e) {
                var t = e || window.event;
                if (t.keyCode == 27) {
                    r.empty().removeClass("active")
                }
            }, mouseup: function (e) {
                if (!r.is(e.target) && r.has(e.target).length === 0) {
                    r.empty().removeClass("active")
                }
            }
        });
        $("#masthead").on("click", "#search-suggestions li", function () {
            $("#search-kw").val($.trim($(this).text()));
            r.empty().removeClass("active");
            $("#search-btn").trigger("click")
        });
        var h = {};

        function d(e, t, n) {
            if (h[e]) {
                window.clearTimeout(h[e]);
                delete h[e]
            }
            return h[e] = window.setTimeout(function () {
                t();
                delete h[e]
            }, n)
        }
    }.call(t, n, t, e), a !== undefined && (e.exports = a))
}]);